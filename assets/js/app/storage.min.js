/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
!function(t){"use strict";var o=function(t,o,e){this.log=e,this.window=t,this.document=o,this._init()};o.$inject=["$window","$document"],o.prototype.set=function(t,o,e,r,n,i){this._store.set(t,o,e,r,n,i)},o.prototype.get=function(t){return this._store.get(t)},o.prototype.getAll=function(){return this._store.getAll()},o.prototype.remove=function(t){this._store.remove(t)},o.prototype.removeAll=function(){this._store.removeAll()},o.prototype.hasLocalStorage=function(){try{return"localStorage"in this.window&&null!==this.$window.localStorage}catch(t){return!1}},o.prototype._init=function(){var t=this.useCookies||!this.hasLocalStorage();this._store=t?this._getCookieProxy():this._getLocalStorageProxy()},o.prototype._getLocalStorageProxy=function(){var o=this,e=function(e,r){r=encodeURIComponent(t.toJson(r)),o.$window.localStorage.setItem(e,r)},r=function(e){var r=o.$window.localStorage.getItem(e);if("string"==typeof r&&(r=decodeURIComponent(r),"undefined"!==r))try{return t.fromJson(r)}catch(n){return r}},n=function(){for(var t={},e=0;e<o.$window.localStorage.length;e++){var n=o.$window.localStorage.key(e);t[n]=r(n)}return t},i=function(t){o.$window.localStorage.removeItem(t)},c=function(){o.$window.localStorage.clear()};return{get:r,getAll:n,set:e,remove:i,removeAll:c}},o.prototype._getCookieProxy=function(){var o=this,e=function(o){if("string"==typeof o&&(o=decodeURIComponent(o),"undefined"!==o))try{return t.fromJson(o)}catch(e){return o}},r=function(t){var r=o.document[0].cookie.split("; "),n={};if(1===r.length&&""===r[0])return n;for(var i=0;i<r.length;i++){var c=r[i].split("=");t?n[c[0]]=e(c[1]):n[c[0]]=c[1]}return n},n=function(e,r,n,i,c,a){if(r=void 0!==r&&"object"==typeof r?t.toJson(r):r,r=encodeURIComponent(r),"undefined"!=typeof n)try{var s=new Date(n);if(isNaN(s)){var u=n;throw n=void 0,new Error('Storage.set(): "'+u+'" cannot be converted to date string!')}n=s.toUTCString()}catch(l){this.$log.error(l.message)}n=!!n&&n;var f=e+"="+r;n&&(f+=";expires="+n),i&&(f+=";domain="+i),c&&(f+=";path="+c),a&&(f+=";secure"),o.document[0].cookie=f},i=function(t){var o=r(!1);if(o.hasOwnProperty(t))return e(o[t])},c=function(){return r(!0)},a=function(t){n(t,"",-1)},s=function(){var t=c();for(var o in t)a(o)};return{get:i,getAll:c,set:n,remove:a,removeAll:s}},t.module(ANGULAR_MODULE).service("storage",o)}(angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
