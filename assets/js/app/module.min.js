/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,n){"use strict";if("undefined"==typeof n)throw Error("Cannot initialize eFit without angular!");var o="eFit",e=n.module(o,["ngSanitize","ngMessages","ngResource","ui.router"]);e.constant("VIEWS_PATH","views"),e.constant("API_URL","http://localhost/felix/e-fit/backend/web/app_dev.php/api"),e.constant("GROUP_A",1),e.constant("GROUP_B",2),e.constant("STATE_BEGINNER",1),e.constant("STATE_AMATEUR",2),e.constant("STATE_ADVANCED",3),e.constant("STATE_EXPERT",4),e.constant("TYPE_INTEREST","INTEREST"),e.constant("TYPE_DIVERSIFICATION","DIVERSIFICATION"),e.constant("TYPE_RISK","RISK"),e.constant("TYPE_ANCHORING","ANCHORING"),e.constant("TYPE_MENTAL_BOOKKEEPING","MENTAL_BOOKKEEPING"),e.constant("TYPE_FRAMING","FRAMING"),e.constant("TYPE_SAVINGS_TARGET","SAVINGS_TARGET"),e.constant("TYPE_SAVINGS_SUPPORTED","SAVINGS_SUPPORTED"),e.constant("TYPE_SELF_COMMITMENT","SELF_COMMITMENT"),e.constant("TYPE_PROCRASTINATION","PROCRASTINATION"),e.config(["$locationProvider","$stateProvider","$urlRouterProvider","$httpProvider","$templateRequestProvider","$resourceProvider","$qProvider","VIEWS_PATH",function(t,o,e,r,a,l,s,i){t.html5Mode(!1),t.hashPrefix("!"),r.interceptors.push("httpInterceptor"),s.errorOnUnhandledRejections(!1),l.defaults.actions={get:{method:"GET"},list:{method:"GET",isArray:!0},update:{method:"PATCH"},create:{method:"POST"},"delete":{method:"DELETE"}},o.decorator("views",function(t,o){var e={},r=o(t);return n.forEach(r,function(n,o){var r=o.match(/([^@]+)\@/),a=r?"/"+r[1]:"",l=t.name.replace(/\./g,"/"),s=i+"/",c=n.templateUrl||[s,l,a,".html"].join("");n.templateUrl=c,e[o]=n}),e}),a.httpOptions({skipAuthorization:!0}),o.state("main",{url:"","abstract":!0,resolve:{translations:["i18n",function(t){return t.load("de",{skipAuthorization:!0})}]},template:'<div id="main" data-ui-view=""></div>'}),o.state("frontend",{parent:"main",url:"/",resolve:{user:["user","$state",function(t,n){var o=t.load().$promise;return o["catch"](function(){n.go("login.frontend")})}]},data:{role:["ROLE_USER","ROLE_ADMIN","ROLE_SUPER_ADMIN"]},views:{"navbar@frontend":{},"home@frontend":{},"topics@frontend":{},"financial-knowledge@frontend":{},"financial-knowledge/interest-task@frontend":{},"financial-knowledge/diversification-task@frontend":{},"consumer-behaviour@frontend":{},"consumer-behaviour/bomb-task@frontend":{},"consumer-behaviour/anchoring-task@frontend":{},"consumer-behaviour/mental-bookkeeping-task@frontend":{},"consumer-behaviour/framing-task@frontend":{},"self-control@frontend":{},"self-control/savings-target-task@frontend":{},"self-control/savings-supported-task@frontend":{},"self-control/self-commitment-task@frontend":{},"self-control/procrastination-task@frontend":{},"status@frontend":{},"contact@frontend":{controller:"ContactController",controllerAs:"contactController"},"footer@frontend":{},"offcanvas@":{controller:"FrontendController",controllerAs:"frontendController"},"@":{controller:"FrontendController",controllerAs:"frontendController"}}}),o.state("backend",{parent:"main",url:"/admin",data:{role:"ROLE_ADMIN"},redirectTo:"backend.workshops",views:{"main@backend":{},"navbar@backend":{},"footer@backend":{},"offcanvas@":{controller:"BackendController",controllerAs:"backendController"},"@":{controller:"BackendController",controllerAs:"backendController"}}}),o.state("backend.workshops",{url:"?{expand:int}",resolve:{workshops:["Workshop",function(t){return t.list().$promise}]},params:{expand:{value:null,dynamic:!0}},controller:"WorkshopController",controllerAs:"workshopController"}),o.state("login",{url:"/login",parent:"main","abstract":!0,redirectTo:"login.frontend.index"}),o.state("login.frontend",{url:"/app",data:{redirects:{ROLE_USER:"frontend"}},redirectTo:"login.frontend.index",controller:"LoginFrontendController",controllerAs:"loginFrontendController"}),o.state("login.frontend.index",{url:""}),o.state("login.frontend.signup",{url:"/schule"}),o.state("login.frontend.signin",{url:"/zuhause"}),o.state("login.backend",{url:"/admin",data:{redirects:{ROLE_ADMIN:"backend"}},controller:"LoginBackendController",controllerAs:"loginBackendController"}),e.otherwise("/")}]),e.run(["$injector",function(t){var o=t.get("$transitions"),e=t.get("$rootScope"),r=t.get("appState"),a=t.get("$state"),l=t.get("auth"),s=function(t){r.routerBusy=!0;var o=t.to(),e=o.data||{},s=e.role||null,i=e.redirects||{};if(null===s){var c=l.getUser();if(null===c)return;var d=c.roles||[];for(s in i)if(d.indexOf(s)>=0){var u=i[s];return a.target(u)}return!0}n.isArray(s)||(s=[s]);var f=function(){return!0},E=function(){switch(s[0]){case"ROLE_ADMIN":case"ROLE_SUPER_ADMIN":return a.target("login.backend");default:return a.target("login.frontend")}};return l.hasRole(s).then(f,E)},i=function(){r.routerBusy=!1},c=function(t){e.state=t.to(),r.routerBusy=!1};e.$watch(function(){return r.isBusy()},function(t){e.isBusy=t,e.httpBusy=r.httpBusy,e.routerBusy=r.routerBusy}),o.onError({},i),o.onStart({},s),o.onSuccess({},c),FastClick.attach(document.body)}]),t.ANGULAR_MODULE=o}(window,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
