/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,e){"use strict";var r=function(t){this.$injector=t,this._urls={}};r.$inject=["$injector"],r.prototype.getLastSuccessResponse=function(){return this._lastSuccessResponse},r.prototype.getLastErrorResponse=function(){return this._lastErrorResponse},r.prototype.getLastResponse=function(){return this._lastResponse},r.prototype.getUrls=function(){return this._urls},r.prototype.request=function(t){var e=this.$injector.get("appState");e.httpBusy=!0,this._setUrl(t),t.headers["X-Requested-With"]="XMLHttpRequest";var r=function(e){return e&&(t.headers.Authorization="Bearer "+e),t},s=function(){return t};if(t.skipAuthorization)return t;var n=this._getJWTToken(t),o=this.$injector.get("$q");return o.when(n).then(r,s)},r.prototype.requestError=function(t){var e=this.$injector.get("appState"),r=this.$injector.get("$q");return e.httpBusy=!1,r.reject(t)},r.prototype.response=function(t){var e=this.$injector.get("appState");return this._setLastSuccessResponse(t),this._setLastResponse(t),e.httpBusy=!1,t},r.prototype.responseError=function(t){var e=this.$injector.get("appState"),r=this.$injector.get("$q");return this._showGlobalErrorMessage(t),this._setLastErrorResponse(t),this._setLastResponse(t),e.httpBusy=!1,r.reject(t)},r.prototype._setUrl=function(t){var e=this.$injector.get("$httpParamSerializer"),r=e(t.params),s=t.url+(r?"?"+r:"");this._urls[s]=!0},r.prototype._setLastResponse=function(t){this._lastResponse=t},r.prototype._setLastErrorResponse=function(t){this._lastErrorResponse=t},r.prototype._setLastSuccessResponse=function(t){this._lastSuccessResponse=t},r.prototype._showGlobalErrorMessage=function(t){var e=this.$injector.get("notification"),r=this.$injector.get("i18n"),s=t.config||{};if(!s.skipGlobalErrorMessage){var n=t.data||{};n.message&&e.error(r.get(n.message))}},r.prototype._getJWTToken=function(){var t=this.$injector.get("auth"),e=this.$injector.get("jwt"),r=e.getToken();if(!r)return null;if(e.isExpired(r,600)){var s=function(){return e.getToken()},n=function(){return null};return t.refresh().then(s,n)}return e.getToken()},e.module(t).factory("httpInterceptor",["$injector",function(t){var e=t.instantiate(r);return{getUrls:function(){return e.getUrls()},getLastResponse:function(){return e.getLastResponse()},getLastErrorResponse:function(){return e.getLastErrorResponse()},getLastSuccessResponse:function(){return e.getLastSuccessResponse()},request:function(t){return e.request(t)},response:function(t){return e.response(t)},requestError:function(t){return e.responseError(t)},responseError:function(t){return e.responseError(t)}}}])}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
