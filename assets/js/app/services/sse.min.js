/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
/* global ANGULAR_MODULE, angular, EventSource */
(function(module, angular) {
  'use strict';

  //
  // SERVICE
  //

  /**
   * @constructor
   */
  var SSE = function($injector)
    {
      this.$injector = $injector;
      this._sources = {};
    };

  SSE.$inject = ['$injector'];

  //
  // METHODS
  //

  /**
   * Adds a new event source to listen to.
   *
   * @public
   * @method add
   * @param string url
   * @param string event
   * @param function callback
   * @return {void}
   */
  SSE.prototype.addSource = function(url, config) {
    config = config || {};

    config.retry = config.retry || null;
    config.event = config.event || null;
    config.sleep = config.sleep || null;
    config.onError = config.onError || function(){};
    config.onMessage = config.onMessage || function(){};

    url = this._buildUrl(url, config);
    var source = new EventSource(url);

    source.onmessage = function(event) {
      var data = angular.fromJson(event.data);
      config.onMessage.call(this, data, event);
    };

    source.onerror = function(event) {
      config.onError.call(this, event);
      console.log('>>> SSE ERROR');
    };

    this._sources[url] = source;
    return source;
  };

  /**
   * Adds a new event source to listen to.
   *
   * @public
   * @method removeSource
   * @param object source
   * @return {void}
   */
  SSE.prototype.removeSource = function(source) {
    delete this._sources[source.url];
    source.close();
  };

  /**
   * Appends JWT token as query string to url.
   * Adds optional config options if available.
   *
   * @private
   * @method _getUrl
   * @param string url
   * @param object config
   * @return {string}
   */
  SSE.prototype._buildUrl = function(url, config){
    var jwt = this.$injector.get('jwt');
    var token = jwt.getToken();

    url = url + '?bearer=' + token;

    if (config.event) {
      url += '&event=' + config.event;
    }

    if (config.sleep) {
      url += '&sleep=' + config.sleep;
    }

    if (config.retry) {
      url += '&retry=' + config.retry;
    }

    return url;
  };

  //
  // REGISTRY
  //
  angular.module(module).service('sse', SSE);

})(ANGULAR_MODULE, angular);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9zZXJ2aWNlcy9zc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFwcC9zZXJ2aWNlcy9zc2UubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIEFOR1VMQVJfTU9EVUxFLCBhbmd1bGFyLCBFdmVudFNvdXJjZSAqL1xuKGZ1bmN0aW9uKG1vZHVsZSwgYW5ndWxhcikge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy9cbiAgLy8gU0VSVklDRVxuICAvL1xuXG4gIC8qKlxuICAgKiBAY29uc3RydWN0b3JcbiAgICovXG4gIHZhciBTU0UgPSBmdW5jdGlvbigkaW5qZWN0b3IpXG4gICAge1xuICAgICAgdGhpcy4kaW5qZWN0b3IgPSAkaW5qZWN0b3I7XG4gICAgICB0aGlzLl9zb3VyY2VzID0ge307XG4gICAgfTtcblxuICBTU0UuJGluamVjdCA9IFsnJGluamVjdG9yJ107XG5cbiAgLy9cbiAgLy8gTUVUSE9EU1xuICAvL1xuXG4gIC8qKlxuICAgKiBBZGRzIGEgbmV3IGV2ZW50IHNvdXJjZSB0byBsaXN0ZW4gdG8uXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCBhZGRcbiAgICogQHBhcmFtIHN0cmluZyB1cmxcbiAgICogQHBhcmFtIHN0cmluZyBldmVudFxuICAgKiBAcGFyYW0gZnVuY3Rpb24gY2FsbGJhY2tcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIFNTRS5wcm90b3R5cGUuYWRkU291cmNlID0gZnVuY3Rpb24odXJsLCBjb25maWcpIHtcbiAgICBjb25maWcgPSBjb25maWcgfHzCoHt9O1xuXG4gICAgY29uZmlnLnJldHJ5ID0gY29uZmlnLnJldHJ5IHx8wqBudWxsO1xuICAgIGNvbmZpZy5ldmVudCA9IGNvbmZpZy5ldmVudCB8fMKgbnVsbDtcbiAgICBjb25maWcuc2xlZXAgPSBjb25maWcuc2xlZXAgfHzCoG51bGw7XG4gICAgY29uZmlnLm9uRXJyb3IgPSBjb25maWcub25FcnJvciB8fCBmdW5jdGlvbigpe307XG4gICAgY29uZmlnLm9uTWVzc2FnZSA9IGNvbmZpZy5vbk1lc3NhZ2UgfHwgZnVuY3Rpb24oKXt9O1xuXG4gICAgdXJsID0gdGhpcy5fYnVpbGRVcmwodXJsLCBjb25maWcpO1xuICAgIHZhciBzb3VyY2UgPSBuZXcgRXZlbnRTb3VyY2UodXJsKTtcblxuICAgIHNvdXJjZS5vbm1lc3NhZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgdmFyIGRhdGEgPSBhbmd1bGFyLmZyb21Kc29uKGV2ZW50LmRhdGEpO1xuICAgICAgY29uZmlnLm9uTWVzc2FnZS5jYWxsKHRoaXMsIGRhdGEsIGV2ZW50KTtcbiAgICB9O1xuXG4gICAgc291cmNlLm9uZXJyb3IgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgY29uZmlnLm9uRXJyb3IuY2FsbCh0aGlzLCBldmVudCk7XG4gICAgICBjb25zb2xlLmxvZygnPj4+IFNTRSBFUlJPUicpO1xuICAgIH07XG5cbiAgICB0aGlzLl9zb3VyY2VzW3VybF0gPSBzb3VyY2U7XG4gICAgcmV0dXJuIHNvdXJjZTtcbiAgfTtcblxuICAvKipcbiAgICogQWRkcyBhIG5ldyBldmVudCBzb3VyY2UgdG8gbGlzdGVuIHRvLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgcmVtb3ZlU291cmNlXG4gICAqIEBwYXJhbSBvYmplY3Qgc291cmNlXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBTU0UucHJvdG90eXBlLnJlbW92ZVNvdXJjZSA9IGZ1bmN0aW9uKHNvdXJjZSkge1xuICAgIGRlbGV0ZSB0aGlzLl9zb3VyY2VzW3NvdXJjZS51cmxdO1xuICAgIHNvdXJjZS5jbG9zZSgpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBBcHBlbmRzIEpXVCB0b2tlbiBhcyBxdWVyeSBzdHJpbmcgdG8gdXJsLlxuICAgKiBBZGRzIG9wdGlvbmFsIGNvbmZpZyBvcHRpb25zIGlmIGF2YWlsYWJsZS5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQG1ldGhvZCBfZ2V0VXJsXG4gICAqIEBwYXJhbSBzdHJpbmcgdXJsXG4gICAqIEBwYXJhbSBvYmplY3QgY29uZmlnXG4gICAqIEByZXR1cm4ge3N0cmluZ31cbiAgICovXG4gIFNTRS5wcm90b3R5cGUuX2J1aWxkVXJsID0gZnVuY3Rpb24odXJsLCBjb25maWcpe1xuICAgIHZhciBqd3QgPSB0aGlzLiRpbmplY3Rvci5nZXQoJ2p3dCcpO1xuICAgIHZhciB0b2tlbiA9IGp3dC5nZXRUb2tlbigpO1xuXG4gICAgdXJsID0gdXJsICsgJz9iZWFyZXI9JyArIHRva2VuO1xuXG4gICAgaWYgKGNvbmZpZy5ldmVudCkge1xuICAgICAgdXJsICs9ICcmZXZlbnQ9JyArIGNvbmZpZy5ldmVudDtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlnLnNsZWVwKSB7XG4gICAgICB1cmwgKz0gJyZzbGVlcD0nICsgY29uZmlnLnNsZWVwO1xuICAgIH1cblxuICAgIGlmIChjb25maWcucmV0cnkpIHtcbiAgICAgIHVybCArPSAnJnJldHJ5PScgKyBjb25maWcucmV0cnk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHVybDtcbiAgfTtcblxuICAvL1xuICAvLyBSRUdJU1RSWVxuICAvL1xuICBhbmd1bGFyLm1vZHVsZShtb2R1bGUpLnNlcnZpY2UoJ3NzZScsIFNTRSk7XG5cbn0pKEFOR1VMQVJfTU9EVUxFLCBhbmd1bGFyKTtcbiJdfQ==
