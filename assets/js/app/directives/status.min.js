/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,e){"use strict";var s=function(t,e,s,o){this.$scope=t,this.$attrs=e,this.$element=s,this.$injector=o,this.iconRatio=1,this.isCompact=!1,this.iconColor="currentcolor",this.user=this.$injector.get("user")};s.$inject=["$scope","$element","$attrs","$injector"],s.prototype.user=null,s.prototype.tasks={},s.prototype.tickets=[],s.prototype.tasksVisible=!1,s.prototype.ticketsVisible=!1,s.prototype.$onInit=function(){var t=this,e=function(){return t.user.tickets},s=function(e){t.tickets=e};this._unwatchTickets=this.$scope.$watchCollection(e,s);var o=function(){return t.user.getTasks()},i=function(e){t.tasks=e};this._unwatchTasks=this.$scope.$watch(o,i)},s.prototype.$onDestroy=function(){this._unwatchTickets(),this._unwatchTasks()},s.prototype.toggleTasks=function(){this.tasksVisible=!this.tasksVisible},s.prototype.toggleTickets=function(){this.ticketsVisible=!this.ticketsVisible},e.module(t).directive("status",function(){return{scope:{iconRatio:"=?statusIconRatio",iconColor:"=?statusIconColor",isCompact:"=?statusIsCompact"},restrict:"A",transclude:!0,controller:s,bindToController:!0,controllerAs:"statusController",templateUrl:"views/directives/status.html"}});var o=function(t,e,s,o){this.$scope=t,this.$attrs=e,this.$element=s,this.$injector=o,this.ratio=1,this.color="currentcolor"};o.$inject=["$scope","$attrs","$element","$injector"],o.prototype.isBeginner=!1,o.prototype.isAmateuer=!1,o.prototype.isAdvanced=!1,o.prototype.isExpert=!1,o.prototype.isProfi=!1,o.prototype.$onInit=function(){var t=this.$injector.get("STATE_BEGINNER"),e=this.$injector.get("STATE_AMATEUR"),s=this.$injector.get("STATE_ADVANCED"),o=this.$injector.get("STATE_EXPERT"),i=this.$injector.get("user"),n=this,r=function(){return i.state},c=function(i){n.isBeginner=i>=t,n.isAmateur=i>=e,n.isAdvanced=i>=s,n.isExpert=i>=o};this._unwatch=this.$scope.$watch(r,c)},o.prototype.$onDestroy=function(){this._unwatch()},e.module(t).directive("statusIcons",function(){return{scope:{ratio:"=?statusIconsRatio",color:"=?statusIconsColor"},restrict:"A",transclude:!0,controller:o,bindToController:!0,controllerAs:"statusIconsController",templateUrl:"views/directives/status-icons.html"}});var i=function(t,e,s,o){this.$scope=t,this.$attrs=e,this.$element=s,this.$injector=o};i.$inject=["$scope","$attrs","$element","$injector"],i.prototype.state=null,i.prototype.isCompact=!1,i.prototype.$onInit=function(){var t=this.$injector.get("user"),e=this,s=function(){return t.state},o=function(){e.state=t.getStateAsString()};this._unwatch=this.$scope.$watch(s,o)},i.prototype.$onDestroy=function(){this._unwatch()},e.module(t).directive("statusLabel",function(){return{scope:{isCompact:"=?statusLabelIsCompact"},restrict:"A",transclude:!0,controller:i,bindToController:!0,controllerAs:"statusLabelController",templateUrl:"views/directives/status-label.html"}});var n=function(t,e,s,o){this.$scope=t,this.$attrs=e,this.$element=s,this.$injector=o};n.$inject=["$scope","$attrs","$element","$injector"],n.prototype.tickets=0,n.prototype.isCompact=!1,n.prototype.$onInit=function(){var t=this.$injector.get("user"),e=this,s=function(){return t.tickets},o=function(t){e.tickets=t?t.length:0};this._unwatch=this.$scope.$watchCollection(s,o)},n.prototype.$onDestroy=function(){this._unwatch()},e.module(t).directive("statusTickets",function(){return{scope:{isCompact:"=?statusTicketsIsCompact"},restrict:"A",transclude:!0,controller:n,bindToController:!0,controllerAs:"statusTicketsController",templateUrl:"views/directives/status-tickets.html"}})}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kaXJlY3RpdmVzL3N0YXR1cy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJhbmd1bGFyIiwiU3RhdHVzIiwiJHNjb3BlIiwiJGF0dHJzIiwiJGVsZW1lbnQiLCIkaW5qZWN0b3IiLCJ0aGlzIiwiaWNvblJhdGlvIiwiaXNDb21wYWN0IiwiaWNvbkNvbG9yIiwidXNlciIsImdldCIsIiRpbmplY3QiLCJwcm90b3R5cGUiLCJ0YXNrcyIsInRpY2tldHMiLCJ0YXNrc1Zpc2libGUiLCJ0aWNrZXRzVmlzaWJsZSIsIiRvbkluaXQiLCJtZSIsIl93YXRjaFRpY2tldHNFeHByZXNzaW9uIiwiX3dhdGNoVGlja2V0c0NhbGxiYWNrIiwiX3Vud2F0Y2hUaWNrZXRzIiwiJHdhdGNoQ29sbGVjdGlvbiIsIl93YXRjaFRhc2tzRXhwcmVzc2lvbiIsImdldFRhc2tzIiwiX3dhdGNoVGFza3NDYWxsYmFjayIsIl91bndhdGNoVGFza3MiLCIkd2F0Y2giLCIkb25EZXN0cm95IiwidG9nZ2xlVGFza3MiLCJ0b2dnbGVUaWNrZXRzIiwiZGlyZWN0aXZlIiwic2NvcGUiLCJyZXN0cmljdCIsInRyYW5zY2x1ZGUiLCJjb250cm9sbGVyIiwiYmluZFRvQ29udHJvbGxlciIsImNvbnRyb2xsZXJBcyIsInRlbXBsYXRlVXJsIiwiU3RhdHVzSWNvbnMiLCJyYXRpbyIsImNvbG9yIiwiaXNCZWdpbm5lciIsImlzQW1hdGV1ZXIiLCJpc0FkdmFuY2VkIiwiaXNFeHBlcnQiLCJpc1Byb2ZpIiwiU1RBVEVfQkVHSU5ORVIiLCJTVEFURV9BTUFURVVSIiwiU1RBVEVfQURWQU5DRUQiLCJTVEFURV9FWFBFUlQiLCJfd2F0Y2hFeHByZXNzaW9uIiwic3RhdGUiLCJfd2F0Y2hDYWxsYmFjayIsImlzQW1hdGV1ciIsIl91bndhdGNoIiwiU3RhdHVzTGFiZWwiLCJnZXRTdGF0ZUFzU3RyaW5nIiwiU3RhdHVzVGlja2V0cyIsImxlbmd0aCIsIkFOR1VMQVJfTU9EVUxFIl0sIm1hcHBpbmdzIjoi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bUQsRUFBYzlDLFVBQVVLLFFBQVUsV0FFOUIsR0FBSVIsR0FBT0osS0FBS0QsVUFBVU0sSUFBSSxRQUUxQlEsRUFBS2IsS0FFTDhDLEVBQW1CLFdBQ3JCLE1BQU8xQyxHQUFLSyxTQUdWdUMsRUFBaUIsU0FBU3ZDLEdBQzVCSSxFQUFHSixRQUFVQSxFQUFVQSxFQUFRNkMsT0FBUyxFQUcxQ3RELE1BQUtrRCxTQUFXbEQsS0FBS0osT0FBT3FCLGlCQUMxQjZCLEVBQ0FFLElBV05LLEVBQWM5QyxVQUFVZ0IsV0FBYSxXQUNuQ3ZCLEtBQUtrRCxZQU1QeEQsRUFBUUQsT0FBT0EsR0FBUWlDLFVBQVUsZ0JBQWlCLFdBQ2hELE9BQ0VDLE9BQ0V6QixVQUFXLDRCQUViMEIsU0FBVSxJQUNWQyxZQUFZLEVBQ1pDLFdBQVl1QixFQUNadEIsa0JBQWtCLEVBQ2xCQyxhQUFjLDBCQUNkQyxZQUFhLDJDQUloQnNCLGVBQWdCN0QiLCJmaWxlIjoiYXBwL2RpcmVjdGl2ZXMvc3RhdHVzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBBTkdVTEFSX01PRFVMRSwgYW5ndWxhciAqL1xuKGZ1bmN0aW9uKG1vZHVsZSwgYW5ndWxhcikge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU3RhdHVzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLy9cbiAgLy8gQ09OVFJPTExFUlxuICAvL1xuXG4gIC8qKlxuICAgKiBAY29uc3RydWN0b3JcbiAgICovXG4gIHZhciBTdGF0dXMgPSBmdW5jdGlvbigkc2NvcGUsICRhdHRycywgJGVsZW1lbnQsICRpbmplY3Rvcikge1xuICAgIHRoaXMuJHNjb3BlID0gJHNjb3BlO1xuICAgIHRoaXMuJGF0dHJzID0gJGF0dHJzO1xuICAgIHRoaXMuJGVsZW1lbnQgPSAkZWxlbWVudDtcbiAgICB0aGlzLiRpbmplY3RvciA9ICRpbmplY3RvcjtcblxuICAgIHRoaXMuaWNvblJhdGlvID0gMTtcbiAgICB0aGlzLmlzQ29tcGFjdCA9IGZhbHNlO1xuICAgIHRoaXMuaWNvbkNvbG9yID0gJ2N1cnJlbnRjb2xvcic7XG5cbiAgICB0aGlzLnVzZXIgPSB0aGlzLiRpbmplY3Rvci5nZXQoJ3VzZXInKTtcbiAgfTtcblxuICBTdGF0dXMuJGluamVjdCA9IFsnJHNjb3BlJywgJyRlbGVtZW50JywgJyRhdHRycycsICckaW5qZWN0b3InXTtcblxuICAvL1xuICAvLyBQUk9QRVJUSUVTXG4gIC8vXG5cbiAgLyoqIEB2YXIge29iamVjdH0gdXNlciBBbGlhcyB0byBjdXJyZW50IHVzZXIuICovXG4gIFN0YXR1cy5wcm90b3R5cGUudXNlciA9IG51bGw7XG5cbiAgLyoqIEB2YXIge29iamVjdH0gdGFza3MgVXNlcidzIHRhc2sgaGFzaCBtYXAuICovXG4gIFN0YXR1cy5wcm90b3R5cGUudGFza3MgPSB7fTtcblxuICAvKiogQHZhciB7YXJyYXl9IHRpY2tldHMgVXNlcidzIHRpY2tldCBjb2xsZWN0aW9uLiAqL1xuICBTdGF0dXMucHJvdG90eXBlLnRpY2tldHMgPSBbXTtcblxuICAvKiogQHZhciB7Ym9vbGVhbn0gdGFza3NWaXNpYmxlIElmIHRhc2sgb3ZlcnZpZXcgaXMgdmlzaWJsZS4gKi9cbiAgU3RhdHVzLnByb3RvdHlwZS50YXNrc1Zpc2libGUgPSBmYWxzZTtcblxuICAvKiogQHZhciB7Ym9vbGVhbn0gdGlja2V0c1Zpc2libGUgSWYgdGlja2V0cyBvdmVydmlldyBpcyB2aXNpYmxlLiAqL1xuICBTdGF0dXMucHJvdG90eXBlLnRpY2tldHNWaXNpYmxlID0gZmFsc2U7XG5cbiAgLy9cbiAgLy8gTUVUSE9EU1xuICAvL1xuXG4gIC8qKlxuICAgKiBXYXRjaGVzIHVzZXIncyBgdGFza3NgIGFuZCBgdGlja2V0c2AgcHJvcGVydGllcyBhbmQgbWFwcyB0aGVtIGZvciB2aWV3LlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgJG9uSW5pdFxuICAgKiBAcmV0dXJuIHtWb2lkfVxuICAgKi9cbiAgU3RhdHVzLnByb3RvdHlwZS4kb25Jbml0ID0gZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIHZhciBtZSA9IHRoaXM7XG5cbiAgICAgIHZhciBfd2F0Y2hUaWNrZXRzRXhwcmVzc2lvbiA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIHJldHVybiBtZS51c2VyLnRpY2tldHM7XG4gICAgICB9O1xuXG4gICAgICB2YXIgX3dhdGNoVGlja2V0c0NhbGxiYWNrID0gZnVuY3Rpb24odGlja2V0cykge1xuICAgICAgICBtZS50aWNrZXRzID0gdGlja2V0cztcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuX3Vud2F0Y2hUaWNrZXRzID0gdGhpcy4kc2NvcGUuJHdhdGNoQ29sbGVjdGlvbihcbiAgICAgICAgX3dhdGNoVGlja2V0c0V4cHJlc3Npb24sXG4gICAgICAgIF93YXRjaFRpY2tldHNDYWxsYmFja1xuICAgICAgKTtcblxuICAgICAgdmFyIF93YXRjaFRhc2tzRXhwcmVzc2lvbiA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIHJldHVybiBtZS51c2VyLmdldFRhc2tzKCk7XG4gICAgICB9O1xuXG4gICAgICB2YXIgX3dhdGNoVGFza3NDYWxsYmFjayA9IGZ1bmN0aW9uKHRhc2tzKSB7XG4gICAgICAgIG1lLnRhc2tzID0gdGFza3M7XG4gICAgICB9O1xuXG4gICAgICB0aGlzLl91bndhdGNoVGFza3MgPSB0aGlzLiRzY29wZS4kd2F0Y2goXG4gICAgICAgIF93YXRjaFRhc2tzRXhwcmVzc2lvbixcbiAgICAgICAgX3dhdGNoVGFza3NDYWxsYmFja1xuICAgICAgKTtcbiAgICB9O1xuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGV2ZW50IGxpc3RlbmVyIGFuZCB3YXRjaGVzLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgJG9uRGVzdHJveVxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgU3RhdHVzLnByb3RvdHlwZS4kb25EZXN0cm95ID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fdW53YXRjaFRpY2tldHMoKTtcbiAgICB0aGlzLl91bndhdGNoVGFza3MoKTtcbiAgfTtcblxuICAvKipcbiAgICogVG9nZ2xlcyBgdGFza3NWaXNpYmxlYCBwcm9wZXJ0eS5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIHRvZ2dsZVRhc2tzXG4gICAqIEByZXR1cm4ge1ZvaWR9XG4gICAqL1xuICBTdGF0dXMucHJvdG90eXBlLnRvZ2dsZVRhc2tzID0gZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIHRoaXMudGFza3NWaXNpYmxlID0gIXRoaXMudGFza3NWaXNpYmxlO1xuICAgIH07XG5cbiAgLyoqXG4gICAqIFRvZ2dsZXMgYHRpY2tldHNWaXNpYmxlYCBwcm9wZXJ0eS5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIHRvZ2dsZVRpY2tldHNcbiAgICogQHJldHVybiB7Vm9pZH1cbiAgICovXG4gIFN0YXR1cy5wcm90b3R5cGUudG9nZ2xlVGlja2V0cyA9IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICB0aGlzLnRpY2tldHNWaXNpYmxlID0gIXRoaXMudGlja2V0c1Zpc2libGU7XG4gICAgfTtcblxuICAvL1xuICAvLyBSRUdJU1RSWVxuICAvL1xuICBhbmd1bGFyLm1vZHVsZShtb2R1bGUpLmRpcmVjdGl2ZSgnc3RhdHVzJywgZnVuY3Rpb24oKXtcbiAgICByZXR1cm4ge1xuICAgICAgc2NvcGU6IHtcbiAgICAgICAgaWNvblJhdGlvOic9P3N0YXR1c0ljb25SYXRpbycsXG4gICAgICAgIGljb25Db2xvcjonPT9zdGF0dXNJY29uQ29sb3InLFxuICAgICAgICBpc0NvbXBhY3Q6Jz0/c3RhdHVzSXNDb21wYWN0J1xuICAgICAgfSxcbiAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICB0cmFuc2NsdWRlOiB0cnVlLFxuICAgICAgY29udHJvbGxlcjogU3RhdHVzLFxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZSxcbiAgICAgIGNvbnRyb2xsZXJBczogJ3N0YXR1c0NvbnRyb2xsZXInLFxuICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9kaXJlY3RpdmVzL3N0YXR1cy5odG1sJ1xuICAgIH07XG4gIH0pO1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFN0YXR1cyBJY29uc1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vXG4gIC8vIENPTlRST0xMRVJcbiAgLy9cblxuICAvKipcbiAgICogQGNvbnN0cnVjdG9yXG4gICAqL1xuICB2YXIgU3RhdHVzSWNvbnMgPSBmdW5jdGlvbigkc2NvcGUsICRhdHRycywgJGVsZW1lbnQsICRpbmplY3Rvcikge1xuICAgIHRoaXMuJHNjb3BlID0gJHNjb3BlO1xuICAgIHRoaXMuJGF0dHJzID0gJGF0dHJzO1xuICAgIHRoaXMuJGVsZW1lbnQgPSAkZWxlbWVudDtcbiAgICB0aGlzLiRpbmplY3RvciA9ICRpbmplY3RvcjtcblxuICAgIHRoaXMucmF0aW8gPSAxO1xuICAgIHRoaXMuY29sb3IgPSAnY3VycmVudGNvbG9yJztcbiAgfTtcblxuICBTdGF0dXNJY29ucy4kaW5qZWN0ID0gWyckc2NvcGUnLCAnJGF0dHJzJywgJyRlbGVtZW50JywgJyRpbmplY3RvciddO1xuXG4gIC8vXG4gIC8vIFBST1BFUlRJRVNcbiAgLy9cblxuICAvKiogQHZhciB7Ym9vbGVhbn0gaXNCZWdpbm5lciBJZiB1c2VyIGhhcyBzdGF0ZSBgU1RBVEVfQkVHSU5ORVJgIG9yIGhpZ2hlci4gKi9cbiAgU3RhdHVzSWNvbnMucHJvdG90eXBlLmlzQmVnaW5uZXIgPSBmYWxzZTtcblxuICAvKiogQHZhciB7Ym9vbGVhbn0gaXNBbWF0ZXVlciBJZiB1c2VyIGhhcyBzdGF0ZSBgU1RBVEVfQU1BVEVVUmAgb3IgaGlnaGVyLiAqL1xuICBTdGF0dXNJY29ucy5wcm90b3R5cGUuaXNBbWF0ZXVlciA9IGZhbHNlO1xuXG4gIC8qKiBAdmFyIHtib29sZWFufSBpc0FkdmFuY2VkIElmIHVzZXIgaGFzIHN0YXRlIGBTVEFURV9BRFZBTkNFRGAgb3IgaGlnaGVyLiAqL1xuICBTdGF0dXNJY29ucy5wcm90b3R5cGUuaXNBZHZhbmNlZCA9IGZhbHNlO1xuXG4gIC8qKiBAdmFyIHtib29sZWFufSBpc0V4cGVydCBJZiB1c2VyIGhhcyBzdGF0ZSBgU1RBVEVfRVhQRVJUYCBvciBoaWdoZXIuICovXG4gIFN0YXR1c0ljb25zLnByb3RvdHlwZS5pc0V4cGVydCA9IGZhbHNlO1xuXG4gIC8qKiBAdmFyIHtib29sZWFufSBpc1Byb2ZpIElmIHVzZXIgaGFzIHN0YXRlIGBTVEFURV9QUk9GSWAgb3IgaGlnaGVyLiAqL1xuICBTdGF0dXNJY29ucy5wcm90b3R5cGUuaXNQcm9maSA9IGZhbHNlO1xuXG4gIC8vXG4gIC8vIE1FVEhPRFNcbiAgLy9cblxuICAvKipcbiAgICogV2F0Y2hlcyB1c2VyJ3MgYHN0YXRlYCBwcm9wZXJ0eSBhbmQgbWFwcyB0aGVtIGZvciB2aWV3LlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgJG9uSW5pdFxuICAgKiBAcmV0dXJuIHtWb2lkfVxuICAgKi9cbiAgU3RhdHVzSWNvbnMucHJvdG90eXBlLiRvbkluaXQgPSBmdW5jdGlvbigpXG4gICAge1xuICAgICAgdmFyIFNUQVRFX0JFR0lOTkVSID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCdTVEFURV9CRUdJTk5FUicpO1xuICAgICAgdmFyIFNUQVRFX0FNQVRFVVIgPSB0aGlzLiRpbmplY3Rvci5nZXQoJ1NUQVRFX0FNQVRFVVInKTtcbiAgICAgIHZhciBTVEFURV9BRFZBTkNFRCA9IHRoaXMuJGluamVjdG9yLmdldCgnU1RBVEVfQURWQU5DRUQnKTtcbiAgICAgIHZhciBTVEFURV9FWFBFUlQgPSB0aGlzLiRpbmplY3Rvci5nZXQoJ1NUQVRFX0VYUEVSVCcpO1xuICAgICAgdmFyIHVzZXIgPSB0aGlzLiRpbmplY3Rvci5nZXQoJ3VzZXInKTtcblxuICAgICAgdmFyIG1lID0gdGhpcztcblxuICAgICAgdmFyIF93YXRjaEV4cHJlc3Npb24gPSBmdW5jdGlvbigpe1xuICAgICAgICByZXR1cm4gdXNlci5zdGF0ZTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBfd2F0Y2hDYWxsYmFjayA9IGZ1bmN0aW9uKHN0YXRlKSB7XG4gICAgICAgIG1lLmlzQmVnaW5uZXIgPSBzdGF0ZSA+PSBTVEFURV9CRUdJTk5FUjtcbiAgICAgICAgbWUuaXNBbWF0ZXVyID0gc3RhdGUgPj0gU1RBVEVfQU1BVEVVUjtcbiAgICAgICAgbWUuaXNBZHZhbmNlZCA9IHN0YXRlID49IFNUQVRFX0FEVkFOQ0VEO1xuICAgICAgICBtZS5pc0V4cGVydCA9IHN0YXRlID49IFNUQVRFX0VYUEVSVDtcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuX3Vud2F0Y2ggPSB0aGlzLiRzY29wZS4kd2F0Y2goXG4gICAgICAgIF93YXRjaEV4cHJlc3Npb24sXG4gICAgICAgIF93YXRjaENhbGxiYWNrXG4gICAgICApO1xuICAgIH07XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgZXZlbnQgbGlzdGVuZXIgYW5kIHdhdGNoZXMuXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCAkb25EZXN0cm95XG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBTdGF0dXNJY29ucy5wcm90b3R5cGUuJG9uRGVzdHJveSA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3Vud2F0Y2goKTtcbiAgfTtcblxuICAvL1xuICAvLyBSRUdJU1RSWVxuICAvL1xuICBhbmd1bGFyLm1vZHVsZShtb2R1bGUpLmRpcmVjdGl2ZSgnc3RhdHVzSWNvbnMnLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2NvcGU6IHtcbiAgICAgICAgcmF0aW86Jz0/c3RhdHVzSWNvbnNSYXRpbycsXG4gICAgICAgIGNvbG9yOic9P3N0YXR1c0ljb25zQ29sb3InLFxuICAgICAgfSxcbiAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICB0cmFuc2NsdWRlOiB0cnVlLFxuICAgICAgY29udHJvbGxlcjogU3RhdHVzSWNvbnMsXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlLFxuICAgICAgY29udHJvbGxlckFzOiAnc3RhdHVzSWNvbnNDb250cm9sbGVyJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvZGlyZWN0aXZlcy9zdGF0dXMtaWNvbnMuaHRtbCdcbiAgICB9O1xuICB9KTtcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBTdGF0dXMgTGFiZWxcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvL1xuICAvLyBDT05UUk9MTEVSXG4gIC8vXG5cbiAgLyoqXG4gICAqIEBjb25zdHJ1Y3RvclxuICAgKi9cbiAgdmFyIFN0YXR1c0xhYmVsID0gZnVuY3Rpb24oJHNjb3BlLCAkYXR0cnMsICRlbGVtZW50LCAkaW5qZWN0b3IpIHtcbiAgICB0aGlzLiRzY29wZSA9ICRzY29wZTtcbiAgICB0aGlzLiRhdHRycyA9ICRhdHRycztcbiAgICB0aGlzLiRlbGVtZW50ID0gJGVsZW1lbnQ7XG4gICAgdGhpcy4kaW5qZWN0b3IgPSAkaW5qZWN0b3I7XG4gIH07XG5cbiAgU3RhdHVzTGFiZWwuJGluamVjdCA9IFsnJHNjb3BlJywgJyRhdHRycycsICckZWxlbWVudCcsICckaW5qZWN0b3InXTtcblxuICAvL1xuICAvLyBQUk9QRVJUSUVTXG4gIC8vXG5cbiAgLyoqIEB2YXIge3N0cmluZ30gc3RhdGUgU3RyaW5nIHJlcHJlc2VuYXRpb24gb2YgdXNlcidzIGBzdGF0ZWAuICovXG4gIFN0YXR1c0xhYmVsLnByb3RvdHlwZS5zdGF0ZSA9IG51bGw7XG5cbiAgLyoqIEB2YXIge2Jvb2xlYW59IGlzQ29tcGFjdCBJZiBwcmVzZW50YXRpb24gaXMgaW4gY29tcGFjdCBmb3JtYXQuICovXG4gIFN0YXR1c0xhYmVsLnByb3RvdHlwZS5pc0NvbXBhY3QgPSBmYWxzZTtcblxuICAvL1xuICAvLyBNRVRIT0RTXG4gIC8vXG5cbiAgLyoqXG4gICAqIFdhdGNoZXMgdXNlcidzIGBzdGF0ZWAgcHJvcGVydHkgYW5kIG1hcHMgdGhlbSBmb3Igdmlldy5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kICRvbkluaXRcbiAgICogQHJldHVybiB7Vm9pZH1cbiAgICovXG4gIFN0YXR1c0xhYmVsLnByb3RvdHlwZS4kb25Jbml0ID0gZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIHZhciB1c2VyID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCd1c2VyJyk7XG5cbiAgICAgIHZhciBtZSA9IHRoaXM7XG5cbiAgICAgIHZhciBfd2F0Y2hFeHByZXNzaW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB1c2VyLnN0YXRlO1xuICAgICAgfTtcblxuICAgICAgdmFyIF93YXRjaENhbGxiYWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIG1lLnN0YXRlID0gdXNlci5nZXRTdGF0ZUFzU3RyaW5nKCk7XG4gICAgICB9O1xuXG4gICAgICB0aGlzLl91bndhdGNoID0gdGhpcy4kc2NvcGUuJHdhdGNoKFxuICAgICAgICBfd2F0Y2hFeHByZXNzaW9uLFxuICAgICAgICBfd2F0Y2hDYWxsYmFja1xuICAgICAgKTtcbiAgICB9O1xuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGV2ZW50IGxpc3RlbmVyIGFuZCB3YXRjaGVzLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgJG9uRGVzdHJveVxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgU3RhdHVzTGFiZWwucHJvdG90eXBlLiRvbkRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl91bndhdGNoKCk7XG4gIH07XG5cbiAgLy9cbiAgLy8gUkVHSVNUUllcbiAgLy9cbiAgYW5ndWxhci5tb2R1bGUobW9kdWxlKS5kaXJlY3RpdmUoJ3N0YXR1c0xhYmVsJywgZnVuY3Rpb24oKXtcbiAgICByZXR1cm4ge1xuICAgICAgc2NvcGU6IHtcbiAgICAgICAgaXNDb21wYWN0OiAnPT9zdGF0dXNMYWJlbElzQ29tcGFjdCdcbiAgICAgIH0sXG4gICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICAgIGNvbnRyb2xsZXI6IFN0YXR1c0xhYmVsLFxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZSxcbiAgICAgIGNvbnRyb2xsZXJBczogJ3N0YXR1c0xhYmVsQ29udHJvbGxlcicsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2RpcmVjdGl2ZXMvc3RhdHVzLWxhYmVsLmh0bWwnXG4gICAgfTtcbiAgfSk7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU3RhdHVzIExhYmVsXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLy9cbiAgLy8gQ09OVFJPTExFUlxuICAvL1xuXG4gIC8qKlxuICAgKiBAY29uc3RydWN0b3JcbiAgICovXG4gIHZhciBTdGF0dXNUaWNrZXRzID0gZnVuY3Rpb24oJHNjb3BlLCAkYXR0cnMsICRlbGVtZW50LCAkaW5qZWN0b3IpIHtcbiAgICB0aGlzLiRzY29wZSA9ICRzY29wZTtcbiAgICB0aGlzLiRhdHRycyA9ICRhdHRycztcbiAgICB0aGlzLiRlbGVtZW50ID0gJGVsZW1lbnQ7XG4gICAgdGhpcy4kaW5qZWN0b3IgPSAkaW5qZWN0b3I7XG4gIH07XG5cbiAgU3RhdHVzVGlja2V0cy4kaW5qZWN0ID0gWyckc2NvcGUnLCAnJGF0dHJzJywgJyRlbGVtZW50JywgJyRpbmplY3RvciddO1xuXG4gIC8vXG4gIC8vIFBST1BFUlRJRVNcbiAgLy9cblxuICAvKiogQHZhciB7bnVtYmVyfSB0aWNrZXRzIEN1cnJlbnQgdXNlciB0aWNrZXQgY291bnQuICovXG4gIFN0YXR1c1RpY2tldHMucHJvdG90eXBlLnRpY2tldHMgPSAwO1xuXG4gIC8qKiBAdmFyIHtib29sZWFufSBpc0NvbXBhY3QgSWYgcHJlc2VudGF0aW9uIGlzIGluIGNvbXBhY3QgZm9ybWF0LiAqL1xuICBTdGF0dXNUaWNrZXRzLnByb3RvdHlwZS5pc0NvbXBhY3QgPSBmYWxzZTtcblxuICAvL1xuICAvLyBNRVRIT0RTXG4gIC8vXG5cbiAgLyoqXG4gICAqIFdhdGNoZXMgdXNlcidzIGBzdGF0ZWAgcHJvcGVydHkgYW5kIG1hcHMgdGhlbSBmb3Igdmlldy5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kICRvbkluaXRcbiAgICogQHJldHVybiB7Vm9pZH1cbiAgICovXG4gIFN0YXR1c1RpY2tldHMucHJvdG90eXBlLiRvbkluaXQgPSBmdW5jdGlvbigpXG4gICAge1xuICAgICAgdmFyIHVzZXIgPSB0aGlzLiRpbmplY3Rvci5nZXQoJ3VzZXInKTtcblxuICAgICAgdmFyIG1lID0gdGhpcztcblxuICAgICAgdmFyIF93YXRjaEV4cHJlc3Npb24gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHVzZXIudGlja2V0cztcbiAgICAgIH07XG5cbiAgICAgIHZhciBfd2F0Y2hDYWxsYmFjayA9IGZ1bmN0aW9uKHRpY2tldHMpIHtcbiAgICAgICAgbWUudGlja2V0cyA9IHRpY2tldHMgPyB0aWNrZXRzLmxlbmd0aCA6IDA7XG4gICAgICB9O1xuXG4gICAgICB0aGlzLl91bndhdGNoID0gdGhpcy4kc2NvcGUuJHdhdGNoQ29sbGVjdGlvbihcbiAgICAgICAgX3dhdGNoRXhwcmVzc2lvbixcbiAgICAgICAgX3dhdGNoQ2FsbGJhY2tcbiAgICAgICk7XG4gICAgfTtcblxuICAvKipcbiAgICogUmVtb3ZlcyBldmVudCBsaXN0ZW5lciBhbmQgd2F0Y2hlcy5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kICRvbkRlc3Ryb3lcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIFN0YXR1c1RpY2tldHMucHJvdG90eXBlLiRvbkRlc3Ryb3kgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl91bndhdGNoKCk7XG4gIH07XG5cbiAgLy9cbiAgLy8gUkVHSVNUUllcbiAgLy9cbiAgYW5ndWxhci5tb2R1bGUobW9kdWxlKS5kaXJlY3RpdmUoJ3N0YXR1c1RpY2tldHMnLCBmdW5jdGlvbigpe1xuICAgIHJldHVybiB7XG4gICAgICBzY29wZToge1xuICAgICAgICBpc0NvbXBhY3Q6ICc9P3N0YXR1c1RpY2tldHNJc0NvbXBhY3QnXG4gICAgICB9LFxuICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgIHRyYW5zY2x1ZGU6IHRydWUsXG4gICAgICBjb250cm9sbGVyOiBTdGF0dXNUaWNrZXRzLFxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZSxcbiAgICAgIGNvbnRyb2xsZXJBczogJ3N0YXR1c1RpY2tldHNDb250cm9sbGVyJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvZGlyZWN0aXZlcy9zdGF0dXMtdGlja2V0cy5odG1sJ1xuICAgIH07XG4gIH0pO1xuXG59KShBTkdVTEFSX01PRFVMRSwgYW5ndWxhcik7XG4iXX0=
