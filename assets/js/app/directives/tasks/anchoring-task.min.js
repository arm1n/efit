/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,e){"use strict";var o=function(t,e,o,i){var n=i.get("TYPE_ANCHORING"),r=i.get("user");this.$scope=t,this.$attrs=o,this.$element=e,this.$injector=i,this.task=r.getTaskByType(n),this.group=r.getGroupAsString()};o.$inject=["$scope","$element","$attrs","$injector"],o.prototype.task=null,o.prototype.choice=null,o.prototype.group=!1,o.prototype.resolved=!1,o.prototype.$onInit=function(){this.init()},o.prototype.getPayload=function(){var t=this.$injector.get("user");return{task:this.task,json:{group:t.group,choice:this.choice}}},o.prototype.isLocked=function(){return null===this.task||!this.task.isActive},o.prototype.canResolve=function(){var t=this.$injector.get("user");return!!t.isUser()&&(!this.isLocked()&&(!this.resolved&&!!this.choice))},o.prototype.init=function(){this.resolved=!1},o.prototype.reset=function(){this.init()},o.prototype.update=function(t,e){this.choice=e?t:null},o.prototype.resolve=function(){var t=this.$injector.get("$q"),e=this.onResolve({payload:this.getPayload()}),o=this,i=function(){o.resolved=!0},n=function(){},r=t.when(e);return r.then(i,n),r},e.module(t).directive("anchoringTask",function(){return{scope:{onResolve:"&anchoringTaskOnResolve"},restrict:"A",transclude:!0,controller:o,bindToController:!0,controllerAs:"anchoringTaskController",templateUrl:"views/directives/tasks/anchoring-task.html"}})}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kaXJlY3RpdmVzL3Rhc2tzL2FuY2hvcmluZy10YXNrLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImFuZ3VsYXIiLCJBbmNob3JpbmdUYXNrIiwiJHNjb3BlIiwiJGVsZW1lbnQiLCIkYXR0cnMiLCIkaW5qZWN0b3IiLCJ0eXBlIiwiZ2V0IiwidXNlciIsInRoaXMiLCJ0YXNrIiwiZ2V0VGFza0J5VHlwZSIsImdyb3VwIiwiZ2V0R3JvdXBBc1N0cmluZyIsIiRpbmplY3QiLCJwcm90b3R5cGUiLCJjaG9pY2UiLCJyZXNvbHZlZCIsIiRvbkluaXQiLCJpbml0IiwiZ2V0UGF5bG9hZCIsImpzb24iLCJpc0xvY2tlZCIsImlzQWN0aXZlIiwiY2FuUmVzb2x2ZSIsImlzVXNlciIsInJlc2V0IiwidXBkYXRlIiwic2VsZWN0ZWQiLCJyZXNvbHZlIiwiJHEiLCJyZXN1bHQiLCJvblJlc29sdmUiLCJwYXlsb2FkIiwibWUiLCJzdWNjZXNzQ2FsbGJhY2siLCJmYWlsdXJlQ2FsbGJhY2siLCJwcm9taXNlIiwid2hlbiIsInRoZW4iLCJkaXJlY3RpdmUiLCJzY29wZSIsInJlc3RyaWN0IiwidHJhbnNjbHVkZSIsImNvbnRyb2xsZXIiLCJiaW5kVG9Db250cm9sbGVyIiwiY29udHJvbGxlckFzIiwidGVtcGxhdGVVcmwiLCJBTkdVTEFSX01PRFVMRSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Q0FTQSxTQUFVQSxFQUFRQyxHQUNoQixZQWFBLElBQUlDLEdBQWdCLFNBQVNDLEVBQVFDLEVBQVVDLEVBQVFDLEdBQ3JELEdBQUlDLEdBQU9ELEVBQVVFLElBQUksa0JBQ3JCQyxFQUFPSCxFQUFVRSxJQUFJLE9BRXpCRSxNQUFLUCxPQUFTQSxFQUNkTyxLQUFLTCxPQUFTQSxFQUNkSyxLQUFLTixTQUFXQSxFQUNoQk0sS0FBS0osVUFBWUEsRUFFakJJLEtBQUtDLEtBQU9GLEVBQUtHLGNBQWNMLEdBQy9CRyxLQUFLRyxNQUFRSixFQUFLSyxtQkFHcEJaLEdBQWNhLFNBQVcsU0FBUyxXQUFXLFNBQVUsYUFTdkRiLEVBQWNjLFVBQVVMLEtBQU8sS0FLL0JULEVBQWNjLFVBQVVDLE9BQVMsS0FHakNmLEVBQWNjLFVBQVVILE9BQVEsRUFHaENYLEVBQWNjLFVBQVVFLFVBQVcsRUFjbkNoQixFQUFjYyxVQUFVRyxRQUFVLFdBQ2hDVCxLQUFLVSxRQVVQbEIsRUFBY2MsVUFBVUssV0FBYSxXQUNuQyxHQUFJWixHQUFPQyxLQUFLSixVQUFVRSxJQUFJLE9BRTlCLFFBQ0VHLEtBQU1ELEtBQUtDLEtBQ1hXLE1BQ0VULE1BQU9KLEVBQUtJLE1BQ1pJLE9BQVFQLEtBQUtPLFVBWW5CZixFQUFjYyxVQUFVTyxTQUFXLFdBQ2pDLE1BQWtCLFFBQWRiLEtBQUtDLE9BSURELEtBQUtDLEtBQUthLFVBVXBCdEIsRUFBY2MsVUFBVVMsV0FBYSxXQUNuQyxHQUFJaEIsR0FBT0MsS0FBS0osVUFBVUUsSUFBSSxPQUM5QixTQUFLQyxFQUFLaUIsWUFJTmhCLEtBQUthLGNBSUxiLEtBQUtRLFlBSUpSLEtBQUtPLFVBY1pmLEVBQWNjLFVBQVVJLEtBQU8sV0FDN0JWLEtBQUtRLFVBQVcsR0FVbEJoQixFQUFjYyxVQUFVVyxNQUFRLFdBQzlCakIsS0FBS1UsUUFZUGxCLEVBQWNjLFVBQVVZLE9BQVMsU0FBU1gsRUFBUVksR0FDaERuQixLQUFLTyxPQUFTWSxFQUFXWixFQUFTLE1BV3BDZixFQUFjYyxVQUFVYyxRQUFVLFdBQ2hDLEdBQUlDLEdBQUtyQixLQUFLSixVQUFVRSxJQUFJLE1BR3hCd0IsRUFBU3RCLEtBQUt1QixXQUNoQkMsUUFBU3hCLEtBQUtXLGVBR1pjLEVBQUt6QixLQUNMMEIsRUFBa0IsV0FDcEJELEVBQUdqQixVQUFXLEdBRVptQixFQUFrQixhQUlsQkMsRUFBVVAsRUFBR1EsS0FBS1AsRUFNdEIsT0FMQU0sR0FBUUUsS0FDTkosRUFDQUMsR0FHS0MsR0FNVHJDLEVBQVFELE9BQU9BLEdBQVF5QyxVQUFVLGdCQUFpQixXQUNoRCxPQUNFQyxPQUNFVCxVQUFXLDJCQUViVSxTQUFVLElBQ1ZDLFlBQVksRUFDWkMsV0FBWTNDLEVBQ1o0QyxrQkFBa0IsRUFDbEJDLGFBQWMsMEJBQ2RDLFlBQWEsaURBSWhCQyxlQUFnQmhEIiwiZmlsZSI6ImFwcC9kaXJlY3RpdmVzL3Rhc2tzL2FuY2hvcmluZy10YXNrLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBBTkdVTEFSX01PRFVMRSwgYW5ndWxhciAqL1xuKGZ1bmN0aW9uKG1vZHVsZSwgYW5ndWxhcikge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gQW5jaG9yaW5nVGFza1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vXG4gIC8vIENPTlRST0xMRVJcbiAgLy9cblxuICAvKipcbiAgICogQGNvbnN0cnVjdG9yXG4gICAqL1xuICB2YXIgQW5jaG9yaW5nVGFzayA9IGZ1bmN0aW9uKCRzY29wZSwgJGVsZW1lbnQsICRhdHRycywgJGluamVjdG9yKSB7XG4gICAgdmFyIHR5cGUgPSAkaW5qZWN0b3IuZ2V0KCdUWVBFX0FOQ0hPUklORycpO1xuICAgIHZhciB1c2VyID0gJGluamVjdG9yLmdldCgndXNlcicpO1xuXG4gICAgdGhpcy4kc2NvcGUgPSAkc2NvcGU7XG4gICAgdGhpcy4kYXR0cnMgPSAkYXR0cnM7XG4gICAgdGhpcy4kZWxlbWVudCA9ICRlbGVtZW50O1xuICAgIHRoaXMuJGluamVjdG9yID0gJGluamVjdG9yO1xuXG4gICAgdGhpcy50YXNrID0gdXNlci5nZXRUYXNrQnlUeXBlKHR5cGUpO1xuICAgIHRoaXMuZ3JvdXAgPSB1c2VyLmdldEdyb3VwQXNTdHJpbmcoKTtcbiAgfTtcblxuICBBbmNob3JpbmdUYXNrLiRpbmplY3QgPSBbJyRzY29wZScsJyRlbGVtZW50JywnJGF0dHJzJywgJyRpbmplY3RvciddO1xuXG4gIC8vXG4gIC8vIFBST1BFUlRJRVNcbiAgLy9cblxuICAvLyBTRVJWRVJcblxuICAvKiogQHZhciB7b2JqZWN0fSB0YXNrIFRhc2sncyByZXNvdXJjZSBmcm9tIHNlcnZlci4gKi9cbiAgQW5jaG9yaW5nVGFzay5wcm90b3R5cGUudGFzayA9IG51bGw7XG5cbiAgLy8gR0FNRVBMQVlcblxuICAvKiogQHZhciB7bnVtYmVyfSBjaG9pY2UgQ3VycmVudGx5IHNlbGVjdGVkIHVzZXIgYW5zd2VyLiAqL1xuICBBbmNob3JpbmdUYXNrLnByb3RvdHlwZS5jaG9pY2UgPSBudWxsO1xuXG4gIC8qKiBAdmFyIHtzdHJpbmd9IGdyb3VwIEN1cnJlbnQgdXNlcidzIGdyb3VwIGFzc2lnbm1lbnQuICovXG4gIEFuY2hvcmluZ1Rhc2sucHJvdG90eXBlLmdyb3VwID0gZmFsc2U7XG5cbiAgLyoqIEB2YXIge2Jvb2xlYW59IHJlc29sdmVkIElmIHBsYXllciBoYXMgcmVzb2x2ZWQgdGhlIGdhbWUuICovXG4gIEFuY2hvcmluZ1Rhc2sucHJvdG90eXBlLnJlc29sdmVkID0gZmFsc2U7XG5cbiAgLy9cbiAgLy8gTUVUSE9EU1xuICAvL1xuXG4gIC8qKlxuICAgKiBQcm94aWVzIHRvIGBpbml0KClgIGlmIGNvbnRyb2xsZXIncyByZWFkeS5cbiAgICogU2V0cyB1cCBldmVudCBzb3VyY2UgZm9yIGxpc3RlbmluZyB0b1xuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgJG9uSW5pdFxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQW5jaG9yaW5nVGFzay5wcm90b3R5cGUuJG9uSW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuaW5pdCgpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZXRyaWV2ZXMgcmVzdWx0IHBheWxvYWQgZm9yIHNlcnZlci5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIGdldFBheWxvYWRcbiAgICogQHJldHVybiB7b2JqZWN0fVxuICAgKi9cbiAgQW5jaG9yaW5nVGFzay5wcm90b3R5cGUuZ2V0UGF5bG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB1c2VyID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCd1c2VyJyk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgdGFzazogdGhpcy50YXNrLFxuICAgICAganNvbjoge1xuICAgICAgICBncm91cDogdXNlci5ncm91cCxcbiAgICAgICAgY2hvaWNlOiB0aGlzLmNob2ljZVxuICAgICAgfVxuICAgIH07XG4gIH07XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgb3Igbm90IHRhc2sgaXMgY3VycmVudGx5IGxvY2tlZC5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIGlzTG9ja2VkXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBBbmNob3JpbmdUYXNrLnByb3RvdHlwZS5pc0xvY2tlZCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLnRhc2sgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiAhdGhpcy50YXNrLmlzQWN0aXZlO1xuICB9O1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0YXNrIGNhbiBiZSBzZW50IHRvIHNlcnZlci5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIGNhblJlc29sdmVcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIEFuY2hvcmluZ1Rhc2sucHJvdG90eXBlLmNhblJlc29sdmUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdXNlciA9IHRoaXMuJGluamVjdG9yLmdldCgndXNlcicpO1xuICAgIGlmICghdXNlci5pc1VzZXIoKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmlzTG9ja2VkKCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5yZXNvbHZlZCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5jaG9pY2UpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuICAvKipcbiAgICogU2V0cyB1cCBpbml0aWFsIHN0YXRlLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgaW5pdFxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQW5jaG9yaW5nVGFzay5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVzb2x2ZWQgPSBmYWxzZTtcbiAgfTtcblxuICAvKipcbiAgICogUmVzZXRzIGluaXRpYWwgc3RhdGUuXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCByZXNldFxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQW5jaG9yaW5nVGFzay5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuaW5pdCgpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBEZXNjcmlwdGlvbi5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgKiBAcGFyYW0ge251bWJlcn0gY2hvaWNlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzZWxlY3RlZFxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgQW5jaG9yaW5nVGFzay5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24oY2hvaWNlLCBzZWxlY3RlZCl7XG4gICAgdGhpcy5jaG9pY2UgPSBzZWxlY3RlZCA/IGNob2ljZSA6IG51bGw7XG4gIH07XG5cbiAgLyoqXG4gICAqIFNldHMgYHJlc29sdmVkYCBmbGFnLiBDYWxscyBgb25SZXNvbHZlYFxuICAgKiBjYWxsYmFjayB3aXRoIEpTT04gcmVzdWx0IGZvciBjb25zdW1lci5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIHJlc29sdmVcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIEFuY2hvcmluZ1Rhc2sucHJvdG90eXBlLnJlc29sdmUgPSBmdW5jdGlvbigpe1xuICAgIHZhciAkcSA9IHRoaXMuJGluamVjdG9yLmdldCgnJHEnKTtcblxuXG4gICAgdmFyIHJlc3VsdCA9IHRoaXMub25SZXNvbHZlKHtcbiAgICAgIHBheWxvYWQ6IHRoaXMuZ2V0UGF5bG9hZCgpXG4gICAgfSk7XG5cbiAgICB2YXIgbWUgPSB0aGlzO1xuICAgIHZhciBzdWNjZXNzQ2FsbGJhY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgIG1lLnJlc29sdmVkID0gdHJ1ZTtcbiAgICB9O1xuICAgIHZhciBmYWlsdXJlQ2FsbGJhY2sgPSBmdW5jdGlvbigpIHtcblxuICAgIH07XG5cbiAgICB2YXIgcHJvbWlzZSA9ICRxLndoZW4ocmVzdWx0KTtcbiAgICBwcm9taXNlLnRoZW4oXG4gICAgICBzdWNjZXNzQ2FsbGJhY2ssXG4gICAgICBmYWlsdXJlQ2FsbGJhY2tcbiAgICApO1xuXG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH07XG5cbiAgLy9cbiAgLy8gUkVHSVNUUllcbiAgLy9cbiAgYW5ndWxhci5tb2R1bGUobW9kdWxlKS5kaXJlY3RpdmUoJ2FuY2hvcmluZ1Rhc2snLCBmdW5jdGlvbigpe1xuICAgIHJldHVybiB7XG4gICAgICBzY29wZToge1xuICAgICAgICBvblJlc29sdmU6ICcmYW5jaG9yaW5nVGFza09uUmVzb2x2ZSdcbiAgICAgIH0sXG4gICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICAgIGNvbnRyb2xsZXI6IEFuY2hvcmluZ1Rhc2ssXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlLFxuICAgICAgY29udHJvbGxlckFzOiAnYW5jaG9yaW5nVGFza0NvbnRyb2xsZXInLFxuICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9kaXJlY3RpdmVzL3Rhc2tzL2FuY2hvcmluZy10YXNrLmh0bWwnXG4gICAgfTtcbiAgfSk7XG5cbn0pKEFOR1VMQVJfTU9EVUxFLCBhbmd1bGFyKTtcbiJdfQ==
