/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,e){"use strict";var s=function(t,e,s,i){var o=i.get("TYPE_SAVINGS_TARGET");this.$attrs=s,this.$scope=t,this.$element=e,this.$injector=i,this.user=this.$injector.get("user"),this.task=this.user.getTaskByType(o),this.result=this.user.getPendingByType(o),this.storage=this.$injector.get("storage").getProxy(),this._storageKey="__savings__target__task__updated__at__"};s.$inject=["$scope","$element","$attrs","$injector"],s.prototype.user=null,s.prototype.task=null,s.prototype.result=null,s.prototype.step=1,s.prototype.total=3,s.prototype.wish=null,s.prototype.amount=null,s.prototype.amountRepeated=null,s.prototype.resolved=!1,s.prototype.form=null,s.prototype.$onInit=function(){this.init()},s.prototype.getPayload=function(){var t={task:this.task,json:{step:this.step,wish:this.wish,total:this.total,amount:this.amount,amountRepeated:this.amountRepeated},isPending:null===this.amountRepeated};return null!==this.result&&(t=e.extend(this.result,t)),t},s.prototype.isLocked=function(){return null===this.task||(this.task.isActive?!!this._flag:(this.storage.removeItem(this._storageKey),this._flag=0,!0))},s.prototype.canResolve=function(){var t=this.$injector.get("user");return!!t.isUser()&&(!this.form.$invalid&&(!this.isLocked()&&!this.resolved))},s.prototype.init=function(){if(null!==this.result){var t=this.result.json,s=this.storage.getItem(this._storageKey);e.isNumber(s)&&(this._flag=s>=this.task.updatedAt),this.amountRepeated=t.amountRepeated||100,this.amount=t.amount,this.total=t.total,this.wish=t.wish,this.step=t.step}this.resolved=!1},s.prototype.reset=function(){this.init()},s.prototype.update=function(){if(this.step<this.total&&this.step++,this.canResolve()){var t=this,e=function(){},s=function(){t.step--};this.resolve().then(e,s)}},s.prototype.resolve=function(){var t=this.$injector.get("notification"),e=this.$injector.get("i18n"),s=this.$injector.get("$q"),i=null===this.result?this.onResolve:this.onUpdate,o=i({payload:this.getPayload()}),n=this,r=function(s){if(s.isPending){if(n.step<n.total){var i=e.get("Thank you for your input!");t.success(i)}return n.result=s,n.storage.setItem(n._storageKey,n.task.updatedAt),void(n._flag=1)}n.resolved=!0},a=function(){},u=s.when(o);return u.then(r,a),u},s.prototype.getDifference=function(){return this.amountRepeated-this.amount},e.module(t).directive("savingsTargetTask",function(){return{scope:{onUpdate:"&savingsTargetTaskOnUpdate",onResolve:"&savingsTargetTaskOnResolve"},restrict:"A",transclude:!0,controller:s,bindToController:!0,controllerAs:"savingsTargetTaskController",templateUrl:"views/directives/tasks/savings-target-task.html"}})}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
