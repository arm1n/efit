/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,e){"use strict";var o=function(t,e,o,n){var i=n.get("TYPE_PROCRASTINATION"),r=n.get("user");this.$injector=n,this.task=r.getTaskByType(i)};o.$inject=["$scope","$element","$attrs","$injector"],o.prototype.type=null,o.prototype.task=null,o.prototype.resolved=!1,o.prototype.setting=null,o.prototype.$onInit=function(){this.init()},o.prototype.getPayload=function(){return{task:this.task,json:{}}},o.prototype.isLocked=function(){return null===this.task||!this.task.isActive},o.prototype.canResolve=function(){var t=this.$injector.get("user");return!!t.isUser()&&(!this.isLocked()&&(!this.resolved&&!!this.choice))},o.prototype.init=function(){this.resolved=!1},o.prototype.reset=function(){this.init()},o.prototype.update=function(){this.resolve()},o.prototype.resolve=function(){var t=this.$injector.get("$q"),e=this.onResolve({payload:this.getPayload()}),o=this,n=function(){o.resolved=!0},i=function(){},r=t.when(e);return r.then(n,i),r},e.module(t).directive("procrastinationTask",function(){return{scope:{onResolve:"&procrastinationTaskOnResolve"},restrict:"A",transclude:!0,controller:o,bindToController:!0,controllerAs:"procrastinationTaskController",templateUrl:"views/directives/tasks/procrastination-task.html"}})}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kaXJlY3RpdmVzL3Rhc2tzL3Byb2NyYXN0aW5hdGlvbi10YXNrLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImFuZ3VsYXIiLCJQcm9jcmFzdGluYXRpb25UYXNrIiwiJHNjb3BlIiwiJGVsZW1udCIsIiRhdHRycyIsIiRpbmplY3RvciIsInR5cGUiLCJnZXQiLCJ1c2VyIiwidGhpcyIsInRhc2siLCJnZXRUYXNrQnlUeXBlIiwiJGluamVjdCIsInByb3RvdHlwZSIsInJlc29sdmVkIiwic2V0dGluZyIsIiRvbkluaXQiLCJpbml0IiwiZ2V0UGF5bG9hZCIsImpzb24iLCJpc0xvY2tlZCIsImlzQWN0aXZlIiwiY2FuUmVzb2x2ZSIsImlzVXNlciIsImNob2ljZSIsInJlc2V0IiwidXBkYXRlIiwicmVzb2x2ZSIsIiRxIiwicmVzdWx0Iiwib25SZXNvbHZlIiwicGF5bG9hZCIsIm1lIiwic3VjY2Vzc0NhbGxiYWNrIiwiZmFpbHVyZUNhbGxiYWNrIiwicHJvbWlzZSIsIndoZW4iLCJ0aGVuIiwiZGlyZWN0aXZlIiwic2NvcGUiLCJyZXN0cmljdCIsInRyYW5zY2x1ZGUiLCJjb250cm9sbGVyIiwiYmluZFRvQ29udHJvbGxlciIsImNvbnRyb2xsZXJBcyIsInRlbXBsYXRlVXJsIiwiQU5HVUxBUl9NT0RVTEUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0NBU0EsU0FBVUEsRUFBUUMsR0FDaEIsWUFhQSxJQUFJQyxHQUFzQixTQUFTQyxFQUFRQyxFQUFTQyxFQUFRQyxHQUMxRCxHQUFJQyxHQUFPRCxFQUFVRSxJQUFJLHdCQUNyQkMsRUFBT0gsRUFBVUUsSUFBSSxPQUV6QkUsTUFBS0osVUFBWUEsRUFDakJJLEtBQUtDLEtBQU9GLEVBQUtHLGNBQWNMLEdBR2pDTCxHQUFvQlcsU0FBVyxTQUFTLFdBQVcsU0FBVSxhQUs3RFgsRUFBb0JZLFVBQVVQLEtBQU8sS0FHckNMLEVBQW9CWSxVQUFVSCxLQUFPLEtBS3JDVCxFQUFvQlksVUFBVUMsVUFBVyxFQUt6Q2IsRUFBb0JZLFVBQVVFLFFBQVUsS0FheENkLEVBQW9CWSxVQUFVRyxRQUFVLFdBQ3RDUCxLQUFLUSxRQVVQaEIsRUFBb0JZLFVBQVVLLFdBQWEsV0FDekMsT0FDRVIsS0FBTUQsS0FBS0MsS0FDWFMsVUFZSmxCLEVBQW9CWSxVQUFVTyxTQUFXLFdBQ3ZDLE1BQWtCLFFBQWRYLEtBQUtDLE9BSURELEtBQUtDLEtBQUtXLFVBVXBCcEIsRUFBb0JZLFVBQVVTLFdBQWEsV0FDekMsR0FBSWQsR0FBT0MsS0FBS0osVUFBVUUsSUFBSSxPQUM5QixTQUFLQyxFQUFLZSxZQUlOZCxLQUFLVyxjQUlMWCxLQUFLSyxZQUlKTCxLQUFLZSxVQWNadkIsRUFBb0JZLFVBQVVJLEtBQU8sV0FDbkNSLEtBQUtLLFVBQVcsR0FVbEJiLEVBQW9CWSxVQUFVWSxNQUFRLFdBQ3BDaEIsS0FBS1EsUUFVUGhCLEVBQW9CWSxVQUFVYSxPQUFTLFdBQ3JDakIsS0FBS2tCLFdBV1AxQixFQUFvQlksVUFBVWMsUUFBVSxXQUN0QyxHQUFJQyxHQUFLbkIsS0FBS0osVUFBVUUsSUFBSSxNQUV4QnNCLEVBQVNwQixLQUFLcUIsV0FDaEJDLFFBQVN0QixLQUFLUyxlQUdaYyxFQUFLdkIsS0FDTHdCLEVBQWtCLFdBQ3BCRCxFQUFHbEIsVUFBVyxHQUVab0IsRUFBa0IsYUFJbEJDLEVBQVVQLEVBQUdRLEtBQUtQLEVBTXRCLE9BTEFNLEdBQVFFLEtBQ05KLEVBQ0FDLEdBR0tDLEdBTVRuQyxFQUFRRCxPQUFPQSxHQUFRdUMsVUFBVSxzQkFBdUIsV0FDdEQsT0FDRUMsT0FDRVQsVUFBVyxpQ0FFYlUsU0FBVSxJQUNWQyxZQUFZLEVBQ1pDLFdBQVl6QyxFQUNaMEMsa0JBQWtCLEVBQ2xCQyxhQUFjLGdDQUNkQyxZQUFhLHVEQUloQkMsZUFBZ0I5QyIsImZpbGUiOiJhcHAvZGlyZWN0aXZlcy90YXNrcy9wcm9jcmFzdGluYXRpb24tdGFzay5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgQU5HVUxBUl9NT0RVTEUsIGFuZ3VsYXIgKi9cbihmdW5jdGlvbihtb2R1bGUsIGFuZ3VsYXIpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFByb2NyYXN0aW5hdGlvblRhc2tcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAvL1xuICAvLyBDT05UUk9MTEVSXG4gIC8vXG5cbiAgLyoqXG4gICAqIEBjb25zdHJ1Y3RvclxuICAgKi9cbiAgdmFyIFByb2NyYXN0aW5hdGlvblRhc2sgPSBmdW5jdGlvbigkc2NvcGUsICRlbGVtbnQsICRhdHRycywgJGluamVjdG9yKSB7XG4gICAgdmFyIHR5cGUgPSAkaW5qZWN0b3IuZ2V0KCdUWVBFX1BST0NSQVNUSU5BVElPTicpO1xuICAgIHZhciB1c2VyID0gJGluamVjdG9yLmdldCgndXNlcicpO1xuXG4gICAgdGhpcy4kaW5qZWN0b3IgPSAkaW5qZWN0b3I7XG4gICAgdGhpcy50YXNrID0gdXNlci5nZXRUYXNrQnlUeXBlKHR5cGUpO1xuICB9O1xuXG4gIFByb2NyYXN0aW5hdGlvblRhc2suJGluamVjdCA9IFsnJHNjb3BlJywnJGVsZW1lbnQnLCckYXR0cnMnLCAnJGluamVjdG9yJ107XG5cbiAgLy8gU0VSVkVSXG5cbiAgLyoqIEB2YXIge3N0cmluZ30gdHlwZSBUYXNrJ3MgYHR5cGVgIHByb3BlcnR5IGZyb20gc2VydmVyLiAqL1xuICBQcm9jcmFzdGluYXRpb25UYXNrLnByb3RvdHlwZS50eXBlID0gbnVsbDtcblxuICAvKiogQHZhciB7b2JqZWN0fSB0YXNrIFRhc2sncyByZXNvdXJjZSBmcm9tIHNlcnZlci4gKi9cbiAgUHJvY3Jhc3RpbmF0aW9uVGFzay5wcm90b3R5cGUudGFzayA9IG51bGw7XG5cbiAgLy8gR0FNRVBMQVlcblxuICAvKiogQHZhciB7Ym9vbGVhbn0gcmVzb2x2ZWQgSWYgcGxheWVyIGhhcyByZXNvbHZlZCB0aGUgZ2FtZS4gKi9cbiAgUHJvY3Jhc3RpbmF0aW9uVGFzay5wcm90b3R5cGUucmVzb2x2ZWQgPSBmYWxzZTtcblxuICAvLyBTRVRUSU5HU1xuXG4gIC8qKiBAdmFyIHtib29sZWFufSBzZXR0aW5nIERlc2NyaXB0aW9uLiAqL1xuICBQcm9jcmFzdGluYXRpb25UYXNrLnByb3RvdHlwZS5zZXR0aW5nID0gbnVsbDtcblxuICAvL1xuICAvLyBNRVRIT0RTXG4gIC8vXG5cbiAgLyoqXG4gICAqIFByb3hpZXMgdG8gYGluaXQoKWAgaWYgY29udHJvbGxlcidzIHJlYWR5LlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgJG9uSW5pdFxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgUHJvY3Jhc3RpbmF0aW9uVGFzay5wcm90b3R5cGUuJG9uSW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuaW5pdCgpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZXRyaWV2ZXMgcmVzdWx0IHBheWxvYWQgZm9yIHNlcnZlci5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIGdldFBheWxvYWRcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIFByb2NyYXN0aW5hdGlvblRhc2sucHJvdG90eXBlLmdldFBheWxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdGFzazogdGhpcy50YXNrLFxuICAgICAganNvbjoge1xuICAgICAgfVxuICAgIH07XG4gIH07XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgb3Igbm90IHRhc2sgaXMgY3VycmVudGx5IGxvY2tlZC5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIGlzTG9ja2VkXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBQcm9jcmFzdGluYXRpb25UYXNrLnByb3RvdHlwZS5pc0xvY2tlZCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLnRhc2sgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiAhdGhpcy50YXNrLmlzQWN0aXZlO1xuICB9O1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0YXNrIGNhbiBiZSBzZW50IHRvIHNlcnZlci5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIGNhblJlc29sdmVcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIFByb2NyYXN0aW5hdGlvblRhc2sucHJvdG90eXBlLmNhblJlc29sdmUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdXNlciA9IHRoaXMuJGluamVjdG9yLmdldCgndXNlcicpO1xuICAgIGlmICghdXNlci5pc1VzZXIoKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmlzTG9ja2VkKCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5yZXNvbHZlZCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5jaG9pY2UpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcblxuICAvKipcbiAgICogU2V0cyB1cCBpbml0aWFsIHN0YXRlLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgaW5pdFxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgUHJvY3Jhc3RpbmF0aW9uVGFzay5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVzb2x2ZWQgPSBmYWxzZTtcbiAgfTtcblxuICAvKipcbiAgICogUmVzZXRzIGluaXRpYWwgc3RhdGUuXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCByZXNldFxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgUHJvY3Jhc3RpbmF0aW9uVGFzay5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuaW5pdCgpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBEZXNjcmlwdGlvbi5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgUHJvY3Jhc3RpbmF0aW9uVGFzay5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnJlc29sdmUoKTtcbiAgfTtcblxuICAvKipcbiAgICogU2V0cyBgcmVzb2x2ZWRgIGZsYWcuIENhbGxzIGBvblJlc29sdmVgXG4gICAqIGNhbGxiYWNrIHdpdGggSlNPTiByZXN1bHQgZm9yIGNvbnN1bWVyLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgcmVzb2x2ZVxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgUHJvY3Jhc3RpbmF0aW9uVGFzay5wcm90b3R5cGUucmVzb2x2ZSA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyICRxID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCckcScpO1xuXG4gICAgdmFyIHJlc3VsdCA9IHRoaXMub25SZXNvbHZlKHtcbiAgICAgIHBheWxvYWQ6IHRoaXMuZ2V0UGF5bG9hZCgpXG4gICAgfSk7XG5cbiAgICB2YXIgbWUgPSB0aGlzO1xuICAgIHZhciBzdWNjZXNzQ2FsbGJhY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgIG1lLnJlc29sdmVkID0gdHJ1ZTtcbiAgICB9O1xuICAgIHZhciBmYWlsdXJlQ2FsbGJhY2sgPSBmdW5jdGlvbigpIHtcblxuICAgIH07XG5cbiAgICB2YXIgcHJvbWlzZSA9ICRxLndoZW4ocmVzdWx0KTtcbiAgICBwcm9taXNlLnRoZW4oXG4gICAgICBzdWNjZXNzQ2FsbGJhY2ssXG4gICAgICBmYWlsdXJlQ2FsbGJhY2tcbiAgICApO1xuXG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH07XG5cbiAgLy9cbiAgLy8gUkVHSVNUUllcbiAgLy9cbiAgYW5ndWxhci5tb2R1bGUobW9kdWxlKS5kaXJlY3RpdmUoJ3Byb2NyYXN0aW5hdGlvblRhc2snLCBmdW5jdGlvbigpe1xuICAgIHJldHVybiB7XG4gICAgICBzY29wZToge1xuICAgICAgICBvblJlc29sdmU6ICcmcHJvY3Jhc3RpbmF0aW9uVGFza09uUmVzb2x2ZSdcbiAgICAgIH0sXG4gICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICAgIGNvbnRyb2xsZXI6IFByb2NyYXN0aW5hdGlvblRhc2ssXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlLFxuICAgICAgY29udHJvbGxlckFzOiAncHJvY3Jhc3RpbmF0aW9uVGFza0NvbnRyb2xsZXInLFxuICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9kaXJlY3RpdmVzL3Rhc2tzL3Byb2NyYXN0aW5hdGlvbi10YXNrLmh0bWwnXG4gICAgfTtcbiAgfSk7XG5cbn0pKEFOR1VMQVJfTU9EVUxFLCBhbmd1bGFyKTtcbiJdfQ==
