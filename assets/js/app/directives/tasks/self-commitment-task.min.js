/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,e){"use strict";var o=function(t,e,o,n){var s=n.get("TYPE_SELF_COMMITMENT"),i=n.get("user");this.$injector=n,this.task=i.getTaskByType(s)};o.$inject=["$scope","$element","$attrs","$injector"],o.prototype.task=null,o.prototype.resolved=!1,o.prototype.$onInit=function(){this.init()},o.prototype.getPayload=function(){return{task:this.task,json:null}},o.prototype.isLocked=function(){return null===this.task||!this.task.isActive},o.prototype.canResolve=function(){var t=this.$injector.get("user");return!!t.isUser()&&(!this.isLocked()&&!this.resolved)},o.prototype.init=function(){this.resolved=!1},o.prototype.reset=function(){this.init()},o.prototype.update=function(){this.resolve()},o.prototype.resolve=function(){var t=this.$injector.get("$q"),e=this.onResolve({payload:this.getPayload()}),o=this,n=function(){o.resolved=!0},s=function(){},i=t.when(e);return i.then(n,s),i},e.module(t).directive("selfCommitmentTask",function(){return{scope:{onResolve:"&selfCommitmentTaskOnResolve"},restrict:"A",transclude:!0,bindToController:!0,controller:o,controllerAs:"selfCommitmentTaskController",templateUrl:"views/directives/tasks/self-commitment-task.html"}})}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kaXJlY3RpdmVzL3Rhc2tzL3NlbGYtY29tbWl0bWVudC10YXNrLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImFuZ3VsYXIiLCJTZWxmQ29tbWl0bWVudFRhc2siLCIkc2NvcGUiLCIkZWxlbW50IiwiJGF0dHJzIiwiJGluamVjdG9yIiwidHlwZSIsImdldCIsInVzZXIiLCJ0aGlzIiwidGFzayIsImdldFRhc2tCeVR5cGUiLCIkaW5qZWN0IiwicHJvdG90eXBlIiwicmVzb2x2ZWQiLCIkb25Jbml0IiwiaW5pdCIsImdldFBheWxvYWQiLCJqc29uIiwiaXNMb2NrZWQiLCJpc0FjdGl2ZSIsImNhblJlc29sdmUiLCJpc1VzZXIiLCJyZXNldCIsInVwZGF0ZSIsInJlc29sdmUiLCIkcSIsInJlc3VsdCIsIm9uUmVzb2x2ZSIsInBheWxvYWQiLCJtZSIsInN1Y2Nlc3NDYWxsYmFjayIsImZhaWx1cmVDYWxsYmFjayIsInByb21pc2UiLCJ3aGVuIiwidGhlbiIsImRpcmVjdGl2ZSIsInNjb3BlIiwicmVzdHJpY3QiLCJ0cmFuc2NsdWRlIiwiYmluZFRvQ29udHJvbGxlciIsImNvbnRyb2xsZXIiLCJjb250cm9sbGVyQXMiLCJ0ZW1wbGF0ZVVybCIsIkFOR1VMQVJfTU9EVUxFIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztDQVNBLFNBQVVBLEVBQVFDLEdBQ2hCLFlBYUEsSUFBSUMsR0FBcUIsU0FBU0MsRUFBUUMsRUFBU0MsRUFBUUMsR0FDekQsR0FBSUMsR0FBT0QsRUFBVUUsSUFBSSx3QkFDckJDLEVBQU9ILEVBQVVFLElBQUksT0FFekJFLE1BQUtKLFVBQVlBLEVBQ2pCSSxLQUFLQyxLQUFPRixFQUFLRyxjQUFjTCxHQUdqQ0wsR0FBbUJXLFNBQVcsU0FBUyxXQUFXLFNBQVUsYUFLNURYLEVBQW1CWSxVQUFVSCxLQUFPLEtBS3BDVCxFQUFtQlksVUFBVUMsVUFBVyxFQWF4Q2IsRUFBbUJZLFVBQVVFLFFBQVUsV0FDckNOLEtBQUtPLFFBVVBmLEVBQW1CWSxVQUFVSSxXQUFhLFdBQ3hDLE9BQ0VQLEtBQU1ELEtBQUtDLEtBQ1hRLEtBQU0sT0FXVmpCLEVBQW1CWSxVQUFVTSxTQUFXLFdBQ3RDLE1BQWtCLFFBQWRWLEtBQUtDLE9BSURELEtBQUtDLEtBQUtVLFVBVXBCbkIsRUFBbUJZLFVBQVVRLFdBQWEsV0FDeEMsR0FBSWIsR0FBT0MsS0FBS0osVUFBVUUsSUFBSSxPQUM5QixTQUFLQyxFQUFLYyxZQUlOYixLQUFLVSxhQUlMVixLQUFLSyxXQWNYYixFQUFtQlksVUFBVUcsS0FBTyxXQUNsQ1AsS0FBS0ssVUFBVyxHQVVsQmIsRUFBbUJZLFVBQVVVLE1BQVEsV0FDbkNkLEtBQUtPLFFBVVBmLEVBQW1CWSxVQUFVVyxPQUFTLFdBQ3BDZixLQUFLZ0IsV0FXUHhCLEVBQW1CWSxVQUFVWSxRQUFVLFdBQ3JDLEdBQUlDLEdBQUtqQixLQUFLSixVQUFVRSxJQUFJLE1BRXhCb0IsRUFBU2xCLEtBQUttQixXQUNoQkMsUUFBU3BCLEtBQUtRLGVBR1phLEVBQUtyQixLQUNMc0IsRUFBa0IsV0FDcEJELEVBQUdoQixVQUFXLEdBRVprQixFQUFrQixhQUlsQkMsRUFBVVAsRUFBR1EsS0FBS1AsRUFNdEIsT0FMQU0sR0FBUUUsS0FDTkosRUFDQUMsR0FHS0MsR0FNVGpDLEVBQVFELE9BQU9BLEdBQVFxQyxVQUFVLHFCQUFzQixXQUNyRCxPQUNFQyxPQUNFVCxVQUFXLGdDQUViVSxTQUFVLElBQ1ZDLFlBQVksRUFDWkMsa0JBQWtCLEVBQ2xCQyxXQUFZeEMsRUFDWnlDLGFBQWMsK0JBQ2RDLFlBQWEsdURBSWhCQyxlQUFnQjVDIiwiZmlsZSI6ImFwcC9kaXJlY3RpdmVzL3Rhc2tzL3NlbGYtY29tbWl0bWVudC10YXNrLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBBTkdVTEFSX01PRFVMRSwgYW5ndWxhciAqL1xuKGZ1bmN0aW9uKG1vZHVsZSwgYW5ndWxhcikge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gU2VsZkNvbW1pdG1lbnRUYXNrXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLy9cbiAgLy8gQ09OVFJPTExFUlxuICAvL1xuXG4gIC8qKlxuICAgKiBAY29uc3RydWN0b3JcbiAgICovXG4gIHZhciBTZWxmQ29tbWl0bWVudFRhc2sgPSBmdW5jdGlvbigkc2NvcGUsICRlbGVtbnQsICRhdHRycywgJGluamVjdG9yKSB7XG4gICAgdmFyIHR5cGUgPSAkaW5qZWN0b3IuZ2V0KCdUWVBFX1NFTEZfQ09NTUlUTUVOVCcpO1xuICAgIHZhciB1c2VyID0gJGluamVjdG9yLmdldCgndXNlcicpO1xuXG4gICAgdGhpcy4kaW5qZWN0b3IgPSAkaW5qZWN0b3I7XG4gICAgdGhpcy50YXNrID0gdXNlci5nZXRUYXNrQnlUeXBlKHR5cGUpO1xuICB9O1xuXG4gIFNlbGZDb21taXRtZW50VGFzay4kaW5qZWN0ID0gWyckc2NvcGUnLCckZWxlbWVudCcsJyRhdHRycycsICckaW5qZWN0b3InXTtcblxuICAvLyBTRVJWRVJcblxuICAvKiogQHZhciB7b2JqZWN0fSB0YXNrIFRhc2sncyByZXNvdXJjZSBmcm9tIHNlcnZlci4gKi9cbiAgU2VsZkNvbW1pdG1lbnRUYXNrLnByb3RvdHlwZS50YXNrID0gbnVsbDtcblxuICAvLyBHQU1FUExBWVxuXG4gIC8qKiBAdmFyIHtib29sZWFufSByZXNvbHZlZCBJZiBwbGF5ZXIgaGFzIHJlc29sdmVkIHRoZSBnYW1lLiAqL1xuICBTZWxmQ29tbWl0bWVudFRhc2sucHJvdG90eXBlLnJlc29sdmVkID0gZmFsc2U7XG5cbiAgLy9cbiAgLy8gTUVUSE9EU1xuICAvL1xuXG4gIC8qKlxuICAgKiBQcm94aWVzIHRvIGBpbml0KClgIGlmIGNvbnRyb2xsZXIncyByZWFkeS5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kICRvbkluaXRcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIFNlbGZDb21taXRtZW50VGFzay5wcm90b3R5cGUuJG9uSW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuaW5pdCgpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZXRyaWV2ZXMgcmVzdWx0IHBheWxvYWQgZm9yIHNlcnZlci5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIGdldFBheWxvYWRcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIFNlbGZDb21taXRtZW50VGFzay5wcm90b3R5cGUuZ2V0UGF5bG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0YXNrOiB0aGlzLnRhc2ssXG4gICAgICBqc29uOiBudWxsXG4gICAgfTtcbiAgfTtcblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdGFzayBpcyBjdXJyZW50bHkgbG9ja2VkLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgaXNMb2NrZWRcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIFNlbGZDb21taXRtZW50VGFzay5wcm90b3R5cGUuaXNMb2NrZWQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy50YXNrID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gIXRoaXMudGFzay5pc0FjdGl2ZTtcbiAgfTtcblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdGFzayBjYW4gYmUgc2VudCB0byBzZXJ2ZXIuXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCBjYW5SZXNvbHZlXG4gICAqIEByZXR1cm4ge2Jvb2xlYW59XG4gICAqL1xuICBTZWxmQ29tbWl0bWVudFRhc2sucHJvdG90eXBlLmNhblJlc29sdmUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdXNlciA9IHRoaXMuJGluamVjdG9yLmdldCgndXNlcicpO1xuICAgIGlmICghdXNlci5pc1VzZXIoKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmlzTG9ja2VkKCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5yZXNvbHZlZCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9O1xuXG4gIC8qKlxuICAgKiBTZXRzIHVwIGluaXRpYWwgc3RhdGUuXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCBpbml0XG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBTZWxmQ29tbWl0bWVudFRhc2sucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnJlc29sdmVkID0gZmFsc2U7XG4gIH07XG5cbiAgLyoqXG4gICAqIFJlc2V0cyBpbml0aWFsIHN0YXRlLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgcmVzZXRcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIFNlbGZDb21taXRtZW50VGFzay5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuaW5pdCgpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBEZXNjcmlwdGlvbi5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgU2VsZkNvbW1pdG1lbnRUYXNrLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMucmVzb2x2ZSgpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBTZXRzIGByZXNvbHZlZGAgZmxhZy4gQ2FsbHMgYG9uUmVzb2x2ZWBcbiAgICogY2FsbGJhY2sgd2l0aCBKU09OIHJlc3VsdCBmb3IgY29uc3VtZXIuXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCByZXNvbHZlXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBTZWxmQ29tbWl0bWVudFRhc2sucHJvdG90eXBlLnJlc29sdmUgPSBmdW5jdGlvbigpe1xuICAgIHZhciAkcSA9IHRoaXMuJGluamVjdG9yLmdldCgnJHEnKTtcblxuICAgIHZhciByZXN1bHQgPSB0aGlzLm9uUmVzb2x2ZSh7XG4gICAgICBwYXlsb2FkOiB0aGlzLmdldFBheWxvYWQoKVxuICAgIH0pO1xuXG4gICAgdmFyIG1lID0gdGhpcztcbiAgICB2YXIgc3VjY2Vzc0NhbGxiYWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICBtZS5yZXNvbHZlZCA9IHRydWU7XG4gICAgfTtcbiAgICB2YXIgZmFpbHVyZUNhbGxiYWNrID0gZnVuY3Rpb24oKSB7XG5cbiAgICB9O1xuXG4gICAgdmFyIHByb21pc2UgPSAkcS53aGVuKHJlc3VsdCk7XG4gICAgcHJvbWlzZS50aGVuKFxuICAgICAgc3VjY2Vzc0NhbGxiYWNrLFxuICAgICAgZmFpbHVyZUNhbGxiYWNrXG4gICAgKTtcblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9O1xuXG4gIC8vXG4gIC8vIFJFR0lTVFJZXG4gIC8vXG4gIGFuZ3VsYXIubW9kdWxlKG1vZHVsZSkuZGlyZWN0aXZlKCdzZWxmQ29tbWl0bWVudFRhc2snLCBmdW5jdGlvbigpe1xuICAgIHJldHVybiB7XG4gICAgICBzY29wZToge1xuICAgICAgICBvblJlc29sdmU6ICcmc2VsZkNvbW1pdG1lbnRUYXNrT25SZXNvbHZlJ1xuICAgICAgfSxcbiAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICB0cmFuc2NsdWRlOiB0cnVlLFxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZSxcbiAgICAgIGNvbnRyb2xsZXI6IFNlbGZDb21taXRtZW50VGFzayxcbiAgICAgIGNvbnRyb2xsZXJBczogJ3NlbGZDb21taXRtZW50VGFza0NvbnRyb2xsZXInLFxuICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9kaXJlY3RpdmVzL3Rhc2tzL3NlbGYtY29tbWl0bWVudC10YXNrLmh0bWwnXG4gICAgfTtcbiAgfSk7XG5cbn0pKEFOR1VMQVJfTU9EVUxFLCBhbmd1bGFyKTtcbiJdfQ==
