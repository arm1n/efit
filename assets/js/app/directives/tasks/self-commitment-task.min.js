/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,e){"use strict";var o=function(t,e,o,n){var s=n.get("TYPE_SELF_COMMITMENT"),i=n.get("user");this.$injector=n,this.task=i.getTaskByType(s)};o.$inject=["$scope","$element","$attrs","$injector"],o.prototype.task=null,o.prototype.resolved=!1,o.prototype.$onInit=function(){this.init()},o.prototype.getPayload=function(){return{task:this.task,json:{}}},o.prototype.isLocked=function(){return null===this.task||!this.task.isActive},o.prototype.canResolve=function(){var t=this.$injector.get("user");return!!t.isUser()&&(!this.isLocked()&&!this.resolved)},o.prototype.init=function(){this.resolved=!1},o.prototype.reset=function(){this.init()},o.prototype.update=function(){this.resolve()},o.prototype.resolve=function(){var t=this.$injector.get("$q"),e=this.onResolve({payload:this.getPayload()}),o=this,n=function(){o.resolved=!0},s=function(){},i=t.when(e);return i.then(n,s),i},e.module(t).directive("selfCommitmentTask",function(){return{scope:{onResolve:"&selfCommitmentTaskOnResolve"},restrict:"A",transclude:!0,bindToController:!0,controller:o,controllerAs:"selfCommitmentTaskController",templateUrl:"views/directives/tasks/self-commitment-task.html"}})}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kaXJlY3RpdmVzL3Rhc2tzL3NlbGYtY29tbWl0bWVudC10YXNrLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImFuZ3VsYXIiLCJTZWxmQ29tbWl0bWVudFRhc2siLCIkc2NvcGUiLCIkZWxlbW50IiwiJGF0dHJzIiwiJGluamVjdG9yIiwidHlwZSIsImdldCIsInVzZXIiLCJ0aGlzIiwidGFzayIsImdldFRhc2tCeVR5cGUiLCIkaW5qZWN0IiwicHJvdG90eXBlIiwicmVzb2x2ZWQiLCIkb25Jbml0IiwiaW5pdCIsImdldFBheWxvYWQiLCJqc29uIiwiaXNMb2NrZWQiLCJpc0FjdGl2ZSIsImNhblJlc29sdmUiLCJpc1VzZXIiLCJyZXNldCIsInVwZGF0ZSIsInJlc29sdmUiLCIkcSIsInJlc3VsdCIsIm9uUmVzb2x2ZSIsInBheWxvYWQiLCJtZSIsInN1Y2Nlc3NDYWxsYmFjayIsImZhaWx1cmVDYWxsYmFjayIsInByb21pc2UiLCJ3aGVuIiwidGhlbiIsImRpcmVjdGl2ZSIsInNjb3BlIiwicmVzdHJpY3QiLCJ0cmFuc2NsdWRlIiwiYmluZFRvQ29udHJvbGxlciIsImNvbnRyb2xsZXIiLCJjb250cm9sbGVyQXMiLCJ0ZW1wbGF0ZVVybCIsIkFOR1VMQVJfTU9EVUxFIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztDQVNBLFNBQVVBLEVBQVFDLEdBQ2hCLFlBYUEsSUFBSUMsR0FBcUIsU0FBU0MsRUFBUUMsRUFBU0MsRUFBUUMsR0FDekQsR0FBSUMsR0FBT0QsRUFBVUUsSUFBSSx3QkFDckJDLEVBQU9ILEVBQVVFLElBQUksT0FFekJFLE1BQUtKLFVBQVlBLEVBQ2pCSSxLQUFLQyxLQUFPRixFQUFLRyxjQUFjTCxHQUdqQ0wsR0FBbUJXLFNBQVcsU0FBUyxXQUFXLFNBQVUsYUFLNURYLEVBQW1CWSxVQUFVSCxLQUFPLEtBS3BDVCxFQUFtQlksVUFBVUMsVUFBVyxFQWF4Q2IsRUFBbUJZLFVBQVVFLFFBQVUsV0FDckNOLEtBQUtPLFFBVVBmLEVBQW1CWSxVQUFVSSxXQUFhLFdBQ3hDLE9BQ0VQLEtBQU1ELEtBQUtDLEtBQ1hRLFVBV0pqQixFQUFtQlksVUFBVU0sU0FBVyxXQUN0QyxNQUFrQixRQUFkVixLQUFLQyxPQUlERCxLQUFLQyxLQUFLVSxVQVVwQm5CLEVBQW1CWSxVQUFVUSxXQUFhLFdBQ3hDLEdBQUliLEdBQU9DLEtBQUtKLFVBQVVFLElBQUksT0FDOUIsU0FBS0MsRUFBS2MsWUFJTmIsS0FBS1UsYUFJTFYsS0FBS0ssV0FjWGIsRUFBbUJZLFVBQVVHLEtBQU8sV0FDbENQLEtBQUtLLFVBQVcsR0FVbEJiLEVBQW1CWSxVQUFVVSxNQUFRLFdBQ25DZCxLQUFLTyxRQVVQZixFQUFtQlksVUFBVVcsT0FBUyxXQUNwQ2YsS0FBS2dCLFdBV1B4QixFQUFtQlksVUFBVVksUUFBVSxXQUNyQyxHQUFJQyxHQUFLakIsS0FBS0osVUFBVUUsSUFBSSxNQUV4Qm9CLEVBQVNsQixLQUFLbUIsV0FDaEJDLFFBQVNwQixLQUFLUSxlQUdaYSxFQUFLckIsS0FDTHNCLEVBQWtCLFdBQ3BCRCxFQUFHaEIsVUFBVyxHQUVaa0IsRUFBa0IsYUFJbEJDLEVBQVVQLEVBQUdRLEtBQUtQLEVBTXRCLE9BTEFNLEdBQVFFLEtBQ05KLEVBQ0FDLEdBR0tDLEdBTVRqQyxFQUFRRCxPQUFPQSxHQUFRcUMsVUFBVSxxQkFBc0IsV0FDckQsT0FDRUMsT0FDRVQsVUFBVyxnQ0FFYlUsU0FBVSxJQUNWQyxZQUFZLEVBQ1pDLGtCQUFrQixFQUNsQkMsV0FBWXhDLEVBQ1p5QyxhQUFjLCtCQUNkQyxZQUFhLHVEQUloQkMsZUFBZ0I1QyIsImZpbGUiOiJhcHAvZGlyZWN0aXZlcy90YXNrcy9zZWxmLWNvbW1pdG1lbnQtdGFzay5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgQU5HVUxBUl9NT0RVTEUsIGFuZ3VsYXIgKi9cbihmdW5jdGlvbihtb2R1bGUsIGFuZ3VsYXIpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFNlbGZDb21taXRtZW50VGFza1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vXG4gIC8vIENPTlRST0xMRVJcbiAgLy9cblxuICAvKipcbiAgICogQGNvbnN0cnVjdG9yXG4gICAqL1xuICB2YXIgU2VsZkNvbW1pdG1lbnRUYXNrID0gZnVuY3Rpb24oJHNjb3BlLCAkZWxlbW50LCAkYXR0cnMsICRpbmplY3Rvcikge1xuICAgIHZhciB0eXBlID0gJGluamVjdG9yLmdldCgnVFlQRV9TRUxGX0NPTU1JVE1FTlQnKTtcbiAgICB2YXIgdXNlciA9ICRpbmplY3Rvci5nZXQoJ3VzZXInKTtcblxuICAgIHRoaXMuJGluamVjdG9yID0gJGluamVjdG9yO1xuICAgIHRoaXMudGFzayA9IHVzZXIuZ2V0VGFza0J5VHlwZSh0eXBlKTtcbiAgfTtcblxuICBTZWxmQ29tbWl0bWVudFRhc2suJGluamVjdCA9IFsnJHNjb3BlJywnJGVsZW1lbnQnLCckYXR0cnMnLCAnJGluamVjdG9yJ107XG5cbiAgLy8gU0VSVkVSXG5cbiAgLyoqIEB2YXIge29iamVjdH0gdGFzayBUYXNrJ3MgcmVzb3VyY2UgZnJvbSBzZXJ2ZXIuICovXG4gIFNlbGZDb21taXRtZW50VGFzay5wcm90b3R5cGUudGFzayA9IG51bGw7XG5cbiAgLy8gR0FNRVBMQVlcblxuICAvKiogQHZhciB7Ym9vbGVhbn0gcmVzb2x2ZWQgSWYgcGxheWVyIGhhcyByZXNvbHZlZCB0aGUgZ2FtZS4gKi9cbiAgU2VsZkNvbW1pdG1lbnRUYXNrLnByb3RvdHlwZS5yZXNvbHZlZCA9IGZhbHNlO1xuXG4gIC8vXG4gIC8vIE1FVEhPRFNcbiAgLy9cblxuICAvKipcbiAgICogUHJveGllcyB0byBgaW5pdCgpYCBpZiBjb250cm9sbGVyJ3MgcmVhZHkuXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCAkb25Jbml0XG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBTZWxmQ29tbWl0bWVudFRhc2sucHJvdG90eXBlLiRvbkluaXQgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmluaXQoKTtcbiAgfTtcblxuICAvKipcbiAgICogUmV0cmlldmVzIHJlc3VsdCBwYXlsb2FkIGZvciBzZXJ2ZXIuXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCBnZXRQYXlsb2FkXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBTZWxmQ29tbWl0bWVudFRhc2sucHJvdG90eXBlLmdldFBheWxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdGFzazogdGhpcy50YXNrLFxuICAgICAganNvbjoge31cbiAgICB9O1xuICB9O1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0YXNrIGlzIGN1cnJlbnRseSBsb2NrZWQuXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCBpc0xvY2tlZFxuICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgKi9cbiAgU2VsZkNvbW1pdG1lbnRUYXNrLnByb3RvdHlwZS5pc0xvY2tlZCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLnRhc2sgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiAhdGhpcy50YXNrLmlzQWN0aXZlO1xuICB9O1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0YXNrIGNhbiBiZSBzZW50IHRvIHNlcnZlci5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIGNhblJlc29sdmVcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICovXG4gIFNlbGZDb21taXRtZW50VGFzay5wcm90b3R5cGUuY2FuUmVzb2x2ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB1c2VyID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCd1c2VyJyk7XG4gICAgaWYgKCF1c2VyLmlzVXNlcigpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaXNMb2NrZWQoKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnJlc29sdmVkKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH07XG5cbiAgLyoqXG4gICAqIFNldHMgdXAgaW5pdGlhbCBzdGF0ZS5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIGluaXRcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIFNlbGZDb21taXRtZW50VGFzay5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVzb2x2ZWQgPSBmYWxzZTtcbiAgfTtcblxuICAvKipcbiAgICogUmVzZXRzIGluaXRpYWwgc3RhdGUuXG4gICAqXG4gICAqIEBwdWJsaWNcbiAgICogQG1ldGhvZCByZXNldFxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgU2VsZkNvbW1pdG1lbnRUYXNrLnByb3RvdHlwZS5yZXNldCA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5pbml0KCk7XG4gIH07XG5cbiAgLyoqXG4gICAqIERlc2NyaXB0aW9uLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgdXBkYXRlXG4gICAqIEByZXR1cm4ge3ZvaWR9XG4gICAqL1xuICBTZWxmQ29tbWl0bWVudFRhc2sucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5yZXNvbHZlKCk7XG4gIH07XG5cbiAgLyoqXG4gICAqIFNldHMgYHJlc29sdmVkYCBmbGFnLiBDYWxscyBgb25SZXNvbHZlYFxuICAgKiBjYWxsYmFjayB3aXRoIEpTT04gcmVzdWx0IGZvciBjb25zdW1lci5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIHJlc29sdmVcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIFNlbGZDb21taXRtZW50VGFzay5wcm90b3R5cGUucmVzb2x2ZSA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyICRxID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCckcScpO1xuXG4gICAgdmFyIHJlc3VsdCA9IHRoaXMub25SZXNvbHZlKHtcbiAgICAgIHBheWxvYWQ6IHRoaXMuZ2V0UGF5bG9hZCgpXG4gICAgfSk7XG5cbiAgICB2YXIgbWUgPSB0aGlzO1xuICAgIHZhciBzdWNjZXNzQ2FsbGJhY2sgPSBmdW5jdGlvbigpIHtcbiAgICAgIG1lLnJlc29sdmVkID0gdHJ1ZTtcbiAgICB9O1xuICAgIHZhciBmYWlsdXJlQ2FsbGJhY2sgPSBmdW5jdGlvbigpIHtcblxuICAgIH07XG5cbiAgICB2YXIgcHJvbWlzZSA9ICRxLndoZW4ocmVzdWx0KTtcbiAgICBwcm9taXNlLnRoZW4oXG4gICAgICBzdWNjZXNzQ2FsbGJhY2ssXG4gICAgICBmYWlsdXJlQ2FsbGJhY2tcbiAgICApO1xuXG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH07XG5cbiAgLy9cbiAgLy8gUkVHSVNUUllcbiAgLy9cbiAgYW5ndWxhci5tb2R1bGUobW9kdWxlKS5kaXJlY3RpdmUoJ3NlbGZDb21taXRtZW50VGFzaycsIGZ1bmN0aW9uKCl7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNjb3BlOiB7XG4gICAgICAgIG9uUmVzb2x2ZTogJyZzZWxmQ29tbWl0bWVudFRhc2tPblJlc29sdmUnXG4gICAgICB9LFxuICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgIHRyYW5zY2x1ZGU6IHRydWUsXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlLFxuICAgICAgY29udHJvbGxlcjogU2VsZkNvbW1pdG1lbnRUYXNrLFxuICAgICAgY29udHJvbGxlckFzOiAnc2VsZkNvbW1pdG1lbnRUYXNrQ29udHJvbGxlcicsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2RpcmVjdGl2ZXMvdGFza3Mvc2VsZi1jb21taXRtZW50LXRhc2suaHRtbCdcbiAgICB9O1xuICB9KTtcblxufSkoQU5HVUxBUl9NT0RVTEUsIGFuZ3VsYXIpO1xuIl19
