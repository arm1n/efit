/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(e,o){"use strict";var n=function(e,o,n,t){this.$scope=e,this.$attrs=o,this.$element=n,this.$transclude=t,this._element=null,this._modal=null,this._scope=null};n.$inject=["$scope","$attrs","$element","$transclude"],n.prototype.isVisible=!1,n.prototype.$onInit=function(){var e=this;this._onShow=function(){e.$scope.$evalAsync(e.onShow)},this._onShown=function(){e.$scope.$evalAsync(e.onShown)},this._onBeforeShow=function(){e.$scope.$evalAsync(e.onBeforeShow)},this._onHide=function(){e.$scope.$evalAsync(e.onHide)},this._onHidden=function(){e.$scope.$evalAsync(function(){e.isVisible=!1,e.onHidden()})},this._onBeforeHide=function(){e.$scope.$evalAsync(e.onBeforeHide)},this._unwatch=this.$scope.$watch("modalController.isVisible",function(o){return o?void e.transclude():void e.destroy()})},n.prototype.$onDestroy=function(){this._unwatch(),this.destroy()},n.prototype.transclude=function(){var e=this,o=function(o,n){e._element=o,e._scope=n,e._element.on("show",e._onShow),e._element.on("shown",e._onShown),e._element.on("beforeshow",e._onBeforeShow),e._element.on("hide",e._onHide),e._element.on("hidden",e._onHidden),e._element.on("beforeHide",e._onBeforeHide),e.$element.append(o),e._modal=UIkit.modal(o),e._modal.show()};this.$transclude(o)},n.prototype.destroy=function(){null!==this._element&&(this._element.off("show",this._onShow),this._element.off("shown",this._onShown),this._element.off("beforeshow",this._onBeforeShow),this._element.off("hide",this._onHide),this._element.off("hidden",this._onHidden),this._element.off("beforeHide",this._onBeforeHide),this._element.remove(),this._element=null),null!==this._scope&&(this._scope.$destroy(),this._scope=null),null!==this._modal&&(this._modal.hide(),this._modal=null)},o.module(e).directive("modal",function(){return{scope:{isVisible:"=?modal",onShow:"&modalOnShow",onHide:"&modalOnHide",onShown:"&modalOnShown",onHidden:"&modalOnHidden",onBeforeShow:"&modalOnBeforeShow",onBeforeHide:"&modalOnBeforeHide"},restrict:"A",controller:n,transclude:"element",bindToController:!0,controllerAs:"modalController"}})}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
