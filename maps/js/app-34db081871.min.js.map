{"version":3,"sources":["js/app-34db081871.min.js"],"names":["global","angular","module","app","config","$locationProvider","$stateProvider","$urlRouterProvider","$httpProvider","$templateRequestProvider","$resourceProvider","$qProvider","VIEWS_PATH","html5Mode","hashPrefix","interceptors","push","errorOnUnhandledRejections","defaults","actions","get","method","list","isArray","update","create","delete","decorator","state","parent","newViewConfig","views","forEach","view","viewMatch","match","viewName","stateName","name","replace","templateUrl","join","httpOptions","skipAuthorization","url","abstract","resolve","translations","i18n","load","template","current","user","$state","promise","$promise","go","data","role","navbar@frontend","home@frontend","topics@frontend","financial-knowledge@frontend","financial-knowledge/interest-task@frontend","financial-knowledge/diversification-task@frontend","consumer-behaviour@frontend","consumer-behaviour/bomb-task@frontend","consumer-behaviour/anchoring-task@frontend","consumer-behaviour/mental-bookkeeping-task@frontend","consumer-behaviour/framing-task@frontend","self-control@frontend","self-control/savings-target-task@frontend","self-control/savings-supported-task@frontend","self-control/self-commitment-task@frontend","self-control/procrastination-task@frontend","status@frontend","contact@frontend","controller","controllerAs","footer@frontend","offcanvas@","@","isSuperAdmin","auth","$q","defer","successCallback","failureCallback","hasRole","then","redirectTo","main@backend","navbar@backend","footer@backend","workshops","Workshop","params","expand","value","dynamic","redirects","ROLE_ADMIN","admins","Admin","code","CODE_STORAGE_KEY","storage","proxy","getProxy","getItem","ROLE_USER","transition","$injector","injector","getAsync","resolvePolicy","when","ROLE_SUPER_ADMIN","otherwise","run","$transitions","$rootScope","appState","getUser","onStart","routerBusy","to","roles","indexOf","target","onError","onSuccess","$watch","isBusy","httpBusy","ANGULAR_MODULE","window","HttpInterceptor","this","_urls","$inject","prototype","getLastSuccessResponse","_lastSuccessResponse","getLastErrorResponse","_lastErrorResponse","getLastResponse","_lastResponse","getUrls","request","_setUrl","headers","token","Authorization","jwtToken","_getJWTToken","requestError","rejection","reject","response","_setLastSuccessResponse","_setLastResponse","responseError","_showGlobalErrorMessage","_setLastErrorResponse","_checkJWT","$httpParamSerializer","responseOrRejection","notification","skipGlobalErrorMessage","message","error","jwt","status","invalidate","getToken","isExpired","refresh","factory","httpInterceptor","instantiate","Notification","notify","options","UIkit","success","primary","warning","closeAll","service","AppState","routeBusy","Animation","animationEndEvent","dummy","document","createElement","events","WebkitAnimation","MozTAnimation","animation","key","event","style","undefined","transitionEndEvent","OTransition","MozTransition","WebkitTransition","translate","x","y","z","string","isUndefined","sprintf","webkitTransform","mozTransform","msTransform","oTransform","transform","requestAnimationFrame","lastTime","vendors","i","length","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","Math","max","timeout","id","setTimeout","bind","clearTimeout","Random","_spareRandomCache","between","min","fact","rand","random","floor","gaussian","mean","stdDev","spare","u","v","s","m","sqrt","log","pick","array","shuffle","temp","String","input","variables","slice","call","arguments","truncate","maxLength","substring","trim","toCamel","part","toUpperCase","toSpinal","toLowerCase","toSnake","Storage","MODE_COOKIES","MODE_STORAGE","mode","_getCookieProxy","_getLocalStorageProxy","supportsLocalStorage","$window","storageProxy","localStorage","val","setItem","removeItem","e","_encode","JSON","stringify","encodeURIComponent","_decode","decoded","decodeURIComponent","parse","documentProxy","me","_getAll","items","cookies","cookie","split","setCookie","expires","domain","path","secure","date","isNaN","Error","toUTCString","getCookie","hasOwnProperty","getAllCookies","removeCookie","removeAllCookies","getAllItems","removeAllItems","clear","Auth","signup","firewall","$http","_saveToken","_getSignupUrl","post","_username","username","_password","password","extend","signin","_getSigninUrl","signout","unload","_getSignoutUrl","_getRefereshUrl","refresh_token","getRefreshToken","acceptExpired","decode","resolveRole","isString","setRefreshToken","setToken","API_URL","I18N","setLocale","_detectLocale","locales","de","defaultLocale","locale","getLocale","$log","_getJSONUrl","text","language","navigator","android","userAgent","userLanguage","systemLanguage","browserLanguage","substr","JWT","tokenKey","refreshKey","removeRefreshToken","removeToken","refreshToken","getExpirationDate","exp","setUTCSeconds","offset","now","valueOf","parts","_base64Decode","fromJson","output","atob","escaped","escape","User","_states","_eventSource","_results","_payload","_pending","_tasks","group","tickets","toJSON","_initTickets","_initState","_initGroup","isUser","_initWatches","_initTasks","_initPending","_initResults","_initSSE","sse","removeSource","_unwatchTickets","_unwatchState","result","_addResult","isAdmin","isInWorkshop","workshop","isActive","getTasks","getTaskByType","type","getPendingByType","getGroupAsString","getStateAsString","STATE_BEGINNER","_watchStateExpression","_watchStateCallback","newState","oldState","_watchTicketsExpression","_watchTicketsCallback","newTickets","oldTickets","oldCount","newCount","$watchCollection","_onMessage","$evalAsync","item","unix","updatedAt","task","onMessage","sleep","addSource","tasks","pending","results","$$results","Mail","send","_getPostUrl","_name","_mail","email","_subject","subject","_message","SSE","_sources","retry","_buildUrl","source","EventSource","onmessage","onerror","close","CardContainer","cards","canToggle","add","card","set","selected","directive","scope","restrict","bindToController","Card","$scope","$element","$attrs","$transclude","$id","hasIcon","isSlotFilled","disabled","isCheckbox","$onInit","cardContainer","click","$event","stopPropagation","preventDefault","changed","onClick","transclude","title","icon","buttons","require","Chart","_chart","_getOptions","labels","_getLabels","series","_getData","_render","$onDestroy","detach","mapResults","GROUP_A","GROUP_B","map","choice1","choice2","count","json","num","choice","groupA","groupB","choice3","choice4","SPLIT","ALL","failure","all","seriesBarDistance","chartPadding","top","left","right","bottom","axisY","labelInterpolationFnc","ticks","Chartist","FixedScaleAxis","high","low","plugins","legend","legendNames","$timeout","addClass","element","render","Bar","Modal","_element","_modal","_scope","isVisible","_onShow","onShow","_onShown","onShown","_onBeforeShow","onBeforeShow","_onHide","onHide","_onHidden","onHidden","_onBeforeHide","onBeforeHide","_unwatch","destroy","clone","on","append","modal","show","off","remove","$destroy","hide","Video","_player","find","_onReady","_onStateChange","width","height","videoId","_watchAPIExpression","YOUTUBE_API_LOADED","_watchAPICallback","isReady","_unwatchAPI","getStyle","padding-bottom","YT","Player","onStateChange","PlayerState","PLAYING","onPlaying","PAUSED","onPaused","ENDED","onEnded","CUED","onCued","onBuffering","Status","iconRatio","isCompact","iconColor","tasksVisible","ticketsVisible","_watchTasksExpression","_watchTasksCallback","_unwatchTasks","toggleTasks","toggleTickets","StatusIcons","ratio","color","isBeginner","isAmateuer","isAdvanced","isExpert","isProfi","STATE_AMATEUR","STATE_ADVANCED","STATE_EXPERT","_watchExpression","_watchCallback","isAmateur","StatusLabel","StatusTickets","Tabber","domId","hasExercise","activeTab","setActive","tab","exercise","description","Draggable","_body","_clone","_coordinates","_interactable","_activeClass","_itemClass","_disabledClass","removeClass","draggable","enabled","_onResize","restriction","body","interact","inertia","autoScroll","onend","_onEndItem","onmove","_onMoveItem","onstart","_onStartItem","snap","targets","interaction","_origin","startCoords","page","dropTarget","endOnly","manualStart","_onMove","getData","_window","_resize","unset","_trigger","$data","dx","dy","_translate","dropped","interactable","currentTarget","pointerIsDown","interacting","offsetY","clientHeight","offsetX","clientWidth","pageY","touches","pageX","css","position","start","args","onDragStart","onDragMove","onDragEnd","onDrop","Dropable","_enterClass","_acceptClass","accept","dropzone","ondrop","_onDrop","ondragenter","_onDragEnter","ondragleave","_onDragLeave","ondropactivate","_onDropActivate","ondropdeactivate","_onDropDeactivate","onDropDeactivate","onDropActivate","onDragEnter","onDragLeave","Accordion","_accordion","_collapsibles","_init","_onCollapsibleClicked","_unlistenCollapsible","addCollapsible","collapsible","$on","accordion","evt","sender","iterate","index","senderId","itemId","open","toggle","Collapsible","defaultId","$broadcast","content","ScrollTo","_source","_target","_scroller","_onClick","_onScrolled","delay","jQuery","charAt","console","warn","href","easing","isNumber","duration","scroll","onDelay","scrollTo","isFunction","Evaluation","customButtons","defaultButtons","LockedState","isLocked","userText","adminText","superAdminText","FormField","_transcludeElements","_transcludeScopes","_cloneDefault","_cloneLabel","_unlisten","label","ngModel","resetEmpty","showMessages","labelClass","failureClass","successClass","_addWatches","_transclude","unlisten","unwatch","setModel","_update","$valid","$invalid","_reset","$setUntouched","unwatchModel","newModel","oldModel","$touched","$pending","$viewValue","transcludeDefault","attr","replaceWith","transcludeLabel","messageMin","messageMax","messageUrl","messageEmail","messageNumber","messagePattern","messageRequired","messageMinlength","messageMaxlength","messagesCustom","FormFieldModel","autoFocus","formField","focus","RandomNumber","_timer","_shuffle","numbers","_stop","maximum","cancel","ValidatorWorkshopExists","keyLocked","$asyncValidators","validatorWorkshopExists","validate","modelValue","$setValidity","validateWorkshopFrontend","ValidatorWorkshopUnique","validatorWorkshopUnique","validateWorkshopBackend","ValidatorAdminUnique","validatorAdminUnique","validateAdmin","InterestTask","resolved","currentExercise","correctAnswers","exercise1Answer","exercise2Answer","exercise1Correct","exercise2Correct","exercise1Result","exercise2Result","amount","rate","years","init","getPayload","payload","exercise1","currentResult","actualResult","isValid","exercise2","isPending","_isPending","canResolve","_calculateResult","_setCorrectAnswers","reset","onResolve","onUpdate","setResult","pow","InterestTaskExercise","stack","sum","notes","coins","revert","pop","DiversificationTask","$elemnt","heads","tails","companies","sides","one","company","two","throws","toss","ticketCount","getTicketCount","image","ticket","action","factorA","factorB","ticketsA","ticketsB","DiversificationTaskCoin","flip","animate","back","front","startSide","startValue","class","_toss","_getToss","_timeoutCallback","_iterateSides","side","_watchFlipCallback","newFlip","_watchFlipExpression","_watchTossCallback","newToss","oldToss","_watchTossExpression","_evalAsyncCallback","onFinish","_animationEndCallback","onInit","_unwatchFlip","_unwatchToss","$filter","picked","filtered","BombTask","started","stopped","hasBomb","totalBoxes","remainingBoxes","collectedBoxes","avg","rows","cols","interval","_initMembers","_initMatrix","_initBomb","$interval","_intIndex","iterator","_intervalId","stop","resolveCard","$$resolved","collection","column","active","$$active","splice","isBomb","total","collected","trackId","row","col","equals","bomb","matrix","columns","j","BombTaskCard","model","isDisabled","isClickable","onToggle","AnchoringTask","MentalBookkeepingTask","FramingTask","lotteryA","lotteryB","lottery","SavingsTargetTask","_isLocked","step","wish","amountRepeated","form","minAmount","maxAmount","timestampTask","timestampResult","getDifference","SavingsSupportedTask","SelfCommitmentTask","videos","canWatch","ProcrastinationTask","_onInterval","rounds","openRounds","minCatched","maxEscaped","invalidAt","hasWarmup","warmupMaxEscaped","warmupMinCatched","hasSuccess","setWarmup","setMode","setState","moment","warmup","isInvalid","_now","getCurrentRound","getRemainingTime","keys","difference","diff","seconds","asSeconds","minutes","asMinutes","hours","asHours","days","asDays","unit","ProcrastinationTaskGame","bubbles","viewport","_nextId","_tapped","_rounds","_retries","_timeout","_requestId","_loop","_viewport","catched","accuracy","expired","maxRounds","maxRetries","Number","POSITIVE_INFINITY","bubbleDelay","expire","_unloop","_getViewport","quit","_getResult","onGameOver","done","onGameDone","_setAccuracy","canRetry","canRestart","addBubble","bubble","removeBubble","resize","scrollTop","scrollLeft","ProcrastinationTaskBubble","themes","theme","radius","speed","wave","game","gameController","xOffset","_originalR","_originalX","sin","offscreenY","move","_resizeId","evalAsync","onAnimationEnd","LoginFrontend","codeMinLength","codePattern","userpattern","loginForm","next","reload","LoginBackend","usernameMinLength","passwordMinLength","passwordMaxLength","Contact","messageMinLength","submit","mail","contactForm","Frontend","confirmLogout","createResult","Result","$create","updateResult","logout","goTo","markConfirmLogout","_resultsSource","_userSources","_workshops","_initWorkshops","_initListener","nameMinLength","deleteWorkshop","drawingWorkshop","drawingTickets","drawingTicketsOne","drawingTicketsTwo","drawingAmount","chartResults","chartTask","uiOnParamsChanged","_expanded","$$expanded","unshift","_initWorkshop","_removeUsersStream","$delete","markWorkshopForDrawing","Ticket","rightSide","halfSize","ceil","leftSide","concat","resource","getByWorkshop","workshopId","makeWorkshopDrawing","$$shuffle","markWorkshopForDeletion","toggleWorkshop","$update","toggleCode","$$code","markTaskForChart","getByTask","taskId","toggleTask","Task","_addUsersStream","$$users","_streamResults","$uiRouterGlobals","old","users","_onDestroy","editAdmin","deleteAdmin","admin","markAdminForDeletion","markAdminForEdit","Backend","Factory","$resource","paramDefaults","validateUsernameFrontend","filter","apply","$stateful","fraction","toFixed","component","props","computed","offcanvas","$offcanvas","$el","methods","_dummyScroll","trigger"],"mappings":"CASA,SAAUA,EAAQC,GAChB,YAKA,IAAIC,GAAS,OAKTC,EAAMF,EAAQC,OAAOA,GACvB,aACA,aACA,aACA,YACA,aACA,eAYFC,GAAIC,QACF,oBAAqB,iBAAkB,qBAAsB,gBAC7D,2BAA4B,oBAAqB,aAAc,aAC/D,SACEC,EAAmBC,EAAgBC,EAAoBC,EACvDC,EAA0BC,EAAmBC,EAAYC,GAKzDP,EAAkBQ,WAAU,GAC5BR,EAAkBS,WAAW,KAK7BN,EAAcO,aAAaC,KAAK,mBAKhCL,EAAWM,4BAA2B,GAKtCP,EAAkBQ,SAASC,SACzBC,KAAUC,OAAQ,OAClBC,MAAUD,OAAQ,MAAOE,SAAQ,GACjCC,QAAUH,OAAQ,SAClBI,QAAUJ,OAAQ,QAClBK,UAAUL,OAAQ,WAQpBf,EAAeqB,UAAU,QAAS,SAASC,EAAOC,GAKhD,GAAIC,MAAoBC,EAAQF,EAAOD,EAkBvC,OAjBA3B,GAAQ+B,QAAQD,EAAO,SAAS3B,EAAQ6B,GACtC,GAAIC,GAAYD,EAAKE,MAAM,aACvBC,EAAWF,EAAY,IAAMA,EAAU,GAAK,GAE5CG,EAAYT,EAAMU,KAAKC,QAAQ,MAAO,KAEtCC,EAAcpC,EAAOoC,cACvB5B,EACAyB,EACAD,EACA,SACAK,KAAK,GAEPrC,GAAOoC,YAAcA,EACrBV,EAAcG,GAAQ7B,IAGjB0B,IAITrB,EAAyBiC,aACvBC,mBAAmB,IAQrBrC,EAAesB,MAAM,QACnBgB,IAAK,GACLC,YAAU,EACVC,SACEC,cAAe,OAAQ,SAASC,GAC9B,MAAOA,GAAKC,KAAK,MACfN,mBAAmB,OAIzBO,SAAU,0CAIZ5C,EAAesB,MAAM,YACnBC,OAAQ,OACRe,IAAK,IACLE,SACEK,SACE,OAAQ,SAAU,KAClB,SAASC,EAAMC,GACb,GAAIC,GAAUF,EAAKH,OAAOM,QAC1B,OAAOD,GAAAA,SAAc,WACnBD,EAAOG,GAAG,uBAKlBC,MACEC,MACE,YACA,aACA,qBAGJ3B,OACE4B,qBACAC,mBACAC,qBAEAC,kCACAC,gDACAC,uDAEAC,iCACAC,2CACAC,gDACAC,yDACAC,8CAEAC,2BACAC,+CACAC,kDACAC,gDACAC,gDAEAC,qBACAC,oBACEC,WAAY,oBACZC,aAAc,qBAEhBC,qBACAC,cACEH,WAAY,qBACZC,aAAc,sBAEhBG,KACEJ,WAAY,qBACZC,aAAc,yBAMpBxE,EAAesB,MAAM,WACnBC,OAAQ,OACRe,IAAK,SACLa,MACEC,MACE,aACA,qBAGJZ,SACEoC,cACE,OAAQ,SAAU,KAClB,SAASC,EAAM9B,EAAQ+B,GACrB,GAAIC,GAAQD,EAAGC,QAEXC,EAAkB,WACpBD,EAAMvC,SAAQ,IAEZyC,EAAkB,WACpBF,EAAMvC,SAAQ,GAUhB,OAPAqC,GAAKK,QACH,oBACAC,KACAH,EACAC,GAGKF,EAAM/B,WAInBoC,WAAY,oBACZ3D,OACE4D,kBACAC,oBACAC,oBACAb,cACEH,WAAY,oBACZC,aAAc,qBAEhBG,KACEJ,WAAY,oBACZC,aAAc,wBAMpBxE,EAAesB,MAAM,qBACnBgB,IAAK,gBACLa,MACEC,MACE,aACA,qBAGJZ,SACEgD,WAAY,WAAY,SAASC,GAC/B,MAAOA,GAASzE,OAAOiC,YAG3ByC,QACEC,QACEC,MAAO,KACPC,SAAS,IAGbtB,WAAY,qBACZC,aAAc,uBAGhBxE,EAAesB,MAAM,kBACnBgB,IAAK,WACLa,MACEC,KAAM,mBACN0C,WACEC,WAAY,YAGhBvD,SACEwD,QAAS,QAAS,SAASC,GACzB,MAAOA,GAAMjF,OAAOiC,YAGxBsB,WAAY,kBACZC,aAAc,oBAIhBxE,EAAesB,MAAM,SACnBgB,IAAK,SACLf,OAAQ,OACRgB,YAAU,EACV6C,WAAY,yBAGdpF,EAAesB,MAAM,kBACnBgB,IAAK,OACLE,SACE0D,MACE,mBAAoB,UACpB,SAASC,EAAkBC,GACzB,GAAIC,GAAQD,EAAQE,UACpB,OAAOD,GAAME,QACXJ,MAKRhD,MACE2C,WACEU,UAAW,aAGfpB,WAAY,uBACZb,WAAY,0BACZC,aAAc,4BAGhBxE,EAAesB,MAAM,wBACnBgB,IAAK,KAGPtC,EAAesB,MAAM,yBACnBgB,IAAK,UACL8C,WAAY,gCAGdpF,EAAesB,MAAM,+BACnBgB,IAAK,aACL8C,WAAY,SAASqB,GACnB,GAAIrB,GAAa,SAASc,GACxB,GAAIA,EACF,MAAO,+BAIPQ,EAAYD,EAAWE,WACvBT,EAAOQ,EAAUE,SAAS,OAC9B,OAAOV,GAAKf,KAAKC,MAIrBpF,EAAesB,MAAM,+BACnBgB,IAAK,aACLuE,eAAiBC,KAAM,SACvB1B,WAAY,SAASqB,GACnB,GAAIrB,GAAa,SAASc,GACxB,IAAKA,EACH,MAAO,+BAIPQ,EAAYD,EAAWE,WACvBT,EAAOQ,EAAUE,SAAS,OAC9B,OAAOV,GAAKf,KAAKC,MAIrBpF,EAAesB,MAAM,yBACnBgB,IAAK,aAGPtC,EAAesB,MAAM,iBACnBgB,IAAK,SACLa,MACE2C,WACEC,WAAY,UACZgB,iBAAkB,YAGtBxC,WAAY,yBACZC,aAAc,2BAGhBvE,EAAmB+G,UAAU,QAOjCnH,EAAIoH,KAAK,YAAa,SAASP,GAC3B,GAAIQ,GAAeR,EAAU5F,IAAI,gBAC7BqG,EAAaT,EAAU5F,IAAI,cAC3BsG,EAAWV,EAAU5F,IAAI,YACzBiC,EAAS2D,EAAU5F,IAAI,UACvB+D,EAAO6B,EAAU5F,IAAI,QACrBgC,EAAO+B,EAAKwC,UAEZC,EAAU,SAASb,GACrBW,EAASG,YAAa,CAEtB,IAAIjG,GAAQmF,EAAWe,KACnBrE,EAAO7B,EAAM6B,SACbC,EAAOD,EAAKC,MAAQ,KACpB0C,EAAY3C,EAAK2C,aAIrB,IAAa,OAAT1C,EAAe,CAIjB,GAAa,OAATN,EACF,OAAO,CAGT,IAAI2E,GAAQ3E,EAAK2E,SACjB,KAAKrE,IAAQ0C,GACX,GAAI2B,EAAMC,QAAQtE,IAAO,EAAG,CAC1B,GAAIuE,GAAS7B,EAAU1C,EACvB,OAAOL,GAAO4E,OAAOA,GAIzB,OAAO,EAIJhI,EAAQsB,QAAQmC,KACnBA,GAAQA,GAGV,IAAI4B,GAAkB,WAElB,OAAO,GAGPC,EAAkB,WAKlB,OAAO7B,EAAK,IAEV,IAAK,aACL,IAAK,mBACH,MAAOL,GAAO4E,OAAO,gBACvB,SACE,MAAO5E,GAAO4E,OAAO,mBAI7B,OAAO9C,GAAKK,QAAQ9B,GAAM+B,KACxBH,EACAC,IAIA2C,EAAU,WAIZ,GAHAR,EAASG,YAAa,EAGT,OAATzE,EAAJ,CAMA,GAAIM,GAAON,EAAK2E,MAAM,EAEtB,IADA3E,EAAO+B,EAAKwC,UACC,OAATvE,EAMJ,OAAOM,GAEL,IAAK,aACL,IAAK,mBACHL,EAAOG,GAAG,gBACV,MACF,SACEH,EAAOG,GAAG,qBAIZ2E,EAAY,SAASpB,GACvBU,EAAW7F,MAAQmF,EAAWe,KAC9BJ,EAASG,YAAa,EAGxBJ,GAAWW,OACT,WACE,MAAOV,GAASW,UAElB,SAASA,GACPZ,EAAWY,OAASA,EACpBZ,EAAWa,SAAWZ,EAASY,SAC/Bb,EAAWI,WAAaH,EAASG,aAIrCL,EAAaU,WAAYA,GACzBV,EAAaI,WAAYA,GACzBJ,EAAaW,aAAcA,MAO/BnI,EAAOuI,eAAiBrI,GAEvBsI,OAAQvI,SAGX,SAAUC,EAAQD,GAChB,YAEA,IAAIwI,GAAkB,SAASzB,GAE3B0B,KAAK1B,UAAYA,EACjB0B,KAAKC,SAITF,GAAgBG,SAAW,aAK3BH,EAAgBI,UAAUC,uBAAyB,WAE/C,MAAOJ,MAAKK,sBAMhBN,EAAgBI,UAAUG,qBAAuB,WAE7C,MAAON,MAAKO,oBAMhBR,EAAgBI,UAAUK,gBAAkB,WAExC,MAAOR,MAAKS,eAMhBV,EAAgBI,UAAUO,QAAU,WAEhC,MAAOV,MAAKC,OAQhBF,EAAgBI,UAAUQ,QAAU,SAASjJ,GAEzC,GAAIsH,GAAWgB,KAAK1B,UAAU5F,IAAI,WAGlCsG,GAASY,UAAW,EAGpBI,KAAKY,QAAQlJ,GAGbA,EAAOmJ,QAAQ,oBAAsB,gBAGrC,IAAIjE,GAAkB,SAASkE,GAK7B,MAJIA,KACFpJ,EAAOmJ,QAAQE,cAAgB,UAAYD,GAGtCpJ,GAGLmF,EAAkB,WACpB,MAAOnF,GAGT,IAAIA,EAAOuC,kBACT,MAAOvC,EAGT,IAAIsJ,GAAWhB,KAAKiB,aAAavJ,GAC7BgF,EAAKsD,KAAK1B,UAAU5F,IAAI,KAC5B,OAAOgE,GAAGgC,KAAKsC,GAAUjE,KACvBH,EACAC,IASNkD,EAAgBI,UAAUe,aAAe,SAASC,GAE9C,GAAInC,GAAWgB,KAAK1B,UAAU5F,IAAI,YAC9BgE,EAAKsD,KAAK1B,UAAU5F,IAAI,KAI5B,OAFAsG,GAASY,UAAW,EAEblD,EAAG0E,OAAOD,IAQrBpB,EAAgBI,UAAUkB,SAAW,SAASA,GAE1C,GAAIrC,GAAWgB,KAAK1B,UAAU5F,IAAI,WAOlC,OALAsH,MAAKsB,wBAAwBD,GAC7BrB,KAAKuB,iBAAiBF,GAEtBrC,EAASY,UAAW,EAEbyB,GAQXtB,EAAgBI,UAAUqB,cAAgB,SAASL,GAE/C,GAAInC,GAAWgB,KAAK1B,UAAU5F,IAAI,YAC9BgE,EAAKsD,KAAK1B,UAAU5F,IAAI,KAS5B,OAPAsH,MAAKyB,wBAAwBN,GAC7BnB,KAAK0B,sBAAsBP,GAC3BnB,KAAKuB,iBAAiBJ,GACtBnB,KAAK2B,UAAUR,GAEfnC,EAASY,UAAW,EAEblD,EAAG0E,OAAOD,IAQrBpB,EAAgBI,UAAUS,QAAU,SAASlJ,GAEzC,GAAIkK,GAAuB5B,KAAK1B,UAAU5F,IAAI,wBAC1C4E,EAASsE,EAAqBlK,EAAO4F,QACrCpD,EAAMxC,EAAOwC,KACfoD,EACE,IAAMA,EACN,GAGJ0C,MAAKC,MAAM/F,IAAO,GAMtB6F,EAAgBI,UAAUoB,iBAAmB,SAASM,GAElD7B,KAAKS,cAAgBoB,GAMzB9B,EAAgBI,UAAUuB,sBAAwB,SAASP,GAEvDnB,KAAKO,mBAAqBY,GAM9BpB,EAAgBI,UAAUmB,wBAA0B,SAASD,GAEzDrB,KAAKK,qBAAuBgB,GAMhCtB,EAAgBI,UAAUsB,wBAA0B,SAASN,GAE3D,GAAIW,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClC4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1BhB,EAASyJ,EAAUzJ,UACvB,KAAIA,EAAOqK,uBAAX,CAIA,GAAIhH,GAAOoG,EAAUpG,QAChBA,GAAKiH,SAIVF,EAAaG,MAAM3H,EAAK5B,IAAIqC,EAAKiH,YAMnCjC,EAAgBI,UAAUwB,UAAY,SAASR,GAE7C,GAAIe,GAAMlC,KAAK1B,UAAU5F,IAAI,MAE7B,QAAQyI,EAAUgB,QAChB,IAAK,KAGHD,EAAIE,eASVrC,EAAgBI,UAAUc,aAAe,WACvC,GAAIxE,GAAOuD,KAAK1B,UAAU5F,IAAI,QAC1BwJ,EAAMlC,KAAK1B,UAAU5F,IAAI,OAGzBoI,EAAQoB,EAAIG,UAChB,KAAKvB,EACH,MAAO,KAKT,IAAIoB,EAAII,UAAUxB,EAAO,KAAM,CAC7B,GAAIlE,GAAkB,WACpB,MAAOsF,GAAIG,YAGTxF,EAAkB,WACpB,MAAO,MAGT,OAAOJ,GAAK8F,UAAUxF,KACpBH,EACAC,GAKJ,MAAOqF,GAAIG,YAMb9K,EAAQC,OAAOA,GAAQgL,QAAQ,mBAAmB,YAAY,SAASlE,GAEnE,GAAImE,GAAkBnE,EAAUoE,YAAY3C,EAE5C,QACEW,QAAS,WAAY,MAAO+B,GAAgB/B,WAC5CF,gBAAiB,WAAY,MAAOiC,GAAgBjC,mBACpDF,qBAAsB,WAAY,MAAOmC,GAAgBnC,wBACzDF,uBAAwB,WAAY,MAAOqC,GAAgBrC,0BAC3DO,QAAS,SAASjJ,GAAS,MAAO+K,GAAgB9B,QAAQjJ,IAC1D2J,SAAU,SAASA,GAAW,MAAOoB,GAAgBpB,SAASA,IAC9DH,aAAc,SAASC,GAAY,MAAOsB,GAAgBjB,cAAcL,IACxEK,cAAe,SAASL,GAAY,MAAOsB,GAAgBjB,cAAcL,SAI9EtB,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIoL,GAAe,YAGnBA,GAAazC,WAgBbyC,EAAaxC,UAAUyC,OAAS,SAASZ,EAASG,EAAQU,GAOxD,MANAV,GAASA,GAAU,UACnBU,EAAUA,MAEVA,EAAQb,QAAUA,EAClBa,EAAQV,OAASA,EAEVW,MAAMhB,aAAae,IAW5BF,EAAaxC,UAAU4C,QAAU,SAASf,EAASa,GACjD7C,KAAK4C,OAAOZ,EAAS,UAAWa,IAWlCF,EAAaxC,UAAU6C,QAAU,SAAShB,EAASa,GACjD7C,KAAK4C,OAAOZ,EAAS,UAAWa,IAWlCF,EAAaxC,UAAU8B,MAAQ,SAASD,EAASa,GAC/C7C,KAAK4C,OAAOZ,EAAS,SAAUa,IAWjCF,EAAaxC,UAAU8C,QAAU,SAASjB,EAASa,GACjD7C,KAAK4C,OAAOZ,EAAS,UAAWa,IAUlCF,EAAaxC,UAAU+C,SAAW,WAChCJ,MAAMhB,aAAaoB,YAMrB3L,EAAQC,OAAOA,GAAQ2L,QAAQ,eAAgBR,IAE9C9C,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAI6L,GAAW,SAAS9E,GAEpB0B,KAAK1B,UAAYA,EAGrB8E,GAASlD,SAAW,aAOpBkD,EAASjD,UAAUP,UAAW,EAG9BwD,EAASjD,UAAUhB,YAAa,EAahCiE,EAASjD,UAAUR,OAAS,WAC1B,MAAOK,MAAKJ,UAAYI,KAAKqD,WAM/B9L,EAAQC,OAAOA,GAAQ2L,QAAQ,WAAYC,IAE1CvD,eAAgBtI,SAGnB,SAAUC,EAAQD,GAEhB,YASA,IAAI+L,GAAY,SAAShF,GAErB0B,KAAK1B,UAAYA,EAGrBgF,GAAUpD,SAAW,aASrBoD,EAAUnD,UAAUoD,kBAAoB,WACtC,GAAIC,GAAQC,SAASC,cAAc,OAC/BC,GACFC,gBAAmB,qBACnBC,cAAiB,eACjBC,UAAa,eAGf,KAAI,GAAIC,KAAOJ,GAAO,CAClB,GAAIK,GAAQR,EAAMS,MAAMF,EACxB,IAAcG,SAAVF,EACF,MAAOL,GAAOI,GAIpB,MAAO,SAUTT,EAAUnD,UAAUgE,mBAAqB,WACvC,GAAIX,GAAQC,SAASC,cAAc,OAC/BC,GACFtF,WAAa,gBACb+F,YAAc,iBACdC,cAAgB,gBAChBC,iBAAmB,sBAGrB,KAAI,GAAIP,KAAOJ,GAAO,CAClB,GAAIK,GAAQR,EAAMS,MAAMF,EACxB,IAAcG,SAAVF,EACF,MAAOL,GAAOI,GAIpB,MAAO,SAaTT,EAAUnD,UAAUoE,UAAY,SAASC,EAAGC,EAAGC,GAC7C,GAAIC,GAAS3E,KAAK1B,UAAU5F,IAAI,UAE5B6L,EAAYhN,EAAQqN,YAAYF,GAClCC,EAAOE,QAAQ,uBAAwBL,EAAGC,GAC1CE,EAAOE,QAAQ,8BAA+BL,EAAGC,EAAGC,EAEtD,QACEI,gBAAmBP,EACnBQ,aAAgBR,EAChBS,YAAeT,EACfU,WAAcV,EACdW,UAAaX,IAWjBjB,EAAUnD,UAAUgF,sBAAyB,WAGzC,IAAI,GAFAC,GAAW,EACXC,GAAW,KAAM,MAAO,SAAU,KAC9BC,EAAI,EAAGA,EAAID,EAAQE,SAAWzF,OAAOqF,sBAAuBG,IAChExF,OAAOqF,sBAAwBrF,OAAOuF,EAAQC,GAAG,yBACjDxF,OAAO0F,qBACL1F,OAAOuF,EAAQC,GAAG,yBAClBxF,OAAOuF,EAAQC,GAAG,8BAexB,OAXKxF,QAAOqF,wBACVrF,OAAOqF,sBAAwB,SAASM,GACpC,GAAIC,IAAW,GAAIC,OAAOC,UACtBC,EAAaC,KAAKC,IAAI,EAAG,IAAML,EAAWN,IAC1CY,EAAU,WAAaP,EAASC,EAAWG,IAC3CI,EAAKnG,OAAOoG,WAAWF,EAASH,EAEpC,OADAT,GAAWM,EAAWG,EACfI,IAINnG,OAAOqF,sBAAsBgB,KAAKrG,WAU7CwD,EAAUnD,UAAUqF,qBAAuB,WAKzC,MAJK1F,QAAO0F,uBACV1F,OAAO0F,qBAAuB,SAASS,GAAMG,aAAaH,KAGrDnG,OAAO0F,qBAAqBW,KAAKrG,WAM1CvI,EAAQC,OAAOA,GAAQ2L,QAAQ,YAAaG,IAE3CzD,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAEA,IAAI8O,GAAS,WACXrG,KAAKsG,kBAAoB,KAG3BD,GAAOnG,WAEPmG,EAAOlG,UAAUoG,QAAU,SAASC,EAAKT,GACvCS,EAAqB,mBAARA,GAAsBA,EAAM,EACzCT,EAAqB,mBAARA,GAAsBA,EAAM,CAEzC,IAAIU,GAAQV,EAAMS,EAAM,EACpBE,EAAOZ,KAAKa,QAEhB,OAAOb,MAAKc,MAAMF,EAAOD,EAAOD,IAGlCH,EAAOlG,UAAU0G,SAAW,SAASC,EAAMC,GACzCA,EAA2B,mBAAXA,GAAyBA,EAAS,EAClDD,EAAuB,mBAATA,GAAuBA,EAAO,CAE5C,IAAIE,GAAQhH,KAAKsG,iBACjB,IAA+B,OAA3BtG,KAAKsG,kBAEP,MADAtG,MAAKsG,kBAAoB,KAClBQ,EAAOC,EAASC,CAGzB,IAAIC,GAAGC,EAAGC,CAEV,GACEF,GAAI,EAAInB,KAAKa,SAAW,EACxBO,EAAI,EAAIpB,KAAKa,SAAW,EACxBQ,EAAIF,EAAEA,EAAIC,EAAEA,QACLC,GAAK,GAAS,IAAJA,EAEnB,IAAIC,GAAItB,KAAKuB,QAAUvB,KAAKwB,IAAIH,GAAKA,EAErC,OADAnH,MAAKsG,kBAAoBY,EAAIE,EACtBN,EAAOC,EAASE,EAAIG,GAG7Bf,EAAOlG,UAAUoH,KAAO,SAASC,GAC/B,MAAOA,GAAMxH,KAAKuG,QAAQ,EAAGiB,EAAMjC,OAAS,KAG9Cc,EAAOlG,UAAU7H,KAAO,SAASkP,EAAOhK,GACtC,GAAIkJ,GAAO1G,KAAKuG,QAAQ,EAAGiB,EAAMjC,OAAS,EAI1C,OAHAiC,GAAMlP,KAAKkP,EAAMd,IACjBc,EAAMd,GAAQlJ,EAEPgK,EAAMjC,QAGfc,EAAOlG,UAAUsH,QAAU,SAASD,GAClC,IAAK,GAAIlC,GAAEkC,EAAMjC,OAAO,EAAGD,EAAE,EAAGA,IAAM,CACpC,GAAIoB,GAAO1G,KAAKuG,QAAQ,EAAGjB,GACvBoC,EAAOF,EAAMlC,EAEjBkC,GAAMlC,GAAKkC,EAAMd,GACjBc,EAAMd,GAAQgB,EAGhB,MAAOF,IAMTjQ,EAAQC,OAAOA,GAAQ2L,QAAQ,SAAUkD,IAExCxG,eAAgBtI,SAGnB,SAAUC,EAAQD,GAEhB,YASA,IAAIoQ,GAAS,YAIbA,GAAOzH,WAWPyH,EAAOxH,UAAU0E,QAAU,SAAS+C,EAAMC,GAE/BtQ,EAAQsB,QAAQgP,KACnBA,KAAeC,MAAMC,KAAKC,UAAW,GAGvC,KAAK,GAAI1C,GAAE,EAAGA,EAAEuC,EAAUtC,OAAQD,IAChCsC,EAAQA,EAAM/N,QAAQ,KAAKgO,EAAUvC,GAGvC,OAAOsC,IAYbD,EAAOxH,UAAU8H,SAAW,SAASL,EAAMM,GAGrC,MADAA,GAAYA,GAAa,GACrBN,EAAMrC,QAAU2C,EACXN,EAGFA,EAAMO,UAAU,EAAED,GAAa,OAW5CP,EAAOxH,UAAUiI,KAAO,SAASR,GAE3B,MAAOA,GAAM/N,QAAQ,aAAc,KAWzC8N,EAAOxH,UAAUkI,QAAU,SAAST,GAE9B,MAAOA,GAAM/N,QAAQ,eAAgB,SAASyO,GAC1C,MAAOA,GAAKC,cAAc1O,QAAQ,OAAO,OAYnD8N,EAAOxH,UAAUqI,SAAW,SAASZ,GAE/B,MAAOA,GAAM/N,QAAQ,kBAAmB,SAASyO,GAC7C,MAAO,IAAMA,EAAKG,cAAc5O,QAAQ,IAAI,OAYtD8N,EAAOxH,UAAUuI,QAAU,SAASd,GAE9B,MAAOA,GAAM/N,QAAQ,kBAAmB,SAASyO,GAC7C,MAAO,IAAMA,EAAKG,cAAc5O,QAAQ,IAAI,OAOtDtC,EAAQC,OAAOA,GAAQ2L,QAAQ,SAAUwE,IAExC9H,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIoR,GAAU,SAASrK,GACrB0B,KAAK1B,UAAYA,EAGnBqK,GAAQC,aAAe,UACvBD,EAAQE,aAAe,UACvBF,EAAQzI,SAAW,aAanByI,EAAQxI,UAAUjC,SAAW,SAAS4K,GACpC,OAAQA,GACN,IAAKH,GAAQC,aACZ,MAAO5I,MAAK+I,iBAEb,KAAKJ,GAAQE,aACZ,MAAO7I,MAAKgJ,uBAEd,SACC,MAAIhJ,MAAKiJ,uBACAjJ,KAAKgJ,wBAGPhJ,KAAK+I,oBAWhBJ,EAAQxI,UAAU8I,qBAAuB,WACvC,GAAIC,GAAUlJ,KAAK1B,UAAU5F,IAAI,WAC7ByQ,EAAeD,EAAQE,aACvBrF,EAAM,kCACNsF,EAAM,iCAEV,KACCF,EAAaG,QAAQvF,EAAKsF,GAC1BF,EAAaI,WAAWxF,GACvB,MAAOyF,GACR,OAAO,EAGR,OAAO,GAYTb,EAAQxI,UAAUsJ,QAAU,SAASjM,GACnC,IACCA,EAAQkM,KAAKC,UAAUnM,GACtB,MAAOgM,GACRhM,EAAQ0G,OAGT,MAAO0F,oBAAmBpM,IAY5BmL,EAAQxI,UAAU0J,QAAU,SAASrM,GACnC,GAAIsM,EACJ,cAAetM,IACd,IAAK,SACHsM,EAAUC,mBAAmBvM,EAC7B,KACEsM,EAAUJ,KAAKM,MAAMF,GACrB,MAAON,IAGT,KACF,SACEM,EAAU5F,OAWb,MARgB,cAAZ4F,IACHA,EAAU5F,QAGKA,SAAZ4F,IACHA,EAAU,MAGJA,GAWTnB,EAAQxI,UAAU4I,gBAAkB,WAClC,GAAIkB,GAAgBjK,KAAK1B,UAAU5F,IAAI,aAEnCwR,EAAKlK,KACLmK,EAAU,SAASH,GACtB,GAAII,MAEAC,EAAUJ,EAAcK,OAAOC,MAAM,KACzC,IAAuB,IAAnBF,EAAQ9E,QAA+B,KAAf8E,EAAQ,GAClC,MAAOD,EAGT,KAAK,GAAI9E,GAAI,EAAGA,EAAI+E,EAAQ9E,OAAQD,IAAK,CACvC,GAAIgF,GAASD,EAAQ/E,GAAGiF,MAAM,IACzBP,GAKLI,EAAME,EAAO,IAAMJ,EAAGL,QAAQS,EAAO,IAJnCF,EAAME,EAAO,IAAMA,EAAO,GAO9B,MAAOF,IAGJI,EAAY,SAASzG,EAAKvG,EAAOiN,EAASC,EAAQC,EAAMC,GAC3DpN,EAAQ0M,EAAGT,QAAQjM,EAEnB,KACE,GAAIqN,GAAO,GAAIlF,MAAK8E,EACpB,IAAIK,MAAMD,GAAO,CACf,GAAIjD,GAAQ6C,CAEZ,MADAA,GAAUvG,OACJ,GAAI6G,OAAM,gBAAkBnD,EAAQ,yCAG5C6C,EAAUI,EAAKG,cACf,MAAOxB,IAITiB,IAAUA,GAAUA,CAEpB,IAAIH,GAASvG,EAAM,IAAMvG,CACzB8M,IAAUG,EAAU,YAAYA,EAAU,GAC1CH,GAAUI,EAAS,WAAWA,EAAS,GACvCJ,GAAUK,EAAO,SAASA,EAAO,GACjCL,GAAUM,EAAS,UAAY,GAE/BX,EAAcK,OAASA,GAGpBW,EAAY,SAASlH,GACxB,GAAIsG,GAAUF,GAAQ,EACtB,OAAIE,GAAQa,eAAenH,GAClBmG,EAAGL,QAAQQ,EAAQtG,IAGrB,MAGJoH,EAAgB,WACnB,MAAOhB,IAAQ,IAGZiB,EAAe,SAASrH,GAC3ByG,EAAUzG,EAAK,QAGZsH,EAAmB,WACtB,IAAK,GAAItH,KAAOoH,KACdC,EAAarH,GAIhB,QACC5F,QAAS8M,EACTK,YAAaH,EACb7B,QAASkB,EACTjB,WAAY6B,EACZG,eAAgBF,IAYnB1C,EAAQxI,UAAU6I,sBAAwB,WACxC,GAAIE,GAAUlJ,KAAK1B,UAAU5F,IAAI,WAC7ByQ,EAAeD,EAAQE,aAEvBc,EAAKlK,KACLsJ,EAAU,SAASvF,EAAKvG,GAC3BA,EAAQ0M,EAAGT,QAAQjM,GACnB2L,EAAaG,QAAQvF,EAAKvG,IAGvBW,EAAU,SAAS4F,GACtB,GAAIvG,GAAQ2L,EAAahL,QAAQ4F,EACjC,OAAOmG,GAAGL,QAAQrM,IAGf8N,EAAc,WAGjB,IAAK,GAFDlB,MAEK9E,EAAI,EAAGA,EAAI6D,EAAa5D,OAAQD,IAAK,CAC5C,GAAIvB,GAAMoF,EAAapF,IAAIuB,EAC3B8E,GAAMrG,GAAO5F,EAAQ4F,GAGvB,MAAOqG,IAGJb,EAAa,SAASxF,GACzBoF,EAAaI,WAAWxF,IAGrBwH,EAAiB,WACpBpC,EAAaqC,QAGd,QACCrN,QAASA,EACTmN,YAAaA,EACbhC,QAASA,EACTC,WAAYA,EACZgC,eAAgBA,IAOnBhU,EAAQC,OAAOA,GAAQ2L,QAAQ,UAAWwF,IAEzC9I,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIkU,GAAO,SAASnN,GAEhB0B,KAAK1B,UAAYA,EAMrBmN,GAAKvL,SAAW,aAiBhBuL,EAAKtL,UAAUuL,OAAS,SAAS3Q,EAAM4Q,EAAUjU,GAE7C,GAAIkU,GAAQ5L,KAAK1B,UAAU5F,IAAI,QAE/BiT,GAAWA,GAAY,WACvBjU,EAASA,KAET,IAAIwS,GAAKlK,KACLpD,EAAkB,SAASyE,GAE3B6I,EAAG2B,WAAWxK,EAAStG,OAGvB8B,EAAkB,aAKlB3C,EAAM8F,KAAK8L,cAAcH,GAEzB/Q,EAAUgR,EAAMG,KAClB7R,GAEE8R,UAAWjR,EAAKkR,SAChBC,UAAWnR,EAAKoR,UAElB5U,EAAQ6U,OAAO1U,OAQjB,OALAkD,GAAQmC,KACNH,EACAC,GAGKjC,GAcX6Q,EAAKtL,UAAUkM,OAAS,SAAStR,EAAM4Q,EAAUjU,GAE7C,GAAIkU,GAAQ5L,KAAK1B,UAAU5F,IAAI,QAE/BiT,GAAWA,GAAY,WACvBjU,EAASA,KAET,IAAIwS,GAAKlK,KACLpD,EAAkB,SAASyE,GAE3B6I,EAAG2B,WAAWxK,EAAStG,OAGvB8B,EAAkB,aAKlB3C,EAAM8F,KAAKsM,cAAcX,GAEzB/Q,EAAUgR,EAAMG,KAClB7R,GAEE8R,UAAWjR,EAAKkR,SAChBC,UAAWnR,EAAKoR,UAElB5U,EAAQ6U,OAAO1U,OACbuC,mBAAmB,IASvB,OALAW,GAAQmC,KACNH,EACAC,GAGKjC,GAWX6Q,EAAKtL,UAAUoM,QAAU,SAAS7U,GAE9B,GAAIkU,GAAQ5L,KAAK1B,UAAU5F,IAAI,SAC3BgC,EAAOsF,KAAK1B,UAAU5F,IAAI,QAC1BwJ,EAAMlC,KAAK1B,UAAU5F,IAAI,OAEzBkE,EAAkB,WAElBlC,EAAK8R,SACLtK,EAAIE,cAGJvF,EAAkB,YAKtB,OAAO+O,GAAMlT,IACXsH,KAAKyM,iBACL/U,OACAqF,KACAH,EACAC,IAaN4O,EAAKtL,UAAUoC,QAAU,SAAS7K,GAE9B,GAAIkU,GAAQ5L,KAAK1B,UAAU5F,IAAI,SAC3BwJ,EAAMlC,KAAK1B,UAAU5F,IAAI,OAEzBwR,EAAKlK,KACLpD,EAAkB,SAASyE,GAE3B6I,EAAG2B,WAAWxK,EAAStG,OAGvB8B,EAAkB,aAIlBjC,EAAUgR,EAAMG,KAClB/L,KAAK0M,mBAGHC,cAAezK,EAAI0K,mBAGrBrV,EAAQ6U,OAAO1U,OACbqK,wBAAwB,EACxB9H,mBAAmB,IASvB,OALAW,GAAQmC,KACNH,EACAC,GAGKjC,GAeX6Q,EAAKtL,UAAUlB,QAAU,SAAS4N,GAE9BA,EAAgBA,IAAiB,CAEjC,IAAI3K,GAAMlC,KAAK1B,UAAU5F,IAAI,OAEzBoI,EAAQoB,EAAIG,UAChB,OAAKvB,IAIA+L,GACC3K,EAAII,YACC,KAIJJ,EAAI4K,OAAOhM,GATT,MAqBb2K,EAAKtL,UAAUrD,QAAU,SAAS9B,GAE9B,GAAIkH,GAAMlC,KAAK1B,UAAU5F,IAAI,OACzBgE,EAAKsD,KAAK1B,UAAU5F,IAAI,MAExBiE,EAAQD,EAAGC,QACX/B,EAAU+B,EAAM/B,QAEhB/B,EAAUtB,EAAQsB,QAAQmC,EAC9B,IAAInC,GAA2B,IAAhBmC,EAAKuK,OAElB,MADA5I,GAAMyE,OAAO,MACNxG,CAGT,KAAKI,EAEH,MADA2B,GAAMyE,OAAO,MACNxG,CAMT,IAAIF,GAAOsF,KAAKf,SAAQ,EACxB,IAAa,OAATvE,EAEF,MADAiC,GAAMyE,OAAO,MACNxG,CAIT,IAAImS,GAAc,SAASrS,GACzB,GAAI2E,GAAQ3E,EAAK2E,SACb9H,GAAQyV,SAAShS,KACnBA,GAAQA,GAIV,KAAK,GADD8B,IAAU,EACLwI,EAAE,EAAGA,EAAEtK,EAAKuK,OAAQD,IAC3B,GAAIjG,EAAMC,QAAQtE,EAAKsK,KAAO,EAAG,CAC/BxI,GAAU,CACV,OAIAA,EACFH,EAAMvC,UAENuC,EAAMyE,SAKV,KAAKc,EAAII,YAEP,MADAyK,GAAYrS,GACLE,CAIT,IAAIsP,GAAKlK,KACLpD,EAAkB,WAElBlC,EAAOwP,EAAGjL,UACV8N,EAAYrS,IAGZmC,EAAkB,WAElBF,EAAMyE,SAQV,OALApB,MAAKuC,UAAUxF,KACbH,EACAC,GAGKjC,GAYX6Q,EAAKtL,UAAU0L,WAAa,SAAS9Q,GAGjC,GAAImH,GAAMlC,KAAK1B,UAAU5F,IAAI,MAE7BwJ,GAAI+K,gBAAgBlS,EAAK4R,eACzBzK,EAAIgL,SAASnS,EAAK+F,QAYtB2K,EAAKtL,UAAUmM,cAAgB,SAASX,GACtC,GAAIwB,GAAUnN,KAAK1B,UAAU5F,IAAI,UAEjC,QAAOiT,GACL,IAAK,UACL,IAAK,WACH,MAAOwB,GAAU,SAAWxB,EAAW,SACzC,SACE,KAAM,IAAIZ,OAAM,0BAA4BY,KAYlDF,EAAKtL,UAAU2L,cAAgB,SAASH,GACtC,GAAIwB,GAAUnN,KAAK1B,UAAU5F,IAAI,UAEjC,QAAOiT,GACL,IAAK,WACH,MAAOwB,GAAU,SAAWxB,EAAW,SACzC,KAAK,UACH,KAAM,IAAIZ,OAAM,uBAClB,SACE,KAAM,IAAIA,OAAM,0BAA4BY,KAWlDF,EAAKtL,UAAUuM,gBAAkB,WAC/B,GAAIS,GAAUnN,KAAK1B,UAAU5F,IAAI,UAEjC,OAAOyU,GAAU,iBAWnB1B,EAAKtL,UAAUsM,eAAiB,WAC9B,GAAIU,GAAUnN,KAAK1B,UAAU5F,IAAI,UAEjC,OAAOyU,GAAU,YAMnB5V,EAAQC,OAAOA,GAAQ2L,QAAQ,OAAQsI,IAEtC5L,eAAgBtI,SAGnB,SAAUC,EAAQD,GAEhB,YASA,IAAI6V,GAAO,SAAS9O,GAEhB0B,KAAK3F,gBACL2F,KAAK1B,UAAYA,EAEjB0B,KAAKqN,UAAUrN,KAAKsN,iBAGxBF,GAAKlN,SAAW,aAOhBkN,EAAKjN,UAAUoN,SACbC,IAAM,GAIRJ,EAAKjN,UAAUsN,cAAgB,KAW/BL,EAAKjN,UAAU5F,KAAO,SAASmT,EAAQhW,GAKnC,GAHAgW,EAASA,GAAU1N,KAAK2N,YACxBjW,EAASA,OAELsI,KAAK3F,aAAaqT,GAAtB,CAIA,GAAI9B,GAAQ5L,KAAK1B,UAAU5F,IAAI,SAC3BkV,EAAO5N,KAAK1B,UAAU5F,IAAI,QAE1BwR,EAAKlK,KACL9F,EAAM8F,KAAK6N,YAAYH,GACvB9Q,EAAkB,SAASyE,GAE3B6I,EAAG7P,aAAaqT,GAAUrM,EAAStG,MAGnC8B,EAAkB,WAElB+Q,EAAK3L,MAAM,gCAGf,OAAO2J,GAAMlT,IAAIwB,EAAKxC,GAAQqF,KAC5BH,EACAC,KAaNuQ,EAAKjN,UAAUkN,UAAY,SAASK,GAEhC,MAAI1N,MAAKuN,QAAQG,QACf1N,KAAK0N,OAASA,QAIhB1N,KAAK0N,OAAS1N,KAAKyN,gBAWvBL,EAAKjN,UAAUwN,UAAY,WAEvB,MAAO3N,MAAK0N,QAUhBN,EAAKjN,UAAUzH,IAAM,SAASqL,GAE1B,GAII+J,GAJAnJ,EAAS3E,KAAK1B,UAAU5F,IAAI,UAC5B4E,KAAYwK,MAAMC,KAAKC,UAAU,GACjC0F,EAAS1N,KAAK2N,WAGlB,KACEG,EAAO9N,KAAK3F,aAAaqT,GAAQ3J,GACjC,MAAMyF,IAER,MAAO7E,GAAOE,QAAQiJ,GAAQ/J,EAAKzG,IAWvC8P,EAAKjN,UAAU0N,YAAc,SAASH,GAElC,MAAO,QAAUA,EAAS,SAM9BN,EAAKjN,UAAUmN,cAAgB,WAE3B,GAEIS,GAFAC,EAAYhO,KAAK1B,UAAU5F,IAAI,WAAWsV,UAC1CC,EAAU,6BAuBd,OAnBID,IAAaA,EAAUE,YACtBH,EAAWC,EAAUE,UAAUzU,MAAMwU,MACtCF,EAAWA,EAAS,KAInBA,GAAYC,IACXA,EAAUD,SACZA,EAAWC,EAAUD,SACZC,EAAUG,aACnBJ,EAAWC,EAAUG,aACZH,EAAUI,eACnBL,EAAWC,EAAUI,eACZJ,EAAUK,kBACnBN,EAAWC,EAAUK,kBAKrBN,EACKA,EAASO,OAAO,EAAE,GAIpBtO,KAAKyN,eAMhBlW,EAAQC,OAAOA,GAAQ2L,QAAQ,OAAQiK,IAEtCvN,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIgX,GAAM,SAASjQ,EAAWN,GAC5BgC,KAAK1B,UAAYA,EACjB0B,KAAKhC,QAAUA,EAAQE,WAGzBqQ,GAAIrO,SAAW,YAAa,WAO5BqO,EAAIpO,UAAUqO,SAAW,aAGzBD,EAAIpO,UAAUsO,WAAa,aAa3BF,EAAIpO,UAAUiC,WAAa,WAEvBpC,KAAK0O,qBACL1O,KAAK2O,eAUTJ,EAAIpO,UAAUkC,SAAW,WAErB,MAAOrC,MAAKhC,QAAQG,QAAQ6B,KAAKwO,WAWrCD,EAAIpO,UAAU+M,SAAW,SAASpM,GAE9Bd,KAAKhC,QAAQsL,QAAQtJ,KAAKwO,SAAS1N,IAUvCyN,EAAIpO,UAAUwO,YAAc,WAExB3O,KAAKhC,QAAQuL,WAAWvJ,KAAKwO,WAUjCD,EAAIpO,UAAUyM,gBAAkB,WAE5B,MAAO5M,MAAKhC,QAAQG,QAAQ6B,KAAKyO,aAWrCF,EAAIpO,UAAU8M,gBAAkB,SAAS2B,GAErC5O,KAAKhC,QAAQsL,QAAQtJ,KAAKyO,WAAYG,IAU1CL,EAAIpO,UAAUuO,mBAAqB,WAE/B1O,KAAKhC,QAAQuL,WAAWvJ,KAAKyO,aAWjCF,EAAIpO,UAAU0O,kBAAoB,SAAS/N,GAEvC,GAAI8M,GAAO5N,KAAK1B,UAAU5F,IAAI,OAG9B,IADAoI,EAAQA,GAASd,KAAKqC,YACjBvB,EAEH,MADA8M,GAAK3L,MAAM,gCACJ,IAGT,IAAI6H,GAAU9J,KAAK8M,OAAOhM,EAC1B,IAAyB,mBAAdgJ,GAAQgF,IAEjB,MADAlB,GAAK3L,MAAM,gCACJ,IAGT,IAAI4I,GAAO,GAAIlF,MAAK,EAGpB,OAFAkF,GAAKkE,cAAcjF,EAAQgF,KAEpBjE,GAYX0D,EAAIpO,UAAUmC,UAAY,SAASxB,EAAOkO,GAEtCA,EAASA,GAAU,EACnBlO,EAAQA,GAASd,KAAKqC,UAEtB,IAAIwI,GAAO7K,KAAK6O,kBAAkB/N,EAClC,IAAa,OAAT+J,EACF,OAAO,CAGT,IAAIoE,IAAM,GAAItJ,OAAOuJ,SAIrB,OAHAF,GAASC,EAAe,IAATD,EACfnE,EAAOA,EAAKqE,UAELrE,GAAQmE,GAWnBT,EAAIpO,UAAU2M,OAAS,SAAShM,GAE5B,GAAI8M,GAAO5N,KAAK1B,UAAU5F,IAAI,OAE9B,KACE,GAAIyW,GAAQrO,EAAMyJ,MAAM,IACxB,IAAqB,IAAjB4E,EAAM5J,OACR,KAAM,IAAIwF,OAAM,yBAGlB,IAAIjB,GAAU9J,KAAKoP,cAAcD,EAAM,GACvC,KAAKrF,EACH,KAAM,IAAIiB,OAAM,2BAGlB,OAAOxT,GAAQ8X,SAASvF,GACxB,MAAMN,GAEN,MADAoE,GAAK3L,MAAMuH,GACJ,OAYb+E,EAAIpO,UAAUiP,cAAgB,SAASxH,GAEnC,GAAIsB,GAAUlJ,KAAK1B,UAAU5F,IAAI,WAC7BkV,EAAO5N,KAAK1B,UAAU5F,IAAI,QAE1B4W,EAAS1H,EACV/N,QAAQ,KAAM,KACdA,QAAQ,KAAM,IAEjB,KACE,OAAQyV,EAAO/J,OAAS,GACtB,IAAK,GACH,KAGF,KAAK,GACH+J,GAAU,IAAM,MAGlB,KAAK,GACHA,GAAU,GAAK,MAGjB,SACE,KAAM,IAAIvE,OAAM,4BAGpB,MAAMvB,GAEN,MADAoE,GAAK3L,MAAMuH,GACJ,GAGT,GAAIM,GAAUZ,EAAQqG,KAAKD,GACvBE,EAAUtG,EAAQuG,OAAO3F,EAE7B,OAAOZ,GAAQa,mBAAmByF,IAMtCjY,EAAQC,OAAOA,GAAQ2L,QAAQ,MAAOoL,IAErC1O,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAImY,GAAO,SAASpR,GAClB0B,KAAK1B,UAAYA,EAEjB0B,KAAK2P,SACHrR,EAAU5F,IAAI,kBACd4F,EAAU5F,IAAI,iBACd4F,EAAU5F,IAAI,kBACd4F,EAAU5F,IAAI,iBAGhBsH,KAAK4P,aAAe,KACpB5P,KAAK6P,YACL7P,KAAK8P,YACL9P,KAAK+P,YACL/P,KAAKgQ,UAGPN,GAAKxP,SAAW,aAOhBwP,EAAKvP,UAAUjH,MAAQ,KAGvBwW,EAAKvP,UAAU8P,MAAQ,KAGvBP,EAAKvP,UAAU+P,QAAU,KAazBR,EAAKvP,UAAU5F,KAAO,WACpB,GAAImV,GAAO1P,KAAK1B,UAAU5F,IAAI,QAE1BwR,EAAKlK,KACLpD,EAAkB,SAASlC,GAI7BwP,EAAG4F,SAAWpV,EAAKyV,SAGnBjG,EAAGkG,eACHlG,EAAGmG,aACHnG,EAAGoG,aAIEpG,EAAGqG,WAKRrG,EAAGsG,eACHtG,EAAGuG,aAGHvG,EAAGwG,eACHxG,EAAGyG,eACHzG,EAAG0G,aAGD/T,EAAkB,aAIlBpC,EAAUiV,EAAKjV,SAOnB,OALAA,GAAQI,SAASkC,KACfH,EACAC,GAGKpC,GAUTiV,EAAKvP,UAAUqM,OAAS,WACtB,GAAIqE,GAAM7Q,KAAK1B,UAAU5F,IAAI,MAEzBsH,MAAK4P,cACPiB,EAAIC,aAAa9Q,KAAK4P,cAGpB5P,KAAK+Q,iBACP/Q,KAAK+Q,kBAGH/Q,KAAKgR,eACPhR,KAAKgR,gBAGPhR,KAAK4P,aAAe,KACpB5P,KAAK6P,YACL7P,KAAK8P,YACL9P,KAAK+P,YACL/P,KAAKgQ,UAELhQ,KAAKkQ,QAAU,KACflQ,KAAK9G,MAAQ,KACb8G,KAAKiQ,MAAQ,MAgBfP,EAAKvP,UAAUrH,OAAS,SAASmY,GAC/BjR,KAAK8P,SAAWmB,EAAOvW,KAEvBsF,KAAKkR,WAAWD,GAChBjR,KAAKoQ,eACLpQ,KAAKqQ,aACLrQ,KAAKsQ,cAUPZ,EAAKvP,UAAUoQ,OAAS,WACtB,MAAOvQ,MAAKlD,QAAQ,cAUtB4S,EAAKvP,UAAUgR,QAAU,WACvB,MAAOnR,MAAKlD,QAAQ,eAUtB4S,EAAKvP,UAAU3D,aAAe,WAC5B,MAAOwD,MAAKlD,QAAQ,qBAUtB4S,EAAKvP,UAAUiR,aAAe,WAC5B,OAAKpR,KAAKuQ,UAIHvQ,KAAK8P,SAASuB,SAASC,UAWhC5B,EAAKvP,UAAUrD,QAAU,SAAS9B,GAC3BzD,EAAQsB,QAAQmC,KACnBA,GAAQA,GAIV,KAAK,GADDqE,GAAQW,KAAK8P,SAASzQ,UACjBiG,EAAE,EAAGA,EAAEtK,EAAKuK,OAAQD,IAC3B,GAAIjG,EAAMC,QAAQtE,EAAKsK,KAAK,EAC1B,OAAO,CAIX,QAAO,GAUToK,EAAKvP,UAAUoR,SAAW,WACxB,MAAOvR,MAAKgQ,QAWdN,EAAKvP,UAAUqR,cAAgB,SAASC,GACtC,MAAOzR,MAAKgQ,OAAOyB,IAAS,MAW9B/B,EAAKvP,UAAUuR,iBAAmB,SAASD,GACzC,MAAOzR,MAAK+P,SAAS0B,IAAS,MAUhC/B,EAAKvP,UAAUwR,iBAAmB,WAChC,OAAO3R,KAAKiQ,OACV,IAAKjQ,MAAK1B,UAAU5F,IAAI,WACtB,MAAO,SACT,KAAKsH,MAAK1B,UAAU5F,IAAI,WACtB,MAAO,SACT,SACE,MAAO,QAWbgX,EAAKvP,UAAUyR,iBAAmB,WAChC,OAAO5R,KAAK9G,OACV,IAAK8G,MAAK1B,UAAU5F,IAAI,iBACtB,MAAO,eACT,KAAKsH,MAAK1B,UAAU5F,IAAI,kBACtB,MAAO,gBACT,KAAKsH,MAAK1B,UAAU5F,IAAI,gBACtB,MAAO,cACT,SACE,MAAO,mBAWbgX,EAAKvP,UAAUkQ,WAAa,WAC1B,GAAIwB,GAAiB7R,KAAK1B,UAAU5F,IAAI,iBACxCsH,MAAK9G,MAAQ8G,KAAK8P,SAAS5W,OAAS2Y,GAUtCnC,EAAKvP,UAAUmQ,WAAa,WAC1BtQ,KAAKiQ,MAAQjQ,KAAK8P,SAASG,OAAS,MAUtCP,EAAKvP,UAAUiQ,aAAe,WAC5B,GAAIF,GAAUlQ,KAAK8P,SAASI,OAC5BlQ,MAAKkQ,QAAUA,OAWjBR,EAAKvP,UAAUqQ,aAAe,WAC5B,GAAI1O,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClCqG,EAAaiB,KAAK1B,UAAU5F,IAAI,cAChC4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAC1BwR,EAAKlK,KAEL8R,EAAwB,WAC1B,MAAO5H,GAAGhR,OAGR6Y,EAAsB,SAASC,EAAUC,GACvCD,IAAaC,GAIjBnQ,EAAaiB,QACXzI,EAAK5B,IACH,kDACA4B,EAAK5B,IAAIwR,EAAG0H,uBAKdM,EAA0B,WAC5B,MAAOhI,GAAGgG,SAGRiC,EAAwB,SAASC,EAAYC,GAC/C,GAAID,IAAeC,EAAnB,CAIA,GAAIC,GAAWD,GAAcA,EAAW9M,OACpCgN,EAAWH,GAAcA,EAAW7M,OAEpC2K,EAAUqC,EAAWD,CACzB,MAAIpC,GAAW,GAAf,CAIA,GAAIlO,GAAsB,IAAZkO,EACZ5V,EAAK5B,IAAI,kDACT4B,EAAK5B,IAAI,mDAAoDwX,EAE/DpO,GAAakB,QAAQhB,KAGvBhC,MAAK+Q,gBAAkBhS,EAAWyT,iBAChCN,EACAC,GAGFnS,KAAKgR,cAAgBjS,EAAWW,OAC9BoS,EACAC,IAYJrC,EAAKvP,UAAUyQ,SAAW,WAEtB,GAAI7R,GAAaiB,KAAK1B,UAAU5F,IAAI,cAChCyU,EAAUnN,KAAK1B,UAAU5F,IAAI,WAC7BmY,EAAM7Q,KAAK1B,UAAU5F,IAAI,OAGzB2Y,EAAWrR,KAAK8P,SAASuB,QAC7B,IAAKA,EAASC,SAAd,CAIA,GAAIpH,GAAKlK,KAELyS,EAAa,SAAS1X,GACxBgE,EAAW2T,WAAW,WACpBnb,EAAQ+B,QAAQyB,EAAM,SAAS4X,GAC7B,GAAIC,GAAOjN,KAAKqE,MAAM2I,EAAKE,WACvBC,EAAO5I,EAAG8F,OAAO2C,EAAKlB,KAC1BqB,GAAKxB,WAAaqB,EAAKrB,SAElBxG,MAAM8H,KACTD,EAAKE,UAAYD,QAMrB1Y,EAAMiT,EAAU,iBAAmBkE,EAASpL,GAAK,SACjDpD,GAAYkQ,UAAWN,EAAYO,MAAO,EAC9ChT,MAAK4P,aAAeiB,EAAIoC,UAAU/Y,EAAK2I,KAW3C6M,EAAKvP,UAAUsQ,WAAa,WAC1B,GAAIY,GAAWrR,KAAK8P,SAASuB,QAC7B,IAAKA,EAAL,CAIA,GAAInH,GAAKlK,IACTzI,GAAQ+B,QAAQ+X,EAAS6B,MAAM,SAASJ,GACtC5I,EAAG8F,OAAO8C,EAAKrB,MAAQqB,MAY3BpD,EAAKvP,UAAUuQ,aAAe,WAC5B,GAAIyC,GAAUnT,KAAK8P,SAASqD,OAC5B,IAAKA,EAAL,CAIA,GAAIjJ,GAAKlK,IACTzI,GAAQ+B,QAAQ6Z,EAAQ,SAASlC,GAC/B/G,EAAG6F,SAASkB,EAAO6B,KAAKrB,MAAQR,MAYpCvB,EAAKvP,UAAUwQ,aAAe,WAC5B,GAAIO,GAAalR,KAAKkR,WAAW/K,KAAKnG,MAClCoT,EAAUpT,KAAK8P,SAASsD,WAE5B7b,GAAQ+B,QAAQ8Z,EAASlC,IAW3BxB,EAAKvP,UAAU+Q,WAAa,SAASD,GACnC,GAAI6B,GAAO9S,KAAKwR,cAAcP,EAAO6B,KAAKrB,KAC1C,IAAa,OAATqB,EAAe,CACjB,GAAIrY,GAAUqY,EAAKO,WAAa,CAChCP,GAAKO,UAAY5Y,EAAU,EAG7BuF,KAAK6P,SAASvX,KAAK2Y,IAMrB1Z,EAAQC,OAAOA,GAAQ2L,QAAQ,OAAQuM,IAEtC7P,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAI+b,GAAO,SAAShV,GAEhB0B,KAAK1B,UAAYA,EAGrBgV,GAAKpT,SAAW,aAehBoT,EAAKnT,UAAUoT,KAAO,SAASxY,EAAMrD,GACnC,GAAIoK,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClCkT,EAAQ5L,KAAK1B,UAAU5F,IAAI,SAC3B4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1BkE,EAAkB,WAElBkF,EAAaiB,QACXzI,EAAK5B,IACH,+BAKJmE,EAAkB,aAIlBjC,EAAUgR,EAAMG,KAClB/L,KAAKwT,eAEHC,MAAO1Y,EAAKnB,KACZ8Z,MAAO3Y,EAAK4Y,MACZC,SAAU7Y,EAAK8Y,QACfC,SAAU/Y,EAAKiH,SAEjBtK,MAQF,OALAkD,GAAQmC,KACNH,EACAC,GAGKjC,GAUT0Y,EAAKnT,UAAUqT,YAAc,WAC3B,GAAIrG,GAAUnN,KAAK1B,UAAU5F,IAAI,UAEjC,OAAOyU,GAAU,SAMnB5V,EAAQC,OAAOA,GAAQ2L,QAAQ,OAAQmQ,IAEtCzT,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIwc,GAAM,SAASzV,GAEf0B,KAAK1B,UAAYA,EACjB0B,KAAKgU,YAGTD,GAAI7T,SAAW,aAgBf6T,EAAI5T,UAAU8S,UAAY,SAAS/Y,EAAKxC,GACtCA,EAASA,MAETA,EAAOuc,MAAQvc,EAAOuc,OAAS,KAC/Bvc,EAAOsM,MAAQtM,EAAOsM,OAAS,KAC/BtM,EAAOsb,MAAQtb,EAAOsb,OAAS,KAC/Btb,EAAO8H,QAAU9H,EAAO8H,SAAW,aACnC9H,EAAOqb,UAAYrb,EAAOqb,WAAa,aAEvC7Y,EAAM8F,KAAKkU,UAAUha,EAAKxC,EAC1B,IAAIyc,GAAS,GAAIC,aAAYla,EAY7B,OAVAia,GAAOE,UAAY,SAASrQ,GAC1B,GAAIjJ,GAAOxD,EAAQ8X,SAASrL,EAAMjJ,KAClCrD,GAAOqb,UAAUhL,KAAK/H,KAAMjF,EAAMiJ,IAGpCmQ,EAAOG,QAAU,SAAStQ,GACxBtM,EAAO8H,QAAQuI,KAAK/H,KAAMgE,IAG5BhE,KAAKgU,SAAS9Z,GAAOia,EACdA,GAWTJ,EAAI5T,UAAU2Q,aAAe,SAASqD,SAC7BnU,MAAKgU,SAASG,EAAOja,KAC5Bia,EAAOI,SAaTR,EAAI5T,UAAU+T,UAAY,SAASha,EAAKxC,GACtC,GAAIwK,GAAMlC,KAAK1B,UAAU5F,IAAI,OACzBoI,EAAQoB,EAAIG,UAgBhB,OAdAnI,GAAMA,EAAM,WAAa4G,EAErBpJ,EAAOsM,QACT9J,GAAO,UAAYxC,EAAOsM,OAGxBtM,EAAOsb,QACT9Y,GAAO,UAAYxC,EAAOsb,OAGxBtb,EAAOuc,QACT/Z,GAAO,UAAYxC,EAAOuc,OAGrB/Z,GAMT3C,EAAQC,OAAOA,GAAQ2L,QAAQ,MAAO4Q,IAErClU,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIid,GAAgB,YAGpBA,GAActU,SAAW,SAAU,WAAY,UAO/CsU,EAAcrU,UAAUsU,SAGxBD,EAAcrU,UAAUuU,WAAY,EAapCF,EAAcrU,UAAUwU,IAAM,SAASC,GACrC5U,KAAKyU,MAAMnc,KAAKsc,IAUlBJ,EAAcrU,UAAU0U,IAAM,SAASD,GACrC,GAAIA,EAAKE,WAAa9U,KAAK0U,UACzB,OAAO,CAIT,IAAII,KAAaF,EAAKE,QAYtB,OAXAF,GAAKE,UAAWA,GAAW,KAG3Bvd,EAAQ+B,QAAQ0G,KAAKyU,MAAO,SAASha,GAC/BA,EAAQwL,KAAO2O,EAAK3O,KAIxBxL,EAAQqa,UAAWF,EAAKE,UAAmB,SAGtC,GAMTvd,EAAQC,OAAOA,GAAQud,UAAU,gBAAiB,WAChD,OACEC,OACEN,UAAW,4BAEbO,SAAU,IACV9Y,WAAYqY,EACZU,kBAAkB,EAClB9Y,aAAc,4BAelB,IAAI+Y,GAAO,SAASC,EAAQC,EAAUC,EAAQC,GAC5CvV,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAEhBrV,KAAKiG,GAAKjG,KAAKoV,OAAOI,IACtBxV,KAAKyV,QAAUF,EAAYG,aAAa,QAG1CP,GAAKjV,SAAW,SAAU,WAAY,SAAU,eAOhDiV,EAAKhV,UAAU8F,GAAK,KAGpBkP,EAAKhV,UAAUpF,KAAO,KAGtBoa,EAAKhV,UAAU2U,SAAW,KAG1BK,EAAKhV,UAAUwV,SAAW,KAG1BR,EAAKhV,UAAUsV,QAAU,KAGzBN,EAAKhV,UAAUyV,YAAa,EAa5BT,EAAKhV,UAAU0V,QAAU,WAClB7V,KAAK8V,eAIV9V,KAAK8V,cAAcnB,IAAI3U,OAUzBmV,EAAKhV,UAAU4V,MAAQ,SAASC,GAC9B,IAAIhW,KAAK2V,SAAT,CAOA,GAHAK,EAAOC,kBACPD,EAAOE,iBAEHlW,KAAK8V,cAAe,CACtB,GAAIK,GAAUnW,KAAK8V,cAAcjB,IAAI7U,KACrC,KAAKmW,EACH,OAIJnW,KAAKoW,SACHrb,KAAMiF,KAAKjF,KACX+Z,SAAU9U,KAAK8U,SACfa,SAAU3V,KAAK2V,aAOnBpe,EAAQC,OAAOA,GAAQud,UAAU,OAAQ,WACvC,OACEC,OACEja,KAAM,aACNqb,QAAS,eACTtB,SAAU,iBACVa,SAAU,iBACVC,WAAY,oBAEdX,SAAU,IACVoB,YACEvI,KAAM,WACNwI,MAAO,YACPC,KAAM,YACNC,QAAS,gBAEXra,WAAYgZ,EACZD,kBAAkB,EAClB9Y,aAAc,iBACdqa,SACEX,cAAe,mBAEjBhc,YAAa,iCAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAImf,GAAQ,SAAStB,EAAQE,EAAQD,EAAU/W,GAC7C0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAK2W,OAAS,KAGhBD,GAAMxW,SAAW,SAAU,SAAU,WAAY,aAOjDwW,EAAMvW,UAAUpF,QAchB2b,EAAMvW,UAAU0V,QAAU,WAEtB,GAAIhT,GAAU7C,KAAK4W,cAEf7b,GACF8b,OAAQ7W,KAAK8W,aACbC,OAAQ/W,KAAKgX,WAGfhX,MAAKiX,QAAQlc,EAAM8H,IAUvB6T,EAAMvW,UAAU+W,WAAa,WAEL,OAAhBlX,KAAK2W,SACP3W,KAAK2W,OAAOQ,SACZnX,KAAK2W,OAAS,OAYpBD,EAAMvW,UAAU6W,SAAW,WACzB,GAOII,GAPAC,EAAUrX,KAAK1B,UAAU5F,IAAI,WAC7B4e,EAAUtX,KAAK1B,UAAU5F,IAAI,WAE7BwR,EAAKlK,KAELuX,KACAxc,IAGJ,QAAOmP,EAAG4I,KAAKrB,MAKb,IAAKvH,GAAG5L,UAAU5F,IAAI,kBACtB,IAAKwR,GAAG5L,UAAU5F,IAAI,2BACpB6e,EAAIF,IAAaG,QAAS,EAAGC,QAAS,EAAGC,MAAM,GAC/CH,EAAID,IAAaE,QAAS,EAAGC,QAAS,EAAGC,MAAM,GAE/CN,EAAa,SAASnG,GACpB,GAAIhB,GAAQgB,EAAO0G,KAAK1H,MACpB2H,EAAM3G,EAAO0G,KAAKE,MAEtBN,GAAItH,GAAO,SAAS2H,KACpBL,EAAItH,GAAOyH,SAGbngB,EAAQ+B,QAAQ0G,KAAKoT,QAASgE,EAE9B,IAAIU,GAASP,EAAIF,GACbU,EAASR,EAAID,EAGjBvc,GAAKzC,MACHwf,EAAON,QAAUM,EAAOJ,MACxBK,EAAOP,QAAUO,EAAOL,QAI1B3c,EAAKzC,MACHwf,EAAOL,QAAUK,EAAOJ,MACxBK,EAAON,QAAUM,EAAOL,OAG1B,MAKF,KAAKxN,GAAG5L,UAAU5F,IAAI,0BAEpB6e,EAAIG,MAAQ,EACZH,EAAIC,QAAU,EACdD,EAAIE,QAAU,EACdF,EAAIS,QAAU,EACdT,EAAIU,QAAU,EAEdb,EAAa,SAASnG,GACpB,GAAI2G,GAAM3G,EAAO0G,KAAKE,MAEtBN,GAAI,SAASK,KACbL,EAAIG,SAGNngB,EAAQ+B,QAAQ0G,KAAKoT,QAASgE,GAE9Brc,EAAKzC,MACHif,EAAIC,QAAUD,EAAIG,MAClBH,EAAIE,QAAUF,EAAIG,MAClBH,EAAIS,QAAUT,EAAIG,MAClBH,EAAIU,QAAUV,EAAIG,OAGpB,MAIF,KAAKxN,GAAG5L,UAAU5F,IAAI,wBACpB,GAAIwf,GAAQ,QACRC,EAAM,KAEVZ,GAAIW,IAAWnV,QAAS,EAAGqV,QAAS,EAAGV,MAAM,GAC7CH,EAAIY,IAASpV,QAAS,EAAGqV,QAAS,EAAGV,MAAM,GAE3CN,EAAa,SAASnG,GACpB,GAAInI,GAAOmI,EAAO0G,KAAK7O,IAEnBmI,GAAO0G,KAAK5U,QACdwU,EAAIzO,GAAM/F,UAEVwU,EAAIzO,GAAMsP,UAGZb,EAAIzO,GAAM4O,SAGZngB,EAAQ+B,QAAQ0G,KAAKoT,QAASgE,EAE9B,IAAI7M,GAAQgN,EAAIW,GACZG,EAAMd,EAAIY,EAGdpd,GAAKzC,MACHiS,EAAMxH,QAAUwH,EAAMmN,MACtBW,EAAItV,QAAUsV,EAAIX,QAIpB3c,EAAKzC,MACHiS,EAAM6N,QAAU7N,EAAMmN,MACtBW,EAAID,QAAUC,EAAIX,QASxB,MAAO3c,IAUT2b,EAAMvW,UAAU2W,WAAa,WAC3B,GAAIxc,GAAO0F,KAAK1B,UAAU5F,IAAI,OAE9B,QAAOsH,KAAK8S,KAAKrB,MACf,IAAKzR,MAAK1B,UAAU5F,IAAI,kBACtB,OACE4B,EAAK5B,IAAI,eACT4B,EAAK5B,IAAI,kBAEb,KAAKsH,MAAK1B,UAAU5F,IAAI,2BACtB,OACE4B,EAAK5B,IAAI,cACT4B,EAAK5B,IAAI,eAEb,KAAKsH,MAAK1B,UAAU5F,IAAI,0BACtB,OACE4B,EAAK5B,IAAI,gBACT4B,EAAK5B,IAAI,gBACT4B,EAAK5B,IAAI,mBACT4B,EAAK5B,IAAI,gBAEb,KAAKsH,MAAK1B,UAAU5F,IAAI,wBACtB,OACE4B,EAAK5B,IAAI,OACT4B,EAAK5B,IAAI,SAEb,SACE,WAWNge,EAAMvW,UAAUyW,YAAc,WAC5B,GAAItc,GAAO0F,KAAK1B,UAAU5F,IAAI,QAC1BmK,GACFyV,kBAAmB,GACnBC,cACEC,IAAK,GACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GAEVC,OACEC,sBAAuB,SAASrb,GAC9B,MAAgB,KAARA,EAAe,KAEzBsb,OAAQ,EAAG,GAAK,GAAK,GAAK,GAAK,GAC/BrH,KAAMsH,SAASC,eACfC,KAAM,EACNC,IAAK,GAIT,QAAOlZ,KAAK8S,KAAKrB,MACf,IAAKzR,MAAK1B,UAAU5F,IAAI,kBACxB,IAAKsH,MAAK1B,UAAU5F,IAAI,2BACtBmK,EAAQsW,SACNJ,SAASI,QAAQC,QACfC,aACE/e,EAAK5B,IAAI,UACT4B,EAAK5B,IAAI,iBAKf,MAEF,KAAKsH,MAAK1B,UAAU5F,IAAI,wBACtBmK,EAAQsW,SACNJ,SAASI,QAAQC,QACfC,aACE/e,EAAK5B,IAAI,kBACT4B,EAAK5B,IAAI,wBAUnB,MAAOmK,IAUT6T,EAAMvW,UAAU8W,QAAU,SAASlc,EAAM8H,GACvC,GAAIyW,GAAWtZ,KAAK1B,UAAU5F,IAAI,WAElCsH,MAAKqV,SAASkE,SAAS,WACvB,IAAIC,GAAUxZ,KAAKqV,SAAS3c,IAAI,GAE5BwR,EAAKlK,KACLyZ,EAAS,WACX,OAAOvP,EAAG4I,KAAKrB,MACb,IAAKvH,GAAG5L,UAAU5F,IAAI,kBACtB,IAAKwR,GAAG5L,UAAU5F,IAAI,2BACtB,IAAKwR,GAAG5L,UAAU5F,IAAI,0BACtB,IAAKwR,GAAG5L,UAAU5F,IAAI,wBACpBwR,EAAGyM,OAAS,GAAIoC,UAASW,IAAIF,EAASze,EAAM8H,IAMlDyW,GAASG,EAAQ,MAMnBliB,EAAQC,OAAOA,GAAQud,UAAU,QAAS,WACxC,OACEC,OACElC,KAAM,cACNM,QAAS,kBAEX6B,SAAU,IACV9Y,WAAYua,EACZxB,kBAAkB,EAClB9Y,aAAc,sBAIjByD,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIoiB,GAAQ,SAASvE,EAAQE,EAAQD,EAAUE,GAC7CvV,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAKuV,YAAcA,EAEnBvV,KAAK4Z,SAAW,KAChB5Z,KAAK6Z,OAAS,KACd7Z,KAAK8Z,OAAS,KAGhBH,GAAMzZ,SAAW,SAAU,SAAU,WAAY,eAOjDyZ,EAAMxZ,UAAU4Z,WAAY,EAa5BJ,EAAMxZ,UAAU0V,QAAU,WAEtB,GAAI3L,GAAKlK,IAGTA,MAAKga,QAAU,WACb9P,EAAGkL,OAAO1C,WAAWxI,EAAG+P,SAG1Bja,KAAKka,SAAW,WACdhQ,EAAGkL,OAAO1C,WAAWxI,EAAGiQ,UAG1Bna,KAAKoa,cAAgB,WACnBlQ,EAAGkL,OAAO1C,WAAWxI,EAAGmQ,eAG1Bra,KAAKsa,QAAU,WACbpQ,EAAGkL,OAAO1C,WAAWxI,EAAGqQ,SAG1Bva,KAAKwa,UAAY,WACftQ,EAAGkL,OAAO1C,WAAW,WACnBxI,EAAGuQ,WACHvQ,EAAG6P,WAAY,KAInB/Z,KAAK0a,cAAgB,WACnBxQ,EAAGkL,OAAO1C,WAAWxI,EAAGyQ,eAI1B3a,KAAK4a,SAAW5a,KAAKoV,OAAO1V,OAC1B,4BACA,SAASqa,GACP,MAAIA,OACF7P,GAAGmM,iBAILnM,GAAG2Q,aAYXlB,EAAMxZ,UAAU+W,WAAa,WAEzBlX,KAAK4a,WACL5a,KAAK6a,WAUTlB,EAAMxZ,UAAUkW,WAAa,WAC3B,GAAInM,GAAKlK,KAELqW,EAAa,SAASyE,EAAO9F,GAE/B9K,EAAG0P,SAAWkB;AACd5Q,EAAG4P,OAAS9E,EAGZ9K,EAAG0P,SAASmB,GAAG,OAAQ7Q,EAAG8P,SAC1B9P,EAAG0P,SAASmB,GAAG,QAAS7Q,EAAGgQ,UAC3BhQ,EAAG0P,SAASmB,GAAG,aAAc7Q,EAAGkQ,eAEhClQ,EAAG0P,SAASmB,GAAG,OAAQ7Q,EAAGoQ,SAC1BpQ,EAAG0P,SAASmB,GAAG,SAAU7Q,EAAGsQ,WAC5BtQ,EAAG0P,SAASmB,GAAG,aAAc7Q,EAAGwQ,eAGhCxQ,EAAGmL,SAAS2F,OAAOF,GAGnB5Q,EAAG2P,OAAS/W,MAAMmY,MAAMH,GACxB5Q,EAAG2P,OAAOqB,OAGZlb,MAAKuV,YAAYc,IAUnBsD,EAAMxZ,UAAU0a,QAAU,WACF,OAAlB7a,KAAK4Z,WACP5Z,KAAK4Z,SAASuB,IAAI,OAAQnb,KAAKga,SAC/Bha,KAAK4Z,SAASuB,IAAI,QAASnb,KAAKka,UAChCla,KAAK4Z,SAASuB,IAAI,aAAcnb,KAAKoa,eAErCpa,KAAK4Z,SAASuB,IAAI,OAAQnb,KAAKsa,SAC/Bta,KAAK4Z,SAASuB,IAAI,SAAUnb,KAAKwa,WACjCxa,KAAK4Z,SAASuB,IAAI,aAAcnb,KAAK0a,eAErC1a,KAAK4Z,SAASwB,SACdpb,KAAK4Z,SAAW,MAGE,OAAhB5Z,KAAK8Z,SACP9Z,KAAK8Z,OAAOuB,WACZrb,KAAK8Z,OAAS,MAGI,OAAhB9Z,KAAK6Z,SACP7Z,KAAK6Z,OAAOyB,OACZtb,KAAK6Z,OAAS,OAOlBtiB,EAAQC,OAAOA,GAAQud,UAAU,QAAS,WACxC,OACEC,OACE+E,UAAW,UACXE,OAAO,eACPM,OAAO,eACPJ,QAAQ,gBACRM,SAAS,iBACTJ,aAAa,qBACbM,aAAa,sBAEf1F,SAAU,IACV9Y,WAAYwd,EACZtD,WAAY,UACZnB,kBAAkB,EAClB9Y,aAAc,sBAIjByD,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIgkB,GAAQ,SAASnG,EAAQC,EAAUC,EAAQhX,GAC7C0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAKwb,QAAU,KACfxb,KAAK4Z,SAAW5Z,KAAKqV,SAASoG,KAAK,WAEnCzb,KAAK0b,SAAW1b,KAAK0b,SAASvV,KAAKnG,MACnCA,KAAK2b,eAAiB3b,KAAK2b,eAAexV,KAAKnG,MAGjDub,GAAMrb,SAAW,SAAU,WAAY,SAAU,aAOjDqb,EAAMpb,UAAUyb,MAAQ,IAGxBL,EAAMpb,UAAU0b,OAAS,IAGzBN,EAAMpb,UAAU2b,QAAU,KAc1BP,EAAMpb,UAAU0V,QAAU,WAEtB,GAAI3M,GAAUlJ,KAAK1B,UAAU5F,IAAI,WAE7BwR,EAAKlK,KACL+b,EAAsB,WACxB,MAAO7S,GAAQ8S,oBAGbC,EAAoB,SAASC,GAC3BA,IACFhS,EAAGiS,cACHjS,EAAGwR,YAIP1b,MAAKmc,YAAcnc,KAAKoV,OAAO1V,OAC7Bqc,EACAE,IAWNV,EAAMpb,UAAU+W,WAAa,WACvBlX,KAAKwb,SACPxb,KAAKwb,QAAQX,WAYjBU,EAAMpb,UAAUic,SAAW,WACzB,OACEC,iBACErc,KAAK6b,OACL7b,KAAK4b,MACL,IACE,MAWRL,EAAMpb,UAAUub,SAAW,WAEvB,GAAIlC,GAAUxZ,KAAK4Z,SAASlhB,IAAI,EAEhCsH,MAAKwb,QAAU,GAAIc,IAAGC,OACpB/C,GAEEoC,MAAO5b,KAAK4b,MACZC,OAAQ7b,KAAK6b,OACbC,QAAS9b,KAAK8b,QACdnY,QACE6Y,cAAiBxc,KAAK2b,mBAYhCJ,EAAMpb,UAAUwb,eAAiB,SAAS3X,GAEtC,OAAQA,EAAMjJ,MACZ,IAAKuhB,IAAGG,YAAYC,QAClB1c,KAAK2c,WACL,MACF,KAAKL,IAAGG,YAAYG,OAClB5c,KAAK6c,UACL,MACF,KAAKP,IAAGG,YAAYK,MAClB9c,KAAK+c,SACL,MACF,KAAKT,IAAGG,YAAYO,KAClBhd,KAAKid,WASb1lB,EAAQC,OAAOA,GAAQud,UAAU,QAAS,WACxC,OACEC,OACE8G,QAAQ,WACRF,MAAM,eACNC,OAAO,gBACPoB,OAAQ,eACRF,QAAS,gBACTF,SAAU,iBACVF,UAAW,kBACXO,YAAa,qBAEfjI,SAAU,IACVoB,YAAY,EACZla,WAAYof,EACZrG,kBAAkB,EAClB9Y,aAAc,kBACdtC,YAAa,kCAIhB+F,eAAgBtI,QAASyI,MAG5B,SAAUxI,EAAQD,GAChB,YAaA,IAAI4lB,GAAS,SAAS/H,EAAQC,EAAUC,EAAQhX,GAC9C0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAKod,UAAY,EACjBpd,KAAKqd,WAAY,EACjBrd,KAAKsd,UAAY,eAGnBH,GAAOjd,SAAW,SAAU,WAAY,SAAU,aAOlDid,EAAOhd,UAAU+S,SAGjBiK,EAAOhd,UAAU+P,WAGjBiN,EAAOhd,UAAUod,cAAe,EAGhCJ,EAAOhd,UAAUqd,gBAAiB,EAalCL,EAAOhd,UAAU0V,QAAU,WAEvB,GAAInb,GAAOsF,KAAK1B,UAAU5F,IAAI,QAE1BwR,EAAKlK,KAELkS,EAA0B,WAC5B,MAAOxX,GAAKwV,SAGViC,EAAwB,SAASjC,GACnChG,EAAGgG,QAAUA,EAGflQ,MAAK+Q,gBAAkB/Q,KAAKoV,OAAO5C,iBACjCN,EACAC,EAGF,IAAIsL,GAAwB,WAC1B,MAAO/iB,GAAK6W,YAGVmM,EAAsB,SAASxK,GACjChJ,EAAGgJ,MAAQA,EAGblT,MAAK2d,cAAgB3d,KAAKoV,OAAO1V,OAC/B+d,EACAC,IAWNP,EAAOhd,UAAU+W,WAAa,WAC5BlX,KAAK+Q,kBACL/Q,KAAK2d,iBAUPR,EAAOhd,UAAUyd,YAAc,WAE3B5d,KAAKud,cAAgBvd,KAAKud,cAU9BJ,EAAOhd,UAAU0d,cAAgB,WAE7B7d,KAAKwd,gBAAkBxd,KAAKwd,gBAMhCjmB,EAAQC,OAAOA,GAAQud,UAAU,SAAU,WACzC,OACEC,OACEoI,UAAU,oBACVE,UAAU,oBACVD,UAAU,qBAEZpI,SAAU,IACVoB,YAAY,EACZla,WAAYghB,EACZjI,kBAAkB,EAClB9Y,aAAc,mBACdtC,YAAa,iCAejB,IAAIgkB,GAAc,SAAS1I,EAAQE,EAAQD,EAAU/W,GACnD0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAK+d,MAAQ,EACb/d,KAAKge,MAAQ,eAGfF,GAAY5d,SAAW,SAAU,SAAU,WAAY,aAOvD4d,EAAY3d,UAAU8d,YAAa,EAGnCH,EAAY3d,UAAU+d,YAAa,EAGnCJ,EAAY3d,UAAUge,YAAa,EAGnCL,EAAY3d,UAAUie,UAAW,EAGjCN,EAAY3d,UAAUke,SAAU,EAahCP,EAAY3d,UAAU0V,QAAU,WAE5B,GAAIhE,GAAiB7R,KAAK1B,UAAU5F,IAAI,kBACpC4lB,EAAgBte,KAAK1B,UAAU5F,IAAI,iBACnC6lB,EAAiBve,KAAK1B,UAAU5F,IAAI,kBACpC8lB,EAAexe,KAAK1B,UAAU5F,IAAI,gBAClCgC,EAAOsF,KAAK1B,UAAU5F,IAAI,QAE1BwR,EAAKlK,KAELye,EAAmB,WACrB,MAAO/jB,GAAKxB,OAGVwlB,EAAiB,SAASxlB,GAC5BgR,EAAG+T,WAAa/kB,GAAS2Y,EACzB3H,EAAGyU,UAAYzlB,GAASolB,EACxBpU,EAAGiU,WAAajlB,GAASqlB,EACzBrU,EAAGkU,SAAWllB,GAASslB,EAGzBxe,MAAK4a,SAAW5a,KAAKoV,OAAO1V,OAC1B+e,EACAC,IAWNZ,EAAY3d,UAAU+W,WAAa,WACjClX,KAAK4a,YAMPrjB,EAAQC,OAAOA,GAAQud,UAAU,cAAe,WAC9C,OACEC,OACE+I,MAAM,qBACNC,MAAM,sBAER/I,SAAU,IACVoB,YAAY,EACZla,WAAY2hB,EACZ5I,kBAAkB,EAClB9Y,aAAc,wBACdtC,YAAa,uCAejB,IAAI8kB,GAAc,SAASxJ,EAAQE,EAAQD,EAAU/W,GACnD0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAGnBsgB,GAAY1e,SAAW,SAAU,SAAU,WAAY,aAOvD0e,EAAYze,UAAUjH,MAAQ,KAG9B0lB,EAAYze,UAAUkd,WAAY,EAalCuB,EAAYze,UAAU0V,QAAU,WAE5B,GAAInb,GAAOsF,KAAK1B,UAAU5F,IAAI,QAE1BwR,EAAKlK,KAELye,EAAmB,WACrB,MAAO/jB,GAAKxB,OAGVwlB,EAAiB,WACnBxU,EAAGhR,MAAQwB,EAAKkX,mBAGlB5R,MAAK4a,SAAW5a,KAAKoV,OAAO1V,OAC1B+e,EACAC,IAWNE,EAAYze,UAAU+W,WAAa,WACjClX,KAAK4a,YAMPrjB,EAAQC,OAAOA,GAAQud,UAAU,cAAe,WAC9C,OACEC,OACEqI,UAAW,0BAEbpI,SAAU,IACVoB,YAAY,EACZla,WAAYyiB,EACZ1J,kBAAkB,EAClB9Y,aAAc,wBACdtC,YAAa,uCAejB,IAAI+kB,GAAgB,SAASzJ,EAAQE,EAAQD,EAAU/W,GACrD0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAGnBugB,GAAc3e,SAAW,SAAU,SAAU,WAAY,aAOzD2e,EAAc1e,UAAU+P,QAAU,EAGlC2O,EAAc1e,UAAUkd,WAAY,EAapCwB,EAAc1e,UAAU0V,QAAU,WAE9B,GAAInb,GAAOsF,KAAK1B,UAAU5F,IAAI,QAE1BwR,EAAKlK,KAELye,EAAmB,WACrB,MAAO/jB,GAAKwV,SAGVwO,EAAiB,SAASxO,GAC5BhG,EAAGgG,QAAUA,EAAUA,EAAQ3K,OAAS,EAG1CvF,MAAK4a,SAAW5a,KAAKoV,OAAO5C,iBAC1BiM,EACAC,IAWNG,EAAc1e,UAAU+W,WAAa,WACnClX,KAAK4a,YAMPrjB,EAAQC,OAAOA,GAAQud,UAAU,gBAAiB,WAChD,OACEC,OACEqI,UAAW,4BAEbpI,SAAU,IACVoB,YAAY,EACZla,WAAY0iB,EACZ3J,kBAAkB,EAClB9Y,aAAc,0BACdtC,YAAa,2CAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIunB,GAAS,SAAS1J,EAAQC,EAAUC,EAAQC,GAC9CvV,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAKuV,YAAcA,EAEnBvV,KAAK+e,MAAQ,UAAY3J,EAAOI,IAEhCxV,KAAKgf,YAAczJ,EAAYG,aAAa,YAG9CoJ,GAAO5e,SAAW,SAAS,WAAW,SAAU,eAOhD4e,EAAO3e,UAAU6e,aAAc,EAG/BF,EAAO3e,UAAU8e,UAAY,cAc7BH,EAAO3e,UAAU+e,UAAY,SAASC,GACpC,OAAQA,GACN,IAAK,cACL,IAAK,WACHnf,KAAKif,UAAYE,IAUvB5nB,EAAQC,OAAOA,GAAQud,UAAU,SAAU,WACzC,OACEC,OACEuB,KAAM,eACN0I,UAAW,qBAEbhK,SAAU,IACVoB,YACE+I,SAAU,kBACVC,YAAa,qBAEfljB,WAAY2iB,EACZ5J,kBAAkB,EAClB9Y,aAAc,mBACdtC,YAAa,mCAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAI+nB,GAAY,SAASlK,EAAQC,EAAUC,EAAQhX,GACjD0B,KAAKqV,SAAWA,EAChBrV,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAK1B,UAAYA,EAEjB0B,KAAKuf,MAAQ,KACbvf,KAAKwf,OAAS,KACdxf,KAAKyf,gBACLzf,KAAK0f,cAAgB,KACrB1f,KAAK2f,aAAe,SACpB3f,KAAK4f,WAAa,YAClB5f,KAAK6f,eAAiB,UAEtB,IAAI3V,GAAKlK,IACTA,MAAK4a,SAAWxF,EAAO1V,OACrB,WAAY,MAAOwK,GAAGyL,UACtB,SAASA,GACHA,EACFzL,EAAGmL,SAASkE,SAASrP,EAAG2V,gBAExB3V,EAAGmL,SAASyK,YAAY5V,EAAG2V,gBAG7B3V,EAAGwV,cAAcK,WAAWC,SAAUrK,MAI1C3V,KAAKigB,UAAYjgB,KAAKigB,UAAU9Z,KAAKnG,MAGvCsf,GAAUpf,SAAW,SAAS,WAAW,SAAS,aAOlDof,EAAUnf,UAAUpF,KAAO,KAG3BukB,EAAUnf,UAAU2a,OAAQ,EAG5BwE,EAAUnf,UAAUwV,UAAW,EAG/B2J,EAAUnf,UAAU+f,YAAc,SAclCZ,EAAUnf,UAAU0V,QAAU,WAC5B,GAAI3M,GAAUlJ,KAAK1B,UAAU5F,IAAI,UAEjCsH,MAAKuf,MAAQhoB,EAAQiiB,QAAQ/V,SAAS0c,MACtCngB,KAAKqV,SAASkE,SAASvZ,KAAK4f,WAC5B,IAAIpG,GAAUxZ,KAAKqV,SAAS3c,IAAI,EAEhCsH,MAAK0f,cAAgBU,SAAS5G,EAE9B,IAAItP,GAAKlK,KACL6C,GACFwd,SAAS,EACTC,YAAY,EACZN,SAAUhgB,KAAK2V,SACf4K,MAAOvgB,KAAKwgB,WAAWra,KAAKnG,MAC5BygB,OAAQzgB,KAAK0gB,YAAYva,KAAKnG,MAC9B2gB,QAAS3gB,KAAK4gB,aAAaza,KAAKnG,MAChC6gB,MACIC,SAAS,SAAStc,EAAEC,EAAEsc,GAapB,GATK7W,EAAG8W,UACN9W,EAAG8W,SACDxc,EAAGuc,EAAYE,YAAYC,KAAK1c,EAChCC,EAAGsc,EAAYE,YAAYC,KAAKzc,KAM/Bsc,EAAYI,WACf,OACE3c,EAAG0F,EAAG8W,QAAQxc,EACdC,EAAGyF,EAAG8W,QAAQvc,KAKpB2c,SAAS,GAIXphB,MAAK8a,QACPvjB,EAAQ6U,OAAOvJ,GAAWwe,aAAa,IACvCrhB,KAAK0f,cAAc3E,GAAG,OAAQ/a,KAAKshB,QAAQnb,KAAKnG,QAGlDA,KAAK0f,cAAcK,UAAUld,GAC7B7C,KAAK0f,cAAc6B,QAAUvhB,KAAKgX,SAAS7Q,KAAKnG,MAEhDA,KAAKwhB,QAAUjqB,EAAQiiB,QAAQtQ,GAC/BlJ,KAAKwhB,QAAQzG,GAAG,SAAU/a,KAAKyhB,UAUjCnC,EAAUnf,UAAU+W,WAAa,WAC/BlX,KAAKwhB,QAAQrG,IAAI,SAAUnb,KAAKigB,WAChCjgB,KAAK0f,cAAcgC,QACnB1hB,KAAK4a,YAUP0E,EAAUnf,UAAU8f,UAAY,WAC9BjgB,KAAKghB,QAAU,MAUjB1B,EAAUnf,UAAUygB,aAAe,SAAS5c,GAC1C,GAAIzE,GAAUS,KAAK8a,MAEjB9a,KAAKwf,OADLjoB,EAAQiiB,QAAQxV,EAAMzE,OAGxBA,GAAOga,SAASvZ,KAAK2f,cAErB3f,KAAK2hB,SAAS,eACZ3L,OAAQhS,EACR4d,MAAO5hB,KAAKjF,QAYhBukB,EAAUnf,UAAUugB,YAAc,SAAS1c,GACzC,GAAIzE,GAAUS,KAAK8a,MAEjB9a,KAAKwf,OADLjoB,EAAQiiB,QAAQxV,EAAMzE,QAGpBiF,GAAKxE,KAAKyf,aAAajb,GAAK,GAAKR,EAAM6d,GACvCpd,GAAKzE,KAAKyf,aAAahb,GAAK,GAAKT,EAAM8d,EAE3C9hB,MAAK+hB,WAAWxiB,EAAOiF,EAAEC,GAEzBzE,KAAK2hB,SAAS,cACZ3L,OAAQhS,EACR4d,MAAO5hB,KAAKjF,QAahBukB,EAAUnf,UAAUqgB,WAAa,SAASxc,GACxC,GAAIge,KAAYhe,EAAM+c,YAAYI,UAElC,IAAKnhB,KAAK8a,MAWR9a,KAAKyf,gBACLzf,KAAKwf,OAAOpE,SACZpb,KAAKwf,OAAS,SAbC,CACf,GAAIjgB,GAAShI,EAAQiiB,QAAQxV,EAAMzE,OACnCA,GAAOugB,YAAY9f,KAAK2f,cAInBqC,GACHhiB,KAAK+hB,WAAWxiB,EAAO,EAAE,GAS7BS,KAAK2hB,SAAS,aACZ3L,OAAQhS,EACR4d,MAAO5hB,KAAKjF,OAGVinB,GACFhiB,KAAK2hB,SAAS,UACZ3L,OAAQhS,EACR4d,MAAO5hB,KAAKjF,QAgBlBukB,EAAUnf,UAAUmhB,QAAU,SAAStd,GACrC,GAAIie,GAAeje,EAAMie,aACrBlB,EAAc/c,EAAM+c,YACpBvH,EAAUxV,EAAMke,aAIpB,KAAIliB,KAAK2V,SAAT,CAMA,GAAIoL,EAAYoB,gBAAkBpB,EAAYqB,cAAe,CAC3DpiB,KAAKwf,OAASjoB,EAAQiiB,QAAQA,GAASsB,OAEvC,IAAIuH,GAAU7I,EAAQ8I,aAAe,EACjCC,EAAU/I,EAAQgJ,YAAc,EAEhCC,EAAUze,EAAM0e,QAClB1e,EAAM0e,QAAQ,GAAGD,MACjBze,EAAMye,MACJE,EAAU3e,EAAM0e,QAClB1e,EAAM0e,QAAQ,GAAGC,MACjB3e,EAAM2e,KAER3iB,MAAKwf,OAAOoD,KACVnK,KAAOkK,EAAQJ,EAAW,KAC1B/J,IAAMiK,EAAQJ,EAAW,KACzBQ,SAAU,aAGZ7iB,KAAKuf,MAAMvE,OAAOhb,KAAKwf,QACvBhG,EAAUxZ,KAAKwf,OAAO9mB,IAAI,GAI5BqoB,EAAY+B,OAAQlpB,KAAM,QAAUqoB,EAAczI,KAUpD8F,EAAUnf,UAAU6W,SAAW,WAC7B,MAAOhX,MAAKjF,MAadukB,EAAUnf,UAAU4hB,WAAa,SAASvI,EAAShV,EAAGC,GACpD,GAAIF,GAAY,aAAaC,EAAE,MAAMC,EAAE,KAEvC+U,GAAQoJ,KACN9d,gBAAmBP,EACnBQ,aAAgBR,EAChBS,YAAeT,EACfU,WAAcV,EACdW,UAAaX,IAGfvE,KAAKyf,aAAajb,EAAIA,EACtBxE,KAAKyf,aAAahb,EAAIA,GAUxB6a,EAAUnf,UAAUwhB,SAAW,SAAShpB,EAAQoqB,GAC9C/iB,KAAKoV,OAAO1C,WAAW1S,KAAKrH,GAAQwN,KAAKnG,KAAK+iB,KAMhDxrB,EAAQC,OAAOA,GAAQud,UAAU,YAAa,WAC5C,OACEC,OACEja,KAAM,kBACN+f,MAAO,mBACPnF,SAAU,sBACVqN,YAAa,wBACbC,WAAY,uBACZC,UAAW,sBACXC,OAAQ,oBAEVlO,SAAU,IACV9Y,WAAYmjB,EACZpK,kBAAkB,EAClB9Y,aAAc,wBAelB,IAAIgnB,GAAW,SAAShO,EAAQC,EAAUC,GACxCtV,KAAKqV,SAAWA,EAChBrV,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EAEdtV,KAAK0f,cAAgB,KACrB1f,KAAKqjB,YAAc,QACnBrjB,KAAK2f,aAAe,SACpB3f,KAAK4f,WAAa,WAClB5f,KAAKsjB,aAAe,YACpBtjB,KAAK6f,eAAiB,UAEtB,IAAI3V,GAAKlK,IACTA,MAAK4a,SAAWxF,EAAO1V,OACrB,WAAY,MAAOwK,GAAGyL,UACtB,SAASA,GACHA,EACFzL,EAAGmL,SAASkE,SAASrP,EAAG2V,gBAExB3V,EAAGmL,SAASyK,YAAY5V,EAAG2V,kBAMnCuD,GAASljB,SAAW,SAAS,WAAW,UAOxCkjB,EAASjjB,UAAUwV,UAAW,EAc9ByN,EAASjjB,UAAU0V,QAAU,WAC3B7V,KAAKuf,MAAQhoB,EAAQiiB,QAAQ/V,SAAS0c,MACtCngB,KAAKqV,SAASkE,SAASvZ,KAAK4f,WAC5B,IAAI2D,GAAS,IAAMvjB,KAAKsjB,aACpB9J,EAAUxZ,KAAKqV,SAAS3c,IAAI,EAEhCsH,MAAK0f,cAAgBU,SAAS5G,GAC3BgK,UACCD,OAAQA,EACRvD,SAAUhgB,KAAK2V,SACf8N,OAAQzjB,KAAK0jB,QAAQvd,KAAKnG,MAC1B2jB,YAAa3jB,KAAK4jB,aAAazd,KAAKnG,MACpC6jB,YAAa7jB,KAAK8jB,aAAa3d,KAAKnG,MACpC+jB,eAAgB/jB,KAAKgkB,gBAAgB7d,KAAKnG,MAC1CikB,iBAAkBjkB,KAAKkkB,kBAAkB/d,KAAKnG,SAWpDojB,EAASjjB,UAAU+W,WAAa,WAC9BlX,KAAK0f,cAAcgC,QACnB1hB,KAAK4a,YAWPwI,EAASjjB,UAAU+jB,kBAAoB,SAASlgB,GAC9ChE,KAAKqV,SAASyK,YAAY9f,KAAK2f,aAC/B,IAAI5kB,GAAOiJ,EAAM+b,UAAUwB,SAE3BvhB,MAAK2hB,SAAS,oBACZ3L,OAAQhS,EACR4d,MAAO7mB,KAYXqoB,EAASjjB,UAAU6jB,gBAAkB,SAAShgB,GAC5ChE,KAAKqV,SAASkE,SAASvZ,KAAK2f,aAC5B,IAAI5kB,GAAOiJ,EAAM+b,UAAUwB,SAE3BvhB,MAAK2hB,SAAS,kBACZ3L,OAAQhS,EACR4d,MAAO7mB,KAYXqoB,EAASjjB,UAAUyjB,aAAe,SAAS5f,GACzChE,KAAKqV,SAASkE,SAASvZ,KAAKqjB,YAC5B,IAAItoB,GAAOiJ,EAAM+b,UAAUwB,SAE3BvhB,MAAK2hB,SAAS,eACZ3L,OAAQhS,EACR4d,MAAO7mB,KAYXqoB,EAASjjB,UAAU2jB,aAAe,SAAS9f,GACzChE,KAAKqV,SAASyK,YAAY9f,KAAKqjB,YAC/B,IAAItoB,GAAOiJ,EAAM+b,UAAUwB,SAE3BvhB,MAAK2hB,SAAS,eACZ3L,OAAQhS,EACR4d,MAAO7mB,KAaXqoB,EAASjjB,UAAUujB,QAAU,SAAS1f,GACpChE,KAAKqV,SAASyK,YAAY9f,KAAKqjB,YAC/B,IAAItoB,GAAOiJ,EAAM+b,UAAUwB,SAE3BvhB,MAAK2hB,SAAS,UACZ3L,OAAQhS,EACR4d,MAAO7mB,KAWXqoB,EAASjjB,UAAUwhB,SAAW,SAAShpB,EAAQoqB,GAC7C/iB,KAAKoV,OAAO1C,WAAW1S,KAAKrH,GAAQwN,KAAKnG,KAAK+iB,KAMhDxrB,EAAQC,OAAOA,GAAQud,UAAU,WAAY,WAC3C,OACEC,OACEW,SAAU,qBACVwO,iBAAkB,4BAClBC,eAAgB,0BAChBC,YAAa,uBACbC,YAAa,uBACbnB,OAAQ,mBAEVlO,SAAU,IACV9Y,WAAYinB,EACZlO,kBAAkB,EAClB9Y,aAAc,0BAIjByD,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIgtB,GAAY,SAASnP,EAAQC,EAAUC,EAAQhX,GACjD0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAKwkB,WAAa,KAClBxkB,KAAKykB,iBACLzkB,KAAK0kB,MAAQ1kB,KAAK0kB,MAAMve,KAAKnG,MAC7BA,KAAK2kB,sBAAwB3kB,KAAK2kB,sBAAsBxe,KAAKnG,MAG/DukB,GAAUrkB,SAAW,SAAS,WAAW,SAAU,aAOnDqkB,EAAUpkB,UAAU0C,QAAU,KAa9B0hB,EAAUpkB,UAAU0V,QAAU,WAC5B,GAAIyD,GAAWtZ,KAAK1B,UAAU5F,IAAI,WAGlC4gB,GAAStZ,KAAK0kB,MAAO,IAUvBH,EAAUpkB,UAAU+W,WAAa,WAC3BlX,KAAKwkB,YACPxkB,KAAKwkB,WAAWnJ,WAGlBrb,KAAK4kB,wBAWPL,EAAUpkB,UAAU0kB,eAAiB,SAASC,GAC5C9kB,KAAKykB,cAAcnsB,KAAKwsB,IAU1BP,EAAUpkB,UAAUukB,MAAQ,WAC1B,GAAI3lB,GAAaiB,KAAK1B,UAAU5F,IAAI,cAChC8gB,EAAUxZ,KAAKqV,SAAS3c,IAAI,GAE5BmK,EAAUtL,EAAQ6U,QAElB0U,QAAS,eACThd,WAAW,GAEb9D,KAAK6C,YAGP7C,MAAK4kB,qBAAuB7lB,EAAWgmB,IACrC,sBACA/kB,KAAK2kB,uBAGP3kB,KAAKwkB,WAAa1hB,MAAMkiB,UAAUxL,EAAS3W,IAU7C0hB,EAAUpkB,UAAUwkB,sBAAwB,SAASM,EAAKC,GACxD,GAAIC,GAAU,SAASxS,EAAMyS,GAC3B,GAAIC,GAAWH,EAAO9P,OAAOI,IACzB8P,EAAS3S,EAAKyC,OAAOI,GAGrB6P,KAAaC,GAKZJ,EAAOK,MAKP5S,EAAK4S,OAKVvlB,KAAKwkB,WAAWgB,OAAOJ,GACvBzS,EAAK4S,MAAO,GAGdhuB,GAAQ+B,QACN0G,KAAKykB,cACLU,EAAQhf,KAAKnG,QAOjBzI,EAAQC,OAAOA,GAAQud,UAAU,YAAa,WAC5C,OACEC,OACEnS,QAAS,sBAEXoS,SAAU,IACVoB,YAAY,EACZla,WAAYooB,EACZrP,kBAAkB,EAClB9Y,aAAc,sBACdtC,YAAa,oCAejB,IAAI2rB,GAAc,SAASrQ,EAAQC,EAAUC,EAAQhX,GACnD0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAGnBmnB,GAAYvlB,SAAW,SAAS,WAAW,SAAU,aAOrDulB,EAAYtlB,UAAU8F,GAAK,KAG3Bwf,EAAYtlB,UAAUolB,MAAO,EAc7BE,EAAYtlB,UAAU0V,QAAU,WAC9B,GAAI6P,GAAY,eAAiB1lB,KAAKoV,OAAOI,GAE7CxV,MAAKglB,UAAUH,eAAe7kB,MAC9BA,KAAK+e,MAAQ/e,KAAKiG,IAAMyf,GAW1BD,EAAYtlB,UAAUiW,QAAU,WAC9BpW,KAAKulB,MAAQvlB,KAAKulB,IAElB,IAAIxmB,GAAaiB,KAAK1B,UAAU5F,IAAI,aACpCqG,GAAW4mB,WAAW,sBAAuB3lB,OAM/CzI,EAAQC,OAAOA,GAAQud,UAAU,cAAe,WAC9C,OACEC,OACE/O,GAAI,gBACJsf,KAAM,qBAERtQ,SAAU,IACVoB,YACEC,MAAO,oBACPsP,QAAS,sBAEXnP,SACEuO,UAAW,cAEb7oB,WAAYspB,EACZvQ,kBAAkB,EAClB9Y,aAAc,wBACdtC,YAAa,wCAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIsuB,GAAW,SAASzQ,EAAQC,EAAUC,EAAQhX,GAChD0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAK6C,WAEL7C,KAAK8lB,QAAU,KACf9lB,KAAK+lB,QAAU,KACf/lB,KAAKgmB,UAAY,KACjBhmB,KAAK0kB,MAAQ1kB,KAAK0kB,MAAMve,KAAKnG,MAC7BA,KAAKimB,SAAWjmB,KAAKimB,SAAS9f,KAAKnG,MACnCA,KAAKkmB,YAAclmB,KAAKkmB,YAAY/f,KAAKnG,MAG3C6lB,GAAS3lB,SAAW,SAAS,WAAW,SAAU,aAOlD2lB,EAAS1lB,UAAUgmB,MAAQ,KAG3BN,EAAS1lB,UAAU0C,QAAU,KAG7BgjB,EAAS1lB,UAAUsF,SAAW,KAG9BogB,EAAS1lB,UAAUwV,SAAW,KAa9BkQ,EAAS1lB,UAAU0V,QAAU,WAC3B,GAAIyD,GAAWtZ,KAAK1B,UAAU5F,IAAI,WAGlC4gB,GAAStZ,KAAK0kB,MAAO,IAUvBmB,EAAS1lB,UAAU+W,WAAa,WAC9BlX,KAAK8lB,QAAQ3K,IAAI,WAAYnb,KAAKkmB,aAClClmB,KAAKqV,SAAS8F,IAAI,QAASnb,KAAKimB,UAEhCjmB,KAAKgmB,UAAU3K,UAAS,IAU1BwK,EAAS1lB,UAAUukB,MAAQ,WAezB,GAZI1kB,KAAKwZ,kBAAmB4M,QAC1BpmB,KAAK+lB,QAAU/lB,KAAKwZ,QAEhBjiB,EAAQyV,SAAShN,KAAKwZ,WACO,MAA3BxZ,KAAKwZ,QAAQ6M,OAAO,KACtBrmB,KAAK+lB,QAAU,IAAM/lB,KAAKwZ,SAG5BxZ,KAAK+lB,QAAUK,OAAOpmB,KAAK+lB,UAIH,IAAxB/lB,KAAK+lB,QAAQxgB,OAEf,WADA+gB,SAAQC,KAAK,wCAMf,IAAIC,GAAO,IAAMxmB,KAAK+lB,QAAQ9f,EAC9BjG,MAAK8lB,QAAUM,OAAO,YAAYI,EAAK,UAEvCxmB,KAAK6C,QAAU7C,KAAK6C,YACpB7C,KAAK6C,QAAQ4jB,OAASlvB,EAAQyV,SAAShN,KAAK6C,QAAQ4jB,QAClDzmB,KAAK6C,QAAQ4jB,OACb,cACFzmB,KAAK6C,QAAQmM,OAASzX,EAAQmvB,SAAS1mB,KAAK6C,QAAQmM,QAClDhP,KAAK6C,QAAQmM,OACb,IACFhP,KAAK6C,QAAQ8jB,SAAWpvB,EAAQmvB,SAAS1mB,KAAK6C,QAAQ8jB,UACpD3mB,KAAK6C,QAAQ8jB,SACb,IAEF3mB,KAAKqV,SAAS0F,GAAG,QAAS/a,KAAKimB,UAC/BjmB,KAAK8lB,QAAQ/K,GAAG,WAAY/a,KAAKkmB,aAEjClmB,KAAKgmB,UAAYljB,MAAM8jB,OAAO5mB,KAAK8lB,QAAS9lB,KAAK6C,UAUnDgjB,EAAS1lB,UAAU8lB,SAAW,WAC5B,GAAI3M,GAAWtZ,KAAK1B,UAAU5F,IAAI,YAE9BmuB,EAAU,WACR7mB,KAAK2V,UAIT3V,KAAKgmB,UAAUc,SAAS9mB,KAAK+lB,SAG/BzM,GAASuN,EAAQ1gB,KAAKnG,MAAOA,KAAKmmB,QAUpCN,EAAS1lB,UAAU+lB,YAAc,WAC1B3uB,EAAQwvB,WAAW/mB,KAAKyF,WAI7BzF,KAAKoV,OAAO1C,WAAW1S,KAAKyF,WAM9BlO,EAAQC,OAAOA,GAAQud,UAAU,WAAY,WAC3C,OACEC,OACEwE,QAAS,YACT2M,MAAO,kBACPtjB,QAAS,oBACT4C,SAAU,qBACVkQ,SAAU,sBAEZV,SAAU,IACV9Y,WAAY0pB,EACZ3Q,kBAAkB,MAIrBrV,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIyvB,GAAa,SAAS5R,EAAQC,EAAUC,EAAQhX,GAClD0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAKtF,KAAO4D,EAAU5F,IAAI,QAC1BsH,KAAK+e,MAAQ,cAAgB3J,EAAOI,IAGtCwR,GAAW9mB,SAAW,SAAS,WAAW,SAAU,aAOpD8mB,EAAW7mB,UAAU4e,MAAQ,KAK7BxnB,EAAQC,OAAOA,GAAQud,UAAU,aAAc,WAC7C,OACEC,OACE7b,OAAQ,eAEV8b,SAAU,IACVoB,YACEvI,KAAM,iBACNmZ,cAAe,2BACfC,eAAgB,6BAElB/qB,WAAY6qB,EACZ9R,kBAAkB,EAClB9Y,aAAc,uBACdtC,YAAa,uCAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAI4vB,GAAc,SAAS/R,EAAQC,EAAUC,EAAQhX,GACnD0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAEhBrV,KAAKtF,KAAO4D,EAAU5F,IAAI,QAG5ByuB,GAAYjnB,SAAW,SAAS,WAAW,SAAU,aAKrD3I,EAAQC,OAAOA,GAAQud,UAAU,cAAe,WAC9C,OACEC,OACEoS,SAAU,iBAEZnS,SAAU,IACVoB,YACEgR,SAAU,YACVC,UAAW,aACXC,eAAgB,mBAElBprB,WAAYgrB,EACZjS,kBAAkB,EAClB9Y,aAAc,wBACdtC,YAAa,yCAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIiwB,GAAY,SAASpS,EAAQC,EAAUC,EAAQC,EAAa+D,GAE5DtZ,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAKsZ,SAAWA,EAChBtZ,KAAKuV,YAAcA,EAEnBvV,KAAKynB,uBACLznB,KAAK0nB,qBACL1nB,KAAK2nB,cAAgB,KACrB3nB,KAAK4nB,YAAc,KACnB5nB,KAAK6nB,aACL7nB,KAAK4a,YAGT4M,GAAUtnB,SAAW,SAAU,WAAY,SAAU,cAAe,YAOpEsnB,EAAUrnB,UAAU8F,GAAK,GAGzBuhB,EAAUrnB,UAAU2nB,MAAQ,GAG5BN,EAAUrnB,UAAU4nB,QAAU,KAG9BP,EAAUrnB,UAAU6nB,YAAa,EAGjCR,EAAUrnB,UAAU8nB,cAAe,EAGnCT,EAAUrnB,UAAU+nB,WAAa,gBAGjCV,EAAUrnB,UAAUgoB,aAAe,iBAGnCX,EAAUrnB,UAAUioB,aAAe,kBAcnCZ,EAAUrnB,UAAU0V,QAAU,WAK1B7V,KAAKiG,GAAK,cAAgBjG,KAAKoV,OAAOI,IAGtCxV,KAAKqoB,cAGLroB,KAAKsoB,eAUTd,EAAUrnB,UAAU+W,WAAa,WAE7B3f,EAAQ+B,QAAQ0G,KAAKynB,oBAAqB,SAASjO,GACjDA,EAAQ4B,WAGV7jB,EAAQ+B,QAAQ0G,KAAK0nB,kBAAmB,SAAS1S,GAC/CA,EAAMqG,aAGR9jB,EAAQ+B,QAAQ0G,KAAK6nB,UAAW,SAASU,GACvCA,MAGFhxB,EAAQ+B,QAAQ0G,KAAK4a,SAAU,SAAS4N,GACtCA,OAcNhB,EAAUrnB,UAAUsoB,SAAW,SAASV,GAEpC/nB,KAAK+nB,QAAUA,GAUnBP,EAAUrnB,UAAUuoB,QAAU,WAEtB1oB,KAAK+nB,QAAQY,QACf3oB,KAAK2nB,cAAc7H,YAAY9f,KAAKmoB,cACpCnoB,KAAK2nB,cAAcpO,SAASvZ,KAAKooB,gBAEjCpoB,KAAK2nB,cAAc7H,YAAY9f,KAAKooB,cACpCpoB,KAAK2nB,cAAcpO,SAASvZ,KAAKmoB,eAGnCnoB,KAAKioB,aAAejoB,KAAK+nB,QAAQa,UAUrCpB,EAAUrnB,UAAU0oB,OAAS,WAEzB7oB,KAAK2nB,cAAc7H,YAAY9f,KAAKmoB,cACpCnoB,KAAK2nB,cAAc7H,YAAY9f,KAAKooB,cACpCpoB,KAAK+nB,QAAQe,gBACb9oB,KAAKioB,cAAe,GAUxBT,EAAUrnB,UAAUkoB,YAAc,WAE9B,GAAIne,GAAKlK,KAIL+oB,EAAe/oB,KAAKoV,OAAO5C,iBAC7B,8BACA,SAASwW,EAAUC,GAGjB,GAAID,IAAaC,GAMZD,EAASE,WAKVF,EAASG,SAMb,OAAKH,EAASI,YACRlf,EAAG8d,eACL9d,GAAG2e,aAKP3e,GAAGwe,WAIP1oB,MAAK4a,SAAStiB,KAAKywB,IAWvBvB,EAAUrnB,UAAUmoB,YAAc,WAE9B,GAAIpe,GAAKlK,KAGLqpB,EAAoB,SAASvO,EAAO9F,GAEtC,GAAI+J,GAAQ,YAAc7U,EAAGjE,GACzBzL,EAAWjD,EAAQiiB,QAAQuF,EAE/BjE,GAAMwO,KAAK,KAAMpf,EAAGjE,IAEpBzL,EAAS+uB,YAAYzO,GAErB5Q,EAAGyd,cAAgB7M,EAEnB5Q,EAAGwd,kBAAkBpvB,KAAK0c,GAC1B9K,EAAGud,oBAAoBnvB,KAAKwiB,IAK1B0O,EAAkB,SAAS1O,EAAO9F,GAEpC,GAAI+J,GAAQ,UAAY7U,EAAGjE,GACvBzL,EAAWjD,EAAQiiB,QAAQuF,EAE/BjE,GAAMwO,KAAK,MAAOpf,EAAGjE,IACrB6U,EAAMvB,SAASrP,EAAGge,YAElB1tB,EAAS+uB,YAAYzO,GAErB5Q,EAAG0d,YAAc9M,EAEjB5Q,EAAGwd,kBAAkBpvB,KAAK0c,GAC1B9K,EAAGud,oBAAoBnvB,KAAKwiB,IAI1B9U,EAAU,WAEZkE,EAAGqL,YAAY8T,EAAmB,KAAM,MACxCnf,EAAGqL,YAAYiU,EAAiB,KAAM,SAGxCxpB,MAAKsZ,SAAStT,IAMlBzO,EAAQC,OAAOqI,gBAAgBkV,UAAU,YAAY,WACnD,OACEC,OACIpb,KAAM,aACNouB,WAAY,wBACZE,WAAY,wBACZC,aAAc,0BACdC,aAAc,2BAElB/R,YACEyR,MAAO,SACP2B,WAAY,cACZC,WAAY,cACZC,WAAY,cACZC,aAAc,gBACdC,cAAe,iBACfC,eAAgB,kBAChBC,gBAAiB,mBACjBC,iBAAkB,oBAClBC,iBAAkB,oBAClBC,eAAgB,mBAElBjV,SAAU,IACV9Y,WAAYqrB,EACZtS,kBAAkB,EAClB9Y,aAAc,sBACdtC,YAAa,qCAWjB,IAAIqwB,GAAiB,SAAS/U,EAAQE,EAAQD,EAAU/W,GACtD0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAGnB6rB,GAAejqB,SAAW,SAAU,SAAU,WAAY,aAO1DiqB,EAAehqB,UAAUiqB,WAAY,EAarCD,EAAehqB,UAAU0V,QAAU,WAE/B,GAAIyD,GAAWtZ,KAAK1B,UAAU5F,IAAI,YAC9BkV,EAAO5N,KAAK1B,UAAU5F,IAAI,OAE9B,KAAKsH,KAAKqqB,UAER,WADAzc,GAAK2Y,KAAK,kDAIZ,IAAIvmB,KAAKoqB,UAAW,CAClB,GAAI5Q,GAAUxZ,KAAKqV,SAAS3c,IAAI,GAC5B4xB,EAAQ,WACV9Q,EAAQ8Q,QAGVhR,GAASgR,EAAO,GAGlBtqB,KAAKqqB,UAAU5B,SAASzoB,KAAK+nB,UAMjCxwB,EAAQC,OAAOA,GAAQud,UAAU,iBAAkB,WACjD,OACEC,OACEoV,UAAa,6BAEfnV,SAAU,IACVwB,SACEsR,QAAW,UACXsC,UAAa,eAEfnV,kBAAkB,EAClB/Y,WAAYguB,MAIftqB,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIgzB,GAAe,SAASnV,EAAQE,EAAQD,EAAU/W,EAAWiX,GAC/DvV,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EACjB0B,KAAKuV,YAAcA,EAEnBvV,KAAKwqB,OAAS,KACdxqB,KAAKyqB,SAAWzqB,KAAKyqB,SAAStkB,KAAKnG,MAGrCuqB,GAAarqB,SAAW,SAAU,SAAU,WAAY,YAAa,eAOrEqqB,EAAapqB,UAAUuqB,WAGvBH,EAAapqB,UAAUsH,SAAU,EAGjC8iB,EAAapqB,UAAU3C,MAAQ,IAa/B+sB,EAAapqB,UAAU0V,QAAU,WAE7B,GAAI3L,GAAKlK,IAETA,MAAK4a,SAAW5a,KAAKoV,OAAO1V,OAC1B,WAAY,MAAOwK,GAAGzC,SACtB,SAASA,GACP,MAAIA,OACFyC,GAAGugB,SAAS,OAIdvgB,GAAGygB,WAYXJ,EAAapqB,UAAU+W,WAAa,WAEhClX,KAAK4a,WACL5a,KAAK2qB,SAWTJ,EAAapqB,UAAUsqB,SAAW,SAASrF,GACzC,GAAI9L,GAAWtZ,KAAK1B,UAAU5F,IAAI,YAC9BkyB,EAAU5qB,KAAK0qB,QAAQnlB,OAAS,CAIpC,OAFAvF,MAAKxC,MAAQwC,KAAK0qB,QAAQtF,GAEtBA,GAASwF,MACX5qB,MAAK2qB,aAIP3qB,KAAKwqB,OAASlR,EAAStZ,KAAKyqB,SAAU,KAAK,IAAQrF,KAUrDmF,EAAapqB,UAAUwqB,MAAQ,WAC7B,GAAIrR,GAAWtZ,KAAK1B,UAAU5F,IAAI,WAElC4gB,GAASuR,OAAO7qB,KAAKwqB,QACrBxqB,KAAKyH,SAAU,EACfzH,KAAKwqB,OAAS,MAMhBjzB,EAAQC,OAAOA,GAAQud,UAAU,eAAgB,WAC/C,OACEC,OACE0V,QAAS,gBACTjjB,QAAS,yBAEXwN,SAAU,IACVC,kBAAkB,EAClB/Y,WAAYouB,EACZnuB,aAAc,yBACdtC,YAAa,0CAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIuzB,GAA0B,SAAS1V,EAAQC,EAAUC,EAAQ5Y,EAAIW,GAEjE2C,KAAKtD,GAAKA,EACVsD,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAEhBrV,KAAK3C,SAAWA,EAEhB2C,KAAK+qB,UAAY,0BAGrBD,GAAwB5qB,SAAW,SAAU,WAAY,SAAU,KAAM,YAazE4qB,EAAwB3qB,UAAU0V,QAAU,WAExC7V,KAAK+nB,QAAQiD,iBAAiBC,wBAA0BjrB,KAAKkrB,SAAS/kB,KAAKnG,OAW/E8qB,EAAwB3qB,UAAU+qB,SAAW,SAASC,GAElD,GAAIxuB,GAAQqD,KAAKtD,GAAGC,QAEhBuN,EAAKlK,KACLpD,EAAkB,SAASyU,GAE7B,MAAKA,GAASC,UAMdpH,EAAG6d,QAAQqD,aAAalhB,EAAG6gB,WAAW,OACtCpuB,GAAMvC,YANJ8P,EAAG6d,QAAQqD,aAAalhB,EAAG6gB,WAAW,OACtCpuB,GAAMyE,WAQNvE,EAAkB,WAEpBF,EAAMyE,SAWR,OARApB,MAAK3C,SAASguB,0BAEVvtB,KAAMqtB,GAERvuB,EACAC,GAGKF,EAAM/B,SAMjBrD,EAAQC,OAAOqI,gBAAgBkV,UAAU,0BAA0B,WAC/D,OACEE,SAAU,IACVwB,SACEsR,QAAS,WAEX7S,kBAAkB,EAClB/Y,WAAY2uB,IAWlB,IAAIQ,GAA0B,SAASlW,EAAQC,EAAUC,EAAQ5Y,EAAIW,GAEjE2C,KAAKtD,GAAKA,EACVsD,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAEhBrV,KAAK3C,SAAWA,EAGpBiuB,GAAwBprB,SAAW,SAAU,WAAY,SAAU,KAAM,YAazEorB,EAAwBnrB,UAAU0V,QAAU,WAExC7V,KAAK+nB,QAAQiD,iBAAiBO,wBAA0BvrB,KAAKkrB,SAAS/kB,KAAKnG,OAU/EsrB,EAAwBnrB,UAAU+qB,SAAW,SAASC,GAElD,GAAIxuB,GAAQqD,KAAKtD,GAAGC,QAEhBC,EAAkB,WAEpBD,EAAMyE,UAGJvE,EAAkB,WAEpBF,EAAMvC,UAWR,OARA4F,MAAK3C,SAASmuB,yBAEV1tB,KAAMqtB,GAERvuB,EACAC,GAGKF,EAAM/B,SAMjBrD,EAAQC,OAAOqI,gBAAgBkV,UAAU,0BAA0B,WAC/D,OACEE,SAAU,IACVwB,SACEsR,QAAS,WAEX7S,kBAAkB,EAClB/Y,WAAYmvB,IAWlB,IAAIG,GAAuB,SAASrW,EAAQC,EAAUC,EAAQ5Y,EAAImB,GAE9DmC,KAAKtD,GAAKA,EACVsD,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAEhBrV,KAAKnC,MAAQA,EAGjB4tB,GAAqBvrB,SAAW,SAAU,WAAY,SAAU,KAAM,SAatEurB,EAAqBtrB,UAAU0V,QAAU,WAErC7V,KAAK+nB,QAAQiD,iBAAiBU,qBAAuB1rB,KAAKkrB,SAAS/kB,KAAKnG,OAU5EyrB,EAAqBtrB,UAAU+qB,SAAW,SAASC,GAE/C,GAAIxuB,GAAQqD,KAAKtD,GAAGC,QAEhBC,EAAkB,WAEpBD,EAAMyE,UAGJvE,EAAkB,WAEpBF,EAAMvC,UAWR,OARA4F,MAAKnC,MAAM8tB,eAEP1f,SAAUkf,GAEZvuB,EACAC,GAGKF,EAAM/B,SAMjBrD,EAAQC,OAAOqI,gBAAgBkV,UAAU,uBAAuB,WAC5D,OACEE,SAAU,IACVwB,SACEsR,QAAS,WAEX7S,kBAAkB,EAClB/Y,WAAYsvB,MAIjB5rB,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIq0B,GAAe,SAASxW,EAAQC,EAAUC,EAAQhX,GACpD,GAAImT,GAAOnT,EAAU5F,IAAI,gBAEzBsH,MAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAK+e,MAAQ,iBAAmB3J,EAAOI,IAEvCxV,KAAKtF,KAAOsF,KAAK1B,UAAU5F,IAAI,QAC/BsH,KAAK8S,KAAO9S,KAAKtF,KAAK8W,cAAcC,GACpCzR,KAAKiR,OAASjR,KAAKtF,KAAKgX,iBAAiBD,GAG3Cma,GAAa1rB,SAAW,SAAU,WAAY,SAAU,aASxD0rB,EAAazrB,UAAUzF,KAAO,KAG9BkxB,EAAazrB,UAAU2S,KAAO,KAG9B8Y,EAAazrB,UAAU8Q,OAAS,KAKhC2a,EAAazrB,UAAU0rB,UAAW,EAGlCD,EAAazrB,UAAU2rB,gBAAkB,EAGzCF,EAAazrB,UAAU4rB,eAAiB,KAGxCH,EAAazrB,UAAU6rB,gBAAkB,KAGzCJ,EAAazrB,UAAU8rB,gBAAkB,KAGzCL,EAAazrB,UAAU+rB,kBAAmB,EAG1CN,EAAazrB,UAAUgsB,kBAAmB,EAG1CP,EAAazrB,UAAUisB,gBAAkB,KAGzCR,EAAazrB,UAAUksB,gBAAkB,KAKzCT,EAAazrB,UAAUmsB,OAAS,IAGhCV,EAAazrB,UAAUosB,KAAO,IAG9BX,EAAazrB,UAAUqsB,MAAQ,EAK/BZ,EAAazrB,UAAU4e,MAAQ,KAa/B6M,EAAazrB,UAAU0V,QAAU,WAC/B7V,KAAKysB,QAUPb,EAAazrB,UAAUusB,WAAa,WAClC,GAAIC,IACF7Z,KAAM9S,KAAK8S,KACX6E,MACEiV,WACEC,cAAe7sB,KAAKosB,gBACpBU,aAAc9sB,KAAKgsB,gBACnBe,QAAS/sB,KAAKksB,kBAEhBc,WACEH,cAAe7sB,KAAKqsB,gBACpBS,aAAc9sB,KAAKisB,gBACnBc,QAAS/sB,KAAKmsB,kBAEhBL,gBAAiB9rB,KAAK8rB,gBAAgB,GAExCmB,UAAWjtB,KAAKktB,aAUlB,OAPoB,QAAhBltB,KAAKiR,SACP0b,EAAUp1B,EAAQ6U,OAChBpM,KAAKiR,OACL0b,IAIGA,GAUTf,EAAazrB,UAAUinB,SAAW,WAChC,MAAkB,QAAdpnB,KAAK8S,OAID9S,KAAK8S,KAAKxB,UAUpBsa,EAAazrB,UAAUgtB,WAAa,WAClC,GAAIzyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK6V,YAINvQ,KAAKonB,cAILpnB,KAAK6rB,aAIoB,IAAzB7rB,KAAK8rB,kBACF9rB,KAAKgsB,oBAKiB,IAAzBhsB,KAAK8rB,kBACF9rB,KAAKisB,qBAedL,EAAazrB,UAAUssB,KAAO,WAC5B,GAAoB,OAAhBzsB,KAAKiR,OAAiB,CACxB,GAAI0G,GAAO3X,KAAKiR,OAAO0G,IAIvB3X,MAAKgsB,gBAAkBrU,EAAKiV,UAAUE,aACtC9sB,KAAK8rB,gBAAkBnU,EAAKmU,gBAG9B9rB,KAAK6rB,UAAW,EAChB7rB,KAAKosB,gBAAkBpsB,KAAKotB,iBAAiB,GAC7CptB,KAAKqsB,gBAAkBrsB,KAAKotB,iBAAiB,EAAIptB,KAAKwsB,OAEtDxsB,KAAKqtB,sBAUPzB,EAAazrB,UAAUmtB,MAAQ,WAC7BttB,KAAKysB,QAaPb,EAAazrB,UAAUrH,OAAS,WAC9B,GAAIoR,GAAKlK,KACLpD,EAAkB,WAIpBsN,EAAG4hB,mBAEDjvB,EAAkB,YAEtBmD,MAAK5F,UAAU2C,KACbH,EACAC,IAYJ+uB,EAAazrB,UAAU/F,QAAU,WAC/B,GAAIsC,GAAKsD,KAAK1B,UAAU5F,IAAI,KAE5B,KAAKsH,KAAKmtB,aAAc,CACtB,GAAIxwB,GAAQD,EAAGC,OAGf,OAFAA,GAAMyE,SAECzE,EAAM/B,QAGf,GAAI6K,GAA2B,OAAhBzF,KAAKiR,OAClBjR,KAAKutB,UACLvtB,KAAKwtB,SAEHb,EAAU3sB,KAAK0sB,aACfzb,EAASxL,GACXknB,QAASA,IAGPziB,EAAKlK,KACLpD,EAAkB,SAASqU,GAC7B,MAAIA,GAAOgc,eAET/iB,EAAG+G,OAASA,QAId/G,EAAG2hB,UAAW,IAEZhvB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKuS,EAMtB,OALArW,GAAQmC,KACNH,EACAC,GAGKjC,GAYTgxB,EAAazrB,UAAUstB,UAAY,SAASjwB,EAAO4hB,GACjD,OAAOA,GACL,IAAK,YACHpf,KAAKgsB,gBAAkBxuB,GAAS,IAChC,MACF,KAAK,YACHwC,KAAKisB,gBAAkBzuB,GAAS,KAKpCwC,KAAKqtB,sBAUPzB,EAAazrB,UAAU+sB,WAAa,WAClC,MAAgC,QAAzBltB,KAAKisB,iBAUdL,EAAazrB,UAAUktB,mBAAqB,WAC1CrtB,KAAKksB,iBAAmBlsB,KAAKgsB,kBAAoBhsB,KAAKosB,gBACtDpsB,KAAKmsB,iBAAmBnsB,KAAKisB,kBAAoBjsB,KAAKqsB,gBAElDrsB,KAAKksB,kBAAoBlsB,KAAKmsB,iBAChCnsB,KAAK+rB,eAAiB,EACb/rB,KAAKksB,iBACdlsB,KAAK+rB,eAAiB,EACb/rB,KAAKmsB,iBACdnsB,KAAK+rB,eAAiB,EAEtB/rB,KAAK+rB,eAAiB,GAY1BH,EAAazrB,UAAUitB,iBAAmB,SAASZ,GACjD,MAAOxsB,MAAKssB,OAASxmB,KAAK4nB,IAAI,EAAI1tB,KAAKusB,KAAMC,GAAS,IAMxDj1B,EAAQC,OAAOA,GAAQud,UAAU,eAAgB,WAC/C,OACEC,OACEuX,KAAM,qBACNC,MAAO,sBACPF,OAAQ,uBACRkB,SAAU,wBACVD,UAAW,0BAEbtY,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAYyvB,EACZxvB,aAAc,yBACdtC,YAAa,8CAejB,IAAI6zB,GAAuB,SAASvY,EAAOC,EAASC,GAClDtV,KAAKqV,SAAWA,EAChBrV,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EAEdtV,KAAK2V,UAAW,EAChB3V,KAAK4tB,SACL5tB,KAAK6tB,IAAM,CAEX,IAAI3jB,GAAKlK,IACTA,MAAK4a,SAAWxF,EAAO1V,OACrB,WAAY,MAAOwK,GAAG2jB,KACtB,SAASA,GACFA,IACH3jB,EAAG2jB,IAAM,EACT3jB,EAAG0jB,YAMXD,GAAqBztB,SAAW,SAAS,WAAW,UAOpDytB,EAAqBxtB,UAAUwV,UAAW,EAG1CgY,EAAqBxtB,UAAUytB,SAG/BD,EAAqBxtB,UAAU0tB,IAAM,EAGrCF,EAAqBxtB,UAAU2tB,OAAS,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAG7DH,EAAqBxtB,UAAU4tB,OAAS,EAAE,EAAE,GAAI,GAAI,GAAI,IAAK,IAAK,KAalEJ,EAAqBxtB,UAAU+W,WAAa,WAC1ClX,KAAK4a,YAWP+S,EAAqBxtB,UAAUgjB,OAAS,SAAS3lB,GAC/CwC,KAAK4tB,MAAMt1B,KAAKkF,GAChBwC,KAAK6tB,KAAOrwB,EAEZwC,KAAKwtB,UACHK,IAAK7tB,KAAK6tB,OAYdF,EAAqBxtB,UAAU6tB,OAAS,WACtChuB,KAAK6tB,KAAO7tB,KAAK4tB,MAAMK,MAEvBjuB,KAAKwtB,UACHK,IAAK7tB,KAAK6tB,OAOdt2B,EAAQC,OAAOA,GAAQud,UAAU,uBAAwB,WACvD,OACEC,OACE6Y,IAAK,4BACLL,SAAU,gCACV7X,SAAU,kCAEZV,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAYwxB,EACZvxB,aAAc,iCACdtC,YAAa,yDAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAI22B,GAAsB,SAAS9Y,EAAQ+Y,EAAS7Y,EAAQhX,GAC1D,GAAImT,GAAOnT,EAAU5F,IAAI,wBACrBgC,EAAO4D,EAAU5F,IAAI,OAEzBsH,MAAK1B,UAAYA,EACjB0B,KAAK8S,KAAOpY,EAAK8W,cAAcC,GAGjCyc,GAAoBhuB,SAAW,SAAS,WAAW,SAAU,aAK7DguB,EAAoB/tB,UAAU2S,KAAO,KAKrCob,EAAoB/tB,UAAU0rB,UAAW,EAGzCqC,EAAoB/tB,UAAUiuB,MAAQ,IAGtCF,EAAoB/tB,UAAUkuB,MAAQ,IAGtCH,EAAoB/tB,UAAUmuB,aAG9BJ,EAAoB/tB,UAAU+P,WAG9Bge,EAAoB/tB,UAAUouB,SAa9BL,EAAoB/tB,UAAU0V,QAAU,WACtC7V,KAAKysB,QAUPyB,EAAoB/tB,UAAUusB,WAAa,WACzC,OACE5Z,KAAM9S,KAAK8S,KACX6E,MACEzH,SACEse,IAAKxuB,KAAKkQ,QAAQse,IAAIC,QACtBC,IAAK1uB,KAAKkQ,QAAQwe,IAAID,SAExBE,UACEH,IAAKxuB,KAAAA,UAAYwuB,IAAII,KACrBF,IAAK1uB,KAAAA,UAAY0uB,IAAIE,OAGzBC,YAAa7uB,KAAK8uB,mBAWtBZ,EAAoB/tB,UAAUinB,SAAW,WACvC,MAAkB,QAAdpnB,KAAK8S,OAID9S,KAAK8S,KAAKxB,UAUpB4c,EAAoB/tB,UAAUgtB,WAAa,WACzC,GAAIzyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK6V,YAINvQ,KAAKonB,cAILpnB,KAAK6rB,aAIJ7rB,KAAKkQ,QAAQse,IAAIC,WAIjBzuB,KAAKkQ,QAAQwe,IAAID,YAcxBP,EAAoB/tB,UAAUssB,KAAO,WACnC,GAAI9lB,GAAS3G,KAAK1B,UAAU5F,IAAI,SAEhCsH,MAAKuuB,OACHvuB,KAAKouB,MACLpuB,KAAKquB,OAGPruB,KAAAA,WACEwuB,KACEvoB,GAAI,EACJ2oB,KAAMjoB,EAAOY,KAAKvH,KAAKuuB,QAEzBG,KACEzoB,GAAI,EACJ2oB,KAAMjoB,EAAOY,KAAKvH,KAAKuuB,SAI3BvuB,KAAKkQ,SACHse,KACEvoB,GAAI,EACJwoB,QAAS,MAEXC,KACEzoB,GAAI,EACJwoB,QAAS,OAIbzuB,KAAKsuB,WACHE,KACEvoB,GAAI,EACJyR,MAAO,EACPxH,WACAtW,KAAM,QACNm1B,MAAO,iBAETL,KACEzoB,GAAI,EACJyR,MAAO,EACPxH,WACAtW,KAAM,QACNm1B,MAAO,kBAIX/uB,KAAK6rB,UAAW,GAUlBqC,EAAoB/tB,UAAUmtB,MAAQ,WACpCttB,KAAKysB,QAaPyB,EAAoB/tB,UAAUrH,OAAS,SAASk2B,EAAQP,EAASQ,GAC/D,OAAQA,GACN,IAAK,MACER,EAAQve,QAAQ8e,EAAO/oB,MAC1BwoB,EAAQve,QAAQ8e,EAAO/oB,IAAM+oB,EAC7BA,EAAOP,QAAUA,EAAQ70B,KACzB60B,EAAQ/W,QAEV,MACF,KAAK,SACC+W,EAAQve,QAAQ8e,EAAO/oB,YAClBwoB,GAAQve,QAAQ8e,EAAO/oB,IAC9B+oB,EAAOP,QAAU,KACjBA,EAAQ/W,WAehBwW,EAAoB/tB,UAAU/F,QAAU,WACtC,GAAIsC,GAAKsD,KAAK1B,UAAU5F,IAAI,KAE5B,KAAKsH,KAAKmtB,aAAc,CACtB,GAAIxwB,GAAQD,EAAGC,OAGf,OAFAA,GAAMyE,SAECzE,EAAM/B,QAGf,GAAIqW,GAASjR,KAAKutB,WAChBZ,QAAS3sB,KAAK0sB,eAGZxiB,EAAKlK,KACLpD,EAAkB,WACpBsN,EAAG2hB,UAAW,GAEZhvB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKuS,EAMtB,OALArW,GAAQmC,KACNH,EACAC,GAGKjC,GAUTszB,EAAoB/tB,UAAU2uB,eAAiB,WAC7C,GAAII,GAAUlvB,KAAAA,UAAYwuB,IAAII,OAAS5uB,KAAKouB,MAAQ,EAAI,EACpDe,EAAUnvB,KAAAA,UAAY0uB,IAAIE,OAAS5uB,KAAKouB,MAAQ,EAAI,EAEpDgB,EAAWpvB,KAAKsuB,UAAUE,IAAI9W,MAAQwX,EACtCG,EAAWrvB,KAAKsuB,UAAUI,IAAIhX,MAAQyX,CAE1C,OAAOC,GAAWC,GAMpB93B,EAAQC,OAAOA,GAAQud,UAAU,sBAAuB,WACtD,OACEC,OACEuY,UAAW,iCAEbtY,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAY+xB,EACZ9xB,aAAc,gCACdtC,YAAa,qDAejB,IAAIw1B,GAA0B,SAASla,EAAOC,EAASC,EAAOhX,GAC5D0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAK4Z,SAAW5Z,KAAKqV,SAASoG,KAAK,SAGrC6T,GAAwBpvB,SAAW,SAAS,WAAW,SAAS,aAOhEovB,EAAwBnvB,UAAUyuB,KAAO,KAGzCU,EAAwBnvB,UAAUouB,SAGlCe,EAAwBnvB,UAAUiuB,MAAQ,IAG1CkB,EAAwBnvB,UAAUkuB,MAAQ,IAG1CiB,EAAwBnvB,UAAUovB,MAAO,EAGzCD,EAAwBnvB,UAAUqvB,SAAU,EAG5CF,EAAwBnvB,UAAUsvB,KAAO,OAGzCH,EAAwBnvB,UAAUuvB,MAAQ,QAG1CJ,EAAwBnvB,UAAUwvB,UAAY,IAG9CL,EAAwBnvB,UAAUyvB,WAAa,KAa/CN,EAAwBnvB,UAAU0V,QAAU,WAC1C,GAAI/R,GAAY9D,KAAK1B,UAAU5F,IAAI,aAC/B4gB,EAAWtZ,KAAK1B,UAAU5F,IAAI,YAE9BwR,EAAKlK,IAETA,MAAKuuB,QAED/wB,MAAOwC,KAAKouB,MACZyB,QAAO7vB,KAAK0vB,MACZ5hB,KAAM9N,KAAKouB;GAGX5wB,MAAOwC,KAAKquB,MACZwB,QAAO7vB,KAAKyvB,KACZ3hB,KAAM9N,KAAKquB,QAIXruB,KAAK2vB,YAAc3vB,KAAKouB,QAC1BpuB,KAAKuuB,MAAM,GAAXvuB,SAAsBA,KAAKyvB,KAC3BzvB,KAAKuuB,MAAM,GAAXvuB,SAAsBA,KAAK0vB,OAGL,OAApB1vB,KAAK4vB,aACP5vB,KAAKuuB,MAAM,GAAGzgB,KAAO9N,KAAK4vB,WAC1B5vB,KAAKuuB,MAAM,GAAGzgB,KAAO9N,KAAK4vB,YAG5B1lB,EAAG4lB,MAAQ5lB,EAAG6lB,UAEd,IAAIC,GAAmB,WACrB,GAAIC,GAAgB,SAASC,GAC3B,MAAIA,GAAK1yB,QAAU0M,EAAG4lB,MAAMtyB,WAC1B0yB,EAAAA,SAAahmB,EAAGwlB,YAIlBQ,EAAAA,SAAahmB,EAAGulB,MAGlBl4B,GAAQ+B,QAAQ4Q,EAAGqkB,MAAO0B,IAGxBE,EAAqB,SAASC,GAC5BA,IACFlmB,EAAGhL,SAAS0vB,KAAM1kB,EAAG4lB,MAAMtyB,QAC3B8b,EAAS0W,EAAkB,KAC3B9lB,EAAGqkB,MAAM,GAAGzgB,KAAO5D,EAAGkkB,MACtBlkB,EAAGqkB,MAAM,GAAGzgB,KAAO5D,EAAGmkB,MACtBnkB,EAAGslB,SAAU,IAIba,EAAuB,WACzB,MAAOnmB,GAAGqlB,MAGRe,EAAqB,SAASC,EAASC,GACrCD,IAAYC,IACdtmB,EAAG4lB,MAAQ5lB,EAAG6lB,aAIdU,EAAuB,WACzB,MAAOvmB,GAAG0kB,MAGR8B,EAAqB,WACvBxmB,EAAGymB,UAAU/B,KAAM1kB,EAAG4lB,MAAMtyB,QAC5B0M,EAAGslB,SAAU,GAGXoB,EAAwB,WAC1B1mB,EAAGkL,OAAO1C,WAAWge,GAGvB1wB,MAAK6wB,QAAQjC,KAAM1kB,EAAG4lB,MAAMtyB,QAExBsG,EAAUP,mBACZvD,KAAK4Z,SAASmB,GACZjX,EAAUP,kBACVqtB,GAIJ5wB,KAAK8wB,aAAe9wB,KAAKoV,OAAO1V,OAAO2wB,EAAsBF,GAC7DnwB,KAAK+wB,aAAe/wB,KAAKoV,OAAO1V,OAAO+wB,EAAsBH,IAU/DhB,EAAwBnvB,UAAU+W,WAAa,WAC7C,GAAIpT,GAAY9D,KAAK1B,UAAU5F,IAAI,YAEnCsH,MAAK4Z,SAASuB,IAAIrX,EAAUP,mBAC5BvD,KAAK+wB,eACL/wB,KAAK8wB,gBAWPxB,EAAwBnvB,UAAU4vB,SAAW,WAC3C,GAAIiB,GAAUhxB,KAAK1B,UAAU5F,IAAI,WAC7BiO,EAAS3G,KAAK1B,UAAU5F,IAAI,UAC5Bu4B,EAAStqB,EAAOY,KAAKvH,KAAKuuB,MAE9B,IAAkB,OAAdvuB,KAAK4uB,KACP,MAAOqC,EAGT,IAAIC,GAAWF,EAAQ,UACrBhxB,KAAKuuB,OAEH/wB,MAAOwC,KAAK4uB,MAIhB,OAAwB,KAApBsC,EAAS3rB,QACX+gB,QAAQC,KAAK,kDACN0K,GAGFC,EAAS,IAMlB35B,EAAQC,OAAOA,GAAQud,UAAU,0BAA2B,WAC1D,OACEC,OACE4Z,KAAM,gCACNW,KAAM,gCACNsB,OAAQ,iCACR3xB,QAAS,kCACTyxB,SAAU,mCACVhB,UAAW,qCACXC,WAAY,uCAEd3a,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAYmzB,EACZlzB,aAAc,oCACdtC,YAAa,4DAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAI45B,GAAW,SAAS/b,EAAQE,EAAQD,EAAU/W,GAChD,GAAImT,GAAOnT,EAAU5F,IAAI,aACrBgC,EAAO4D,EAAU5F,IAAI,OAEzBsH,MAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAK8S,KAAOpY,EAAK8W,cAAcC,GAGjC0f,GAASjxB,SAAW,SAAU,SAAU,WAAY,aASpDixB,EAAShxB,UAAU2S,KAAO,KAK1Bqe,EAAShxB,UAAUixB,SAAU,EAG7BD,EAAShxB,UAAUkxB,SAAU,EAG7BF,EAAShxB,UAAUmxB,SAAU,EAG7BH,EAAShxB,UAAU0rB,UAAW,EAG9BsF,EAAShxB,UAAUoxB,WAAa,EAGhCJ,EAAShxB,UAAUqxB,eAAiB,EAGpCL,EAAShxB,UAAUsxB,eAAiB,EAKpCN,EAAShxB,UAAUuxB,IAAM,GAGzBP,EAAShxB,UAAUwxB,KAAO,EAG1BR,EAAShxB,UAAUyxB,KAAO,EAG1BT,EAAShxB,UAAU0xB,SAAW,EAO9BV,EAAShxB,UAAUwG,QAAS,EAQ5BwqB,EAAShxB,UAAU1C,SAAU,EAa7B0zB,EAAShxB,UAAU0V,QAAU,WAC3B7V,KAAKysB,QAUP0E,EAAShxB,UAAUusB,WAAa,WAC9B,OACE5Z,KAAM9S,KAAK8S,KACX6E,MACE2Z,QAAStxB,KAAKsxB,QACdG,eAAgBzxB,KAAKyxB,gBAEvB5C,YAAa7uB,KAAK8uB,mBAWtBqC,EAAShxB,UAAUinB,SAAW,WAC5B,MAAkB,QAAdpnB,KAAK8S,OAID9S,KAAK8S,KAAKxB,UAUpB6f,EAAShxB,UAAUgtB,WAAa,WAC9B,GAAIzyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK6V,YAINvQ,KAAKonB,cAILpnB,KAAK6rB,WAIL7rB,KAAKvC,QACAuC,KAAKqxB,UAGTrxB,KAAKyxB,mBAcZN,EAAShxB,UAAUssB,KAAO,WACxBzsB,KAAK8xB,eACL9xB,KAAK+xB,cACL/xB,KAAKgyB,YAEAhyB,KAAKvC,SACRuC,KAAK8iB,SAWTqO,EAAShxB,UAAUmtB,MAAQ,WACzBttB,KAAKysB,QAWP0E,EAAShxB,UAAU2iB,MAAQ,SAASsC,GAClC,GAAIplB,KAAKvC,QAAS,CAChB,GAAIw0B,GAAYjyB,KAAK1B,UAAU5F,IAAI,YAEnCsH,MAAKkyB,UAAY9M,GAAS,CAE1B,IAAIlb,GAAKlK,KACL+F,EAAM/F,KAAKmyB,SAAS5sB,MACxBvF,MAAKoyB,YAAcH,EACjB,WAEE,GAAItf,GAAOzI,EAAGioB,SAASjoB,EAAGgoB,UAC1BhoB,GAAGpR,OAAO6Z,GAAK,GAEfzI,EAAGgoB,YACChoB,EAAGgoB,YAAYnsB,GACjBmE,EAAGmoB,QAIO,IAAdryB,KAAK6xB,SACL9rB,EAAM/F,KAAKkyB,WAIflyB,KAAKoxB,SAAU,GAWjBD,EAAShxB,UAAUkyB,KAAO,WACxB,GAAIryB,KAAKvC,SAAWuC,KAAKoyB,YAAa,CACpC,GAAIH,GAAYjyB,KAAK1B,UAAU5F,IAAI,YACnCu5B,GAAUpH,OAAO7qB,KAAKoyB,aAGxBpyB,KAAKqxB,SAAU,GAWjBF,EAAShxB,UAAU/F,QAAU,WAC3B,GAAIsC,GAAKsD,KAAK1B,UAAU5F,IAAI,KAE5B,KAAKsH,KAAKmtB,aAAc,CACtB,GAAIxwB,GAAQD,EAAGC,OAGf,OAFAA,GAAMyE,SAECzE,EAAM/B,QAGf,GAAIqW,GAASjR,KAAKutB,WAChBZ,QAAS3sB,KAAK0sB,eAGZ4F,EAAc,SAAS1d,GACzBA,EAAK2d,YAAa,GAGhBroB,EAAKlK,KACLpD,EAAkB,WACpBrF,EAAQ+B,QAAQ4Q,EAAGsoB,WAAYF,GAC/BpoB,EAAG2hB,UAAW,GAEZhvB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKuS,EAMtB,OALArW,GAAQmC,KACNH,EACAC,GAGKjC,GAUTu2B,EAAShxB,UAAU2uB,eAAiB,WAClC,MAAI9uB,MAAKsxB,QACA,EAGFtxB,KAAKyxB,gBAadN,EAAShxB,UAAUqlB,OAAS,SAASiN,EAAQC,GAC3C,GAAItN,GAAQplB,KAAKwyB,WAAWlzB,QAAQmzB,EAEhCC,IACEtN,EAAM,IACRplB,KAAKwyB,WAAWl6B,KAAKm6B,GACrBzyB,KAAKyxB,kBAGPgB,EAAOE,UAAW,GAEdvN,GAAO,IACTplB,KAAKwyB,WAAWI,OAAOxN,EAAM,GAC7BqN,EAAOE,UAAW,EAClB3yB,KAAKyxB,kBAILzxB,KAAK6yB,OAAOJ,KACdzyB,KAAKsxB,SAAU,EAGjB,IAAIwB,GAAQ9yB,KAAKuxB,WACbwB,EAAY/yB,KAAKyxB,cACrBzxB,MAAKwxB,eAAiBsB,EAAQC,GAWhC5B,EAAShxB,UAAU6yB,QAAU,SAASP,GACpC,MAAOA,GAAOQ,IAAM,IAAMR,EAAOS,KAWnC/B,EAAShxB,UAAU0yB,OAAS,SAASJ,GACnC,MAAOl7B,GAAQ47B,OAAOnzB,KAAKozB,KAAKX,IAUlCtB,EAAShxB,UAAU2xB,aAAe,WAChC9xB,KAAKwyB,cAELxyB,KAAKsxB,SAAU,EACftxB,KAAKoxB,SAAU,EACfpxB,KAAKqxB,SAAU,EACfrxB,KAAK6rB,UAAW,EAEhB7rB,KAAKyxB,eAAiB,EACtBzxB,KAAKwxB,eAAiB,EACtBxxB,KAAKuxB,WAAavxB,KAAK2xB,KAAO3xB,KAAK4xB,MAUrCT,EAAShxB,UAAU4xB,YAAc,WAC/B/xB,KAAKqzB,UACLrzB,KAAKmyB,WAEL,KAAK,GAAI7sB,GAAE,EAAGA,EAAEtF,KAAK2xB,KAAMrsB,IAAK,CAG9B,IAAK,GADDguB,MACKC,EAAE,EAAGA,EAAEvzB,KAAK4xB,KAAM2B,IAAM,CAC/B,GAAIx4B,IACFk4B,IAAK3tB,EAAE,EACP4tB,IAAKK,EAAE,EAKT,IAFAD,EAAQh7B,KAAKyC,GAETiF,KAAKvC,QACP,GAAKuC,KAAK2G,OAEH,CACL,GAAIA,GAAS3G,KAAK1B,UAAU5F,IAAI,SAChCiO,GAAOrO,KAAK0H,KAAKmyB,SAASp3B,OAH1BiF,MAAKmyB,SAAS75B,KAAKyC,GAQzBiF,KAAKqzB,OAAO/6B,KAAKg7B,KAWrBnC,EAAShxB,UAAU6xB,UAAY,WAC7B,GAAIrrB,GAAS3G,KAAK1B,UAAU5F,IAAI,UAE5Bu6B,EAAMtsB,EAAOJ,QAAQ,EAAEvG,KAAK2xB,KAAK,GACjCuB,EAAMvsB,EAAOJ,QAAQ,EAAEvG,KAAK4xB,KAAK,EAErC5xB,MAAKozB,KAAOpzB,KAAKqzB,OAAOJ,GAAKC,IAM/B37B,EAAQC,OAAOA,GAAQud,UAAU,WAAW,WAC1C,OACEC,OACE0c,IAAK,gBACLC,KAAM,iBACNC,KAAM,iBACNjrB,OAAQ,mBACRlJ,QAAS,oBACTo0B,SAAU,qBACVtE,UAAW,sBAEbtY,SAAU,IACVoB,YAAY,EACZla,WAAYg1B,EACZjc,kBAAkB,EAClB9Y,aAAc,qBACdtC,YAAa,0CAejB,IAAI05B,GAAe,YAQnBA,GAAarzB,UAAUszB,MAAQ,KAG/BD,EAAarzB,UAAUmR,UAAW,EAGlCkiB,EAAarzB,UAAUuzB,YAAa,EAGpCF,EAAarzB,UAAUwzB,aAAc,EAerCH,EAAarzB,UAAUqlB,OAAS,YAC1BxlB,KAAK0zB,YAAe1zB,KAAK2zB,cAI7B3zB,KAAKsR,UAAYtR,KAAKsR,SAEtBtR,KAAK4zB,UACHH,MAAMzzB,KAAKyzB,MACXv6B,MAAM8G,KAAKsR,aAKf/Z,EAAQC,OAAOA,GAAQud,UAAU,eAAgB,WAC/C,OACEC,OACEye,MAAM,gBACNG,SAAS,wBACTtiB,SAAS,yBACToiB,WAAW,2BACXC,YAAY,6BAEd1e,SAAU,IACVoB,YAAY,EACZla,WAAYq3B,EACZte,kBAAkB,EAClB9Y,aAAc,yBACdtC,YAAa,iDAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIs8B,GAAgB,SAASze,EAAQC,EAAUC,EAAQhX,GACrD,GAAImT,GAAOnT,EAAU5F,IAAI,kBACrBgC,EAAO4D,EAAU5F,IAAI,OAEzBsH,MAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAK8S,KAAOpY,EAAK8W,cAAcC,GAC/BzR,KAAKiQ,MAAQvV,EAAKiX,mBAGpBkiB,GAAc3zB,SAAW,SAAS,WAAW,SAAU,aASvD2zB,EAAc1zB,UAAU2S,KAAO,KAK/B+gB,EAAc1zB,UAAU0X,OAAS,KAGjCgc,EAAc1zB,UAAU8P,OAAQ,EAGhC4jB,EAAc1zB,UAAU0rB,UAAW,EAcnCgI,EAAc1zB,UAAU0V,QAAU,WAChC7V,KAAKysB,QAUPoH,EAAc1zB,UAAUusB,WAAa,WACnC,GAAIhyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAE9B,QACEoa,KAAM9S,KAAK8S,KACX6E,MACE1H,MAAOvV,EAAKuV,MACZ4H,OAAQ7X,KAAK6X,UAYnBgc,EAAc1zB,UAAUinB,SAAW,WACjC,MAAkB,QAAdpnB,KAAK8S,OAID9S,KAAK8S,KAAKxB,UAUpBuiB,EAAc1zB,UAAUgtB,WAAa,WACnC,GAAIzyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK6V,YAINvQ,KAAKonB,cAILpnB,KAAK6rB,YAIJ7rB,KAAK6X,UAcZgc,EAAc1zB,UAAUssB,KAAO,WAC7BzsB,KAAK6rB,UAAW,GAUlBgI,EAAc1zB,UAAUmtB,MAAQ,WAC9BttB,KAAKysB,QAYPoH,EAAc1zB,UAAUrH,OAAS,SAAS+e,EAAQ/C,GAChD9U,KAAK6X,OAAS/C,EAAW+C,EAAS,MAWpCgc,EAAc1zB,UAAU/F,QAAU,WAChC,GAAIsC,GAAKsD,KAAK1B,UAAU5F,IAAI,KAE5B,KAAKsH,KAAKmtB,aAAc,CACtB,GAAIxwB,GAAQD,EAAGC,OAGf,OAFAA,GAAMyE,SAECzE,EAAM/B,QAGf,GAAIqW,GAASjR,KAAKutB,WAChBZ,QAAS3sB,KAAK0sB,eAGZxiB,EAAKlK,KACLpD,EAAkB,WACpBsN,EAAG2hB,UAAW,GAEZhvB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKuS,EAMtB,OALArW,GAAQmC,KACNH,EACAC,GAGKjC,GAMTrD,EAAQC,OAAOA,GAAQud,UAAU,gBAAiB,WAChD,OACEC,OACEuY,UAAW,2BAEbtY,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAY03B,EACZz3B,aAAc,0BACdtC,YAAa,iDAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIu8B,GAAwB,SAAS1e,EAAQC,EAAUC,EAAQhX,GAC7D,GAAImT,GAAOnT,EAAU5F,IAAI,2BACrBgC,EAAO4D,EAAU5F,IAAI,OAEzBsH,MAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAK8S,KAAOpY,EAAK8W,cAAcC,GAC/BzR,KAAKiQ,MAAQvV,EAAKiX,mBAGpBmiB,GAAsB5zB,SAAW,SAAS,WAAW,SAAU,aAS/D4zB,EAAsB3zB,UAAU2S,KAAO,KAKvCghB,EAAsB3zB,UAAU0X,OAAS,KAGzCic,EAAsB3zB,UAAU8P,OAAQ,EAGxC6jB,EAAsB3zB,UAAU0rB,UAAW,EAc3CiI,EAAsB3zB,UAAU0V,QAAU,WACxC7V,KAAKysB,QAUPqH,EAAsB3zB,UAAUusB,WAAa,WAC3C,GAAIhyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAE9B,QACEoa,KAAM9S,KAAK8S,KACX6E,MACE1H,MAAOvV,EAAKuV,MACZ4H,OAAQ7X,KAAK6X,UAYnBic,EAAsB3zB,UAAUinB,SAAW,WACzC,MAAkB,QAAdpnB,KAAK8S,OAID9S,KAAK8S,KAAKxB,UAUpBwiB,EAAsB3zB,UAAUgtB,WAAa,WAC3C,GAAIzyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK6V,YAINvQ,KAAKonB,cAILpnB,KAAK6rB,YAIJ7rB,KAAK6X,UAcZic,EAAsB3zB,UAAUssB,KAAO,WACrCzsB,KAAK6rB,UAAW,GAUlBiI,EAAsB3zB,UAAUmtB,MAAQ,WACtCttB,KAAKysB,QAYPqH,EAAsB3zB,UAAUrH,OAAS,SAAS+e,EAAQ/C,GACxD9U,KAAK6X,OAAS/C,EAAW+C,EAAS,MAWpCic,EAAsB3zB,UAAU/F,QAAU,WACxC,GAAIsC,GAAKsD,KAAK1B,UAAU5F,IAAI,KAE5B,KAAKsH,KAAKmtB,aAAc,CACtB,GAAIxwB,GAAQD,EAAGC,OAGf,OAFAA,GAAMyE,SAECzE,EAAM/B,QAGf,GAAIqW,GAASjR,KAAKutB,WAChBZ,QAAS3sB,KAAK0sB,eAGZxiB,EAAKlK,KACLpD,EAAkB,WACpBsN,EAAG2hB,UAAW,GAEZhvB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKuS,EAMtB,OALArW,GAAQmC,KACNH,EACAC,GAGKjC,GAMTrD,EAAQC,OAAOA,GAAQud,UAAU,wBAAyB,WACxD,OACEC,OACEuY,UAAW,mCAEbtY,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAY23B,EACZ13B,aAAc,kCACdtC,YAAa,0DAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIw8B,GAAc,SAAS3e,EAAQ+Y,EAAS7Y,EAAQhX,GAClD,GAAImT,GAAOnT,EAAU5F,IAAI,gBACrBgC,EAAO4D,EAAU5F,IAAI,OAEzBsH,MAAK1B,UAAYA,EACjB0B,KAAK8S,KAAOpY,EAAK8W,cAAcC,GAGjCsiB,GAAY7zB,SAAW,SAAS,WAAW,SAAU,aAKrD6zB,EAAY5zB,UAAU2S,KAAO,KAK7BihB,EAAY5zB,UAAU0rB,UAAW,EAGjCkI,EAAY5zB,UAAU6zB,SAAW,KAGjCD,EAAY5zB,UAAU8zB,SAAW,KAajCF,EAAY5zB,UAAU0V,QAAU,WAC9B7V,KAAKysB,QAUPsH,EAAY5zB,UAAUusB,WAAa,WACjC,OACE5Z,KAAM9S,KAAK8S,KACX6E,MACEqc,SAAUh0B,KAAKg0B,SACfC,SAAUj0B,KAAKi0B,YAYrBF,EAAY5zB,UAAUinB,SAAW,WAC/B,MAAkB,QAAdpnB,KAAK8S,OAID9S,KAAK8S,KAAKxB,UAUpByiB,EAAY5zB,UAAUgtB,WAAa,WACjC,GAAIzyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK6V,YAINvQ,KAAKonB,cAILpnB,KAAK6rB,WAIa,OAAlB7rB,KAAKg0B,UAIa,OAAlBh0B,KAAKi0B,aAcXF,EAAY5zB,UAAUssB,KAAO,WAC3BzsB,KAAKg0B,SAAW,KAChBh0B,KAAKi0B,SAAW,KAChBj0B,KAAK6rB,UAAW,GAUlBkI,EAAY5zB,UAAUmtB,MAAQ,WAC5BttB,KAAKysB,QAYPsH,EAAY5zB,UAAUrH,OAAS,SAASo7B,EAASh7B,GAC/C8G,KAAKk0B,GAAWh7B,GAWlB66B,EAAY5zB,UAAU/F,QAAU,WAC9B,GAAIsC,GAAKsD,KAAK1B,UAAU5F,IAAI,KAE5B,KAAKsH,KAAKmtB,aAAc,CACtB,GAAIxwB,GAAQD,EAAGC,OAGf,OAFAA,GAAMyE,SAECzE,EAAM/B,QAGf,GAAIqW,GAASjR,KAAKutB,WAChBZ,QAAS3sB,KAAK0sB,eAGZxiB,EAAKlK,KACLpD,EAAkB,WACpBsN,EAAG2hB,UAAW,GAEZhvB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKuS,EAMtB,OALArW,GAAQmC,KACNH,EACAC,GAGKjC,GAMTrD,EAAQC,OAAOA,GAAQud,UAAU,cAAe,WAC9C,OACEC,OACEuY,UAAW,yBAEbtY,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAY43B,EACZ33B,aAAc,wBACdtC,YAAa,+CAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAI48B,GAAoB,SAAS/e,EAAQC,EAAUC,EAAQhX,GACzD,GAAImT,GAAOnT,EAAU5F,IAAI,sBAEzBsH,MAAKsV,OAASA,EACdtV,KAAKoV,OAASA,EACdpV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAKtF,KAAOsF,KAAK1B,UAAU5F,IAAI,QAC/BsH,KAAK8S,KAAO9S,KAAKtF,KAAK8W,cAAcC,GACpCzR,KAAKiR,OAASjR,KAAKtF,KAAKgX,iBAAiBD,GAEzCzR,KAAKo0B,UAAY,KAGnBD,GAAkBj0B,SAAW,SAAS,WAAW,SAAU,aAK3Di0B,EAAkBh0B,UAAUzF,KAAO,KAGnCy5B,EAAkBh0B,UAAU2S,KAAO,KAGnCqhB,EAAkBh0B,UAAU8Q,OAAS,KAKrCkjB,EAAkBh0B,UAAUk0B,KAAO,EAGnCF,EAAkBh0B,UAAU2yB,MAAQ,EAGpCqB,EAAkBh0B,UAAUm0B,KAAO,KAGnCH,EAAkBh0B,UAAUmsB,OAAS,KAGrC6H,EAAkBh0B,UAAUo0B,eAAiB,KAG7CJ,EAAkBh0B,UAAU0rB,UAAW,EAKvCsI,EAAkBh0B,UAAUq0B,KAAO,KAGnCL,EAAkBh0B,UAAUs0B,UAAY,EAGxCN,EAAkBh0B,UAAUu0B,UAAY,IAaxCP,EAAkBh0B,UAAU0V,QAAU,WACpC7V,KAAKysB,QAUP0H,EAAkBh0B,UAAUusB,WAAa,WACvC,GAAIC,IACF7Z,KAAM9S,KAAK8S,KACX6E,MACE0c,KAAMr0B,KAAKq0B,KACXC,KAAMt0B,KAAKs0B,KACXxB,MAAO9yB,KAAK8yB,MACZxG,OAAQtsB,KAAKssB,OACbiI,eAAgBv0B,KAAKu0B,gBAEvBtH,UAAWjtB,KAAKktB,aAUlB,OAPoB,QAAhBltB,KAAKiR,SACP0b,EAAUp1B,EAAQ6U,OAChBpM,KAAKiR,OACL0b,IAIGA,GAUTwH,EAAkBh0B,UAAUinB,SAAW,WACrC,MAAkB,QAAdpnB,KAAK8S,OAQL9S,KAAK8S,KAAKxB,SACLtR,KAAKo0B,WAKdp0B,KAAKo0B,UAAY,MAGV,KAUTD,EAAkBh0B,UAAUgtB,WAAa,WACvC,GAAIzyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK6V,YAINvQ,KAAKw0B,KAAK5L,YAIV5oB,KAAKonB,aAILpnB,KAAK6rB,YAcXsI,EAAkBh0B,UAAUssB,KAAO,WACjC,GAAoB,OAAhBzsB,KAAKiR,OAAiB,CACxB,GAAI0G,GAAO3X,KAAKiR,OAAO0G,IAIvB3X,MAAKssB,OAAS3U,EAAK2U,OACnBtsB,KAAK8yB,MAAQnb,EAAKmb,MAClB9yB,KAAKs0B,KAAO3c,EAAK2c,KACjBt0B,KAAKq0B,KAAO1c,EAAK0c,IAIjB,IAAIM,GAAgB30B,KAAK8S,KAAKD,UAC1B+hB,EAAkB50B,KAAKiR,OAAO4B,SAClC7S,MAAKo0B,UAAYQ,EAAkBD,EAGrC30B,KAAK6rB,UAAW,GAUlBsI,EAAkBh0B,UAAUmtB,MAAQ,WAClCttB,KAAKysB,QAUP0H,EAAkBh0B,UAAUrH,OAAS,WAC/BkH,KAAKq0B,KAAOr0B,KAAK8yB,OACnB9yB,KAAKq0B,MAGP,IAAInqB,GAAKlK,KACLpD,EAAkB,aAClBC,EAAkB,WACpBqN,EAAGmqB,OAGLr0B,MAAK5F,UAAU2C,KACbH,EACAC,IAYJs3B,EAAkBh0B,UAAU/F,QAAU,WACpC,GAAI0H,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClC4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAC1BgE,EAAKsD,KAAK1B,UAAU5F,IAAI,KAE5B,KAAKsH,KAAKmtB,aAAc,CACtB,GAAIxwB,GAAQD,EAAGC,OAGf,OAFAA,GAAMyE,SAECzE,EAAM/B,QAGf,GAAI6K,GAA2B,OAAhBzF,KAAKiR,OAClBjR,KAAKutB,UACLvtB,KAAKwtB,SAEHb,EAAU3sB,KAAK0sB,aACfzb,EAASxL,GACXknB,QAASA,GAIPA,GAAQM,YACVjtB,KAAKo0B,WAAY,EAGnB,IAAIlqB,GAAKlK,KACLpD,EAAkB,SAASqU,GAC7B,GAAIA,EAAOgc,UAAW,CACpB,GAAI/iB,EAAGmqB,KAAOnqB,EAAG4oB,MAAO,CACtB,GAAI9wB,GAAU1H,EAAK5B,IAAI,4BACvBoJ,GAAaiB,QAAQf,GAIvB,YADAkI,EAAG+G,OAASA,GAId/G,EAAG2hB,UAAW,GAGZhvB,EAAkB,WACpBqN,EAAGkqB,UAAY,MAGbx5B,EAAU8B,EAAGgC,KAAKuS,EAMtB,OALArW,GAAQmC,KACNH,EACAC,GAGKjC,GAUTu5B,EAAkBh0B,UAAU00B,cAAgB,WAC1C,MAAO70B,MAAKu0B,eAAiBv0B,KAAKssB,QAUpC6H,EAAkBh0B,UAAU+sB,WAAa,WACvC,MAA+B,QAAxBltB,KAAKu0B,gBAMdh9B,EAAQC,OAAOA,GAAQud,UAAU,oBAAqB,WACpD,OACEC,OACEwY,SAAU,6BACVD,UAAW,+BAEbtY,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAYg4B,EACZ/3B,aAAc,8BACdtC,YAAa,sDAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIu9B,GAAuB,SAAS1f,EAAQC,EAAUC,EAAQhX,GAC5D,GAAImT,GAAOnT,EAAU5F,IAAI,0BACrBgC,EAAO4D,EAAU5F,IAAI,OAEzBsH,MAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAK8S,KAAOpY,EAAK8W,cAAcC,GAGjCqjB,GAAqB50B,SAAW,SAAU,WAAY,SAAU,aAShE40B,EAAqB30B,UAAU2S,KAAO,KAKtCgiB,EAAqB30B,UAAU0X,OAAS,KAGxCid,EAAqB30B,UAAU0rB,UAAW,EAa1CiJ,EAAqB30B,UAAU0V,QAAU,WACvC7V,KAAKysB,QAUPqI,EAAqB30B,UAAUusB,WAAa,WAC1C,OACE5Z,KAAM9S,KAAK8S,KACX6E,MACEE,OAAQ7X,KAAK6X,UAYnBid,EAAqB30B,UAAUinB,SAAW,WACxC,MAAkB,QAAdpnB,KAAK8S,OAID9S,KAAK8S,KAAKxB,UAUpBwjB,EAAqB30B,UAAUgtB,WAAa,WAC1C,GAAIzyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK6V,YAINvQ,KAAKonB,cAILpnB,KAAK6rB,YAIJ7rB,KAAK6X,UAcZid,EAAqB30B,UAAUssB,KAAO,WACpCzsB,KAAK6rB,UAAW,GAUlBiJ,EAAqB30B,UAAUmtB,MAAQ,WACrCttB,KAAKysB,QAYPqI,EAAqB30B,UAAUrH,OAAS,SAAS+e,EAAQ/C,GACvD9U,KAAK6X,OAAS/C,EAAW+C,EAAS,MAWpCid,EAAqB30B,UAAU/F,QAAU,WACvC,GAAIsC,GAAKsD,KAAK1B,UAAU5F,IAAI,KAE5B,KAAKsH,KAAKmtB,aAAc,CACtB,GAAIxwB,GAAQD,EAAGC,OAGf,OAFAA,GAAMyE,SAECzE,EAAM/B,QAGf,GAAIqW,GAASjR,KAAKutB,WAChBZ,QAAS3sB,KAAK0sB,eAGZxiB,EAAKlK,KACLpD,EAAkB,WACpBsN,EAAG2hB,UAAW,GAEZhvB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKuS,EAMtB,OALArW,GAAQmC,KACNH,EACAC,GAGKjC,GAMTrD,EAAQC,OAAOA,GAAQud,UAAU,uBAAwB,WACvD,OACEC,OACEuY,UAAW,kCAEbtY,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAY24B,EACZ14B,aAAc,iCACdtC,YAAa,yDAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIw9B,GAAqB,SAAS3f,EAAQ+Y,EAAS7Y,EAAQhX,GACzD,GAAImT,GAAOnT,EAAU5F,IAAI,uBAEzBsH,MAAK1B,UAAYA,EAEjB0B,KAAKtF,KAAOsF,KAAK1B,UAAU5F,IAAI,QAC/BsH,KAAK8S,KAAO9S,KAAKtF,KAAK8W,cAAcC,GACpCzR,KAAKiR,OAASjR,KAAKtF,KAAKgX,iBAAiBD,GAG3CsjB,GAAmB70B,SAAW,SAAS,WAAW,SAAU,aAK5D60B,EAAmB50B,UAAUzF,KAAO,KAGpCq6B,EAAmB50B,UAAU2S,KAAO,KAGpCiiB,EAAmB50B,UAAU8Q,OAAS,KAKtC8jB,EAAmB50B,UAAU60B,UAM7BD,EAAmB50B,UAAU0rB,UAAW,EAaxCkJ,EAAmB50B,UAAU0V,QAAU,WACrC7V,KAAKysB,QAUPsI,EAAmB50B,UAAUusB,WAAa,WACxC,GAAIC,IACF7Z,KAAM9S,KAAK8S,KACX6E,MACEqd,OAAQh1B,KAAKg1B,QAEf/H,UAAWjtB,KAAKktB,aAUlB,OAPoB,QAAhBltB,KAAKiR,SACP0b,EAAUp1B,EAAQ6U,OAChBpM,KAAKiR,OACL0b,IAIGA,GAUToI,EAAmB50B,UAAUinB,SAAW,WAGtC,QAAKpnB,KAAKtF,KAAK6V,WAIPvQ,KAAK8S,KAAKxB,UAUpByjB,EAAmB50B,UAAUgtB,WAAa,WACxC,GAAIzyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK6V,YAINvQ,KAAKonB,aAILpnB,KAAK6rB,WAcXkJ,EAAmB50B,UAAUssB,KAAO,WAClC,GAAoB,OAAhBzsB,KAAKiR,OAAiB,CACxB,GAAI0G,GAAO3X,KAAKiR,OAAO0G,IACvB3X,MAAKg1B,OAASrd,EAAKqd,OAGrBh1B,KAAK6rB,UAAW,GAUlBkJ,EAAmB50B,UAAUmtB,MAAQ,WACnCttB,KAAKysB,QAUPsI,EAAmB50B,UAAUrH,OAAS,SAASmN,GAC7C,IAAIjG,KAAKg1B,OAAO/uB,GAAhB,CAIAjG,KAAKg1B,OAAO/uB,IAAM,CAElB,IAAIiE,GAAKlK,KACLpD,EAAkB,aAClBC,EAAkB,WACpBqN,EAAG8qB,OAAO/uB,IAAM,EAGlBjG,MAAK5F,UAAU2C,KACbH,EACAC,KAYJk4B,EAAmB50B,UAAU/F,QAAU,WACrC,GAAIsC,GAAKsD,KAAK1B,UAAU5F,IAAI,KAE5B,KAAKsH,KAAKmtB,aAAc,CACtB,GAAIxwB,GAAQD,EAAGC,OAGf,OAFAA,GAAMyE,SAECzE,EAAM/B,QAGf,GAAI6K,GAA2B,OAAhBzF,KAAKiR,OAClBjR,KAAKutB,UACLvtB,KAAKwtB,SAEHb,EAAU3sB,KAAK0sB,aACfzb,EAASxL,GACXknB,QAASA,IAGPziB,EAAKlK,KACLpD,EAAkB,SAASqU,GAC7B,MAAIA,GAAOgc,eACT/iB,EAAG+G,OAASA,QAId/G,EAAG2hB,UAAW,IAEZhvB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKuS,EAMtB,OALArW,GAAQmC,KACNH,EACAC,GAGKjC,GAYTm6B,EAAmB50B,UAAU80B,SAAW,WACtC,OAAKj1B,KAAKtF,KAAK6V,WAIPvQ,KAAKtF,KAAK0W,gBAUpB2jB,EAAmB50B,UAAU+sB,WAAa,WACxC,IAAK,GAAIjnB,KAAMjG,MAAKg1B,OAClB,IAAKh1B,KAAKg1B,OAAO/uB,GACf,OAAO,CAIX,QAAO,GAMT1O,EAAQC,OAAOA,GAAQud,UAAU,qBAAsB,WACrD,OACEC,OACEwY,SAAU,8BACVD,UAAW,gCAEbtY,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAY44B,EACZ34B,aAAc,+BACdtC,YAAa,uDAIhB+F,eAAgBtI,SAInB,SAAUC,EAAQD,GAChB,YAaA,IAAI29B,GAAsB,SAAS9f,EAAQ+Y,EAAS7Y,EAAQhX,GAC1D,GAAImT,GAAOnT,EAAU5F,IAAI,wBACrBgC,EAAO4D,EAAU5F,IAAI,OAEzBsH,MAAK1B,UAAYA,EACjB0B,KAAK8S,KAAOpY,EAAK8W,cAAcC,GAC/BzR,KAAKiR,OAASvW,EAAKgX,iBAAiBD,GAEpCzR,KAAK+e,MAAQ,wBAA0B3J,EAAOI,IAE9CxV,KAAKoyB,YAAc,KACnBpyB,KAAKm1B,YAAcn1B,KAAKm1B,YAAYhvB,KAAKnG,MAG3Ck1B,GAAoBh1B,SAAW,SAAS,WAAW,SAAU,aAK7Dg1B,EAAoB/0B,UAAUsR,KAAO,KAGrCyjB,EAAoB/0B,UAAU2S,KAAO,KAGrCoiB,EAAoB/0B,UAAU8Q,OAAS,KAKvCikB,EAAoB/0B,UAAU2I,KAAO,KAGrCosB,EAAoB/0B,UAAUuX,MAAQ,EAGtCwd,EAAoB/0B,UAAU2yB,MAAQ,EAGtCoC,EAAoB/0B,UAAUi1B,UAG9BF,EAAoB/0B,UAAUk1B,WAAa,KAG3CH,EAAoB/0B,UAAUm1B,WAAa,KAG3CJ,EAAoB/0B,UAAUo1B,WAAa,KAG3CL,EAAoB/0B,UAAU0S,UAAY,KAG1CqiB,EAAoB/0B,UAAUq1B,UAAY,KAG1CN,EAAoB/0B,UAAUjH,MAAQ,OAGtCg8B,EAAoB/0B,UAAU0rB,UAAW,EAKzCqJ,EAAoB/0B,UAAU4e,MAAQ,KAGtCmW,EAAoB/0B,UAAUs1B,WAAY,EAG1CP,EAAoB/0B,UAAUu1B,iBAAmB,EAGjDR,EAAoB/0B,UAAUw1B,iBAAmB,GAajDT,EAAoB/0B,UAAU0V,QAAU,WACtC7V,KAAKysB,QAUPyI,EAAoB/0B,UAAU+W,WAAa,WACzC,GAAI+a,GAAYjyB,KAAK1B,UAAU5F,IAAI,YAEV,QAArBsH,KAAKoyB,aACPH,EAAUpH,OAAO7qB,KAAKoyB,cAW1B8C,EAAoB/0B,UAAUusB,WAAa,WACzC,GAAIC,IACF7Z,KAAM9S,KAAK8S,KACX6E,MACE7O,KAAM9I,KAAK8I,KACX5P,MAAO8G,KAAK9G,MACZk8B,OAAQp1B,KAAKo1B,OACbryB,QAAS/C,KAAK41B,cAEhB3I,UAAWjtB,KAAKktB,aAChB2B,YAAa7uB,KAAK8uB,iBAUpB,OAPoB,QAAhB9uB,KAAKiR,SACP0b,EAAUp1B,EAAQ6U,OAChBpM,KAAKiR,OACL0b,IAIGA,GAUTuI,EAAoB/0B,UAAUinB,SAAW,WACvC,MAAkB,QAAdpnB,KAAK8S,OAID9S,KAAK8S,KAAKxB,UAUpB4jB,EAAoB/0B,UAAUgtB,WAAa,WACzC,GAAIzyB,GAAOsF,KAAK1B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK6V,YAINvQ,KAAKonB,eAIJpnB,KAAKy1B,YAINz1B,KAAK6rB,YAcXqJ,EAAoB/0B,UAAUssB,KAAO,WAEnC,GAAoB,OAAhBzsB,KAAKiR,OAAiB,CACxB,GAAI0G,GAAO3X,KAAKiR,OAAO0G,IAGvB3X,MAAKo1B,OAASzd,EAAKyd,OACnBp1B,KAAK0X,MAAQC,EAAKyd,OAAO7vB,OAGzBvF,KAAK61B,WAAU,GACf71B,KAAK81B,QAAQne,EAAK7O,MAClB9I,KAAK+1B,SAASpe,EAAKze,OAGrB8G,KAAK6rB,UAAW,GAUlBqJ,EAAoB/0B,UAAUmtB,MAAQ,WACpCttB,KAAKysB,QAUPyI,EAAoB/0B,UAAUrH,OAAS,SAASmY,GAC9C,GAAI/X,GAAQ8G,KAAK9G,MACbwe,EAAQ1X,KAAK0X,KAEjB,QAAQ1X,KAAK9G,OACX,IAAK,OACH8G,KAAK+1B,SAAS,WACd,MAEF,KAAK,WACH/1B,KAAK+1B,SAAS,UACd,MAEF,KAAK,UACH/1B,KAAK0X,MAAQ1X,KAAKo1B,OAAO98B,KAAK2Y,GAKlC,GAAI/G,GAAKlK,KACLpD,EAAkB,aAClBC,EAAkB,WACpBqN,EAAG6rB,SAAS78B,GACZgR,EAAGwN,MAAQA,EAGb1X,MAAK5F,UAAU2C,KACbH,EACAC,IAYJq4B,EAAoB/0B,UAAU/F,QAAU,WACtC,GAAI0H,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClC4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAC1BgE,EAAKsD,KAAK1B,UAAU5F,IAAI,KAI5B,IAFA4tB,QAAQhf,IAAI,gBAEPtH,KAAKmtB,aAAc,CACtB,GAAIxwB,GAAQD,EAAGC,OAGf,OAFAA,GAAMyE,SAECzE,EAAM/B,QAGf,GAAI6K,GAA2B,OAAhBzF,KAAKiR,OAClBjR,KAAKutB,UACLvtB,KAAKwtB,SAEHvc,EAASxL,GACXknB,QAAS3sB,KAAK0sB,eAGZxiB,EAAKlK,KACLpD,EAAkB,SAASqU,GAC7B,GAAIjP,EAEJ,IAAIiP,EAAOgc,UAGT,OAFA/iB,EAAG+G,OAASA,EAEJ/G,EAAGhR,OACT,IAAK,OAAQ,KACb,KAAK,WAAY,KACjB,KAAK,UACH,OAAQgR,EAAGpB,MACT,IAAK,MAAO,KACZ,KAAK,QACCoB,EAAGwN,MAAQ,IACb1V,EAAU1H,EAAK5B,IACb,+CACAwR,EAAGwN,MACHxN,EAAG4oB,OAELhxB,EAAaiB,QAAQf,SAa5BkI,GAAG0rB,cAIN5zB,EAAU1H,EAAK5B,IAAI,2EACnBoJ,EAAaiB,QAAQf,KAJrBA,EAAU1H,EAAK5B,IAAI,qFACnBoJ,EAAaG,MAAMD,IAMrBkI,EAAG2hB,UAAW,GAGZhvB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKuS,EAMtB,OALArW,GAAQmC,KACNH,EACAC,GAGKjC,GAWTs6B,EAAoB/0B,UAAU21B,QAAU,SAAShtB,GAC/C,OAAQA,GACN,IAAK,MACH9I,KAAK8yB,MAAQ,EACb9yB,KAAKu1B,WAAa,GAClBv1B,KAAKs1B,WAAa,GAClB,MACF,KAAK,QACHt1B,KAAK8yB,MAAQ,EACb9yB,KAAKu1B,WAAa,EAClBv1B,KAAKs1B,WAAa,EAClB,MACF,SACE,OAGJt1B,KAAK8I,KAAOA,EACZ9I,KAAKq1B,WAAar1B,KAAK8yB,MAAQ9yB,KAAK0X,OAWtCwd,EAAoB/0B,UAAU41B,SAAW,SAAS78B,GAChD,GAAI+4B,GAAYjyB,KAAK1B,UAAU5F,IAAI,YAEnC,QAAQQ,GACN,IAAK,OACH,KACF,KAAK,WACH,KACF,KAAK,UACH,GAAI2Z,GAAY7S,KAAKiR,OAAO4B,SAI5B,QAHA7S,KAAK6S,UAAYmjB,OAAOpjB,KAAKC,GAC7B7S,KAAKw1B,UAAYx1B,KAAK6S,UAAUiI,QAExB9a,KAAK8I,MACX,IAAK,MACH9I,KAAKw1B,UAAU7gB,IAAI,EAAG,QACtB,MACF,KAAK,QACH3U,KAAKw1B,UAAU7gB,IAAI,EAAG,SAK1B3U,KAAKoyB,YAAcH,EAAUjyB,KAAKm1B,YAAa,IAE/C,MACF,SACE,OAGJn1B,KAAK9G,MAAQA,GAWfg8B,EAAoB/0B,UAAU01B,UAAY,SAASI,GACjDj2B,KAAKy1B,UAAYQ,GAUnBf,EAAoB/0B,UAAU+1B,UAAY,WACxC,MAAuB,QAAnBl2B,KAAKw1B,YAIDx1B,KAAKm2B,QAAUn2B,KAAKw1B,WAU9BN,EAAoB/0B,UAAUy1B,WAAa,WACzC,MAAO51B,MAAKo1B,OAAO7vB,SAAWvF,KAAK8yB,OAUrCoC,EAAoB/0B,UAAUi2B,gBAAkB,WAC9C,MAAOp2B,MAAK0X,MAAQ,GAWtBwd,EAAoB/0B,UAAUk2B,iBAAmB,WAC/C,GAAI1xB,GAAS3E,KAAK1B,UAAU5F,IAAI,UAC5B4B,EAAO0F,KAAK1B,UAAU5F,IAAI,OAE9B,IAAuB,OAAnBsH,KAAKw1B,UACP,MAAO,EAGT,IAOIh4B,GAAO84B,EAPPC,EAAav2B,KAAKw1B,UAAUgB,KAAKx2B,KAAKm2B,QACtCxP,EAAWqP,OAAOrP,SAAS4P,GAE3BE,IAAY9P,EAAS+P,YACrBC,IAAYhQ,EAASiQ,YACrBC,IAAUlQ,EAASmQ,UACnBC,IAASpQ,EAASqQ,QAGlBD,GAAO,GACTv5B,EAAQu5B,EACRT,GAAQ,MAAO,SACNO,EAAQ,GACjBr5B,EAAQq5B,EACRP,GAAQ,OAAQ,UACPK,EAAU,GACnBn5B,EAAQm5B,EACRL,GAAQ,SAAU,aAElB94B,EAAQi5B,GAAW,EAAIA,EAAU,EACjCH,GAAQ,SAAU,WAGpB,IAAIvyB,GAAgB,IAAVvG,EACR84B,EAAK,GACLA,EAAK,GAEHW,EAAO38B,EAAK5B,IAAIqL,EAEpB,OAAOY,GAAOE,QAAQ,QAASrH,EAAOy5B,IAUxC/B,EAAoB/0B,UAAU2uB,eAAiB,WAC7C,MAAI9uB,MAAK41B,aACA,EAGF,GAUTV,EAAoB/0B,UAAUg1B,YAAc,WAC1C,GAAIlD,GAAYjyB,KAAK1B,UAAU5F,IAAI,YAC9BsH,MAAKk2B,aAAgBl2B,KAAKmtB,eAI/B8E,EAAUpH,OAAO7qB,KAAKoyB,aACtBpyB,KAAK0X,MAAQ1X,KAAK8yB,MAClB9yB,KAAK5F,YAUP86B,EAAoB/0B,UAAU+sB,WAAa,WACzC,MAAOltB,MAAK0X,MAAQ1X,KAAK8yB,OAU3BoC,EAAoB/0B,UAAUg2B,KAAO,WASnC,MAAOH,WAMTz+B,EAAQC,OAAOA,GAAQud,UAAU,sBAAuB,WACtD,OACEC,OACEwY,SAAU,+BACVD,UAAW,iCAEbtY,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAY+4B,EACZ94B,aAAc,gCACdtC,YAAa,qDAejB,IAAIo9B,GAA0B,SAAS9hB,EAAOC,EAASC,EAAOhX,GAC5D0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAKm3B,WACLn3B,KAAKo3B,YACLp3B,KAAK+e,MAAQ,YAAc3J,EAAOI,IAElCxV,KAAKq3B,QAAU,EACfr3B,KAAKs3B,QAAU,EACft3B,KAAKu3B,QAAU,EACfv3B,KAAKw3B,SAAW,EAChBx3B,KAAKy3B,SAAW,IAChBz3B,KAAK03B,WAAa,KAElB13B,KAAK23B,MAAQ33B,KAAK23B,MAAMxxB,KAAKnG,MAC7BA,KAAK0oB,QAAU1oB,KAAK0oB,QAAQviB,KAAKnG,MACjCA,KAAKyhB,QAAUzhB,KAAKyhB,QAAQtb,KAAKnG,MAEjCA,KAAKwhB,QAAUjqB,EAAQiiB,QAAQ1Z,QAC/BE,KAAK43B,UAAY53B,KAAKqV,SAASoG,KAAK,aAGtCyb,GAAwBh3B,SAAW,SAAS,WAAW,SAAS,aAOhEg3B,EAAwB/2B,UAAU03B,QAAU,EAG5CX,EAAwB/2B,UAAUqP,QAAU,EAG5C0nB,EAAwB/2B,UAAU23B,SAAW,EAG7CZ,EAAwB/2B,UAAUg3B,QAAU,KAG5CD,EAAwB/2B,UAAUi3B,SAAW,KAG7CF,EAAwB/2B,UAAUjH,MAAQ,OAG1Cg+B,EAAwB/2B,UAAU43B,SAAU,EAG5Cb,EAAwB/2B,UAAU63B,UAAY,EAG9Cd,EAAwB/2B,UAAU83B,WAAaC,OAAOC,kBAGtDjB,EAAwB/2B,UAAUo1B,WAAa,GAG/C2B,EAAwB/2B,UAAUm1B,WAAa,IAG/C4B,EAAwB/2B,UAAUi4B,YAAc,IAahDlB,EAAwB/2B,UAAU0V,QAAU,WAC1C7V,KAAKwhB,QAAQzG,GAAG,SAAU/a,KAAKyhB,QAE/B,IAAIvX,GAAKlK,IACTA,MAAK4a,SAAW5a,KAAKoV,OAAO1V,OAC1B,WACE,MAAOwK,GAAG6tB,SAEZ,SAASz1B,GACHA,GACF4H,EAAGmuB,YAaXnB,EAAwB/2B,UAAU+W,WAAa,WAC7ClX,KAAKwhB,QAAQrG,IAAI,SAAUnb,KAAKyhB,SAChCzhB,KAAK4a,WACL5a,KAAKs4B,WAUPpB,EAAwB/2B,UAAU2iB,MAAQ,WAGxC9iB,KAAKo3B,SAAWp3B,KAAKu4B,eAErBv4B,KAAK9G,MAAQ,UACb8G,KAAK23B,SAUPT,EAAwB/2B,UAAUq4B,KAAO,WACvCx4B,KAAKs4B,UAELt4B,KAAKw3B,WAELx3B,KAAKm3B,WACLn3B,KAAK9G,MAAQ,WAEb,IAAI+X,GAASjR,KAAKy4B,YAClBz4B,MAAK04B,YAAaznB,OAAQA,KAU5BimB,EAAwB/2B,UAAUw4B,KAAO,WACvC34B,KAAKs4B,UAELt4B,KAAKu3B,UAELv3B,KAAKm3B,WACLn3B,KAAK9G,MAAQ,WAEb,IAAI+X,GAASjR,KAAKy4B,YAClBz4B,MAAK44B,YAAa3nB,OAAQA,KAU5BimB,EAAwB/2B,UAAUk4B,OAAS,WACzCr4B,KAAKs4B,UAELt4B,KAAKm3B,WACLn3B,KAAK9G,MAAQ,WAUfg+B,EAAwB/2B,UAAUmtB,MAAQ,WACxCttB,KAAKs4B,UAELt4B,KAAKq3B,QAAU,EACfr3B,KAAKs3B,QAAU,EACft3B,KAAKy3B,SAAW,IAChBz3B,KAAK03B,WAAa,KAElB13B,KAAK63B,QAAU,EACf73B,KAAKwP,QAAU,EACfxP,KAAK83B,SAAW,EAChB93B,KAAK9G,MAAQ,QAUfg+B,EAAwB/2B,UAAUiW,QAAU,SAASJ,GACnD,OAAQhW,KAAK9G,OACX,IAAK,OACH8G,KAAK8iB,OACL,MACF,KAAK,UACH9iB,KAAKs3B,SAEL,IAAI/3B,GAASyW,EAAOzW,OAChB63B,EAAWp3B,KAAK43B,UAAUl/B,IAAI,EAK9B0+B,GAASnxB,KAAO1G,EAAO0G,IACzBjG,KAAK64B,cAGP,MACF,KAAK,UAEH,KACF,KAAK,YACC74B,KAAK84B,aACP94B,KAAKstB,QACLttB,KAAK8iB,QAGP,MACF,KAAK,YACC9iB,KAAK+4B,eACP/4B,KAAKstB,QACLttB,KAAK8iB,WAeboU,EAAwB/2B,UAAU24B,SAAW,WAC3C,MAAO94B,MAAKw3B,SAAWx3B,KAAKi4B,YAU9Bf,EAAwB/2B,UAAU44B,WAAa,WAC7C,MAAO/4B,MAAKu3B,QAAUv3B,KAAKg4B,WAU7Bd,EAAwB/2B,UAAU64B,UAAY,SAASC,GACrDj5B,KAAKm3B,QAAQ8B,EAAOhzB,IAAMgzB,GAU5B/B,EAAwB/2B,UAAU+4B,aAAe,SAASD,GAExD,GAAKj5B,KAAKm3B,QAAQ8B,EAAOhzB,IAAzB,CAKA,GAAIgzB,EAAOpB,QAAS,CAClB73B,KAAK63B,UAGL73B,KAAK64B,cAEL,IAAIryB,GAAMxG,KAAKs1B,UACXt1B,MAAK63B,SAAWrxB,GAClBxG,KAAK24B,OAKT,GAAIM,EAAOzpB,QAAS,CAClBxP,KAAKwP,SAEL,IAAIzJ,GAAM/F,KAAKu1B,UACXv1B,MAAKwP,QAAUzJ,GACjB/F,KAAKw4B,aAIFx4B,MAAKm3B,QAAQ8B,EAAOhzB,MAU7BixB,EAAwB/2B,UAAUw3B,MAAQ,WACxC,GAAI7zB,GAAY9D,KAAK1B,UAAU5F,IAAI,YAEnCsH,MAAK03B,WAAa5zB,EAAUqB,sBAAsBnF,KAAK23B,OACvD33B,KAAKoV,OAAO1C,WAAW1S,KAAK0oB,UAU9BwO,EAAwB/2B,UAAUm4B,QAAU,WAC1C,GAAIx0B,GAAY9D,KAAK1B,UAAU5F,IAAI,YACnCoL,GAAU0B,qBAAqBxF,KAAK03B,aAWtCR,EAAwB/2B,UAAUuoB,QAAU,WAC1C,GAAI/hB,GAAS3G,KAAK1B,UAAU5F,IAAI,SAEhCsH,MAAKy3B,WACiB,IAAlBz3B,KAAKy3B,WACPz3B,KAAKy3B,SAAW9wB,EAAOJ,QAAQ,EAAGvG,KAAKo4B,aAAe,GACtDp4B,KAAKm3B,QAAQn3B,KAAKq3B,WAAa,KAGjC,KAAK,GAAIpxB,KAAMjG,MAAKm3B,QAAS,CAC3B,GAAI8B,GAASj5B,KAAKm3B,QAAQlxB,EACrBgzB,IAILA,EAAOngC,WAWXo+B,EAAwB/2B,UAAUshB,QAAU,WAC1CzhB,KAAKo3B,SAAWp3B,KAAKu4B,cAErB,IAAI1c,GAAS7b,KAAKo3B,SAASvb,OACvBD,EAAQ5b,KAAKo3B,SAASxb,KAE1B5b,MAAK+d,MAAQnC,EAAQC,CAErB,KAAK,GAAI5V,KAAMjG,MAAKm3B,QAAS,CAC3B,GAAI8B,GAASj5B,KAAKm3B,QAAQlxB,EACrBgzB,IAILA,EAAOE,WAWXjC,EAAwB/2B,UAAUs4B,WAAa,WAC7C,OACEZ,QAAS73B,KAAK63B,QACdroB,QAASxP,KAAKwP,QACdsoB,SAAU93B,KAAK83B,WAWnBZ,EAAwB/2B,UAAU04B,aAAe,WAC/C74B,KAAK83B,SAAW93B,KAAK63B,QAAU73B,KAAKs3B,SAUtCJ,EAAwB/2B,UAAUo4B,aAAe,WAC/C,GAAI3c,GAAQ5b,KAAK43B,UAAUhc,QACvBC,EAAS7b,KAAK43B,UAAU/b,SACxBrD,EAAMxY,KAAK43B,UAAUwB,YACrB3gB,EAAOzY,KAAK43B,UAAUyB,YAE1B,QACE7gB,IAAKA,EACLC,KAAMA,EACNmD,MAAOA,EACPC,OAAQA,EACRnD,MAAOD,EAAOmD,EACdjD,OAAQH,EAAMqD,IAOlBtkB,EAAQC,OAAOA,GAAQud,UAAU,0BAA2B,WAC1D,OACEC,OACE+iB,QAAS,mCACTC,UAAW,qCACXC,WAAY,sCACZW,WAAY,qCACZF,WAAY,qCACZpD,WAAY,sCACZC,WAAY,sCACZ6C,YAAa,wCAEfnjB,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAY+6B,EACZ96B,aAAc,oCACdtC,YAAa,0DAejB,IAAIw/B,GAA4B,SAASlkB,EAAOC,EAASC,EAAOhX,GAC9D0B,KAAKoV,OAASA,EACdpV,KAAKsV,OAASA,EACdtV,KAAKqV,SAAWA,EAChBrV,KAAK1B,UAAYA,EAEjB0B,KAAK+e,MAAQ,UAAY3J,EAAOI,IAGlC8jB,GAA0Bp5B,SAAW,SAAS,WAAW,SAAS,aAOlEo5B,EAA0Bn5B,UAAUo5B,QAClC,UACA,UACA,UACA,UACA,WAMFD,EAA0Bn5B,UAA1Bm5B,SAA4C,SAG5CA,EAA0Bn5B,UAAU8D,SAGpCq1B,EAA0Bn5B,UAAUq5B,MAAQ,KAG5CF,EAA0Bn5B,UAAUs5B,OAAS,KAG7CH,EAA0Bn5B,UAAUu5B,MAAQ,KAG5CJ,EAA0Bn5B,UAAUw5B,KAAO,KAG3CL,EAA0Bn5B,UAAUqE,EAAI,KAGxC80B,EAA0Bn5B,UAAUsE,EAAI,KAaxC60B,EAA0Bn5B,UAAU0V,QAAU,WAC5C,GAAIlP,GAAS3G,KAAK1B,UAAU5F,IAAI,UAC5BkhC,EAAO55B,KAAK65B,cAEhB75B,MAAKw5B,MAAQ7yB,EAAOY,KAAKvH,KAAKu5B,QAE9Bv5B,KAAKy5B,OAAS9yB,EAAOJ,QAAQ,EAAG,IAAM,GACtCvG,KAAK05B,MAAQ/yB,EAAOJ,QAAQ,EAAG,MAAS,KACxCvG,KAAK25B,KAAO,IAAM35B,KAAKy5B,MAEvB,IAAIK,GAAwB,EAAd95B,KAAKy5B,MACnBz5B,MAAKyE,EAAIm1B,EAAKxC,SAASvb,OAASlV,EAAOJ,QAAQ,EAAG,IAAM,GACxDvG,KAAKwE,EAAImC,EAAOJ,QAAQuzB,EAASF,EAAKxC,SAASxb,MAAQke,GAEvD95B,KAAK+5B,WAAaH,EAAK7b,MACvB/d,KAAKg6B,WAAah6B,KAAKwE,EAEvBxE,KAAKiE,OACHuU,IAAKxY,KAAKyE,EACVgU,KAAMzY,KAAKwE,EACXoX,MAAqB,EAAd5b,KAAKy5B,OACZ5d,OAAsB,EAAd7b,KAAKy5B,QAGfz5B,KAAK65B,eAAeb,UAAUh5B,OAUhCs5B,EAA0Bn5B,UAAU+W,WAAa,WAC/ClX,KAAK65B,eAAeX,aAAal5B,OAUnCs5B,EAA0Bn5B,UAAUrH,OAAS,WAC3C,GAAImhC,GAAMn0B,KAAKm0B,IAA2B,MAAvB,GAAIt0B,OAAOC,UAC9B5F,MAAKwE,EAAIxE,KAAK25B,KAAOM,EAAMj6B,KAAKg6B,WAChCh6B,KAAKyE,EAAIzE,KAAKyE,EAAIzE,KAAK05B,MAEvB15B,KAAKiE,MAAMwU,KAAOzY,KAAKwE,EACvBxE,KAAKiE,MAAMuU,IAAMxY,KAAKyE,CAEtB,IAAIy1B,GAA4B,GAAdl6B,KAAKy5B,MACnBz5B,MAAKyE,EAAIy1B,IAIbl6B,KAAKwP,SAAU,EACfxP,KAAK65B,eAAeX,aAAal5B,QAUnCs5B,EAA0Bn5B,UAAUg5B,OAAS,WAC3C,GAAI7f,GAAWtZ,KAAK1B,UAAU5F,IAAI,YAE9BwR,EAAKlK,KACLgG,EAAU,WACZ,GAAI+X,GAAQ7T,EAAG2vB,eAAe9b,MAC1Boc,EAAOpc,EAAQ7T,EAAG6vB,UAEtB7vB,GAAG8vB,YAAcG,EACjBjwB,EAAGkwB,UAAY,KAGbp6B,MAAKo6B,WACP9gB,EAASuR,OAAO7qB,KAAKo6B,WAGvBp6B,KAAKo6B,UAAY9gB,EAAStT,EAAS,MAUrCszB,EAA0Bn5B,UAAUiW,QAAU,WAC5C,GAAItS,GAAY9D,KAAK1B,UAAU5F,IAAI,aAC/B4gB,EAAWtZ,KAAK1B,UAAU5F,IAAI,YAE9BwR,EAAKlK,KAELq6B,EAAY,WACdnwB,EAAG2vB,eAAeX,aAAahvB,IAG7BowB,EAAiB,WACnBpwB,EAAGkL,OAAO1C,WAAW2nB,GACrBnwB,EAAGmL,SAAS8F,IACVrX,EAAUP,kBACV+2B,GAIAx2B,GAAUP,kBACZvD,KAAKqV,SAAS0F,GACZjX,EAAUP,kBACV+2B,GAGFhhB,EAAS+gB,EAAW,IAGtBr6B,KAAK63B,SAAU,GAMjBtgC,EAAQC,OAAOA,GAAQud,UAAU,4BAA6B,WAC5D,OACEC,OACE/O,GAAI,8BAENgP,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClB/Y,WAAYm9B,EACZ7iB,SACEojB,eAAkB,4BAEpBz9B,aAAc,sCACdtC,YAAa,8DAIhB+F,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIgjC,GAAgB,SAASnlB,EAAQ9W,EAAWR,GAC9CkC,KAAK1B,UAAYA,EACjB0B,KAAKoV,OAASA,EAGdpV,KAAKlC,KAAOA,EAGdy8B,GAAcr6B,SAAW,SAAU,YAAa,QAOhDq6B,EAAcp6B,UAAUrC,KAAO,KAG/By8B,EAAcp6B,UAAU8L,SAAW,KAGnCsuB,EAAcp6B,UAAUq6B,cAAgB,EAGxCD,EAAcp6B,UAAUs6B,YAAc,iBAGtCF,EAAcp6B,UAAUu6B,YAAc,+DAatCH,EAAcp6B,UAAUkM,OAAS,WAE7B,GAAIvK,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClCiC,EAASqF,KAAK1B,UAAU5F,IAAI,UAC5B+D,EAAOuD,KAAK1B,UAAU5F,IAAI,QAC1B4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1B87B,EAAOx0B,KAAKoV,OAAOulB,SACvB,KAAInG,EAAK5L,SAAT,CAIA,GAAIhsB,GAAkB,WAEpB,GAAIoF,GAAU1H,EAAK5B,IAAI,mCACvBoJ,GAAaiB,QAAQf,GACrBrH,EAAOG,GAAG,aAGR+B,EAAkB,YAKtBJ,GAAK4P,QACHJ,SAAUjM,KAAKiM,UACd,YAAYlP,KACbH,EACAC,KAWN09B,EAAcp6B,UAAUuL,OAAS,WAE7B,GAAI5J,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClCiC,EAASqF,KAAK1B,UAAU5F,IAAI,UAC5B+D,EAAOuD,KAAK1B,UAAU5F,IAAI,QAC1B4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1B87B,EAAOx0B,KAAKoV,OAAOulB,SACvB,KAAInG,EAAK5L,SAAT,CAIA,GAAIhsB,GAAkB,WAEpB,GAAIoF,GAAU1H,EAAK5B,IAAI,mCACvBoJ,GAAaiB,QAAQf,GACrBrH,EAAOG,GAAG,aAGR+B,EAAkB,YAKtBJ,GACGiP,QACCO,SAAUjM,KAAKiM,SACfE,SAAUnM,KAAKlC,MACd,YAAYf,KACbH,EACAC,KAWR09B,EAAcp6B,UAAUy6B,KAAO,WAE3B,GAAI78B,GAAmBiC,KAAK1B,UAAU5F,IAAI,oBACtCsF,EAAUgC,KAAK1B,UAAU5F,IAAI,WAAWwF,WACxCvD,EAASqF,KAAK1B,UAAU5F,IAAI,SAEhCsF,GAAQsL,QAAQvL,EAAkBiC,KAAKlC,MACvCnD,EAAOG,GAAG,kCAIR+/B,QAAQ,KAIdtjC,EAAQC,OAAOA,GAAQ2E,WAAW,0BAA2Bo+B,IAE5D16B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIujC,GAAe,SAAS1lB,EAAQ9W,GAClC0B,KAAK1B,UAAYA,EACjB0B,KAAKoV,OAASA,EAGhB0lB,GAAa56B,SAAW,SAAU,aAOlC46B,EAAa36B,UAAU8L,SAAW,KAGlC6uB,EAAa36B,UAAUgM,SAAW,KAGlC2uB,EAAa36B,UAAU46B,kBAAoB,EAG3CD,EAAa36B,UAAU66B,kBAAoB,EAG3CF,EAAa36B,UAAU86B,kBAAoB,KAa3CH,EAAa36B,UAAUkM,OAAS,WAE5B,GAAIvK,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClCiC,EAASqF,KAAK1B,UAAU5F,IAAI,UAC5B+D,EAAOuD,KAAK1B,UAAU5F,IAAI,QAC1B4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1B87B,EAAOx0B,KAAKoV,OAAOulB,SACvB,KAAInG,EAAK5L,SAAT,CAIA,GAAIhsB,GAAkB,WAEpB,GAAIoF,GAAU1H,EAAK5B,IAAI,yBACvBoJ,GAAaiB,QAAQf,GACrBrH,EAAOG,GAAG,YAGR+B,EAAkB,YAKtBJ,GAAK4P,QACHJ,SAAUjM,KAAKiM,SACfE,SAAUnM,KAAKmM,UACd,WAAWpP,KACZH,EACAC,KAINtF,EAAQC,OAAOA,GAAQ2E,WAAW,yBAA0B2+B,IAE3Dj7B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAI2jC,GAAU,SAAS9lB,EAAQ9W,GAC7B0B,KAAK1B,UAAYA,EACjB0B,KAAKoV,OAASA,EAGhB8lB,GAAQh7B,SAAW,SAAS,aAO5Bg7B,EAAQ/6B,UAAUvG,KAAO,KAGzBshC,EAAQ/6B,UAAUwT,MAAQ,KAG1BunB,EAAQ/6B,UAAU0T,QAAU,KAG5BqnB,EAAQ/6B,UAAU6B,QAAU,KAG5Bk5B,EAAQ/6B,UAAUg7B,iBAAmB,GAarCD,EAAQ/6B,UAAUi7B,OAAS,WAEvB,GAAIC,GAAOr7B,KAAK1B,UAAU5F,IAAI,QAC1B87B,EAAOx0B,KAAKoV,OAAOkmB,WACvB,KAAI9G,EAAK5L,SAAT,CAIA,GAAI1e,GAAKlK,KAELpD,EAAkB,WAEpBsN,EAAGojB,SAGDzwB,EAAkB,YAKtBw+B,GAAK9nB,MACH3Z,KAAMoG,KAAKpG,KACX+Z,MAAO3T,KAAK2T,MACZE,QAAS7T,KAAK6T,QACd7R,QAAShC,KAAKgC,UACbjF,KACDH,EACAC,KAWNq+B,EAAQ/6B,UAAUmtB,MAAQ,WAEtBttB,KAAKpG,KAAO,KACZoG,KAAK2T,MAAQ,KACb3T,KAAK6T,QAAU,KACf7T,KAAKgC,QAAU,MAGnBzK,EAAQC,OAAOA,GAAQ2E,WAAW,oBAAqB++B,IAEtDr7B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIgkC,GAAW,SAASj9B,GACtB0B,KAAK1B,UAAYA,EAEjB0B,KAAKtF,KAAO4D,EAAU5F,IAAI,QAG5B6iC,GAASr7B,SAAW,aAOpBq7B,EAASp7B,UAAUzF,KAAO,KAG1B6gC,EAASp7B,UAAUq7B,eAAgB,EAcnCD,EAASp7B,UAAUs7B,aAAe,SAAS9O,GAEzC,GAAI+O,GAAS17B,KAAK1B,UAAU5F,IAAI,UAC5BgC,EAAOsF,KAAK1B,UAAU5F,IAAI,QAE1BkE,EAAkB,SAASqU,GAK3BvW,EAAK5B,OAAOmY,IAGZpU,EAAkB,aAKlBoU,EAAS,GAAIyqB,GAAO/O,GACpB/xB,EAAUqW,EAAO0qB,SAMrB,OALA/gC,GAAQmC,KACNH,EACAC,GAGKjC,GAWT2gC,EAASp7B,UAAUy7B,aAAe,SAASjP,GAEzC,GAAI+O,GAAS17B,KAAK1B,UAAU5F,IAAI,UAC5BgC,EAAOsF,KAAK1B,UAAU5F,IAAI,QAE1BkE,EAAkB,SAASqU,GAK3BvW,EAAK5B,OAAOmY,IAGZpU,EAAkB,aAKlBjC,EAAU8gC,EAAO5iC,QAASmN,GAAI0mB,EAAQ1mB,IAAM0mB,GAAS9xB,QAMzD,OALAD,GAAQmC,KACNH,EACAC,GAGKjC,GAUT2gC,EAASp7B,UAAU07B,OAAS,WAExB,GAAIlhC,GAASqF,KAAK1B,UAAU5F,IAAI,UAC5B+D,EAAOuD,KAAK1B,UAAU5F,IAAI,QAC1B6X,EAASvQ,KAAKtF,KAAK6V,SAEnB3T,EAAkB,WAEd2T,EACF5V,EAAOG,GAAG,kBAEVH,EAAOG,GAAG,kBAIZ+B,EAAkB,YAKtBJ,GAAK8P,UAAUxP,KACbH,EACAC,IAYN0+B,EAASp7B,UAAU27B,KAAO,SAAS5iC,GAE/B,GAAIyB,GAASqF,KAAK1B,UAAU5F,IAAI,SAEhCiC,GAAOG,GAAG5B,IAUdqiC,EAASp7B,UAAU47B,kBAAoB,WAEnC/7B,KAAKw7B,eAAgB,GAGzBjkC,EAAQC,OAAOA,GAAQ2E,WAAW,qBAAsBo/B,IAEvD17B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAI8F,GAAW,SAAS+X,EAAQ9W,EAAWlB,GACzC4C,KAAK5C,UAAYA,EACjB4C,KAAK1B,UAAYA,EACjB0B,KAAKoV,OAASA,EAEdpV,KAAKg8B,eAAiB,KACtBh8B,KAAKi8B,gBACLj8B,KAAKk8B,cACLl8B,KAAKgQ,UAELhQ,KAAKm8B,iBACLn8B,KAAKo8B,gBAGP/+B,GAAS6C,SAAW,SAAU,YAAa,aAO3C7C,EAAS8C,UAAUvG,KAAO,KAG1ByD,EAAS8C,UAAUrC,KAAO,KAG1BT,EAAS8C,UAAUk8B,cAAgB,EAGnCh/B,EAAS8C,UAAUq6B,cAAgB,EAGnCn9B,EAAS8C,UAAUs6B,YAAc,iBAGjCp9B,EAAS8C,UAAUm8B,eAAiB,KAGpCj/B,EAAS8C,UAAUo8B,gBAAkB;AAGrCl/B,EAAS8C,UAAUq8B,eAAiB,KAGpCn/B,EAAS8C,UAAUs8B,kBAAoB,KAGvCp/B,EAAS8C,UAAUu8B,kBAAoB,KAGvCr/B,EAAS8C,UAAUw8B,cAAgB,EAGnCt/B,EAAS8C,UAAUy8B,aAAe,KAGlCv/B,EAAS8C,UAAU08B,UAAY,KAe/Bx/B,EAAS8C,UAAU28B,kBAAoB,SAASx/B,GAE5C,GAAI+T,GAAWrR,KAAKk8B,WAAW5+B,EAAOC,OAIlCyC,MAAK+8B,YACP/8B,KAAK+8B,UAAUC,YAAa,EAC5Bh9B,KAAK+8B,UAAY,MAIf1rB,IACFA,EAAS2rB,YAAa,EACtBh9B,KAAK+8B,UAAY1rB,IAWvBhU,EAAS8C,UAAUpH,OAAS,WAExB,GAAI+I,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClC2E,EAAW2C,KAAK1B,UAAU5F,IAAI,YAC9B4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1B2Y,EAAW,GAAIhU,IACjBzD,KAAMoG,KAAKpG,KACXkE,KAAMkC,KAAKlC,OAGToM,EAAKlK,KAELpD,EAAkB,SAASyU,GAE3B,GAAIrP,GAAU1H,EAAK5B,IAAI,0CACvBoJ,GAAaiB,QAAQf,GAErBkI,EAAG9M,UAAU6/B,QAAQ5rB,GACrBnH,EAAGgzB,cAAc7rB,GAEjBnH,EAAGtQ,KAAO,KACVsQ,EAAGpM,KAAO,MAGVjB,EAAkB,YAKtBwU,GAASsqB,UAAU5+B,KACjBH,EACAC,IAYNQ,EAAS8C,UAAT9C,UAA4B,SAASgU,GAEjC,GAAIvP,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClC4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1BwR,EAAKlK,KAELpD,EAAkB,WAElB,GAAIoF,GAAU1H,EAAK5B,IAAI,0CACvBoJ,GAAaiB,QAAQf,EAErB,IAAIojB,GAAQlb,EAAG9M,UAAUkC,QAAQ+R,EACjCnH,GAAG9M,UAAUw1B,OAAOxN,EAAO,GAE3Blb,EAAGizB,mBAAmB9rB,IAGtBxU,EAAkB,YAKtBwU,GAAS+rB,UAAUrgC,KACjBH,EACAC,IAYNQ,EAAS8C,UAAUk9B,uBAAyB,SAAShsB,GAEjD,GAAIisB,GAASt9B,KAAK1B,UAAU5F,IAAI,UAC5BiO,EAAS3G,KAAK1B,UAAU5F,IAAI,UAE5BwR,EAAKlK,KAELpD,EAAkB,SAASsT,GAE3BhG,EAAGsyB,eAAiB71B,EAAOc,QAAQyI,EAEnC,IAAIqtB,GAAYrzB,EAAGsyB,eAAejlB,IAChC,SAASyX,GAAU,MAAOA,GAAO/oB,KAE/Bu3B,EAAW13B,KAAK23B,KAAKvtB,EAAQ3K,OAAO,GACpCm4B,EAAWH,EAAU3K,OAAO,EAAG4K,EAEnCtzB,GAAGuyB,kBAAoBiB,EAASC,OAAOJ,GACvCrzB,EAAGwyB,kBAAoBa,EAAUI,OAAOD,GAExCxzB,EAAGqyB,gBAAkBlrB,GAGrBxU,EAAkB,aAIlB+gC,EAAWN,EAAOO,eAAgBC,WAAYzsB,EAASpL,IAC3D23B,GAAS/iC,SAASkC,KAChBH,EACAC,IAWNQ,EAAS8C,UAAU49B,oBAAsB,WACvC/9B,KAAKu8B,gBAAgByB,WAAY,GAWnC3gC,EAAS8C,UAAU89B,wBAA0B,SAAS5sB,GAElDrR,KAAKs8B,eAAiBjrB,GAW1BhU,EAAS8C,UAAU+9B,eAAiB,SAAS7sB,GAEzC,GAAIvP,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClC4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1BwR,EAAKlK,KAELpD,EAAkB,SAASyU,GAE3B,GAAIrP,GAAU1H,EAAK5B,IACjB2Y,EAASC,SACP,sEACA,2FAEJxP,GAAaiB,QAAQf,GAErBkI,EAAGgzB,cAAc7rB,IAGjBxU,EAAkB,WAGlBwU,EAASC,UAAYD,EAASC,SAGlCD,GAASC,UAAYD,EAASC,SAE9BD,EAAS8sB,UAAUphC,KACjBH,EACAC,IAYNQ,EAAS8C,UAAUi+B,WAAa,SAAS/sB,GAErCA,EAASgtB,QAAUhtB,EAASgtB,QAWhChhC,EAAS8C,UAAUm+B,iBAAmB,SAASxrB,GAE3C,GAAI4oB,GAAS17B,KAAK1B,UAAU5F,IAAI,UAE5BwR,EAAKlK,KACLpD,EAAkB,SAASwW,GAE3BlJ,EAAG0yB,aAAexpB,EAClBlJ,EAAG2yB,UAAY/pB,GAGfjW,EAAkB,aAIlB+gC,EAAWlC,EAAO6C,WAAYC,OAAQ1rB,EAAK7M,IAC/C23B,GAAS/iC,SAASkC,KAChBH,EACAC,IAYNQ,EAAS8C,UAAUs+B,WAAa,SAAS3rB,GAErC,GAAIhR,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClC4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAC1BgmC,EAAO1+B,KAAK1B,UAAU5F,IAAI,QAE1BkE,EAAkB,WAElB,GAAIoF,GAAU1H,EAAK5B,IACjBoa,EAAKxB,SACH,sEACA,6EAEJxP,GAAaiB,QAAQf,IAGrBnF,EAAkB,WAGlBiW,EAAKxB,UAAYwB,EAAKxB,SAG1BwB,GAAKxB,UAAYwB,EAAKxB,QAEtB,IAAIssB,GAAWc,EAAK5lC,QAASmN,GAAI6M,EAAK7M,IAAK6M,EAC3C8qB,GAAS/iC,SAASkC,KAChBH,EACAC,IAaNQ,EAAS8C,UAAU5C,OAAS,SAAS8T,GAEjC,GAAI1W,GAASqF,KAAK1B,UAAU5F,IAAI,UAC5B6E,EAAU8T,EAAS2rB,WAErB,KADA3rB,EAASpL,EAGXtL,GAAOG,GAAG,qBACRyC,OAAQA,KAYdF,EAAS8C,UAAUw+B,gBAAkB,SAASttB,GAE1C,GAAIlE,GAAUnN,KAAK1B,UAAU5F,IAAI,WAC7BmY,EAAM7Q,KAAK1B,UAAU5F,IAAI,OAEzBwR,EAAKlK,KAELyS,EAAa,SAAS1X,GACxBmP,EAAGkL,OAAO1C,WAAW,WACnBrB,EAASutB,QAAU7jC,KAInBb,EAAMiT,EAAU,iBAAmBkE,EAASpL,GAAK,SACjDpD,GAAYkQ,UAAWN,EAAYO,MAAO,IAC1CmB,EAAStD,EAAIoC,UAAU/Y,EAAK2I,EAChC7C,MAAKi8B,aAAa5qB,EAASpL,IAAMkO,GAWrC9W,EAAS8C,UAAUg9B,mBAAqB,SAAS9rB,GAE7C,GAAIR,GAAM7Q,KAAK1B,UAAU5F,IAAI,OAEzByb,EAASnU,KAAKi8B,aAAa5qB,EAASpL,GACnCkO,WAIEnU,MAAKi8B,aAAa5qB,EAASpL,IAClC4K,EAAIC,aAAaqD,KAUrB9W,EAAS8C,UAAU0+B,eAAiB,WAEhC,GAAI1xB,GAAUnN,KAAK1B,UAAU5F,IAAI,WAC7BmY,EAAM7Q,KAAK1B,UAAU5F,IAAI,OAEzBwR,EAAKlK,KAGLyS,EAAa,SAASpB,EAAUtW,GAClCmP,EAAGkL,OAAO1C,WAAW,WAGdrB,EAASC,UACZT,EAAIC,aAAa5G,EAAG8xB,gBAGtBzkC,EAAQ+B,QAAQyB,EAAM,SAAS4X,GAC7B,GAAIG,GAAO5I,EAAG8F,OAAO2C,EAAK1M,GAC1B6M,GAAKO,UAAYV,EAAKS,aAKxBqL,EAAmB,WAIrB,MAAOvU,GAAG6yB,WAAa7yB,EAAG6yB,UAAUzrB,UAGlCoN,EAAiB,WAKnB,GAJIxU,EAAG8xB,gBACLnrB,EAAIC,aAAa5G,EAAG8xB,gBAGlB9xB,EAAG6yB,UAAW,CAChB,GAAI7iC,GAAMiT,EAAU,iBAAmBjD,EAAG6yB,UAAU92B,GAAK,WACrD8M,EAAYN,EAAWtM,KAAK+D,EAAIA,EAAG6yB,WACnCl6B,GAAYkQ,UAAWA,EAAWC,MAAO,EAC7C9I,GAAG8xB,eAAiBnrB,EAAIoC,UAAU/Y,EAAK2I,IAI3C7C,MAAK4a,SAAW5a,KAAKoV,OAAO1V,OAC1B+e,EACAC,IAWNrhB,EAAS8C,UAAUg8B,eAAiB,WAEhC,GAAI2C,GAAmB9+B,KAAK1B,UAAU5F,IAAI,mBAG1CnB,GAAQ+B,QAAQ0G,KAAK5C,UAAW4C,KAAKk9B,cAAc/2B,KAAKnG,OAGxDA,KAAK88B,kBAAkBgC,EAAiBxhC,QAGxC0C,KAAK6+B,kBAYTxhC,EAAS8C,UAAU+8B,cAAgB,SAAS7rB,GAGxC,GAAInH,GAAKlK,IACTzI,GAAQ+B,QAAQ+X,EAAS6B,MAAO,SAASJ,GACvC,GAAIisB,GAAM70B,EAAG8F,OAAO8C,EAAK7M,KAAO,IAChC6M,GAAKO,UAAoB,OAAR0rB,EACfA,EAAI1rB,UACF,EAEJnJ,EAAG8F,OAAO8C,EAAK7M,IAAM6M,IAIvBzB,EAASgtB,QAAS,CAGlB,IAAIp4B,GAAKjG,KAAK+8B,WAAa/8B,KAAK+8B,UAAU92B,EAC1CoL,GAAS2rB,WAAa3rB,EAASpL,KAAOA,EAGtCoL,EAASutB,QAAUvtB,EAAS2tB,MAAMz5B,OAE7B8L,EAASC,SAGZtR,KAAK2+B,gBAAgBttB,GAFrBrR,KAAKm9B,mBAAmB9rB,GAK1BrR,KAAKk8B,WAAW7qB,EAASpL,IAAMoL,GAWnChU,EAAS8C,UAAUi8B,cAAgB,WAE/B,GAAIvrB,GAAM7Q,KAAK1B,UAAU5F,IAAI,OAEzBwR,EAAKlK,KAELi/B,EAAa,WACf,IAAK,GAAIh5B,KAAMiE,GAAG+xB,aAChBprB,EAAIC,aAAa5G,EAAG+xB,aAAah2B,GAG/BiE,GAAG8xB,gBACLnrB,EAAIC,aAAa5G,EAAG8xB,gBAGtB9xB,EAAG8xB,eAAiB,KACpB9xB,EAAG+xB,gBAEH/xB,EAAG2d,YACH3d,EAAG0Q,WAGL5a,MAAK6nB,UAAY7nB,KAAKoV,OAAO2P,IAAI,WAAYka,IAIjD1nC,EAAQC,OAAOA,GAAQ2E,WAAW,qBAAsBkB,IAEvDwC,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIsG,GAAQ,SAASuX,EAAQ9W,EAAWV,GACtCoC,KAAKpC,OAASA,EACdoC,KAAK1B,UAAYA,EACjB0B,KAAKoV,OAASA,EAGhBvX,GAAMqC,SAAW,SAAU,YAAa,UAOxCrC,EAAMsC,UAAU8L,SAAW,KAG3BpO,EAAMsC,UAAUgM,SAAW,KAG3BtO,EAAMsC,UAAU46B,kBAAoB,EAGpCl9B,EAAMsC,UAAU66B,kBAAoB,EAGpCn9B,EAAMsC,UAAU++B,UAAY,KAG5BrhC,EAAMsC,UAAUg/B,YAAc,KAa9BthC,EAAMsC,UAAUpH,OAAS,WAErB,GAAI+I,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClCmF,EAAQmC,KAAK1B,UAAU5F,IAAI,SAC3B4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1B0mC,EAAQ,GAAIvhC,IACdoO,SAAUjM,KAAKiM,SACfE,SAAUnM,KAAKmM,WAGbjC,EAAKlK,KAELpD,EAAkB,SAASwiC,GAE3B,GAAIp9B,GAAU1H,EAAK5B,IAAI,uCACvBoJ,GAAaiB,QAAQf,GAErBkI,EAAGtM,OAAOq/B,QAAQmC,GAElBl1B,EAAG+B,SAAW,KACd/B,EAAGiC,SAAW,MAGdtP,EAAkB,YAKtBuiC,GAAMzD,UAAU5+B,KACdH,EACAC,IAYNgB,EAAMsC,UAAUk/B,qBAAuB,SAASD,GAE5Cp/B,KAAKm/B,YAAcC,GAWvBvhC,EAAMsC,UAANtC,UAAyB,SAASuhC,GAE9B,GAAIt9B,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClC4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1BwR,EAAKlK,KAELpD,EAAkB,WAElB,GAAIoF,GAAU1H,EAAK5B,IAAI,uCACvBoJ,GAAaiB,QAAQf,EAErB,IAAIojB,GAAQlb,EAAGtM,OAAO0B,QAAQ8/B,EAC9Bl1B,GAAGtM,OAAOg1B,OAAOxN,EAAO,IAGxBvoB,EAAkB,YAKtBuiC,GAAMhC,UAAUrgC,KACdH,EACAC,IAYNgB,EAAMsC,UAAUm/B,iBAAmB,SAASF,GAExCp/B,KAAKk/B,UAAYE,GAWrBvhC,EAAMsC,UAAUrH,OAAS,SAASsmC,GAE9B,GAAIt9B,GAAe9B,KAAK1B,UAAU5F,IAAI,gBAClC4B,EAAO0F,KAAK1B,UAAU5F,IAAI,QAE1BkE,EAAkB,WAElB,GAAIoF,GAAU1H,EAAK5B,IAAI,0CACvBoJ,GAAaiB,QAAQf,IAGrBnF,EAAkB,YAKtBuiC,GAAMjB,UAAUphC,KACdH,EACAC,IAINtF,EAAQC,OAAOA,GAAQ2E,WAAW,kBAAmB0B,IAEpDgC,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIgoC,GAAU,SAASjhC,EAAW9B,GAChCwD,KAAK1B,UAAYA,EAEjB0B,KAAKxD,aAAeA,EAGtB+iC,GAAQr/B,SAAW,YAAa,gBAOhCq/B,EAAQp/B,UAAU3D,cAAe,EAGjC+iC,EAAQp/B,UAAUq7B,eAAgB,EAalC+D,EAAQp/B,UAAU07B,OAAS,WAEvB,GAAIlhC,GAASqF,KAAK1B,UAAU5F,IAAI,UAC5B+D,EAAOuD,KAAK1B,UAAU5F,IAAI,QAE1BkE,EAAkB,WAElBjC,EAAOG,GAAG,kBAGV+B,EAAkB,YAKtBJ,GAAK8P,UAAUxP,KACbH,EACAC,IAYN0iC,EAAQp/B,UAAU27B,KAAO,SAAS5iC,GAE9B,GAAIyB,GAASqF,KAAK1B,UAAU5F,IAAI,SAEhCiC,GAAOG,GAAG5B,IAUdqmC,EAAQp/B,UAAU47B,kBAAoB,WAElC/7B,KAAKw7B,eAAgB,GAGzBjkC,EAAQC,OAAOA,GAAQ2E,WAAW,oBAAqBojC,IAEtD1/B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIioC,GAAU,SAASC,EAAWtyB,GAChC,GAAIjT,GAAMiT,EAAU,gBAChBuyB,GAAkBz5B,GAAI,OACtBxN,GACF+yB,yBACE7yB,OAAQ,MACRoJ,wBAAwB,EACxB7H,IAAKiT,EAAU,wBAEjBwyB,0BACEhnC,OAAQ,MACRoJ,wBAAwB,EACxB7H,IAAKiT,EAAU,qCAEjBke,0BACE1yB,OAAQ,MACRoJ,wBAAwB,EACxB7H,IAAKiT,EAAU,kCAGftK,IAIJ,OAAO48B,GAAUvlC,EAAKwlC,EAAejnC,EAASoK,GAGhD28B,GAAQt/B,SAAW,YAAa,WAKhC3I,EAAQC,OAAOA,GAAQgL,QAAQ,WAAYg9B,IAE1C3/B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIioC,GAAU,SAASC,EAAWtyB,GAChC,GAAIjT,GAAMiT,EAAU,cAChBuyB,GAAkBz5B,GAAI,OACtBxN,GACFolC,eACEllC,OAAQ,MACRE,SAAS,EACTqB,IAAKiT,EAAU,iCAGftK,IAGJ,OAAO48B,GAAUvlC,EAAKwlC,EAAejnC,EAASoK,GAGhD28B,GAAQt/B,SAAW,YAAa,WAKhC3I,EAAQC,OAAOA,GAAQgL,QAAQ,SAAUg9B,IAExC3/B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIioC,GAAU,SAASC,EAAWnhC,EAAW6O,GAC3C,GAAIjT,GAAMiT,EAAU,cAChBuyB,GAAkBz5B,GAAI,OACtBxN,GACF8lC,WACE5lC,OAAQ,MACRE,SAAS,EACTqB,IAAKiT,EAAU,yBAGftK,IAGJ,OAAO48B,GAAUvlC,EAAKwlC,EAAejnC,EAASoK,GAGhD28B,GAAQt/B,SAAW,YAAa,YAAa,WAK7C3I,EAAQC,OAAOA,GAAQgL,QAAQ,SAAUg9B,IAExC3/B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIioC,GAAU,SAASC,EAAWtyB,GAChC,GAAIjT,GAAMiT,EAAU,aAChBuyB,GAAkBz5B,GAAI,OACtBxN,GACFkzB,eACEhzB,OAAQ,MACRoJ,wBAAwB,EACxB7H,IAAKiT,EAAU,8BAGftK,IAIJ,OAAO48B,GAAUvlC,EAAKwlC,EAAejnC,EAASoK,GAGhD28B,GAAQt/B,SAAW,YAAa,WAKhC3I,EAAQC,OAAOA,GAAQgL,QAAQ,QAASg9B,IAEvC3/B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIioC,GAAU,SAASC,EAAWtyB,GAChC,GAAIjT,GAAMiT,EAAU,YAChBuyB,GAAkBz5B,GAAI,OACtBxN,KAEAoK,IAGJ,OAAO48B,GAAUvlC,EAAKwlC,EAAejnC,EAASoK,GAGhD28B,GAAQt/B,SAAW,YAAa,WAKhC3I,EAAQC,OAAOA,GAAQgL,QAAQ,OAAQg9B,IAEtC3/B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIioC,GAAU,SAASC,EAAWtyB,GAChC,GAAIjT,GAAMiT,EAAU,YAChBuyB,GAAkBz5B,GAAI,OACtBxN,GACFgC,SACE9B,OAAQ,MACRoJ,wBAAwB,EACxB7H,IAAKiT,EAAU,kBAGftK,IAIJ,OAAO48B,GAAUvlC,EAAKwlC,EAAejnC,EAASoK,GAGhD28B,GAAQt/B,SAAW,YAAa,WAKhC3I,EAAQC,OAAOA,GAAQgL,QAAQ,OAAQg9B,IAEtC3/B,eAAgBtI,SAGnB,SAAUC,EAAQD,GAChB,YAKAA,GAAQC,OAAOA,GAAQooC,OAAO,QAAQ,OAAO,SAAStlC,GACpD,GAAIslC,GAAS,WAET,MAAOtlC,GAAK5B,IAAImnC,MAAMvlC,EAAM0N,WAKhC,OAFA43B,GAAOE,WAAY,EAEZF,KAMTroC,EAAQC,OAAOA,GAAQooC,OAAO,UAAW,WACvC,MAAO,UAASpiC,EAAOuiC,GAIrB,MAHAA,GAAWj1B,MAAMi1B,GAAY,EAAIA,EACjCviC,EAAQsN,MAAMtN,GAAS,EAAY,IAARA,EAEpBA,EAAMwiC,QAAQD,GAAY,OAOrCxoC,EAAQC,OAAOA,GAAQooC,OAAO,OAAQ,WACpC,MAAO,UAASpiC,GAEd,MAAIA,IAAS,EACJA,EAAQ,UAGH,IAANA,EAAa,YAOzBjG,EAAQC,OAAOA,GAAQooC,OAAO,OAAQ,WACpC,MAAO,UAASpiC,GACd,MAAOA,GAAQ,cAIlBqC,eAAgBtI,SAGnB,WACE,YAEAuL,OAAMm9B,UAAU,qBAEdznC,UACEwW,OAAQ,EACRzP,OAAQ,GACRonB,SAAU,IACVtoB,WAAY,eAGd6hC,OACE3gC,OAAQoI,OACRqH,OAAQkpB,OACRvR,SAAUuR,OACV75B,WAAYsJ,QAGdw4B,UACIC,UAAW,WACT,MAAOt9B,OAAMs9B,UAAUpgC,KAAKT,SAG9B8gC,WAAY,WACV,MAAOrgC,MAAKogC,WAAapgC,KAAKogC,UAAUE,MAI9C7T,KAAM,WACJ,MAAKzsB,MAAKT,OAKLS,KAAKogC,UAAV,WACE9Z,SAAQrkB,MAAM,4DAA8DjC,KAAKT,YALjF+mB,SAAQrkB,MAAM,4DAUlB0B,QACEoS,MAAO,SAAS/R,EAAOjJ,GACjBA,GAAQA,EAAK6rB,SAIjB5mB,KAAKogC,UAAU9kB,OACftb,KAAKqgC,WAAWtlB,GAAG,SAAU/a,KAAKwa,cAItC+lB,SAEE/lB,UAAW,WACTxa,KAAKqgC,WAAWllB,IAAI,SAAUnb,KAAKwa,WAEnCxa,KAAKwgC,aAAe19B,MAAM8jB,OAAO5mB,KAAKsgC,KACpCjiC,WAAY2B,KAAK3B,WACjBsoB,SAAU3mB,KAAK2mB,SACf3X,OAAQhP,KAAKgP,SAGfhP,KAAKsgC,IAAIvlB,GAAG,WAAY/a,KAAKkmB,aAC7BlmB,KAAKsgC,IAAIG,QAAQ,SAAW7Z,QAAQ,KAGtCV,YAAa,WACXlmB,KAAKsgC,IAAInlB,IAAI,WAAYnb,KAAKkmB,aAC9BlmB,KAAKwgC,aAAanlB","file":"../../js/app-34db081871.min.js","sourcesContent":["/*!\n * efit-frontend\n * eFit Frontend\n * http://www.finanz-training.at\n * @author Armin Pfurtscheller\n * @version 1.0.0\n * Copyright 2017. MIT licensed.\n */\n/* global angular */\n(function(global, angular){\n  'use strict';\n\n  //\n  // MODULE\n  //\n  var module = 'eFit';\n\n  //\n  // APP\n  //\n  var app = angular.module(module, [\n    'ngSanitize',\n    'ngMessages',\n    'ngResource',\n    'ui.router',\n    'eFit.views',\n    'eFit.config'\n  ]);\n\n  //\n  // CONSTANTS\n  //\n\n  // @see: config.js\n\n  //\n  // CONFIG\n  //\n  app.config([\n    '$locationProvider', '$stateProvider', '$urlRouterProvider', '$httpProvider',\n    '$templateRequestProvider', '$resourceProvider', '$qProvider', 'VIEWS_PATH',\n    function(\n      $locationProvider, $stateProvider, $urlRouterProvider, $httpProvider,\n      $templateRequestProvider, $resourceProvider, $qProvider, VIEWS_PATH) {\n\n      // -------------------------\n      // LOCATION\n      // -------------------------\n      $locationProvider.html5Mode(false);\n      $locationProvider.hashPrefix('!');\n\n      // -------------------------\n      // INTERCEPTORS\n      // -------------------------\n      $httpProvider.interceptors.push('httpInterceptor');\n\n      // -------------------------\n      // PROMISES\n      // -------------------------\n      $qProvider.errorOnUnhandledRejections(false);\n\n      // -------------------------\n      // RESOURCES\n      // -------------------------\n      $resourceProvider.defaults.actions = {\n        get:    { method: 'GET' },\n        list:   { method: 'GET', isArray:true },\n        update: { method: 'PATCH' },\n        create: { method: 'POST'},\n        delete: { method: 'DELETE'}\n      };\n\n      // -------------------------\n      // TEMPLATES\n      // -------------------------\n\n      // assign default `templateUrl` for states\n      $stateProvider.decorator('views', function(state, parent) {\n        //\n        // Assigns default template URL:\n        // ./path/to/state/[view/][/name].html\n        //\n        var newViewConfig = {}, views = parent(state);\n        angular.forEach(views, function(config, view){\n          var viewMatch = view.match(/([^@]+)\\@/); // [parentView/]view@state.name\n          var viewName = viewMatch ? '/' + viewMatch[1] : '';\n\n          var stateName = state.name.replace(/\\./g, '/');\n\n          var templateUrl = config.templateUrl || [\n            VIEWS_PATH,\n            stateName,\n            viewName,\n            '.html'\n          ].join('');\n\n          config.templateUrl = templateUrl;\n          newViewConfig[view] = config;\n        });\n\n        return newViewConfig;\n      });\n\n      // ignore JWT authorization on template requests\n      $templateRequestProvider.httpOptions({\n        skipAuthorization: true\n      });\n\n      // -------------------------\n      // STATES\n      // -------------------------\n\n      // main (i18n)\n      $stateProvider.state('main', {\n        url: '',\n        abstract: true,\n        resolve: {\n          translations: ['i18n', function(i18n){\n            return i18n.load('de', {\n              skipAuthorization: true\n            });\n          }],\n        },\n        template: '<div id=\"main\" data-ui-view=\"\"></div>'\n      });\n\n      // frontend\n      $stateProvider.state('frontend', {\n        parent: 'main',\n        url: '/',\n        resolve: {\n          current: [\n            'user', '$state', '$q',\n            function(user, $state){\n              var promise = user.load().$promise;\n              return promise.catch(function(){\n                $state.go('login.frontend');\n              });\n            }\n          ]\n        },\n        data: {\n          role: [\n            'ROLE_USER',\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        views: {\n          'navbar@frontend': {},\n          'home@frontend': {},\n          'topics@frontend': {},\n\n          'financial-knowledge@frontend':{},\n          'financial-knowledge/interest-task@frontend':{},\n          'financial-knowledge/diversification-task@frontend':{},\n\n          'consumer-behaviour@frontend':{},\n          'consumer-behaviour/bomb-task@frontend':{},\n          'consumer-behaviour/anchoring-task@frontend':{},\n          'consumer-behaviour/mental-bookkeeping-task@frontend':{},\n          'consumer-behaviour/framing-task@frontend':{},\n\n          'self-control@frontend':{},\n          'self-control/savings-target-task@frontend':{},\n          'self-control/savings-supported-task@frontend':{},\n          'self-control/self-commitment-task@frontend':{},\n          'self-control/procrastination-task@frontend':{},\n\n          'status@frontend': {},\n          'contact@frontend': {\n            controller: 'ContactController',\n            controllerAs: 'contactController'\n          },\n          'footer@frontend': {},\n          'offcanvas@': {\n            controller: 'FrontendController',\n            controllerAs: 'frontendController'\n          },\n          '@': {\n            controller: 'FrontendController',\n            controllerAs: 'frontendController'\n          }\n        }\n      });\n\n      // backend\n      $stateProvider.state('backend', {\n        parent: 'main',\n        url: '/admin',\n        data: {\n          role: [\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        resolve: {\n          isSuperAdmin: [\n            'auth', '$state', '$q',\n            function(auth, $state, $q){\n              var defer = $q.defer();\n\n              var successCallback = function() {\n                defer.resolve(true);\n              };\n              var failureCallback = function() {\n                defer.resolve(false);\n              };\n\n              auth.hasRole(\n                'ROLE_SUPER_ADMIN'\n              ).then(\n                successCallback,\n                failureCallback\n              );\n\n              return defer.promise;\n            }\n          ]\n        },\n        redirectTo: 'backend.workshops',\n        views: {\n          'main@backend': {},\n          'navbar@backend': {},\n          'footer@backend': {},\n          'offcanvas@': {\n            controller: 'BackendController',\n            controllerAs: 'backendController'\n          },\n          '@': {\n            controller: 'BackendController',\n            controllerAs: 'backendController'\n          }\n        },\n\n      });\n\n      $stateProvider.state('backend.workshops', {\n        url: '?{expand:int}',\n        data: {\n          role: [\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        resolve: {\n          workshops: ['Workshop', function(Workshop){\n            return Workshop.list().$promise;\n          }]\n        },\n        params: {\n          expand: {\n            value: null,\n            dynamic: true\n          }\n        },\n        controller: 'WorkshopController',\n        controllerAs: 'workshopController'\n      });\n\n      $stateProvider.state('backend.admins', {\n        url: '/trainer',\n        data: {\n          role: 'ROLE_SUPER_ADMIN',\n          redirects: {\n            ROLE_ADMIN: 'backend'\n          }\n        },\n        resolve: {\n          admins: ['Admin', function(Admin){\n            return Admin.list().$promise;\n          }]\n        },\n        controller: 'AdminController',\n        controllerAs: 'adminController'\n      });\n\n      // login\n      $stateProvider.state('login', {\n        url: '/login',\n        parent: 'main',\n        abstract: true,\n        redirectTo: 'login.frontend.index'\n      });\n\n      $stateProvider.state('login.frontend', {\n        url: '/app',\n        resolve: {\n          code: [\n            'CODE_STORAGE_KEY', 'storage',\n            function(CODE_STORAGE_KEY, storage){\n              var proxy = storage.getProxy();\n              return proxy.getItem(\n                CODE_STORAGE_KEY\n              );\n            }\n          ]\n        },\n        data: {\n          redirects: {\n            ROLE_USER: 'frontend'\n          }\n        },\n        redirectTo: 'login.frontend.index',\n        controller: 'LoginFrontendController',\n        controllerAs: 'loginFrontendController'\n      });\n\n      $stateProvider.state('login.frontend.index', {\n        url: ''\n      });\n\n      $stateProvider.state('login.frontend.signup', {\n        url: '/schule',\n        redirectTo: 'login.frontend.signup.step1'\n      });\n\n      $stateProvider.state('login.frontend.signup.step1', {\n        url: '/schritt-1',\n        redirectTo: function(transition){\n          var redirectTo = function(code) {\n            if (code) {\n              return 'login.frontend.signup.step2';\n            }\n          };\n\n          var $injector = transition.injector();\n          var code = $injector.getAsync('code');\n          return code.then(redirectTo);\n        }\n      });\n\n      $stateProvider.state('login.frontend.signup.step2', {\n        url: '/schritt-2',\n        resolvePolicy: { when: 'EAGER' },\n        redirectTo: function(transition){\n          var redirectTo = function(code) {\n            if (!code) {\n              return 'login.frontend.signup.step1';\n            }\n          };\n\n          var $injector = transition.injector();\n          var code = $injector.getAsync('code');\n          return code.then(redirectTo);\n        }\n      });\n\n      $stateProvider.state('login.frontend.signin', {\n        url: '/zuhause'\n      });\n\n      $stateProvider.state('login.backend', {\n        url: '/admin',\n        data: {\n          redirects: {\n            ROLE_ADMIN: 'backend',\n            ROLE_SUPER_ADMIN: 'backend'\n          }\n        },\n        controller: 'LoginBackendController',\n        controllerAs: 'loginBackendController'\n      });\n\n      $urlRouterProvider.otherwise('/');\n    }\n  ]);\n\n  //\n  // RUN\n  //\n  app.run(['$injector', function($injector) {\n      var $transitions = $injector.get('$transitions');\n      var $rootScope = $injector.get('$rootScope');\n      var appState = $injector.get('appState');\n      var $state = $injector.get('$state');\n      var auth = $injector.get('auth');\n      var user = auth.getUser();\n\n      var onStart = function(transition) {\n        appState.routerBusy = true;\n\n        var state = transition.to();\n        var data = state.data || {};\n        var role = data.role || null;\n        var redirects = data.redirects || {};\n\n        // no authentication check for states\n        // without any authorization settings\n        if (role === null) {\n\n          // try to redirect authenticated users\n          // with auth roles to configured route\n          if (user === null) {\n            return true;\n          }\n\n          var roles = user.roles || [];\n          for (role in redirects) {\n            if (roles.indexOf(role)>=0) {\n              var target = redirects[role];\n              return $state.target(target);\n            }\n          }\n\n          return true;\n        }\n\n        // assert role an array for callbacks\n        if (!angular.isArray(role)) {\n          role = [role];\n        }\n\n        var successCallback = function()\n          {\n            return true;\n          };\n\n        var failureCallback = function()\n          {\n            // redirect to login page depending on\n            // given role with unsufficient rights\n            // or possibly failed refresh process!\n            switch(role[0])\n            {\n              case 'ROLE_ADMIN':\n              case 'ROLE_SUPER_ADMIN':\n                return $state.target('login.backend');\n              default:\n                return $state.target('login.frontend');\n            }\n          };\n\n        return auth.hasRole(role).then(\n          successCallback,\n          failureCallback\n        );\n      };\n\n      var onError = function(/*transition*/) {\n        appState.routerBusy = false;\n\n        // no initial user before transition\n        if (user === null) {\n          return;\n        }\n\n        // get initial user's role and see if\n        // there was an invalidation ($http)!\n        var role = user.roles[0];\n        user = auth.getUser();\n        if (user !== null) {\n          return;\n        }\n\n        // user's jwt was destroyed, redirect\n        // user according to its initial role\n        switch(role)\n        {\n          case 'ROLE_ADMIN':\n          case 'ROLE_SUPER_ADMIN':\n            $state.go('login.backend');\n            break;\n          default:\n            $state.go('login.frontend');\n        }\n      };\n\n      var onSuccess = function(transition) {\n        $rootScope.state = transition.to();\n        appState.routerBusy = false;\n      };\n\n      $rootScope.$watch(\n        function() {\n          return appState.isBusy();\n        },\n        function(isBusy) {\n          $rootScope.isBusy = isBusy;\n          $rootScope.httpBusy = appState.httpBusy;\n          $rootScope.routerBusy = appState.routerBusy;\n        }\n      );\n\n      $transitions.onError({}, onError);\n      $transitions.onStart({}, onStart);\n      $transitions.onSuccess({}, onSuccess);\n    }\n  ]);\n\n  //\n  // EXPOSE\n  //\n  global.ANGULAR_MODULE = module;\n\n})(window, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  var HttpInterceptor = function($injector)\n    {\n      this.$injector = $injector;\n      this._urls = {};\n    };\n\n  /** @var {Array.<string>} $inject Dependencies to be injected by Angular. */\n  HttpInterceptor.$inject = ['$injector'];\n\n  /**\n   * Gets latest response from $http.\n   */\n  HttpInterceptor.prototype.getLastSuccessResponse = function()\n    {\n      return this._lastSuccessResponse;\n    };\n\n  /**\n   * Gets latest error from $http.\n   */\n  HttpInterceptor.prototype.getLastErrorResponse = function()\n    {\n      return this._lastErrorResponse;\n    };\n\n  /**\n   * Gets latest response from $http.\n   */\n  HttpInterceptor.prototype.getLastResponse = function()\n    {\n      return this._lastResponse;\n    };\n\n  /**\n   * Returns a hash of all requested urls.\n   */\n  HttpInterceptor.prototype.getUrls = function()\n    {\n      return this._urls;\n    };\n\n  /**\n   * Intercepts $http request's config before invocation.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.request = function(config)\n    {\n      var appState = this.$injector.get('appState');\n\n      // set app state to busy\n      appState.httpBusy = true;\n\n      // save url in internal cache\n      this._setUrl(config);\n\n      // set common headers\n      config.headers['X-Requested-With'] = 'XMLHttpRequest';\n\n      // JWT authorization\n      var successCallback = function(token) {\n        if (token) {\n          config.headers.Authorization = 'Bearer ' + token;\n        }\n\n        return config;\n      };\n\n      var failureCallback = function() {\n        return config;\n      };\n\n      if (config.skipAuthorization) {\n        return config;\n      }\n\n      var jwtToken = this._getJWTToken(config);\n      var $q = this.$injector.get('$q');\n      return $q.when(jwtToken).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Intercepts $http request error's config before invocation.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.requestError = function(rejection)\n    {\n      var appState = this.$injector.get('appState');\n      var $q = this.$injector.get('$q');\n\n      appState.httpBusy = false;\n\n      return $q.reject(rejection);\n    };\n\n  /**\n   * Intercepts $http response before forwarding.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.response = function(response)\n    {\n      var appState = this.$injector.get('appState');\n\n      this._setLastSuccessResponse(response);\n      this._setLastResponse(response);\n\n      appState.httpBusy = false;\n\n      return response;\n    };\n\n  /**\n   * Intercepts $http error response before forwarding.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.responseError = function(rejection)\n    {\n      var appState = this.$injector.get('appState');\n      var $q = this.$injector.get('$q');\n\n      this._showGlobalErrorMessage(rejection);\n      this._setLastErrorResponse(rejection);\n      this._setLastResponse(rejection);\n      this._checkJWT(rejection);\n\n      appState.httpBusy = false;\n\n      return $q.reject(rejection);\n    };\n\n  /**\n   * Sets fully qualified url with query string for a request.\n   * This is useful to manage Angular's $cacheFactory for $http.\n   * @param {object} config\n   */\n  HttpInterceptor.prototype._setUrl = function(config)\n    {\n      var $httpParamSerializer = this.$injector.get('$httpParamSerializer');\n      var params = $httpParamSerializer(config.params);\n      var url = config.url + (\n        params ?\n          '?' + params :\n          ''\n      );\n\n      this._urls[url] = true;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastResponse = function(responseOrRejection)\n    {\n      this._lastResponse = responseOrRejection;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastErrorResponse = function(rejection)\n    {\n      this._lastErrorResponse = rejection;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastSuccessResponse = function(response)\n    {\n      this._lastSuccessResponse = response;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._showGlobalErrorMessage = function(rejection)\n  {\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n\n    var config = rejection.config || {};\n    if (config.skipGlobalErrorMessage) {\n      return;\n    }\n\n    var data = rejection.data || {};\n    if (!data.message) {\n      return;\n    }\n\n    notification.error(i18n.get(data.message));\n  };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._checkJWT = function(rejection)\n  {\n    var jwt = this.$injector.get('jwt');\n\n    switch (rejection.status) {\n      case 403:\n        // invalidate user on 403 message\n        // to redirect to the login pages\n        jwt.invalidate();\n        break;\n      default:\n    }\n  };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._getJWTToken = function() {\n    var auth = this.$injector.get('auth');\n    var jwt = this.$injector.get('jwt');\n\n    // a) no token available in storage\n    var token = jwt.getToken();\n    if (!token) {\n      return null;\n    }\n\n    // b) token is still valid, check for\n    // refresh if it expires in 5 minutes\n    if (jwt.isExpired(token, 600)) {\n      var successCallback = function() {\n        return jwt.getToken();\n      };\n\n      var failureCallback = function() {\n        return null;\n      };\n\n      return auth.refresh().then(\n        successCallback,\n        failureCallback\n      );\n    }\n\n    // c) use current token\n    return jwt.getToken();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('httpInterceptor',['$injector',function($injector){\n\n      var httpInterceptor = $injector.instantiate(HttpInterceptor);\n\n      return { // important: $http service invokes this methods with global scope!\n        getUrls: function(){ return httpInterceptor.getUrls(); },\n        getLastResponse: function(){ return httpInterceptor.getLastResponse(); },\n        getLastErrorResponse: function(){ return httpInterceptor.getLastErrorResponse(); },\n        getLastSuccessResponse: function(){ return httpInterceptor.getLastSuccessResponse(); },\n        request: function(config){ return httpInterceptor.request(config); },\n        response: function(response){ return httpInterceptor.response(response); },\n        requestError: function(rejection){ return httpInterceptor.responseError(rejection); },\n        responseError: function(rejection){ return httpInterceptor.responseError(rejection); }\n      };\n    }]);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Notification = function() {\n  };\n\n  Notification.$inject = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Shows user notification in a toast message.\n   *\n   * @public\n   * @method notify\n   * @param {string} message\n   * @param {string} status One of `danger`, `warning`, `success` or `primary`.\n   * @param {object} options Additional options like `timeout` and `pos`.\n   * @return {object} Notification object\n   */\n  Notification.prototype.notify = function(message, status, options) {\n    status = status || 'default';\n    options = options || {};\n\n    options.message = message;\n    options.status = status;\n\n    return UIkit.notification(options);\n  };\n\n  /**\n   * Shows user success notification.\n   *\n   * @public\n   * @method success\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.success = function(message, options) {\n    this.notify(message, 'success', options);\n  };\n\n  /**\n   * Shows user primary notification.\n   *\n   * @public\n   * @method success\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.primary = function(message, options) {\n    this.notify(message, 'primary', options);\n  };\n\n  /**\n   * Shows user error notification.\n   *\n   * @public\n   * @method error\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.error = function(message, options) {\n    this.notify(message, 'danger', options);\n  };\n\n  /**\n   * Shows user warning notification.\n   *\n   * @public\n   * @method warning\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.warning = function(message, options) {\n    this.notify(message, 'warning', options);\n  };\n\n  /**\n   * Closes all open notifications.\n   *\n   * @public\n   * @method closeAll\n   * @return {void}\n   */\n  Notification.prototype.closeAll = function() {\n    UIkit.notification.closeAll();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('notification', Notification);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var AppState = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  AppState.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} httpBusy If $http is currently doing work. */\n  AppState.prototype.httpBusy = false;\n\n  /** @var {boolean} routerBusy If router is currently doing work. */\n  AppState.prototype.routerBusy = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Returns true if `httpBusy` or `routeBusy` is true.\n   *\n   * @public\n   * @method isBusy\n   * @return {void}\n   */\n  AppState.prototype.isBusy = function() {\n    return this.httpBusy || this.routeBusy;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('appState', AppState);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Animation = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  Animation.$inject = ['$injector'];\n\n  /**\n   * Gets correctly prefixed animation end event.\n   *\n   * @private\n   * @property animationEndEvent\n   * @return {void}\n   */\n  Animation.prototype.animationEndEvent = (function() {\n    var dummy = document.createElement('div');\n    var events = {\n      'WebkitAnimation': 'webkitAnimationEnd',\n      'MozTAnimation': 'animationend',\n      'animation': 'animationend'\n    };\n\n    for(var key in events){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return events[key];\n        }\n    }\n\n    return null;\n  })();\n\n  /**\n   * Gets correctly prefixed transition end event.\n   *\n   * @private\n   * @property transitionEndEvent\n   * @return {void}\n   */\n  Animation.prototype.transitionEndEvent = (function() {\n    var dummy = document.createElement('div');\n    var events = {\n      'transition':'transitionend',\n      'OTransition':'oTransitionEnd',\n      'MozTransition':'transitionend',\n      'WebkitTransition':'webkitTransitionEnd'\n    };\n\n    for(var key in events){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return events[key];\n        }\n    }\n\n    return null;\n  })();\n\n  /**\n   * Prepares cross-browser compatible tranlsate hash for ng-style.\n   *\n   * @public\n   * @method translate\n   * @param {number} x\n   * @param {number} y\n   * @param {number} [z]\n   * @return {object}\n   */\n  Animation.prototype.translate = function(x, y, z) {\n    var string = this.$injector.get('string');\n\n    var translate = angular.isUndefined(z) ?\n      string.sprintf('translate(%spx,%spx)', x, y) :\n      string.sprintf('translate3d(%spx,%spx,%spx)', x, y, z);\n\n    return {\n      'webkitTransform': translate,\n      'mozTransform': translate,\n      'msTransform': translate,\n      'oTransform': translate,\n      'transform': translate\n    };\n  };\n\n  /**\n   * Polyfills potentially missing `requestAnimationFrame`.\n   *\n   * @private\n   * @method requestAnimationFrame\n   * @return {void}\n   */\n  Animation.prototype.requestAnimationFrame = (function(){\n      var lastTime = 0;\n      var vendors = ['ms', 'moz', 'webkit', 'o'];\n      for(var i = 0; i < vendors.length && !window.requestAnimationFrame; i++) {\n          window.requestAnimationFrame = window[vendors[i]+'RequestAnimationFrame'];\n          window.cancelAnimationFrame = (\n            window[vendors[i]+'CancelAnimationFrame'] ||\n            window[vendors[i]+'CancelRequestAnimationFrame']\n          );\n      }\n\n      if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function(callback) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var timeout = function() { callback(currTime + timeToCall); };\n            var id = window.setTimeout(timeout, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n      }\n\n      return window.requestAnimationFrame.bind(window);\n  }());\n\n  /**\n   * Polyfills potentially missing `cancelAnimationFrame`.\n   *\n   * @private\n   * @method cancelAnimationFrame\n   * @return {void}\n   */\n  Animation.prototype.cancelAnimationFrame = (function(){\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function(id) { clearTimeout(id); };\n    }\n\n    return window.cancelAnimationFrame.bind(window);\n  })();\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('animation', Animation);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  var Random = function() {\n    this._spareRandomCache = null;\n  };\n\n  Random.$inject = [];\n\n  Random.prototype.between = function(min, max) {\n    min = typeof min !== 'undefined' ? min : 0;\n    max = typeof max !== 'undefined' ? max : 1;\n\n    var fact = (max - min + 1);\n    var rand = Math.random();\n\n    return Math.floor(rand * fact + min);\n  };\n\n  Random.prototype.gaussian = function(mean, stdDev) {\n    stdDev = typeof stdDev !== 'undefined' ? stdDev : 1;\n    mean = typeof mean !== 'undefined' ? mean : 0;\n\n    var spare = this._spareRandomCache;\n    if (this._spareRandomCache !== null) {\n      this._spareRandomCache = null;\n      return mean + stdDev * spare;\n    }\n\n    var u, v, s;\n\n    do {\n      u = 2 * Math.random() - 1;\n      v = 2 * Math.random() - 1;\n      s = u*u + v*v;\n    } while (s >= 1 || s===0);\n\n    var m = Math.sqrt(-2 * Math.log(s) / s);\n    this._spareRandomCache = v * m;\n    return mean + stdDev * u * m;\n  };\n\n  Random.prototype.pick = function(array) {\n    return array[this.between(0, array.length - 1)];\n  };\n\n  Random.prototype.push = function(array, value) {\n    var rand = this.between(0, array.length - 1);\n    array.push(array[rand]);\n    array[rand] = value;\n\n    return array.length;\n  };\n\n  Random.prototype.shuffle = function(array) {\n    for( var i=array.length-1; i>0; i-- ) {\n      var rand = this.between(0, i);\n      var temp = array[i];\n\n      array[i] = array[rand];\n      array[rand] = temp;\n    }\n\n    return array;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('random', Random);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var String = function()\n    {\n    };\n\n  String.$inject = [];\n\n  /**\n   * Replaces placeholders (= '%s') from a string with variables.\n   *\n   * @public\n   * @method sprintf\n   * @param {string} input String to replace placeholders.\n   * @param {object} variables Object holding replacements.\n   * @return {string}\n   */\n  String.prototype.sprintf = function(input,variables)\n    {\n        if (!angular.isArray(variables)) {\n          variables = [].slice.call(arguments, 1);\n        }\n\n        for (var i=0; i<variables.length; i++) {\n          input = input.replace(/%s/,variables[i]);\n        }\n\n        return input;\n    };\n\n  /**\n   * Truncates a string by given params.\n   *\n   * @public\n   * @method truncate\n   * @param {string} input String to be truncated.\n   * @param {number} [maxLength=20] Maximum number of chars.\n   * @return {string}\n   */\n  String.prototype.truncate = function(input,maxLength)\n    {\n        maxLength = maxLength || 20;\n        if (input.length <= maxLength) {\n          return input;\n        }\n\n        return input.substring(0,maxLength) + '...';\n    };\n\n  /**\n   * Trims a string.\n   *\n   * @public\n   * @method trim\n   * @param {string} input String to trim.\n   * @return {string}\n   */\n  String.prototype.trim = function(input)\n    {\n        return input.replace(/^\\s+|\\s+$/g, '');\n    };\n\n  /**\n   * Transforms a string to camel case.\n   *\n   * @public\n   * @method toCamel\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toCamel = function(input)\n    {\n        return input.replace(/([-_][a-z])/g, function(part){\n            return part.toUpperCase().replace(/[-_]/,'');\n        });\n    };\n\n  /**\n   * Transforms a string to spinal case.\n   *\n   * @public\n   * @method toSpinal\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toSpinal = function(input)\n    {\n        return input.replace(/([A-Z]|_[a-z])/g, function(part){\n            return '-' + part.toLowerCase().replace(/_/,'');\n        });\n    };\n\n  /**\n   * Transforms a string to snake case.\n   *\n   * @public\n   * @method toSnake\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toSnake = function(input)\n    {\n        return input.replace(/([A-Z]|-[a-z])/g, function(part){\n            return '_' + part.toLowerCase().replace(/-/,'');\n        });\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('string', String);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  /**\n   * @varructor\n   */\n  var Storage = function($injector) {\n    this.$injector = $injector;\n  };\n\n  Storage.MODE_COOKIES = 'COOKIES';\n  Storage.MODE_STORAGE = 'STORAGE';\n  Storage.$inject = ['$injector'];\n\n  /**\n   * Gets the current storage interface of the service.\n   * Can be one of modes `COOKIES` or `STORAGE`. If no\n   * one is given will default to local storage if it's\n   * supported, otherwise falls back to cookies.\n   *\n   * @public\n   * @method getProxy\n   * @param {String} mode\n   * @return {Object}\n   */\n  Storage.prototype.getProxy = function(mode) {\n    switch (mode) {\n      case Storage.MODE_COOKIES:\n       return this._getCookieProxy();\n\n      case Storage.MODE_STORAGE:\n       return this._getLocalStorageProxy();\n\n     default:\n      if (this.supportsLocalStorage()) {\n        return this._getLocalStorageProxy();\n      }\n\n      return this._getCookieProxy();\n    }\n  };\n\n  /**\n   * Checks if browser supports local storage.\n   *\n   * @public\n   * @method supportsLocalStorage\n   * @return {Boolean}\n   */\n  Storage.prototype.supportsLocalStorage = function() {\n    var $window = this.$injector.get('$window');\n    var storageProxy = $window.localStorage;\n    var key = '__local__storage__feature__test';\n    var val = '__local__storage__feature__test';\n\n    try {\n     storageProxy.setItem(key, val);\n     storageProxy.removeItem(key);\n    } catch (e) {\n     return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Stringifies and uri encodes a value.\n   *\n   * @private\n   * @param {Mixed} value\n   * @method _encode\n   *\n   * @return {String}\n   */\n  Storage.prototype._encode = function(value) {\n    try {\n     value = JSON.stringify(value);\n    } catch (e) {\n     value = undefined;\n    }\n\n    return encodeURIComponent(value);\n  };\n\n  /**\n   * Decodes a stringified and uri encoded value.\n   *\n   * @private\n   * @param {Mixed}\n   * @method _decodeValue\n   *\n   * @return {Mixed}\n   */\n  Storage.prototype._decode = function(value) {\n    var decoded;\n    switch (typeof value) {\n     case 'string':\n       decoded = decodeURIComponent(value);\n       try {\n         decoded = JSON.parse(decoded);\n       } catch (e) {\n         /* noop */\n       }\n       break;\n     default:\n       decoded = undefined;\n    }\n\n    if (decoded === 'undefined') {\n     decoded = undefined;\n    }\n\n    if (decoded === undefined) {\n     decoded = null;\n    }\n\n    return decoded;\n  };\n\n  /**\n   * Provides cookie storage proxy layer.\n   *\n   * @private\n   * @method _getCookieProxy\n   *\n   * @return {Object}\n   */\n  Storage.prototype._getCookieProxy = function() {\n    var documentProxy = this.$injector.get('$document');\n\n    var me = this;\n    var _getAll = function(parse) {\n     var items = {};\n\n     var cookies = documentProxy.cookie.split('; ');\n     if (cookies.length === 1 && cookies[0] === '') {\n       return items;\n     }\n\n     for (var i = 0; i < cookies.length; i++) {\n       var cookie = cookies[i].split('=');\n       if (!parse) {\n         items[cookie[0]] = cookie[1];\n         continue;\n       }\n\n       items[cookie[0]] = me._decode(cookie[1]);\n     }\n\n     return items;\n    };\n\n    var setCookie = function(key, value, expires, domain, path, secure) {\n     value = me._encode(value);\n\n     try {\n       var date = new Date(expires);\n       if (isNaN(date)) {\n         var input = expires;\n         expires = undefined;\n         throw new Error('storage.js: \"' + input + '\" cannot be converted to date string!');\n       }\n\n       expires = date.toUTCString();\n     } catch (e) {\n       /* noop */\n     }\n\n     expires = expires ? expires : false;\n\n     var cookie = key + '=' + value;\n     cookie += expires ? ';expires='+expires : '';\n     cookie += domain ? ';domain='+domain : '';\n     cookie += path ? ';path='+path : '';\n     cookie += secure ? ';secure' : '';\n\n     documentProxy.cookie = cookie;\n    };\n\n    var getCookie = function(key) {\n     var cookies = _getAll(false);\n     if (cookies.hasOwnProperty(key)) {\n       return me._decode(cookies[key]);\n     }\n\n     return null;\n    };\n\n    var getAllCookies = function() {\n     return _getAll(true);\n    };\n\n    var removeCookie = function(key) {\n     setCookie(key, '', -1);\n    };\n\n    var removeAllCookies = function() {\n     for (var key in getAllCookies()) {\n       removeCookie(key);\n     }\n    };\n\n    return {\n     getItem: getCookie,\n     getAllItems: getAllCookies,\n     setItem: setCookie,\n     removeItem: removeCookie,\n     removeAllItems: removeAllCookies\n    };\n  };\n\n  /**\n   * Provides local storage proxy layer.\n   *\n   * @private\n   * @method _getLocalStorageProxy\n   *\n   * @return {Object}\n   */\n  Storage.prototype._getLocalStorageProxy = function() {\n    var $window = this.$injector.get('$window');\n    var storageProxy = $window.localStorage;\n\n    var me = this;\n    var setItem = function(key, value) {\n     value = me._encode(value);\n     storageProxy.setItem(key, value);\n    };\n\n    var getItem = function(key) {\n     var value = storageProxy.getItem(key);\n     return me._decode(value);\n    };\n\n    var getAllItems = function() {\n     var items = {};\n\n     for (var i = 0; i < storageProxy.length; i++) {\n       var key = storageProxy.key(i);\n       items[key] = getItem(key);\n     }\n\n     return items;\n    };\n\n    var removeItem = function(key) {\n     storageProxy.removeItem(key);\n    };\n\n    var removeAllItems = function() {\n     storageProxy.clear();\n    };\n\n    return {\n     getItem: getItem,\n     getAllItems: getAllItems,\n     setItem: setItem,\n     removeItem: removeItem,\n     removeAllItems: removeAllItems\n    };\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('storage', Storage);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Auth = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  /**\n   * @property {Array.<string>} $inject\n   */\n  Auth.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends a POST request to register route and\n   * persists retrieved JWT token on success.\n   *\n   * @public\n   * @method signin\n   * @param {Object} data Data to submit.\n   * @param {string} [firewall='frontend'] firewall\n   * @param {Object} [config={}] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.signup = function(data, firewall, config)\n    {\n      var $http = this.$injector.get('$http');\n\n      firewall = firewall || 'frontend';\n      config = config || {};\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      var url = this._getSignupUrl(firewall);\n\n      var promise = $http.post(\n        url,\n        {\n          _username: data.username,\n          _password: data.password\n        },\n        angular.extend(config || {})\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Sends a POST request to login route and\n   * persists retrieved JWT token on success.\n   *\n   * @public\n   * @method signin\n   * @param {Object} data Data to submit.\n   * @param {string} [firewall='frontend'] firewall\n   * @param {Object} [config={}] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.signin = function(data, firewall, config)\n    {\n      var $http = this.$injector.get('$http');\n\n      firewall = firewall || 'frontend';\n      config = config || {};\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      var url = this._getSigninUrl(firewall);\n\n      var promise = $http.post(\n        url,\n        {\n          _username: data.username,\n          _password: data.password\n        },\n        angular.extend(config || {}, {\n          skipAuthorization: true\n        })\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Destroys JWT token representing user.\n   *\n   * @public\n   * @method logout\n   * @param {Object} [config] $http config.\n   * @return {Void}\n   */\n  Auth.prototype.signout = function(config)\n    {\n      var $http = this.$injector.get('$http');\n      var user = this.$injector.get('user');\n      var jwt = this.$injector.get('jwt');\n\n      var successCallback = function()\n        {\n          user.unload();\n          jwt.invalidate();\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      return $http.get(\n        this._getSignoutUrl(),\n        config || {}\n      ).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sends a POST request to refresh route\n   * with saved refresh token from login().\n   *\n   * @public\n   * @method refresh\n   * @param {Object} [config] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.refresh = function(config)\n    {\n      var $http = this.$injector.get('$http');\n      var jwt = this.$injector.get('jwt');\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function(/*rejection*/)\n        {\n        };\n\n      var promise = $http.post(\n        this._getRefereshUrl(),\n        {\n          /* jshint camelcase: false */\n          refresh_token: jwt.getRefreshToken()\n          /* jshint camelcase: true */\n        },\n        angular.extend(config || {}, {\n          skipGlobalErrorMessage: true,\n          skipAuthorization: true\n        })\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Returns decoded JWT token containing\n   * user information such as `username`.\n   * Note: By default expired tokens are\n   * not accepted, set parameter if you\n   * want to accept expired tokens too!\n   *\n   * @public\n   * @method getUser\n   * @param {boolean} [acceptExpired=false]\n   * @return {Object|null}\n   */\n  Auth.prototype.getUser = function(acceptExpired)\n    {\n      acceptExpired = acceptExpired || false;\n\n      var jwt = this.$injector.get('jwt');\n\n      var token = jwt.getToken();\n      if (!token) {\n        return null;\n      }\n\n      if (!acceptExpired) {\n        if (jwt.isExpired()) {\n          return null;\n        }\n      }\n\n      return jwt.decode(token);\n    };\n\n  /**\n   * Checks if user has given role provided\n   * in `roles` property encoded into JWT.\n   *\n   * @public\n   * @method hasRole\n   * @param {string|array} role\n   * @return {Promise}\n   */\n  Auth.prototype.hasRole = function(role)\n    {\n      var jwt = this.$injector.get('jwt');\n      var $q = this.$injector.get('$q');\n\n      var defer = $q.defer();\n      var promise = defer.promise;\n\n      var isArray = angular.isArray(role);\n      if (isArray && role.length === 0) {\n        defer.reject(null);\n        return promise;\n      }\n\n      if (!role) {\n        defer.reject(null);\n        return promise;\n      }\n\n      // accept expired tokens - we will\n      // use refresh() to get new token\n      // if current one is invalid now\n      var user = this.getUser(true);\n      if (user === null) {\n        defer.reject(null);\n        return promise;\n      }\n\n      // primitive method for role check\n      var resolveRole = function(user) {\n        var roles = user.roles || [];\n        if (angular.isString(role)) {\n          role = [role];\n        }\n\n        var hasRole = false;\n        for (var i=0; i<role.length; i++) {\n          if (roles.indexOf(role[i]) >= 0) {\n            hasRole = true;\n            break;\n          }\n        }\n\n        if (hasRole) {\n          defer.resolve();\n        } else {\n          defer.reject();\n        }\n      };\n\n      // immediately resolve valid tokens\n      if (!jwt.isExpired()) {\n        resolveRole(user);\n        return promise;\n      }\n\n      // try to refresh invalid tokens\n      var me = this;\n      var successCallback = function()\n        {\n          user = me.getUser();\n          resolveRole(user);\n        };\n\n      var failureCallback = function()\n        {\n          defer.reject();\n        };\n\n      this.refresh().then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Saves server response containing\n   * the `token` and `refresh_token`.\n   *\n   * @private\n   * @method _saveToken\n   * @param {object} response\n   * @return {void}\n   */\n  Auth.prototype._saveToken = function(data)\n    {\n      /* jshint camelcase: false */\n      var jwt = this.$injector.get('jwt');\n\n      jwt.setRefreshToken(data.refresh_token);\n      jwt.setToken(data.token);\n      /* jshint camelcase: true */\n    };\n\n  /**\n   * Returns endpoint to gather JWT depending on firewall.\n   *\n   * @private\n   * @method _getSigninUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSigninUrl = function(firewall){\n    var API_URL = this.$injector.get('API_URL');\n\n    switch(firewall) {\n      case 'backend':\n      case 'frontend':\n        return API_URL + '/auth/' + firewall + '/signin';\n      default:\n        throw new Error('Unknown firewall name: ' + firewall);\n    }\n  };\n\n  /**\n   * Returns endpoint to register at given firewall.\n   *\n   * @private\n   * @method _getSignupUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSignupUrl = function(firewall){\n    var API_URL = this.$injector.get('API_URL');\n\n    switch(firewall) {\n      case 'frontend':\n        return API_URL + '/auth/' + firewall + '/signup';\n      case 'backend':\n        throw new Error('Not implemented yet!');\n      default:\n        throw new Error('Unknown firewall name: ' + firewall);\n    }\n  };\n\n  /**\n   * Returns endpoint to refresh the JWT.\n   *\n   * @private\n   * @method _getRefereshUrl\n   * @return {string}\n   */\n  Auth.prototype._getRefereshUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/auth/refresh';\n  };\n\n  /**\n   * Returns endpoint to revoke the JWT.\n   *\n   * @private\n   * @method _getSignoutUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSignoutUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/signout';\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('auth', Auth);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var I18N = function($injector)\n    {\n      this.translations = {};\n      this.$injector = $injector;\n\n      this.setLocale(this._detectLocale());\n    };\n\n  I18N.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} locales Currently supported locales. */\n  I18N.prototype.locales = {\n    'de': true\n  };\n\n  /** @var {string} defaultLocale Default locale to use. */\n  I18N.prototype.defaultLocale = 'de';\n\n  /**\n   * Loads translations according to current locale if not available.\n   *\n   * @public\n   * @method load\n   * @param {locale} [locale] Two letter language code.\n   * @param {Object} [config] Additional config for $http\n   * @return {Promise|void}\n   */\n  I18N.prototype.load = function(locale, config)\n    {\n      locale = locale || this.getLocale();\n      config = config || {};\n\n      if (this.translations[locale]) {\n        return;\n      }\n\n      var $http = this.$injector.get('$http');\n      var $log = this.$injector.get('$log');\n\n      var me = this;\n      var url = this._getJSONUrl(locale);\n      var successCallback = function(response)\n        {\n          me.translations[locale] = response.data;\n        };\n\n      var failureCallback = function()\n        {\n          $log.error('Could not load translations!');\n        };\n\n      return $http.get(url, config).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets locale to given paraemter if it's a valid one.\n   * Falls back to `defaultLocale` if it's an invalid one.\n   *\n   * @public\n   * @method setLocale\n   * @param {string} locale\n   * @return {void}\n   */\n  I18N.prototype.setLocale = function(locale)\n    {\n      if (this.locales[locale]) {\n        this.locale = locale;\n        return;\n      }\n\n      this.locale = this.defaultLocale;\n    };\n\n  /**\n   * Delivers the currently used locale for translations.\n   *\n   * @public\n   * @method setLocale\n   * @param {string} locale\n   * @return {void}\n   */\n  I18N.prototype.getLocale = function()\n    {\n      return this.locale;\n    };\n\n  /**\n   * Makes a lookup within current translation dictionary.\n   *\n   * @param {string} key The i18n key.\n   * @param {string} ... Parameters to be replaced.\n   * @return {string}\n   */\n  I18N.prototype.get = function(key)\n    {\n      var string = this.$injector.get('string');\n      var params = [].slice.call(arguments,1);\n      var locale = this.getLocale();\n\n      var text;\n      try {\n        text = this.translations[locale][key];\n      } catch(e) {}\n\n      return string.sprintf(text || key, params);\n    };\n\n  /**\n   * Returns endpoint to gather JSON translations.\n   *\n   * @private\n   * @method _getTranslationsUrl\n   * @param {string} locale\n   * @return {string}\n   */\n  I18N.prototype._getJSONUrl = function(locale)\n    {\n      return 'json/' + locale + '.json';\n    };\n\n  /**\n   * @ignore\n   */\n  I18N.prototype._detectLocale = function()\n    {\n      var navigator = this.$injector.get('$window').navigator;\n      var android = /android.*\\W(\\w\\w)-(\\w\\w)\\W/i;\n      var language;\n\n      // try to find locale on android devices!\n      if( navigator && navigator.userAgent &&\n          (language = navigator.userAgent.match(android)) ) {\n          language = language[1];\n      }\n\n      // for all other browsers\n      if (!language && navigator) {\n        if( navigator.language ) {\n          language = navigator.language;\n        } else if( navigator.userLanguage ) {\n          language = navigator.userLanguage;\n        } else if( navigator.systemLanguage ) {\n          language = navigator.systemLanguage;\n        } else if( navigator.browserLanguage ) {\n          language = navigator.browserLanguage;\n        }\n      }\n\n      // now we can get iso code\n      if (language) {\n        return language.substr(0,2);\n      }\n\n      // use `defaultLocale` as fallback\n      return this.defaultLocale;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('i18n', I18N);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  /**\n  * @constructor\n  */\n  var JWT = function($injector, storage) {\n    this.$injector = $injector;\n    this.storage = storage.getProxy();\n  };\n\n  JWT.$inject = ['$injector', 'storage'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} tokenKey Token key for local storage. */\n  JWT.prototype.tokenKey = 'NAksNyshI3';\n\n  /** @var {string} refreshKey Refresh key for local storage. */\n  JWT.prototype.refreshKey = 'i08BFNG9t5';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Resets JWT token / refresh token in local storage.\n   *\n   * @public\n   * @method invalidate\n   * @return {void}\n   */\n  JWT.prototype.invalidate = function()\n    {\n      this.removeRefreshToken();\n      this.removeToken();\n    };\n\n  /**\n   * Gets JWT token from local storage.\n   *\n   * @public\n   * @method getToken\n   * @return {string|null}\n   */\n  JWT.prototype.getToken = function()\n    {\n      return this.storage.getItem(this.tokenKey);\n    };\n\n  /**\n   * Sets JWT token in local storage.\n   *\n   * @public\n   * @method setToken\n   * @param {string} token\n   * @return {void}\n   */\n  JWT.prototype.setToken = function(token)\n    {\n      this.storage.setItem(this.tokenKey,token);\n    };\n\n  /**\n   * Removes JWT token from local storage.\n   *\n   * @public\n   * @method removeToken\n   * @return {void}\n   */\n  JWT.prototype.removeToken = function()\n    {\n      this.storage.removeItem(this.tokenKey);\n    };\n\n  /**\n   * Gets JWT refresh token from local storage.\n   *\n   * @public\n   * @method getRefreshToken\n   * @return {string|null}\n   */\n  JWT.prototype.getRefreshToken = function()\n    {\n      return this.storage.getItem(this.refreshKey);\n    };\n\n  /**\n   * Sets JWT refresh token in local storage.\n   *\n   * @public\n   * @method setRefreshToken\n   * @param {string} refreshToken\n   * @return {void}\n   */\n  JWT.prototype.setRefreshToken = function(refreshToken)\n    {\n      this.storage.setItem(this.refreshKey, refreshToken);\n    };\n\n  /**\n   * Removes JWT refresh token from local storage.\n   *\n   * @public\n   * @method removeToken\n   * @return {void}\n   */\n  JWT.prototype.removeRefreshToken = function()\n    {\n      this.storage.removeItem(this.refreshKey);\n    };\n\n  /**\n   * Converts timestamp into date object.\n   *\n   * @public\n   * @method getExpirationDate\n   * @param {string} token\n   * @return {date}\n   */\n  JWT.prototype.getExpirationDate = function(token)\n    {\n      var $log = this.$injector.get('$log');\n\n      token = token || this.getToken();\n      if (!token) {\n        $log.error('No token given or available!');\n        return null;\n      }\n\n      var decoded = this.decode(token);\n      if (typeof decoded.exp==='undefined') {\n        $log.error('No `exp` property available!');\n        return null;\n      }\n\n      var date = new Date(0);\n      date.setUTCSeconds(decoded.exp);\n\n      return date;\n    };\n\n  /**\n   * Determines if given token is expired.\n   *\n   * @public\n   * @method isExpired\n   * @param {string} token\n   * @param {number} offset In seconds.\n   * @return {boolean}\n   */\n  JWT.prototype.isExpired = function(token, offset)\n    {\n      offset = offset || 0;\n      token = token || this.getToken();\n\n      var date = this.getExpirationDate(token);\n      if (date === null) {\n        return true;\n      }\n\n      var now = new Date().valueOf();\n      offset = now + offset * 1000;\n      date = date.valueOf();\n\n      return date <= offset;\n    };\n\n  /**\n   * Tries to decode a JWT token.\n   *\n   * @public\n   * @method decode\n   * @param {string} token\n   * @return {object|null}\n   */\n  JWT.prototype.decode = function(token)\n    {\n      var $log = this.$injector.get('$log');\n\n      try {\n        var parts = token.split('.');\n        if (parts.length !== 3) {\n          throw new Error('JWT must have 3 parts!');\n        }\n\n        var decoded = this._base64Decode(parts[1]);\n        if (!decoded) {\n          throw new Error('Cannot decode the token!');\n        }\n\n        return angular.fromJson(decoded);\n      } catch(e) {\n        $log.error(e);\n        return null;\n      }\n    };\n\n  /**\n   * Validates and decodes a base64 url.\n   *\n   * @private\n   * @method _base64Decode\n   * @param {string} input\n   * @return {string}\n   */\n  JWT.prototype._base64Decode = function(input)\n    {\n      var $window = this.$injector.get('$window');\n      var $log = this.$injector.get('$log');\n\n      var output = input\n        .replace(/-/g, '+')\n        .replace(/_/g, '/');\n\n      try{\n        switch (output.length % 4) {\n          case 0: {\n            break;\n          }\n\n          case 2: {\n            output += '=='; break;\n          }\n\n          case 3: {\n            output += '='; break;\n          }\n\n          default: {\n            throw new Error('Illegal base64url code!');\n          }\n        }\n      } catch(e) {\n        $log.error(e);\n        return '';\n      }\n\n      var decoded = $window.atob(output);\n      var escaped = $window.escape(decoded);\n\n      return $window.decodeURIComponent(escaped);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('jwt', JWT);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var User = function($injector) {\n    this.$injector = $injector;\n\n    this._states = [\n      $injector.get('STATE_BEGINNER'),\n      $injector.get('STATE_AMATEUR'),\n      $injector.get('STATE_ADVANCED'),\n      $injector.get('STATE_EXPERT')\n    ];\n\n    this._eventSource = null;\n    this._results = [];\n    this._payload = {};\n    this._pending = {};\n    this._tasks = {};\n  };\n\n  User.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} state Current state of user. */\n  User.prototype.state = null;\n\n  /** @var {number} group Random group of user. */\n  User.prototype.group = null;\n\n  /** @var {number} tickets Current ticket count. */\n  User.prototype.tickets = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Fetches current user through `User` resource.\n   *\n   * @public\n   * @method load\n   * @return {void}\n   */\n  User.prototype.load = function() {\n    var User = this.$injector.get('User');\n\n    var me = this;\n    var successCallback = function(user) {\n\n      // save only json payload from\n      // ng-resource's `user` object\n      me._payload = user.toJSON();\n\n      // initialize members\n      me._initTickets();\n      me._initState();\n      me._initGroup();\n\n      // gameplay setup calls\n      // only for `ROLE_USER`!\n      if (!me.isUser()) {\n        return;\n      }\n\n      // init tasks at first!\n      me._initWatches();\n      me._initTasks();\n\n      // then results & SSE!\n      me._initPending();\n      me._initResults();\n      me._initSSE();\n    };\n\n    var failureCallback = function(/*rejection*/) {\n\n    };\n\n    var current = User.current();\n\n    current.$promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return current;\n  };\n\n  /**\n   * Resets current user session from application.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  User.prototype.unload = function() {\n    var sse = this.$injector.get('sse');\n\n    if (this._eventSource) {\n      sse.removeSource(this._eventSource);\n    }\n\n    if (this._unwatchTickets) {\n      this._unwatchTickets();\n    }\n\n    if (this._unwatchState) {\n      this._unwatchState();\n    }\n\n    this._eventSource = null;\n    this._results = [];\n    this._payload = {};\n    this._pending = {};\n    this._tasks = {};\n\n    this.tickets = null;\n    this.state = null;\n    this.group = null;\n  };\n\n  /**\n   * Updates user from external scopes.\n   * This is helpful for refreshing its\n   * state without invoking a request to\n   * the server when user was embedded in\n   * another request's response.\n   *\n   * @public\n   * @method update\n   * @param {object} result\n   * @return {void}\n   *\n   */\n  User.prototype.update = function(result) {\n    this._payload = result.user;\n\n    this._addResult(result);\n    this._initTickets();\n    this._initState();\n    this._initGroup();\n  };\n\n  /**\n   * Checks if current user has role `ROLE_USER`.\n   *\n   * @public\n   * @method isUser\n   * @return {boolean}\n   */\n  User.prototype.isUser = function() {\n    return this.hasRole('ROLE_USER');\n  };\n\n  /**\n   * Checks if current user has role `ROLE_ADMIN`.\n   *\n   * @public\n   * @method isAdmin\n   * @return {boolean}\n   */\n  User.prototype.isAdmin = function() {\n    return this.hasRole('ROLE_ADMIN');\n  };\n\n  /**\n   * Checks if current user has role `ROLE_SUPER_ADMIN`.\n   *\n   * @public\n   * @method isSuperAdmin\n   * @return {boolean}\n   */\n  User.prototype.isSuperAdmin = function() {\n    return this.hasRole('ROLE_SUPER_ADMIN');\n  };\n\n  /**\n   * Checks if current user's workshop is active.\n   *\n   * @public\n   * @method isInWorkshop\n   * @return {boolean}\n   */\n  User.prototype.isInWorkshop = function() {\n    if (!this.isUser()) {\n      return true;\n    }\n\n    return this._payload.workshop.isActive;\n  };\n\n  /**\n   * Checks if current user has given role.\n   *\n   * @public\n   * @method hasRole\n   * @param {string|array} role\n   * @return {boolean}\n   */\n  User.prototype.hasRole = function(role) {\n    if (!angular.isArray(role)) {\n      role = [role];\n    }\n\n    var roles = this._payload.roles || [];\n    for (var i=0; i<role.length; i++) {\n      if (roles.indexOf(role[i])>=0) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Provides user's task hash map.\n   *\n   * @public\n   * @method getTasks\n   * @return {object}\n   */\n  User.prototype.getTasks = function() {\n    return this._tasks;\n  };\n\n  /**\n   * Gets `task` resource of user by type.\n   *\n   * @public\n   * @method getTaskByType\n   * @param {string} type\n   * @return {object|null}\n   */\n  User.prototype.getTaskByType = function(type) {\n    return this._tasks[type] || null;\n  };\n\n  /**\n   * Gets pending `result` resource of user by type.\n   *\n   * @public\n   * @method getResultByType\n   * @param {string} type\n   * @return {object|null}\n   */\n  User.prototype.getPendingByType = function(type) {\n    return this._pending[type] || null;\n  };\n\n  /**\n   * Gets `state` mapped to string representation.\n   *\n   * @public\n   * @method getGroupAsString\n   * @return {string}\n   */\n  User.prototype.getGroupAsString = function() {\n    switch(this.group) {\n      case this.$injector.get('GROUP_A'):\n        return 'GROUP_A';\n      case this.$injector.get('GROUP_B'):\n        return 'GROUP_B';\n      default:\n        return null;\n    }\n  };\n\n  /**\n   * Gets `state` mapped to string representation.\n   *\n   * @public\n   * @method getStateAsString\n   * @return {string}\n   */\n  User.prototype.getStateAsString = function() {\n    switch(this.state) {\n      case this.$injector.get('STATE_AMATEUR'):\n        return 'STATE_AMATEUR';\n      case this.$injector.get('STATE_ADVANCED'):\n        return 'STATE_ADVANCED';\n      case this.$injector.get('STATE_EXPERT'):\n        return 'STATE_EXPERT';\n      default:\n        return 'STATE_BEGINNER';\n    }\n  };\n\n  /**\n   * Initializes `state` member.\n   *\n   * @private\n   * @method _initState\n   * @return {void}\n   */\n  User.prototype._initState = function() {\n    var STATE_BEGINNER = this.$injector.get('STATE_BEGINNER');\n    this.state = this._payload.state || STATE_BEGINNER;\n  };\n\n  /**\n   * Initializes `group` member.\n   *\n   * @private\n   * @method _initGroup\n   * @return {void}\n   */\n  User.prototype._initGroup = function() {\n    this.group = this._payload.group || null;\n  };\n\n  /**\n   * Initializes `tickets` member.\n   *\n   * @private\n   * @method init\n   * @return {void}\n   */\n  User.prototype._initTickets = function() {\n    var tickets = this._payload.tickets;\n    this.tickets = tickets || [];\n  };\n\n  /**\n   * Watches `state` and `tickets` for changes to\n   * show the corresponding user notifications.\n   *\n   * @private\n   * @method _initWatches\n   * @return {void}\n   */\n  User.prototype._initWatches = function() {\n    var notification = this.$injector.get('notification');\n    var $rootScope = this.$injector.get('$rootScope');\n    var i18n = this.$injector.get('i18n');\n    var me = this;\n\n    var _watchStateExpression = function() {\n      return me.state;\n    };\n\n    var _watchStateCallback = function(newState, oldState) {\n      if (newState === oldState) {\n        return;\n      }\n\n      notification.success(\n        i18n.get(\n          'Congratulations, you have reached the state %s!',\n          i18n.get(me.getStateAsString())\n        )\n      );\n    };\n\n    var _watchTicketsExpression = function() {\n      return me.tickets;\n    };\n\n    var _watchTicketsCallback = function(newTickets, oldTickets) {\n      if (newTickets === oldTickets) {\n        return;\n      }\n\n      var oldCount = oldTickets && oldTickets.length;\n      var newCount = newTickets && newTickets.length;\n\n      var tickets = newCount - oldCount;\n      if (tickets <= 0) {\n        return;\n      }\n\n      var message = tickets === 1 ?\n        i18n.get('Congratulations, you have earned 1 new ticket!') :\n        i18n.get('Congratulations, you have earned %s new tickets!', tickets);\n\n      notification.primary(message);\n    };\n\n    this._unwatchTickets = $rootScope.$watchCollection(\n      _watchTicketsExpression,\n      _watchTicketsCallback\n    );\n\n    this._unwatchState = $rootScope.$watch(\n      _watchStateExpression,\n      _watchStateCallback\n    );\n  };\n\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @private\n   * @method _initSSE\n   * @return {Void}\n   */\n  User.prototype._initSSE = function()\n    {\n      var $rootScope = this.$injector.get('$rootScope');\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      // don't setup SSE when playing remote\n      var workshop = this._payload.workshop;\n      if (!workshop.isActive) {\n        return;\n      }\n\n      var me = this;\n\n      var _onMessage = function(data) {\n        $rootScope.$evalAsync(function(){\n          angular.forEach(data, function(item) {\n            var unix = Date.parse(item.updatedAt);\n            var task = me._tasks[item.type];\n            task.isActive = !!item.isActive;\n\n            if (!isNaN(unix)) {\n              item.updatedAt = unix;\n            }\n          });\n        });\n      };\n\n      var url = API_URL + '/sse/workshop/' + workshop.id + '/tasks';\n      var options = { onMessage: _onMessage, sleep: 1 };\n      this._eventSource = sse.addSource(url, options);\n    };\n\n  /**\n   * Caches task hash map from workshop\n   * for lookups from `getTaskByType()`.\n   *\n   * @private\n   * @method _initTasks\n   * @return {void}\n   */\n  User.prototype._initTasks = function() {\n    var workshop = this._payload.workshop;\n    if (!workshop) {\n      return;\n    }\n\n    var me = this;\n    angular.forEach(workshop.tasks,function(task) {\n      me._tasks[task.type] = task;\n    });\n  };\n\n  /**\n   * Caches pending hash map from workshop\n   * for lookups from `getPendingByType()`.\n   *\n   * @private\n   * @method _initPending\n   * @return {void}\n   */\n  User.prototype._initPending = function() {\n    var pending = this._payload.pending;\n    if (!pending) {\n      return;\n    }\n\n    var me = this;\n    angular.forEach(pending,function(result) {\n      me._pending[result.task.type] = result;\n    });\n  };\n\n  /**\n   * Caches results hash map from workshop\n   * for lookups from `getResultsByType()`.\n   *\n   * @private\n   * @method _initResults\n   * @return {void}\n   */\n  User.prototype._initResults = function() {\n    var _addResult = this._addResult.bind(this);\n    var results = this._payload.results || [];\n\n    angular.forEach(results, _addResult);\n  };\n\n  /**\n   * Adds result to collection and sets `$$result`\n   *\n   * @private\n   * @method _addResult\n   * @param {object} result\n   * @return {void}\n   */\n  User.prototype._addResult = function(result) {\n    var task = this.getTaskByType(result.task.type);\n    if (task !== null) {\n      var current = task.$$results || 0;\n      task.$$results = current + 1;\n    }\n\n    this._results.push(result);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('user', User);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Mail = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  Mail.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends a POST request to send mail.\n   *\n   * @public\n   * @method send\n   * @param {Object} data\n   * @param {Object} [config] $http config.\n   * @return {Promise}\n   */\n  Mail.prototype.send = function(data, config) {\n    var notification = this.$injector.get('notification');\n    var $http = this.$injector.get('$http');\n    var i18n = this.$injector.get('i18n');\n\n    var successCallback = function(/*response*/)\n      {\n        notification.success(\n          i18n.get(\n            'Your email has been sent!'\n          )\n        );\n      };\n\n    var failureCallback = function(/*rejection*/)\n      {\n      };\n\n    var promise = $http.post(\n      this._getPostUrl(),\n      {\n        _name: data.name,\n        _mail: data.email,\n        _subject: data.subject,\n        _message: data.message\n      },\n      config || {}\n    );\n\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Returns endpoint to send the email.\n   *\n   * @private\n   * @method _getPostUrl\n   * @return {string}\n   */\n  Mail.prototype._getPostUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/mail';\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('mail', Mail);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, EventSource */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var SSE = function($injector)\n    {\n      this.$injector = $injector;\n      this._sources = {};\n    };\n\n  SSE.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Adds a new event source to listen to.\n   *\n   * @public\n   * @method add\n   * @param string url\n   * @param string event\n   * @param function callback\n   * @return {void}\n   */\n  SSE.prototype.addSource = function(url, config) {\n    config = config || {};\n\n    config.retry = config.retry || null;\n    config.event = config.event || null;\n    config.sleep = config.sleep || null;\n    config.onError = config.onError || function(){};\n    config.onMessage = config.onMessage || function(){};\n\n    url = this._buildUrl(url, config);\n    var source = new EventSource(url);\n\n    source.onmessage = function(event) {\n      var data = angular.fromJson(event.data);\n      config.onMessage.call(this, data, event);\n    };\n\n    source.onerror = function(event) {\n      config.onError.call(this, event);\n    };\n\n    this._sources[url] = source;\n    return source;\n  };\n\n  /**\n   * Adds a new event source to listen to.\n   *\n   * @public\n   * @method removeSource\n   * @param object source\n   * @return {void}\n   */\n  SSE.prototype.removeSource = function(source) {\n    delete this._sources[source.url];\n    source.close();\n  };\n\n  /**\n   * Appends JWT token as query string to url.\n   * Adds optional config options if available.\n   *\n   * @private\n   * @method _getUrl\n   * @param string url\n   * @param object config\n   * @return {string}\n   */\n  SSE.prototype._buildUrl = function(url, config){\n    var jwt = this.$injector.get('jwt');\n    var token = jwt.getToken();\n\n    url = url + '?bearer=' + token;\n\n    if (config.event) {\n      url += '&event=' + config.event;\n    }\n\n    if (config.sleep) {\n      url += '&sleep=' + config.sleep;\n    }\n\n    if (config.retry) {\n      url += '&retry=' + config.retry;\n    }\n\n    return url;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('sse', SSE);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var CardContainer = function() {\n  };\n\n  CardContainer.$inject = ['$scope', '$element', '$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} cards Stack of registered cards. */\n  CardContainer.prototype.cards = [];\n\n  /** @var {boolean} canToggle If cards can be toggled. */\n  CardContainer.prototype.canToggle = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Adds a `card` directive to stack.\n   *\n   * @public\n   * @method click\n   * @return {Void}\n   */\n  CardContainer.prototype.add = function(card) {\n    this.cards.push(card);\n  };\n\n  /**\n   * Toggles card state if `canToggle` is true.\n   *\n   * @public\n   * @method set\n   * @return {boolean}\n   */\n  CardContainer.prototype.set = function(card) {\n    if (card.selected && !this.canToggle) {\n      return false;\n    }\n\n    // toggle current card's state\n    var selected = !!card.selected;\n    card.selected = selected ? null : true;\n\n    // reset all other card states\n    angular.forEach(this.cards, function(current) {\n      if (current.id === card.id) {\n        return;\n      }\n\n      current.selected = card.selected ? false : null;\n    });\n\n    return true;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('cardContainer', function(){\n    return {\n      scope: {\n        canToggle: '=?cardContainerCanToggle'\n      },\n      restrict: 'A',\n      controller: CardContainer,\n      bindToController: true,\n      controllerAs: 'cardContainerController'\n    };\n  });\n\n  // --------------------------------------------------\n  // Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Card = function($scope, $element, $attrs, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n\n    this.id = this.$scope.$id;\n    this.hasIcon = $transclude.isSlotFilled('icon');\n  };\n\n  Card.$inject = ['$scope', '$element', '$attrs', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} id Unique id of card. */\n  Card.prototype.id = null;\n\n  /** @var {mixed} data Passthrough data of card. */\n  Card.prototype.data = null;\n\n  /** @var {boolean} selected If card is selected. */\n  Card.prototype.selected = null;\n\n  /** @var {boolean} disabled If card is disabled. */\n  Card.prototype.disabled = null;\n\n  /** @var {boolean} hasIcon If card has `icon` slot filled. */\n  Card.prototype.hasIcon = null;\n\n  /** @var {boolean} isCheckbox If card should behave as checkbox. */\n  Card.prototype.isCheckbox = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Invokes the `cardOnClick` callback.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Card.prototype.$onInit = function() {\n    if (!this.cardContainer) {\n      return;\n    }\n\n    this.cardContainer.add(this);\n  };\n\n  /**\n   * Invokes the `cardOnClick` callback.\n   *\n   * @public\n   * @method click\n   * @return {Void}\n   */\n  Card.prototype.click = function($event) {\n    if (this.disabled) {\n      return;\n    }\n\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    if (this.cardContainer) {\n      var changed = this.cardContainer.set(this);\n      if (!changed) {\n        return;\n      }\n    }\n\n    this.onClick({\n      data: this.data,\n      selected: this.selected,\n      disabled: this.disabled\n    });\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('card', function(){\n    return {\n      scope: {\n        data: '=?cardData',\n        onClick: '&cardOnClick',\n        selected: '=?cardSelected',\n        disabled: '=?cardDisabled',\n        isCheckbox: '=?cardIsCheckbox'\n      },\n      restrict: 'A',\n      transclude: {\n        text: 'cardText',\n        title: 'cardTitle',\n        icon: '?cardIcon',\n        buttons: '?cardButtons'\n      },\n      controller: Card,\n      bindToController: true,\n      controllerAs: 'cardController',\n      require:{\n        cardContainer: '^?cardContainer',\n      },\n      templateUrl: 'views/directives/card.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, Chartist */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Chart = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._chart = null;\n  };\n\n  Chart.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} data Chart data for series. */\n  Chart.prototype.data = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Inits chart with options and data\n   * and renders it with these settings.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Chart.prototype.$onInit = function()\n    {\n      var options = this._getOptions();\n\n      var data = {\n        labels: this._getLabels(),\n        series: this._getData()\n      };\n\n      this._render(data, options);\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Chart.prototype.$onDestroy = function()\n    {\n      if (this._chart !== null) {\n        this._chart.detach();\n        this._chart = null;\n      }\n    };\n\n  /**\n   * Gets data depending on current `task`.\n   *\n   * @public\n   * @method _getData\n   * @param {array} data\n   * @return int\n   */\n  Chart.prototype._getData = function() {\n    var GROUP_A = this.$injector.get('GROUP_A');\n    var GROUP_B = this.$injector.get('GROUP_B');\n\n    var me = this;\n\n    var map = {};\n    var data = [];\n    var mapResults;\n\n    switch(me.task.type) {\n      //case me.$injector.get('TYPE_INTEREST'):\n      //case me.$injector.get('TYPE_INFLATION'):\n      //case me.$injector.get('TYPE_DIVERSIFICATION'):\n      //case me.$injector.get('TYPE_RISK'):\n      case me.$injector.get('TYPE_ANCHORING'):\n      case me.$injector.get('TYPE_MENTAL_BOOKKEEPING'): {\n        map[GROUP_A] = { choice1: 0, choice2: 0, count:0 };\n        map[GROUP_B] = { choice1: 0, choice2: 0, count:0 };\n\n        mapResults = function(result) {\n          var group = result.json.group;\n          var num = result.json.choice;\n\n          map[group]['choice'+num]++;\n          map[group].count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        var groupA = map[GROUP_A];\n        var groupB = map[GROUP_B];\n\n        // series 1\n        data.push([\n          groupA.choice1 / groupA.count,\n          groupB.choice1 / groupB.count\n        ]);\n\n        // series 2\n        data.push([\n          groupA.choice2 / groupA.count,\n          groupB.choice2 / groupB.count\n        ]);\n\n        break;\n      }\n\n      //case me.$injector.get('TYPE_FRAMING'):\n      //case me.$injector.get('TYPE_SAVINGS_TARGET'):\n      case me.$injector.get('TYPE_SAVINGS_SUPPORTED'): {\n\n        map.count = 0;\n        map.choice1 = 0;\n        map.choice2 = 0;\n        map.choice3 = 0;\n        map.choice4 = 0;\n\n        mapResults = function(result) {\n          var num = result.json.choice;\n\n          map['choice'+num]++;\n          map.count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        data.push([\n          map.choice1 / map.count,\n          map.choice2 / map.count,\n          map.choice3 / map.count,\n          map.choice4 / map.count\n        ]);\n\n        break;\n      }\n\n      //case me.$injector.get('TYPE_SELF_COMMITMENT'):\n      case me.$injector.get('TYPE_PROCRASTINATION'): {\n        var SPLIT = 'SPLIT';\n        var ALL = 'ALL';\n\n        map[SPLIT] = { success: 0, failure: 0, count:0 };\n        map[ALL] = { success: 0, failure: 0, count:0 };\n\n        mapResults = function(result) {\n          var mode = result.json.mode;\n\n          if (result.json.success) {\n            map[mode].success++;\n          } else {\n            map[mode].failure++;\n          }\n\n          map[mode].count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        var split = map[SPLIT];\n        var all = map[ALL];\n\n        // series 1\n        data.push([\n          split.success / split.count,\n          all.success / all.count\n        ]);\n\n        // series 2\n        data.push([\n          split.failure / split.count,\n          all.failure / all.count\n        ]);\n\n        break;\n      }\n\n      default:\n    }\n\n    return data;\n  };\n\n  /**\n   * Gets labels depending on current `task`.\n   *\n   * @private\n   * @method _getLabels\n   * @return array\n   */\n  Chart.prototype._getLabels = function() {\n    var i18n = this.$injector.get('i18n');\n\n    switch(this.task.type) {\n      case this.$injector.get('TYPE_ANCHORING'):\n        return [\n          i18n.get('WITH_ANCHOR'),\n          i18n.get('WITHOUT_ANCHOR')\n        ];\n      case this.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        return [\n          i18n.get('MONEY_LOST'),\n          i18n.get('TICKET_LOST')\n        ];\n      case this.$injector.get('TYPE_SAVINGS_SUPPORTED'):\n        return [\n          i18n.get('REMINDER_SMS'),\n          i18n.get('CHILDREN_SMS'),\n          i18n.get('PREMIUM_SAVINGS'),\n          i18n.get('SAVINGS_COIN')\n        ];\n      case this.$injector.get('TYPE_PROCRASTINATION'):\n        return [\n          i18n.get('ALL'),\n          i18n.get('SPLIT')\n        ];\n      default:\n        return [];\n    }\n  };\n\n  /**\n   * Gets options depending on current `task`.\n   *\n   * @private\n   * @method _getOptions\n   * @return array\n   */\n  Chart.prototype._getOptions = function() {\n    var i18n = this.$injector.get('i18n');\n    var options = {\n      seriesBarDistance: 70,\n      chartPadding: {\n        top: 50,\n        left: 0,\n        right: 0,\n        bottom: 0\n      },\n      axisY:{\n        labelInterpolationFnc: function(value) {\n          return (value * 100) + '%';\n        },\n        ticks: [0, 0.2, 0.4, 0.6, 0.8, 1],\n        type: Chartist.FixedScaleAxis,\n        high: 1,\n        low: 0\n      }\n    };\n\n    switch(this.task.type) {\n      case this.$injector.get('TYPE_ANCHORING'):\n      case this.$injector.get('TYPE_MENTAL_BOOKKEEPING'): {\n        options.plugins = [\n          Chartist.plugins.legend({\n            legendNames: [\n              i18n.get('BUYING'),\n              i18n.get('NOT_BUYING')\n            ]\n          })\n        ];\n\n        break;\n      }\n      case this.$injector.get('TYPE_PROCRASTINATION'): {\n        options.plugins = [\n          Chartist.plugins.legend({\n            legendNames: [\n              i18n.get('Target reached'),\n              i18n.get('Target dismissed')\n            ]\n          })\n        ];\n\n        break;\n      }\n      default:\n    }\n\n    return options;\n  };\n\n  /**\n   * Renders chart depending on current `task`.\n   *\n   * @private\n   * @method _render\n   * @return array\n   */\n  Chart.prototype._render = function(data, options) {\n    var $timeout = this.$injector.get('$timeout');\n\n    this.$element.addClass('ct-chart');\n    var element = this.$element.get(0);\n\n    var me = this;\n    var render = function() {\n      switch(me.task.type) {\n        case me.$injector.get('TYPE_ANCHORING'):\n        case me.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        case me.$injector.get('TYPE_SAVINGS_SUPPORTED'):\n        case me.$injector.get('TYPE_PROCRASTINATION'):\n          me._chart = new Chartist.Bar(element, data, options);\n          break;\n        default:\n      }\n    };\n\n    $timeout(render, 100);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('chart', function(){\n    return {\n      scope: {\n        task: '=?chartTask',\n        results: '=?chartResults'\n      },\n      restrict: 'A',\n      controller: Chart,\n      bindToController: true,\n      controllerAs: 'chartController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Modal\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Modal = function($scope, $attrs, $element, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$transclude = $transclude;\n\n    this._element = null;\n    this._modal = null;\n    this._scope = null;\n  };\n\n  Modal.$inject = ['$scope', '$attrs', '$element', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isVisible Flag for modal visibility. */\n  Modal.prototype.isVisible = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers UIkit callbacks and watches.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Modal.prototype.$onInit = function()\n    {\n      var me = this;\n\n      // listeners\n      this._onShow = function() {\n        me.$scope.$evalAsync(me.onShow);\n      };\n\n      this._onShown = function() {\n        me.$scope.$evalAsync(me.onShown);\n      };\n\n      this._onBeforeShow = function() {\n        me.$scope.$evalAsync(me.onBeforeShow);\n      };\n\n      this._onHide = function() {\n        me.$scope.$evalAsync(me.onHide);\n      };\n\n      this._onHidden = function() {\n        me.$scope.$evalAsync(function(){\n          me.onHidden();\n          me.isVisible = false;\n        });\n      };\n\n      this._onBeforeHide = function() {\n        me.$scope.$evalAsync(me.onBeforeHide);\n      };\n\n      // watches\n      this._unwatch = this.$scope.$watch(\n        'modalController.isVisible',\n        function(isVisible) {\n          if (isVisible) {\n            me.transclude();\n            return;\n          }\n\n          me.destroy();\n        }\n      );\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Modal.prototype.$onDestroy = function()\n    {\n      this._unwatch();\n      this.destroy();\n    };\n\n  /**\n   * Transcludes contents and shows modal.\n   *\n   * @public\n   * @method render\n   * @return {Void}\n   */\n  Modal.prototype.transclude = function() {\n    var me = this;\n\n    var transclude = function(clone, scope) {\n      // save element and scope\n      me._element = clone;\n      me._scope = scope;\n\n      // register UIKit listeners\n      me._element.on('show', me._onShow);\n      me._element.on('shown', me._onShown);\n      me._element.on('beforeshow', me._onBeforeShow);\n\n      me._element.on('hide', me._onHide);\n      me._element.on('hidden', me._onHidden);\n      me._element.on('beforeHide', me._onBeforeHide);\n\n      // replace with actual element\n      me.$element.append(clone);\n\n      // create and show the modal\n      me._modal = UIkit.modal(clone);\n      me._modal.show();\n    };\n\n    this.$transclude(transclude);\n  };\n\n  /**\n   * Destructs current modal transclusion from DOM.\n   *\n   * @public\n   * @method destroy\n   * @return {Void}\n   */\n  Modal.prototype.destroy = function() {\n    if (this._element !== null) {\n      this._element.off('show', this._onShow);\n      this._element.off('shown', this._onShown);\n      this._element.off('beforeshow', this._onBeforeShow);\n\n      this._element.off('hide', this._onHide);\n      this._element.off('hidden', this._onHidden);\n      this._element.off('beforeHide', this._onBeforeHide);\n\n      this._element.remove();\n      this._element = null;\n    }\n\n    if (this._scope !== null) {\n      this._scope.$destroy();\n      this._scope = null;\n    }\n\n    if (this._modal !== null) {\n      this._modal.hide();\n      this._modal = null;\n    }\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('modal', function(){\n    return {\n      scope: {\n        isVisible: '=?modal',\n        onShow:'&modalOnShow',\n        onHide:'&modalOnHide',\n        onShown:'&modalOnShown',\n        onHidden:'&modalOnHidden',\n        onBeforeShow:'&modalOnBeforeShow',\n        onBeforeHide:'&modalOnBeforeHide'\n      },\n      restrict: 'A',\n      controller: Modal,\n      transclude: 'element',\n      bindToController: true,\n      controllerAs: 'modalController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, YT */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Video\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Video = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._player = null;\n    this._element = this.$element.find('.player');\n\n    this._onReady = this._onReady.bind(this);\n    this._onStateChange = this._onStateChange.bind(this);\n  };\n\n  Video.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} width Width of player. */\n  Video.prototype.width = 640;\n\n  /** @var {number} height Height of player. */\n  Video.prototype.height = 360;\n\n  /** @var {string} videoId ID of the YouTube video. */\n  Video.prototype.videoId = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Waits for YOUTUBE_API_LOADED flag and initializes\n   * player afterwards including all relevant events.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Video.prototype.$onInit = function()\n    {\n      var $window = this.$injector.get('$window');\n\n      var me = this;\n      var _watchAPIExpression = function() {\n        return $window.YOUTUBE_API_LOADED;\n      };\n\n      var _watchAPICallback = function(isReady) {\n        if (isReady) {\n          me._unwatchAPI();\n          me._onReady();\n        }\n      };\n\n      this._unwatchAPI = this.$scope.$watch(\n        _watchAPIExpression,\n        _watchAPICallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Video.prototype.$onDestroy = function() {\n    if (this._player) {\n      this._player.destroy();\n    }\n  };\n\n  /**\n   * Provides `padding-bottom` with correct\n   * aspect ratio for a responsive viewport.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Video.prototype.getStyle = function() {\n    return {\n      'padding-bottom': (\n        this.height /\n        this.width *\n        100\n      ) + '%',\n    };\n  };\n\n  /**\n   * Invoked by YouTube API when player's ready.\n   *\n   * @private\n   * @method _onReady\n   * @return {Void}\n   */\n  Video.prototype._onReady = function()\n    {\n      var element = this._element.get(0);\n\n      this._player = new YT.Player(\n        element,\n        {\n          width: this.width,\n          height: this.height,\n          videoId: this.videoId,\n          events: {\n            'onStateChange': this._onStateChange\n          }\n      });\n    };\n\n  /**\n   * Invoked by YouTube API when player's ready.\n   *\n   * @private\n   * @method _onReady\n   * @return {Void}\n   */\n  Video.prototype._onStateChange = function(event)\n    {\n      switch (event.data) {\n        case YT.PlayerState.PLAYING:\n          this.onPlaying();\n          break;\n        case YT.PlayerState.PAUSED:\n          this.onPaused();\n          break;\n        case YT.PlayerState.ENDED:\n          this.onEnded();\n          break;\n        case YT.PlayerState.CUED:\n          this.onCued();\n          break;\n        default:\n      }\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('video', function(){\n    return {\n      scope: {\n        videoId:'=videoId',\n        width:'=?videoWidth',\n        height:'=?videoHeight',\n        onCued: '&videoOnCued',\n        onEnded: '&videoOnEnded',\n        onPaused: '&videoOnPaused',\n        onPlaying: '&videoOnPlaying',\n        onBuffering: '&videoOnBuffering'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: Video,\n      bindToController: true,\n      controllerAs: 'videoController',\n      templateUrl: 'views/directives/video.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular, this);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Status\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Status = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.iconRatio = 1;\n    this.isCompact = false;\n    this.iconColor = 'currentcolor';\n  };\n\n  Status.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} tasks User's task hash map. */\n  Status.prototype.tasks = {};\n\n  /** @var {array} tickets User's ticket collection. */\n  Status.prototype.tickets = [];\n\n  /** @var {boolean} tasksVisible If task overview is visible. */\n  Status.prototype.tasksVisible = false;\n\n  /** @var {boolean} ticketsVisible If tickets overview is visible. */\n  Status.prototype.ticketsVisible = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `tasks` and `tickets` properties and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Status.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchTicketsExpression = function(){\n        return user.tickets;\n      };\n\n      var _watchTicketsCallback = function(tickets) {\n        me.tickets = tickets;\n      };\n\n      this._unwatchTickets = this.$scope.$watchCollection(\n        _watchTicketsExpression,\n        _watchTicketsCallback\n      );\n\n      var _watchTasksExpression = function(){\n        return user.getTasks();\n      };\n\n      var _watchTasksCallback = function(tasks) {\n        me.tasks = tasks;\n      };\n\n      this._unwatchTasks = this.$scope.$watch(\n        _watchTasksExpression,\n        _watchTasksCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Status.prototype.$onDestroy = function() {\n    this._unwatchTickets();\n    this._unwatchTasks();\n  };\n\n  /**\n   * Toggles `tasksVisible` property.\n   *\n   * @public\n   * @method toggleTasks\n   * @return {Void}\n   */\n  Status.prototype.toggleTasks = function()\n    {\n      this.tasksVisible = !this.tasksVisible;\n    };\n\n  /**\n   * Toggles `ticketsVisible` property.\n   *\n   * @public\n   * @method toggleTickets\n   * @return {Void}\n   */\n  Status.prototype.toggleTickets = function()\n    {\n      this.ticketsVisible = !this.ticketsVisible;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('status', function(){\n    return {\n      scope: {\n        iconRatio:'=?statusIconRatio',\n        iconColor:'=?statusIconColor',\n        isCompact:'=?statusIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: Status,\n      bindToController: true,\n      controllerAs: 'statusController',\n      templateUrl: 'views/directives/status.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Icons\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusIcons = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.ratio = 1;\n    this.color = 'currentcolor';\n  };\n\n  StatusIcons.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isBeginner If user has state `STATE_BEGINNER` or higher. */\n  StatusIcons.prototype.isBeginner = false;\n\n  /** @var {boolean} isAmateuer If user has state `STATE_AMATEUR` or higher. */\n  StatusIcons.prototype.isAmateuer = false;\n\n  /** @var {boolean} isAdvanced If user has state `STATE_ADVANCED` or higher. */\n  StatusIcons.prototype.isAdvanced = false;\n\n  /** @var {boolean} isExpert If user has state `STATE_EXPERT` or higher. */\n  StatusIcons.prototype.isExpert = false;\n\n  /** @var {boolean} isProfi If user has state `STATE_PROFI` or higher. */\n  StatusIcons.prototype.isProfi = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusIcons.prototype.$onInit = function()\n    {\n      var STATE_BEGINNER = this.$injector.get('STATE_BEGINNER');\n      var STATE_AMATEUR = this.$injector.get('STATE_AMATEUR');\n      var STATE_ADVANCED = this.$injector.get('STATE_ADVANCED');\n      var STATE_EXPERT = this.$injector.get('STATE_EXPERT');\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function(){\n        return user.state;\n      };\n\n      var _watchCallback = function(state) {\n        me.isBeginner = state >= STATE_BEGINNER;\n        me.isAmateur = state >= STATE_AMATEUR;\n        me.isAdvanced = state >= STATE_ADVANCED;\n        me.isExpert = state >= STATE_EXPERT;\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusIcons.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusIcons', function() {\n    return {\n      scope: {\n        ratio:'=?statusIconsRatio',\n        color:'=?statusIconsColor',\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusIcons,\n      bindToController: true,\n      controllerAs: 'statusIconsController',\n      templateUrl: 'views/directives/status-icons.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Label\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusLabel = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  StatusLabel.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} state String represenation of user's `state`. */\n  StatusLabel.prototype.state = null;\n\n  /** @var {boolean} isCompact If presentation is in compact format. */\n  StatusLabel.prototype.isCompact = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusLabel.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function() {\n        return user.state;\n      };\n\n      var _watchCallback = function() {\n        me.state = user.getStateAsString();\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusLabel.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusLabel', function(){\n    return {\n      scope: {\n        isCompact: '=?statusLabelIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusLabel,\n      bindToController: true,\n      controllerAs: 'statusLabelController',\n      templateUrl: 'views/directives/status-label.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Label\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusTickets = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  StatusTickets.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} tickets Current user ticket count. */\n  StatusTickets.prototype.tickets = 0;\n\n  /** @var {boolean} isCompact If presentation is in compact format. */\n  StatusTickets.prototype.isCompact = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusTickets.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function() {\n        return user.tickets;\n      };\n\n      var _watchCallback = function(tickets) {\n        me.tickets = tickets ? tickets.length : 0;\n      };\n\n      this._unwatch = this.$scope.$watchCollection(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusTickets.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusTickets', function(){\n    return {\n      scope: {\n        isCompact: '=?statusTicketsIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusTickets,\n      bindToController: true,\n      controllerAs: 'statusTicketsController',\n      templateUrl: 'views/directives/status-tickets.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Tabber\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Tabber = function($scope, $element, $attrs, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$transclude = $transclude;\n\n    this.domId = 'tabber-' + $scope.$id;\n\n    this.hasExercise = $transclude.isSlotFilled('exercise');\n  };\n\n  Tabber.$inject = ['$scope','$element','$attrs', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} hasExercise If slot `exercise` has contents. */\n  Tabber.prototype.hasExercise = false;\n\n  /** @var {string} activeTab Currently activated tab by name. */\n  Tabber.prototype.activeTab = 'DESCRIPTION';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets `activeTab` property by name.\n   *\n   * @public\n   * @method setActive\n   * @param {string} tab\n   * @return {Void}\n   */\n  Tabber.prototype.setActive = function(tab) {\n    switch (tab) {\n      case 'DESCRIPTION':\n      case 'EXERCISE': {\n        this.activeTab = tab;\n        break;\n      }\n      default:\n    }\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('tabber', function(){\n    return {\n      scope: {\n        icon: '=?tabberIcon',\n        activeTab: '=?tabberActiveTab'\n      },\n      restrict: 'A',\n      transclude: {\n        exercise: '?tabberExercise',\n        description: 'tabberDescription'\n      },\n      controller: Tabber,\n      bindToController: true,\n      controllerAs: 'tabberController',\n      templateUrl: 'views/directives/tabber.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, interact */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Draggable\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Draggable = function($scope, $element, $attrs, $injector) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$injector = $injector;\n\n    this._body = null;\n    this._clone = null;\n    this._coordinates = {};\n    this._interactable = null;\n    this._activeClass = 'active';\n    this._itemClass = 'draggable';\n    this._disabledClass = 'disabled';\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.disabled; },\n      function(disabled) {\n        if (disabled) {\n          me.$element.addClass(me._disabledClass);\n        } else {\n          me.$element.removeClass(me._disabledClass);\n        }\n\n        me._interactable.draggable({enabled: !disabled});\n      }\n    );\n\n    this._onResize = this._onResize.bind(this);\n  };\n\n  Draggable.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} data Connected data for draggable. */\n  Draggable.prototype.data = null;\n\n  /** @type {boolean} clone If clone item should be used. */\n  Draggable.prototype.clone = false;\n\n  /** @var {boolean} disabled If draggable is disabled. */\n  Draggable.prototype.disabled = false;\n\n  /** @type {boolean} clone If clone item should be used. */\n  Draggable.prototype.restriction = 'parent';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes `interact` library on element\n   * with all available callbacks for dragging.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Draggable.prototype.$onInit = function() {\n    var $window = this.$injector.get('$window');\n\n    this._body = angular.element(document.body);\n    this.$element.addClass(this._itemClass);\n    var element = this.$element.get(0);\n\n    this._interactable = interact(element);\n\n    var me = this;\n    var options = {\n      inertia: true,\n      autoScroll: true,\n      enabled: !this.disabled,\n      onend: this._onEndItem.bind(this),\n      onmove: this._onMoveItem.bind(this),\n      onstart: this._onStartItem.bind(this),\n      snap: {\n          targets:[function(x,y,interaction) {\n            // 'startCoords' doesn't work here, so\n            // we catch initial position once from\n            // interaction element and this values\n            if (!me._origin) {\n              me._origin = {\n                x: interaction.startCoords.page.x,\n                y: interaction.startCoords.page.y\n              };\n            }\n\n            // if not dropped, move draggable\n            // smoothly back to origin point\n            if (!interaction.dropTarget) {\n              return {\n                x: me._origin.x, // instead of 0\n                y: me._origin.y  // instead of 0\n              };\n            }\n          }],\n          //offset: 'startCoords',\n          endOnly: true\n      }\n    };\n\n    if (this.clone) {\n      angular.extend(options, { manualStart: true });\n      this._interactable.on('move', this._onMove.bind(this));\n    }\n\n    this._interactable.draggable(options);\n    this._interactable.getData = this._getData.bind(this);\n\n    this._window = angular.element($window);\n    this._window.on('resize', this._resize);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Draggable.prototype.$onDestroy = function() {\n    this._window.off('resize', this._onResize);\n    this._interactable.unset();\n    this._unwatch();\n  };\n\n  /**\n   * Resets `origin` info for snapping.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Draggable.prototype._onResize = function() {\n    this._origin = null;\n  };\n\n  /**\n   * Adds `activeClass` to clone and invokes `onDragStart`.\n   *\n   * @private\n   * @method _onStartItem\n   * @return {Void}\n   */\n  Draggable.prototype._onStartItem = function(event) {\n    var target = !this.clone ?\n      angular.element(event.target) :\n      this._clone;\n\n    target.addClass(this._activeClass);\n\n    this._trigger('onDragStart', {\n      $event: event,\n      $data: this.data\n    });\n  };\n\n  /**\n   * This performs actual dragging logic with CSS.\n   * The method triggers the `onDragMove` callback.\n   *\n   * @private\n   * @method _onMoveItem\n   * @return {Void}\n   */\n  Draggable.prototype._onMoveItem = function(event) {\n    var target = !this.clone ?\n      angular.element(event.target) :\n      this._clone;\n\n    var x = (this._coordinates.x || 0) + event.dx;\n    var y = (this._coordinates.y || 0) + event.dy;\n\n    this._translate(target,x,y);\n\n    this._trigger('onDragMove', {\n      $event: event,\n      $data: this.data\n    });\n  };\n\n  /**\n   * This performs resetting work by removing clone.\n   * It invokes always the `onDragEnd` and the `onDrop`\n   * callbacks - if dropped on target element.\n   *\n   * @private\n   * @method _onEndItem\n   * @return {Void}\n   */\n  Draggable.prototype._onEndItem = function(event) {\n    var dropped = !!event.interaction.dropTarget;\n\n    if (!this.clone) {\n      var target = angular.element(event.target);\n      target.removeClass(this._activeClass);\n\n      // remove translate for snapping if\n      // animating back to origin coords!\n      if (!dropped) {\n        this._translate(target,0,0);\n      }\n\n    } else {\n      this._coordinates = {};\n      this._clone.remove();\n      this._clone = null;\n    }\n\n    this._trigger('onDragEnd', {\n      $event: event,\n      $data: this.data\n    });\n\n    if (dropped) {\n      this._trigger('onDrop', {\n        $event: event,\n        $data: this.data\n      });\n    }\n  };\n\n  /**\n   * Creates the clone and triggers manual kick-off for `interact`.\n   * This is necessary because we want:\n   *\n   * 1) being able to show clone object\n   * 2) being able to have disable control\n   *\n   * @private\n   * @method _onMove\n   * @return {Void}\n   */\n  Draggable.prototype._onMove = function(event) {\n    var interactable = event.interactable;\n    var interaction = event.interaction;\n    var element = event.currentTarget;\n\n    // we've to control `enabled` by our own as we are using the\n    // `manualStart` option to create clone - noop if `disabled`\n    if (this.disabled) {\n      return;\n    }\n\n    // create clone if user holds mouse/finger and no interaction\n    // is currently started - position absolutely at end of body!\n    if (interaction.pointerIsDown && !interaction.interacting()) {\n      this._clone = angular.element(element).clone();\n\n      var offsetY = element.clientHeight / 2;\n      var offsetX = element.clientWidth / 2;\n\n      var pageY = !!event.touches ?\n        event.touches[0].pageY :\n        event.pageY;\n      var pageX = !!event.touches ?\n        event.touches[0].pageX :\n        event.pageX;\n\n      this._clone.css({\n        left: (pageX - offsetX) + 'px',\n        top: (pageY - offsetY) + 'px',\n        position: 'absolute'\n      });\n\n      this._body.append(this._clone);\n      element = this._clone.get(0);\n    }\n\n    // invoke 'drag' interaction manually with the target/clone\n    interaction.start({ name: 'drag' }, interactable, element);\n  };\n\n  /**\n   * Retrieves the connected drag object data.\n   *\n   * @private\n   * @method _getData\n   * @return {object}\n   */\n  Draggable.prototype._getData = function() {\n    return this.data;\n  };\n\n  /**\n   * Translates DOM node to given coordinates.\n   *\n   * @private\n   * @method _translate\n   * @param object element\n   * @param number x\n   * @param number y\n   * @return {void}\n   */\n  Draggable.prototype._translate = function(element, x, y) {\n    var translate = 'translate('+x+'px,'+y+'px)';\n\n    element.css({\n      'webkitTransform': translate,\n      'mozTransform': translate,\n      'msTransform': translate,\n      'oTransform': translate,\n      'transform': translate\n    });\n\n    this._coordinates.x = x;\n    this._coordinates.y = y;\n  };\n\n  /**\n   * Primitive method for invoking callbacks.\n   *\n   * @private\n   * @method _trigger\n   * @return {void}\n   */\n  Draggable.prototype._trigger = function(method, args) {\n    this.$scope.$evalAsync(this[method].bind(this,args));\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('draggable', function(){\n    return {\n      scope: {\n        data: '=?draggableData',\n        clone: '=?draggableClone',\n        disabled: '=?draggableDisabled',\n        onDragStart: '&draggableOnDragStart',\n        onDragMove: '&draggableOnDragMove',\n        onDragEnd: '&draggableOnDragEnd',\n        onDrop: '&draggableOnDrop'\n      },\n      restrict: 'A',\n      controller: Draggable,\n      bindToController: true,\n      controllerAs: 'draggableController'\n    };\n  });\n\n  // --------------------------------------------------\n  // Dropable\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Dropable = function($scope, $element, $attrs) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n\n    this._interactable = null;\n    this._enterClass = 'enter';\n    this._activeClass = 'active';\n    this._itemClass = 'dropable';\n    this._acceptClass = 'draggable';\n    this._disabledClass = 'disabled';\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.disabled; },\n      function(disabled) {\n        if (disabled) {\n          me.$element.addClass(me._disabledClass);\n        } else {\n          me.$element.removeClass(me._disabledClass);\n        }\n      }\n    );\n  };\n\n  Dropable.$inject = ['$scope','$element','$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} disabled If draggable is disabled. */\n  Dropable.prototype.disabled = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes `interact` library on element\n   * with all available callbacks for dragging.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Dropable.prototype.$onInit = function() {\n    this._body = angular.element(document.body);\n    this.$element.addClass(this._itemClass);\n    var accept = '.' + this._acceptClass;\n    var element = this.$element.get(0);\n\n    this._interactable = interact(element)\n      .dropzone({\n        accept: accept,\n        enabled: !this.disabled,\n        ondrop: this._onDrop.bind(this),\n        ondragenter: this._onDragEnter.bind(this),\n        ondragleave: this._onDragLeave.bind(this),\n        ondropactivate: this._onDropActivate.bind(this),\n        ondropdeactivate: this._onDropDeactivate.bind(this)\n      });\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Dropable.prototype.$onDestroy = function() {\n    this._interactable.unset();\n    this._unwatch();\n  };\n\n  /**\n   * Removes the active class from element and\n   * triggers the `onDropDeactivate` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDropDeactivate = function(event) {\n    this.$element.removeClass(this._activeClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDropDeactivate', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Applies the active class from element and\n   * triggers the `onDropActivate` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDropActivate = function(event) {\n    this.$element.addClass(this._activeClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDropActivate', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Applies the enter class from element and\n   * triggers the `onDragEnter` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDragEnter = function(event) {\n    this.$element.addClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDragEnter', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Removes the enter class from element and\n   * triggers the `onDragLeave` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDragLeave = function(event) {\n    this.$element.removeClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDragLeave', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Removes the enter class from element and\n   * triggers the `onDrop` callback with data\n   * from the draggable element.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDrop = function(event) {\n    this.$element.removeClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDrop',{\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Primitive method for invoking callbacks.\n   *\n   * @private\n   * @method _trigger\n   * @return {void}\n   */\n  Dropable.prototype._trigger = function(method, args) {\n    this.$scope.$evalAsync(this[method].bind(this,args));\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('dropable', function(){\n    return {\n      scope: {\n        disabled: '=?dropableDisabled',\n        onDropDeactivate: '&dropableOnDropDeactivate',\n        onDropActivate: '&dropableOnDropActivate',\n        onDragEnter: '&dropableOnDragEnter',\n        onDragLeave: '&dropableOnDragLeave',\n        onDrop: '&dropableOnDrop'\n      },\n      restrict: 'A',\n      controller: Dropable,\n      bindToController: true,\n      controllerAs: 'droppableController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Accordion\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Accordion = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._accordion = null;\n    this._collapsibles = [];\n    this._init = this._init.bind(this);\n    this._onCollapsibleClicked = this._onCollapsibleClicked.bind(this);\n  };\n\n  Accordion.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} options Options for accordion. */\n  Accordion.prototype.options = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes accordion after rendering.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Accordion.prototype.$onInit = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    // wait for being rendered\n    $timeout(this._init, 1);\n  };\n\n  /**\n   * Tears down accordion on desctruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Accordion.prototype.$onDestroy = function() {\n    if (this._accordion) {\n      this._accordion.$destroy();\n    }\n\n    this._unlistenCollapsible();\n  };\n\n  /**\n   * Sets `activeTab` property by name.\n   *\n   * @public\n   * @method addCollapsible\n   * @param {Object} collapsible\n   * @return {Void}\n   */\n  Accordion.prototype.addCollapsible = function(collapsible) {\n    this._collapsibles.push(collapsible);\n  };\n\n  /**\n   * Initializes UIKit accordion and event listeners.\n   *\n   * @private\n   * @method _init\n   * @return {Void}\n   */\n  Accordion.prototype._init = function() {\n    var $rootScope = this.$injector.get('$rootScope');\n    var element = this.$element.get(0);\n\n    var options = angular.extend(\n      {\n        targets: '.collapsible',\n        animation: false\n      },\n      this.options || {}\n    );\n\n    this._unlistenCollapsible = $rootScope.$on(\n      'collapsible_clicked',\n      this._onCollapsibleClicked\n    );\n\n    this._accordion = UIkit.accordion(element, options);\n  };\n\n  /**\n   * Initializes UIKit accordion and event listeners.\n   *\n   * @private\n   * @method _onCollapsibleClicked\n   * @return {Void}\n   */\n  Accordion.prototype._onCollapsibleClicked = function(evt, sender) {\n    var iterate = function(item, index) {\n      var senderId = sender.$scope.$id;\n      var itemId = item.$scope.$id;\n\n      // ignore sender collapsible\n      if (senderId === itemId) {\n        return;\n      }\n\n      // ignore closing sender\n      if (!sender.open) {\n        return;\n      }\n\n      // ignore closed items\n      if (!item.open) {\n        return;\n      }\n\n      // toggle open items\n      this._accordion.toggle(index);\n      item.open = false;\n    };\n\n    angular.forEach(\n      this._collapsibles,\n      iterate.bind(this)\n    );\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('accordion', function(){\n    return {\n      scope: {\n        options: '=?accordionOptions'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: Accordion,\n      bindToController: true,\n      controllerAs: 'accordionController',\n      templateUrl: 'views/directives/accordion.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Accordion Item\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Collapsible = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  Collapsible.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Unique dom id for this collapsible. */\n  Collapsible.prototype.id = null;\n\n  /** @var {boolean} open If collapsible is currently open. */\n  Collapsible.prototype.open = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets `activeTab` property by name.\n   *\n   * @public\n   * @method setActive\n   * @param {string} tab\n   * @return {Void}\n   */\n  Collapsible.prototype.$onInit = function() {\n    var defaultId = 'collapsible-' + this.$scope.$id;\n\n    this.accordion.addCollapsible(this);\n    this.domId = this.id || defaultId;\n  };\n\n  /**\n   * Sets `activeTab` property by name.\n   *\n   * @public\n   * @method setActive\n   * @param {string} tab\n   * @return {Void}\n   */\n  Collapsible.prototype.onClick = function() {\n    this.open = !this.open;\n\n    var $rootScope = this.$injector.get('$rootScope');\n    $rootScope.$broadcast('collapsible_clicked', this);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('collapsible', function(){\n    return {\n      scope: {\n        id: '=?collapsible',\n        open: '=?collapsibleOpen'\n      },\n      restrict: 'A',\n      transclude: {\n        title: '?collapsibleTitle',\n        content: 'collapsibleContent'\n      },\n      require: {\n        accordion: '^accordion'\n      },\n      controller: Collapsible,\n      bindToController: true,\n      controllerAs: 'collapsibleController',\n      templateUrl: 'views/directives/collapsible.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit, jQuery */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // ScrollTo\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ScrollTo = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.options = {};\n\n    this._source = null;\n    this._target = null;\n    this._scroller = null;\n    this._init = this._init.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onScrolled = this._onScrolled.bind(this);\n  };\n\n  ScrollTo.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} delay Delayed invokation in ms. */\n  ScrollTo.prototype.delay = null;\n\n  /** @var {object} options Options for `scroll` service. */\n  ScrollTo.prototype.options = null;\n\n  /** @var {function} callback Callback for scroll finished. */\n  ScrollTo.prototype.callback = null;\n\n  /** @var {boolean} disabled Flag indicating disabled state. */\n  ScrollTo.prototype.disabled = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Waits for rendering and invokes `_init()`.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ScrollTo.prototype.$onInit = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    // wait for being rendered\n    $timeout(this._init, 1);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ScrollTo.prototype.$onDestroy = function() {\n    this._source.off('scrolled', this._onScrolled);\n    this.$element.off('click', this._onClick);\n\n    this._scroller.$destroy(true);\n  };\n\n  /**\n   * Extracts dom element and sets up scroller.\n   *\n   * @private\n   * @method _init\n   * @return {void}\n   */\n  ScrollTo.prototype._init = function() {\n    // try to grab target from - can be either\n    // a jquery element or a string id / hash\n    if (this.element instanceof jQuery) {\n      this._target = this.element;\n    } else {\n      if (angular.isString(this.element)) {\n        if (this.element.charAt(0) !== '#') {\n          this._target = '#' + this.element;\n        }\n\n        this._target = jQuery(this._target);\n      }\n    }\n\n    if (this._target.length === 0) {\n      console.warn('scroll-to.js: Invalid target element!');\n      return;\n    }\n\n    // need to create a dummy `<a href='#hash'></a>`\n    // element to set it as source object for UIkit\n    var href = '#' + this._target.id;\n    this._source = jQuery('<a href=\"'+href+'\"></a>');\n\n    this.options = this.options || {};\n    this.options.easing = angular.isString(this.options.easing) ?\n      this.options.easing :\n      'easeOutExpo';\n    this.options.offset = angular.isNumber(this.options.offset) ?\n      this.options.offset :\n      100;\n    this.options.duration = angular.isNumber(this.options.duration) ?\n      this.options.duration :\n      500;\n\n    this.$element.on('click', this._onClick);\n    this._source.on('scrolled', this._onScrolled);\n\n    this._scroller = UIkit.scroll(this._source, this.options);\n  };\n\n  /**\n   * Invokes scrolling to target element.\n   *\n   * @private\n   * @method _onClick\n   * @return {void}\n   */\n  ScrollTo.prototype._onClick = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    var onDelay = function() {\n      if (this.disabled) {\n        return;\n      }\n\n      this._scroller.scrollTo(this._target);\n    };\n\n    $timeout(onDelay.bind(this), this.delay);\n  };\n\n  /**\n   * Tries to invoke callback after scrolling.\n   *\n   * @private\n   * @method _onScrolled\n   * @return {void}\n   */\n  ScrollTo.prototype._onScrolled = function() {\n    if (!angular.isFunction(this.callback)) {\n      return;\n    }\n\n    this.$scope.$evalAsync(this.callback);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('scrollTo', function(){\n    return {\n      scope: {\n        element: '=scrollTo',\n        delay: '=?scrollToDelay',\n        options: '=?scrollToOptions',\n        callback: '=?scrollToCallback',\n        disabled: '=?scrollToDisabled'\n      },\n      restrict: 'A',\n      controller: ScrollTo,\n      bindToController: true\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Evaluation\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Evaluation = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.user = $injector.get('user');\n    this.domId = 'evaluation-' + $scope.$id;\n  };\n\n  Evaluation.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} domId Unique dom id for scrolling. */\n  Evaluation.prototype.domId = null;\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('evaluation', function(){\n    return {\n      scope: {\n        parent: '=evaluation'\n      },\n      restrict: 'A',\n      transclude: {\n        text: 'evaluationText',\n        customButtons: '?evaluationCustomButtons',\n        defaultButtons: '?evaluationDefaultButtons'\n      },\n      controller: Evaluation,\n      bindToController: true,\n      controllerAs: 'evaluationController',\n      templateUrl: 'views/directives/evaluation.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Locked State\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var LockedState = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n\n    this.user = $injector.get('user');\n  };\n\n  LockedState.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('lockedState', function(){\n    return {\n      scope: {\n        isLocked: '=?lockedState'\n      },\n      restrict: 'A',\n      transclude: {\n        userText: '?userText',\n        adminText: '?adminText',\n        superAdminText: '?superAdminText'\n      },\n      controller: LockedState,\n      bindToController: true,\n      controllerAs: 'lockedStateController',\n      templateUrl: 'views/directives/locked-state.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Form Field\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var FormField = function($scope, $element, $attrs, $transclude, $timeout)\n    {\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n      this.$timeout = $timeout;\n      this.$transclude = $transclude;\n\n      this._transcludeElements = [];\n      this._transcludeScopes = [];\n      this._cloneDefault = null;\n      this._cloneLabel = null;\n      this._unlisten = [];\n      this._unwatch = [];\n    };\n\n  FormField.$inject = ['$scope', '$element', '$attrs', '$transclude', '$timeout'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Dom id form element. */\n  FormField.prototype.id = '';\n\n  /** @var {string} label Label of form element. */\n  FormField.prototype.label = '';\n\n  /** @var {ngModelController} model Added `ngModel` controller. */\n  FormField.prototype.ngModel = null;\n\n  /** @var {boolean} resetEmpty If validation resets on empty model. */\n  FormField.prototype.resetEmpty = true;\n\n  /** @var {boolean} showMessages True if `ngMessages` are visible. */\n  FormField.prototype.showMessages = false;\n\n  /** @var {string} labelClass Class to append to label. */\n  FormField.prototype.labelClass = 'uk-form-label';\n\n  /** @var {string} failureClass Class to append on failure. */\n  FormField.prototype.failureClass = 'uk-form-danger';\n\n  /** @var {string} successClass Class to append on success. */\n  FormField.prototype.successClass = 'uk-form-success';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Renders custom transclusion (form element) and\n   * sets up watchers as well as clean up methods.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  FormField.prototype.$onInit = function()\n    {\n      // create dom id from `name` and $scope id\n      // controller properties are only available\n      // in $onInit() callback from Angular 1.5.x\n      this.id = 'form-field-' + this.$scope.$id;\n\n      // add watch properties\n      this._addWatches();\n\n      // transclude contents\n      this._transclude();\n    };\n\n  /**\n   * Removes transcluded elements, scope and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  FormField.prototype.$onDestroy = function()\n    {\n      angular.forEach(this._transcludeElements, function(element){\n        element.remove();\n      });\n\n      angular.forEach(this._transcludeScopes, function(scope){\n        scope.$destroy();\n      });\n\n      angular.forEach(this._unlisten, function(unlisten){\n        unlisten();\n      });\n\n      angular.forEach(this._unwatch, function(unwatch){\n        unwatch();\n      });\n    };\n\n  /**\n   * Sets model controller from transcluded form\n   * element using the `ng-model` attribute and\n   * the `form-field-model` helper component.\n   *\n   * @public\n   * @method setModel\n   * @param {NgModelController} ngModel\n   * @return {void}\n   */\n  FormField.prototype.setModel = function(ngModel)\n    {\n      this.ngModel = ngModel;\n    };\n\n  /**\n   * Updates validation depending on `ngModel.$valid`.\n   *\n   * @private\n   * @method _update\n   * @return {void}\n   */\n  FormField.prototype._update = function()\n    {\n      if (this.ngModel.$valid) {\n        this._cloneDefault.removeClass(this.failureClass);\n        this._cloneDefault.addClass(this.successClass);\n      } else {\n        this._cloneDefault.removeClass(this.successClass);\n        this._cloneDefault.addClass(this.failureClass);\n      }\n\n      this.showMessages = this.ngModel.$invalid;\n    };\n\n  /**\n   * Resets corresponding validation properties.\n   *\n   * @private\n   * @method _reset\n   * @return {boolean}\n   */\n  FormField.prototype._reset = function()\n    {\n      this._cloneDefault.removeClass(this.failureClass);\n      this._cloneDefault.removeClass(this.successClass);\n      this.ngModel.$setUntouched();\n      this.showMessages = false;\n    };\n\n  /**\n   * Adds scope watches for `isValid()` and `isInvalid()`.\n   *\n   * @private\n   * @method _addWatches\n   * @return {void}\n   */\n  FormField.prototype._addWatches = function()\n    {\n      var me = this;\n\n      // observes `ngModel` controller for changing any\n      // of its validation properties such as `$valid`\n      var unwatchModel = this.$scope.$watchCollection(\n        'formFieldController.ngModel',\n        function(newModel, oldModel)\n        {\n          // ignore initial invocation\n          if (newModel === oldModel) {\n            return;\n          }\n\n          // as long as model hasn't been\n          // touched no validation's made\n          if (!newModel.$touched) {\n              return;\n          }\n\n          // wait for async validators\n          if (newModel.$pending) {\n            return;\n          }\n\n          // if no view value is present\n          // reset all validation props!\n          if (!newModel.$viewValue) {\n            if (me.resetEmpty) {\n              me._reset();\n              return;\n            }\n          }\n\n          me._update();\n        }\n      );\n\n      this._unwatch.push(unwatchModel);\n    };\n\n  /**\n   * Transcludes `default` and `label` slot programmatically\n   * to append custom attributes and events to dom elements.\n   *\n   * @private\n   * @method _transclude\n   * @return {void}\n   */\n  FormField.prototype._transclude = function()\n    {\n      var me = this;\n\n      // adds `id` attribute to be focues by <label>\n      var transcludeDefault = function(clone, scope)\n      {\n        var domId = '#default-' + me.id;\n        var template = angular.element(domId);\n\n        clone.attr('id', me.id);\n\n        template.replaceWith(clone);\n\n        me._cloneDefault = clone;\n\n        me._transcludeScopes.push(scope);\n        me._transcludeElements.push(clone);\n      };\n\n      // adds `labelClass` and sets `for` attribute\n      // for <label> in order to auto focus element\n      var transcludeLabel = function(clone, scope)\n      {\n        var domId = '#label-' + me.id;\n        var template = angular.element(domId);\n\n        clone.attr('for', me.id);\n        clone.addClass(me.labelClass);\n\n        template.replaceWith(clone);\n\n        me._cloneLabel = clone;\n\n        me._transcludeScopes.push(scope);\n        me._transcludeElements.push(clone);\n      };\n\n      // wait for dom to be ready before transclude\n      var timeout = function()\n      {\n        me.$transclude(transcludeDefault, null, null);\n        me.$transclude(transcludeLabel, null, 'label');\n      };\n\n      this.$timeout(timeout);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('formField',function() {\n    return {\n      scope: {\n          name: '=formField',\n          resetEmpty: '=?formFieldResetEmpty',\n          labelClass: '=?formFieldLabelClass',\n          failureClass: '=?formFieldFailureClass',\n          successClass: '=?formFieldSuccessClass'\n      },\n      transclude: {\n        label: '?label',\n        messageMin: '?messageMin',\n        messageMax: '?messageMax',\n        messageUrl: '?messageUrl',\n        messageEmail: '?messageEmail',\n        messageNumber: '?messageNumber',\n        messagePattern: '?messagePattern',\n        messageRequired: '?messageRequired',\n        messageMinlength: '?messageMinlength',\n        messageMaxlength: '?messageMaxlength',\n        messagesCustom: '?messagesCustom'\n      },\n      restrict: 'A',\n      controller: FormField,\n      bindToController: true,\n      controllerAs: 'formFieldController',\n      templateUrl: 'views/directives/form-field.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Form Field Model\n  // --------------------------------------------------\n\n  /**\n   * @constructor\n   */\n  var FormFieldModel = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  FormFieldModel.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} autoFocus If true element receives focus on init. */\n  FormFieldModel.prototype.autoFocus = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers `ngModel` on `formField` controller.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  FormFieldModel.prototype.$onInit = function()\n    {\n      var $timeout = this.$injector.get('$timeout');\n      var $log = this.$injector.get('$log');\n\n      if (!this.formField) {\n        $log.warn('formFieldModel: No form field controller found!');\n        return;\n      }\n\n      if (this.autoFocus) {\n        var element = this.$element.get(0);\n        var focus = function() {\n          element.focus();\n        };\n\n        $timeout(focus, 1);\n      }\n\n      this.formField.setModel(this.ngModel);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('formFieldModel', function(){\n    return {\n      scope: {\n        'autoFocus': '=?formFieldModelAutoFocus'\n      },\n      restrict: 'A',\n      require: {\n        'ngModel': 'ngModel',\n        'formField': '^?formField',\n      },\n      bindToController: true,\n      controller: FormFieldModel\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // RandomNumber\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var RandomNumber = function($scope, $attrs, $element, $injector, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n    this.$transclude = $transclude;\n\n    this._timer = null;\n    this._shuffle = this._shuffle.bind(this);\n  };\n\n  RandomNumber.$inject = ['$scope', '$attrs', '$element', '$injector', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} collection Array of random items. */\n  RandomNumber.prototype.numbers = [];\n\n  /** @var {boolean} shuffle Flag to kick off shuffling. */\n  RandomNumber.prototype.shuffle = true;\n\n  /** @var {string} value Current display value of component. */\n  RandomNumber.prototype.value = '?';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers watch for `shuffle` flag.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  RandomNumber.prototype.$onInit = function()\n    {\n      var me = this;\n\n      this._unwatch = this.$scope.$watch(\n        function(){ return me.shuffle; },\n        function(shuffle) {\n          if (shuffle) {\n            me._shuffle(0);\n            return;\n          }\n\n          me._stop();\n        }\n      );\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  RandomNumber.prototype.$onDestroy = function()\n    {\n      this._unwatch();\n      this._stop();\n    };\n\n  /**\n   * Shows next display value from shuffled values.\n   *\n   * @private\n   * @method _shuffle\n   * @param {number} index\n   * @return {Void}\n   */\n  RandomNumber.prototype._shuffle = function(index) {\n    var $timeout = this.$injector.get('$timeout');\n    var maximum = this.numbers.length - 1;\n\n    this.value = this.numbers[index];\n\n    if (index >= maximum) {\n      this._stop();\n      return;\n    }\n\n    this._timer = $timeout(this._shuffle, 100, true, ++index);\n  };\n\n  /**\n   * Cancels timers and resets shuffle flag.\n   *\n   * @private\n   * @method _stop\n   * @return {Void}\n   */\n  RandomNumber.prototype._stop = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    $timeout.cancel(this._timer);\n    this.shuffle = false;\n    this._timer = null;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('randomNumber', function(){\n    return {\n      scope: {\n        numbers: '=randomNumber',\n        shuffle: '=?randomNumberShuffle'\n      },\n      restrict: 'A',\n      bindToController: true,\n      controller: RandomNumber,\n      controllerAs: 'randomNumberController',\n      templateUrl: 'views/directives/random-number.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Asynchronous Validators\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorWorkshopExists = function($scope, $element, $attrs, $q, Workshop)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Workshop = Workshop;\n\n      this.keyLocked = 'validatorWorkshopLocked';\n    };\n\n  ValidatorWorkshopExists.$inject = ['$scope', '$element', '$attrs', '$q', 'Workshop'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorWorkshopExists` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorWorkshopExists.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorWorkshopExists = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the workshop exists. It sets implicitly `validatorWorkshopLocked`\n   * to avoid multiple server queries and sets to invalid if `isActive` is not true (= locked).\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorWorkshopExists.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var me = this;\n      var successCallback = function(workshop)\n      {\n        if (!workshop.isActive) {\n          me.ngModel.$setValidity(me.keyLocked, false);\n          defer.reject();\n          return;\n        }\n\n        me.ngModel.$setValidity(me.keyLocked, true);\n        defer.resolve();\n      };\n\n      var failureCallback = function()\n      {\n        defer.reject();\n      };\n\n      this.Workshop.validateWorkshopFrontend(\n        {\n          code: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorWorkshopExists',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorWorkshopExists\n      };\n  });\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorWorkshopUnique = function($scope, $element, $attrs, $q, Workshop)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Workshop = Workshop;\n    };\n\n  ValidatorWorkshopUnique.$inject = ['$scope', '$element', '$attrs', '$q', 'Workshop'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorWorkshopUnique` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorWorkshopUnique.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorWorkshopUnique = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the workshop exists.\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorWorkshopUnique.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var successCallback = function()\n      {\n        defer.reject();\n      };\n\n      var failureCallback = function()\n      {\n        defer.resolve();\n      };\n\n      this.Workshop.validateWorkshopBackend(\n        {\n          code: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorWorkshopUnique',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorWorkshopUnique\n      };\n  });\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorAdminUnique = function($scope, $element, $attrs, $q, Admin)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Admin = Admin;\n    };\n\n  ValidatorAdminUnique.$inject = ['$scope', '$element', '$attrs', '$q', 'Admin'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorAdminUnique` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorAdminUnique.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorAdminUnique = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the admin exists.\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorAdminUnique.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var successCallback = function()\n      {\n        defer.reject();\n      };\n\n      var failureCallback = function()\n      {\n        defer.resolve();\n      };\n\n      this.Admin.validateAdmin(\n        {\n          username: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorAdminUnique',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorAdminUnique\n      };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // InterestTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var InterestTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_INTEREST');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.domId = 'interest-task-' + $scope.$id;\n\n    this.user = this.$injector.get('user');\n    this.task = this.user.getTaskByType(type);\n    this.result = this.user.getPendingByType(type);\n  };\n\n  InterestTask.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} user Alias to user service. */\n  InterestTask.prototype.user = null;\n\n  /** @var {object} task Task's resource from server. */\n  InterestTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  InterestTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  InterestTask.prototype.resolved = false;\n\n  /** @var {number} currentExercise Count of correct answers. */\n  InterestTask.prototype.currentExercise = 1;\n\n  /** @var {number} correctAnswers Count of correct answers. */\n  InterestTask.prototype.correctAnswers = null;\n\n  /** @var {number} exercise1Answer Answer for first exercise. */\n  InterestTask.prototype.exercise1Answer = null;\n\n  /** @var {number} exercise2Answer Answer for second exercise. */\n  InterestTask.prototype.exercise2Answer = null;\n\n  /** @var {boolean} exercise1Correct Resolution state of first exercise. */\n  InterestTask.prototype.exercise1Correct = false;\n\n  /** @var {boolean} exercise2Correct Resolution state of second exercise. */\n  InterestTask.prototype.exercise2Correct = false;\n\n  /** @var {number} exercise1Result Correct result for first exercise. */\n  InterestTask.prototype.exercise1Result = null;\n\n  /** @var {number} exercise2Result Correct result for second exercise. */\n  InterestTask.prototype.exercise2Result = null;\n\n  // SETTINGS\n\n  /** @var {number} amount Amount of money. */\n  InterestTask.prototype.amount = 1000;\n\n  /** @var {number} rate Interest rate. */\n  InterestTask.prototype.rate = 0.01;\n\n  /** @var {number} years Number of years. */\n  InterestTask.prototype.years = 1;\n\n  // MISC\n\n  /** @var {string} domId Unique dom id for this task for scrolling purposes. */\n  InterestTask.prototype.domId = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  InterestTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  InterestTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        exercise1: {\n          currentResult: this.exercise1Result,\n          actualResult: this.exercise1Answer,\n          isValid: this.exercise1Correct\n        },\n        exercise2: {\n          currentResult: this.exercise2Result,\n          actualResult: this.exercise2Answer,\n          isValid: this.exercise2Correct\n        },\n        currentExercise: this.currentExercise+1\n      },\n      isPending: this._isPending()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  InterestTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return false;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  InterestTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.currentExercise === 1) {\n      if (!this.exercise1Answer) {\n        return false;\n      }\n    }\n\n    if (this.currentExercise === 2) {\n      if (!this.exercise2Answer) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  InterestTask.prototype.init = function() {\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // `exercise2Answer` cannot be desisted cause it's the\n      // condition in last step before setting `isPending`\n      this.exercise1Answer = json.exercise1.actualResult;\n      this.currentExercise = json.currentExercise;\n    }\n\n    this.resolved = false;\n    this.exercise1Result = this._calculateResult(1);\n    this.exercise2Result = this._calculateResult(1 + this.years);\n\n    this._setCorrectAnswers();\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  InterestTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Updates answers, state and counters\n   * for given exercise for evaluation.\n   *\n   * @public\n   * @method update\n   * @param {number} value\n   * @param {string} exercise\n   * @return {Void}\n   */\n  InterestTask.prototype.update = function(){\n    var me = this;\n    var successCallback = function(){\n      // updated after resolve cause\n      // we need current exercise in\n      // `canResolve()` for checking\n      me.currentExercise++;\n    };\n    var failureCallback = function(){};\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  InterestTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var payload = this.getPayload();\n    var result = callback({\n      payload: payload\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      if (result.isPending) {\n\n        me.result = result;\n        return;\n      }\n\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Updates answers for given exercise with sum.\n   *\n   * @public\n   * @method setResult\n   * @param {number} value\n   * @param {string} exercise\n   * @return {boolean}\n   */\n  InterestTask.prototype.setResult = function(value, exercise){\n    switch(exercise) {\n      case 'exercise1':\n        this.exercise1Answer = value || null;\n        break;\n      case 'exercise2':\n        this.exercise2Answer = value || null;\n        break;\n      default:\n    }\n\n    this._setCorrectAnswers();\n  };\n\n  /**\n   * Checks if `exercise2Answer` is already set.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  InterestTask.prototype._isPending = function(){\n    return this.exercise2Answer === null;\n  };\n\n  /**\n   * Updates the poroperty belonging to correctness.\n   *\n   * @private\n   * @method _setCorrectAnswers\n   * @return {void}\n   */\n  InterestTask.prototype._setCorrectAnswers = function() {\n    this.exercise1Correct = this.exercise1Answer === this.exercise1Result;\n    this.exercise2Correct = this.exercise2Answer === this.exercise2Result;\n\n    if (this.exercise1Correct && this.exercise2Correct) {\n      this.correctAnswers = 2;\n    } else if (this.exercise1Correct) {\n      this.correctAnswers = 1;\n    } else if (this.exercise2Correct) {\n      this.correctAnswers = 1;\n    } else {\n      this.correctAnswers = 0;\n    }\n  };\n\n  /**\n   * Calculates result for given years.\n   *\n   * @private\n   * @method _calculateResult\n   * @param {number} years\n   * @return {number}\n   */\n  InterestTask.prototype._calculateResult = function(years) {\n    return this.amount * Math.pow(1 + this.rate, years || 1);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('interestTask', function(){\n    return {\n      scope: {\n        rate: '=?interestTaskRate',\n        years: '=?interestTaskYears',\n        amount: '=?interestTaskAmount',\n        onUpdate: '&interestTaskOnUpdate',\n        onResolve: '&interestTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: InterestTask,\n      controllerAs: 'interestTaskController',\n      templateUrl: 'views/directives/tasks/interest-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // InterestTask Exercise\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var InterestTaskExercise = function($scope,$element,$attrs) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n\n    this.disabled = false;\n    this.stack = [];\n    this.sum = 0;\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.sum; },\n      function(sum) {\n        if (!sum) {\n          me.sum = 0;\n          me.stack = [];\n        }\n      }\n    );\n  };\n\n  InterestTaskExercise.$inject = ['$scope','$element','$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} disabled If exercise is currently disabled. */\n  InterestTaskExercise.prototype.disabled = false;\n\n  /** @var {array} stack Stack collection all notes and coins. */\n  InterestTaskExercise.prototype.stack = [];\n\n  /** @var {number} sum Total sum of all values from `stack`. */\n  InterestTaskExercise.prototype.sum = 0;\n\n  /** @var {array} notes All selectable notes for exercise. */\n  InterestTaskExercise.prototype.notes = [500,200,100,50,20,10,5];\n\n  /** @var {array} notes All selectable coins for exercise. */\n  InterestTaskExercise.prototype.coins = [2,1,0.5,0.2,0.1,0.05,0.02,0.01];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  InterestTaskExercise.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  /**\n   * Adds value to `stack`, increases `sum`\n   * and invokes the `onUpdate` callback.\n   *\n   * @public\n   * @method onDrop\n   * @return {Void}\n   */\n  InterestTaskExercise.prototype.onDrop = function(value){\n    this.stack.push(value);\n    this.sum += value;\n\n    this.onUpdate({\n      sum: this.sum\n    });\n  };\n\n  /**\n   * Removes last item from `stack`, decreases\n   * `sum` and invokes the `onUpdate` callback.\n   *\n   * @public\n   * @method revert\n   * @return {Void}\n   */\n  InterestTaskExercise.prototype.revert = function() {\n    this.sum -= this.stack.pop();\n\n    this.onUpdate({\n      sum: this.sum\n    });\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('interestTaskExercise', function(){\n    return {\n      scope: {\n        sum: '=?interestTaskExerciseSum',\n        onUpdate: '&interestTaskExerciseOnUpdate',\n        disabled: '=?interestTaskExerciseDisabled'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: InterestTaskExercise,\n      controllerAs: 'interestTaskExerciseController',\n      templateUrl: 'views/directives/tasks/interest-task-exercise.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // DiversificationTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var DiversificationTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_DIVERSIFICATION');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  DiversificationTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  DiversificationTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  DiversificationTask.prototype.resolved = false;\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTask.prototype.heads = 'K';\n\n  /** @var {string} tails Current class of tails side. */\n  DiversificationTask.prototype.tails = 'Z';\n\n  /** @var {array} companies Data for companies. */\n  DiversificationTask.prototype.companies = {};\n\n  /** @var {array} tickets Data for tickets. */\n  DiversificationTask.prototype.tickets = {};\n\n  /** @var {array} sides Two values for coin. */\n  DiversificationTask.prototype.sides = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  DiversificationTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  DiversificationTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        tickets: {\n          one: this.tickets.one.company,\n          two: this.tickets.two.company\n        },\n        throws: {\n          one: this.throws.one.toss,\n          two: this.throws.two.toss\n        }\n      },\n      ticketCount: this.getTicketCount()\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  DiversificationTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return false;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  DiversificationTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.tickets.one.company) {\n      return false;\n    }\n\n    if (!this.tickets.two.company) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  DiversificationTask.prototype.init = function() {\n    var random = this.$injector.get('random');\n\n    this.sides = [\n      this.heads,\n      this.tails\n    ];\n\n    this.throws = {\n      one: {\n        id: 1,\n        toss: random.pick(this.sides)\n      },\n      two: {\n        id: 2,\n        toss: random.pick(this.sides)\n      }\n    };\n\n    this.tickets = {\n      one: {\n        id: 1,\n        company: null\n      },\n      two: {\n        id: 2,\n        company: null\n      }\n    };\n\n    this.companies = {\n      one: {\n        id: 1,\n        count: 0,\n        tickets: {},\n        name: 'Smart',\n        image: 'company-a.svg'\n      },\n      two: {\n        id: 2,\n        count: 0,\n        tickets: {},\n        name: 'Phone',\n        image: 'company-b.svg'\n      }\n    };\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  DiversificationTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Adds or removes a ticket from given company.\n   *\n   * @public\n   * @method update\n   * @param ticket\n   * @param company\n   * @param action\n   * @return {void}\n   */\n  DiversificationTask.prototype.update = function(ticket, company, action){\n    switch (action) {\n      case 'add':\n        if (!company.tickets[ticket.id]) {\n          company.tickets[ticket.id] = ticket;\n          ticket.company = company.name;\n          company.count++;\n        }\n        break;\n      case 'remove':\n        if (company.tickets[ticket.id]) {\n          delete company.tickets[ticket.id];\n          ticket.company = null;\n          company.count--;\n        }\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  DiversificationTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates total ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTotalTickets\n   * @return {number}\n   */\n  DiversificationTask.prototype.getTicketCount = function(){\n    var factorA = this.throws.one.toss === this.heads ? 2 : 1;\n    var factorB = this.throws.two.toss === this.heads ? 2 : 1;\n\n    var ticketsA = this.companies.one.count * factorA;\n    var ticketsB = this.companies.two.count * factorB;\n\n    return ticketsA + ticketsB;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('diversificationTask', function(){\n    return {\n      scope: {\n        onResolve: '&diversificationTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: DiversificationTask,\n      controllerAs: 'diversificationTaskController',\n      templateUrl: 'views/directives/tasks/diversification-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // DiversificationTask Coin\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var DiversificationTaskCoin = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._element = this.$element.find('.coin');\n  };\n\n  DiversificationTaskCoin.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} toss One of `heads` or `tails`. */\n  DiversificationTaskCoin.prototype.toss = null;\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTaskCoin.prototype.sides = [];\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTaskCoin.prototype.heads = 'K';\n\n  /** @var {string} tails Current class of tails side. */\n  DiversificationTaskCoin.prototype.tails = 'Z';\n\n  /** @var {boolean} flip Flag to invoke a new toss. */\n  DiversificationTaskCoin.prototype.flip = false;\n\n  /** @var {boolean} flip Flag to apply CSS classes. */\n  DiversificationTaskCoin.prototype.animate = false;\n\n  /** @var {string} backClass CSS class for back side. */\n  DiversificationTaskCoin.prototype.back = 'back';\n\n  /** @var {string} frontClass CSS class for front side. */\n  DiversificationTaskCoin.prototype.front = 'front';\n\n  /** @var {string} startSide Initially displayed side of coin. */\n  DiversificationTaskCoin.prototype.startSide = 'K';\n\n  /** @var {string} startValue Initially displayed side of coin. */\n  DiversificationTaskCoin.prototype.startValue = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype.$onInit = function() {\n    var animation = this.$injector.get('animation');\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n\n    this.sides = [\n      {\n        value: this.heads,\n        class: this.front,\n        text: this.heads,\n      },\n      {\n        value: this.tails,\n        class: this.back,\n        text: this.tails\n      }\n    ];\n\n    if (this.startSide !== this.heads) {\n      this.sides[0].class = this.back;\n      this.sides[1].class = this.front;\n    }\n\n    if (this.startValue !== null) {\n      this.sides[0].text = this.startValue;\n      this.sides[1].text = this.startValue;\n    }\n\n    me._toss = me._getToss();\n\n    var _timeoutCallback = function() {\n      var _iterateSides = function(side) {\n        if (side.value === me._toss.value) {\n          side.class = me.front;\n          return;\n        }\n\n        side.class = me.back;\n      };\n\n      angular.forEach(me.sides, _iterateSides);\n    };\n\n    var _watchFlipCallback = function(newFlip/*,oldFlip*/) {\n      if (newFlip) {\n        me.onStart({toss: me._toss.value});\n        $timeout(_timeoutCallback, 100);\n        me.sides[0].text = me.heads;\n        me.sides[1].text = me.tails;\n        me.animate = true;\n      }\n    };\n\n    var _watchFlipExpression = function() {\n      return me.flip;\n    };\n\n    var _watchTossCallback = function(newToss, oldToss) {\n      if (newToss !== oldToss) {\n        me._toss = me._getToss();\n      }\n    };\n\n    var _watchTossExpression = function() {\n      return me.toss;\n    };\n\n    var _evalAsyncCallback = function() {\n      me.onFinish({toss: me._toss.value});\n      me.animate = false;\n    };\n\n    var _animationEndCallback = function() {\n      me.$scope.$evalAsync(_evalAsyncCallback);\n    };\n\n    this.onInit({toss: me._toss.value});\n\n    if (animation.animationEndEvent) {\n      this._element.on(\n        animation.animationEndEvent,\n        _animationEndCallback\n      );\n    }\n\n    this._unwatchFlip = this.$scope.$watch(_watchFlipExpression, _watchFlipCallback);\n    this._unwatchToss = this.$scope.$watch(_watchTossExpression, _watchTossCallback);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype.$onDestroy = function() {\n    var animation = this.$injector.get('animation');\n\n    this._element.off(animation.animationEndEvent);\n    this._unwatchToss();\n    this._unwatchFlip();\n  };\n\n  /**\n   * Transforms `toss` to one side either\n   * by random or by given consumer input.\n   *\n   * @private\n   * @method _getToss\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype._getToss = function() {\n    var $filter = this.$injector.get('$filter');\n    var random = this.$injector.get('random');\n    var picked = random.pick(this.sides);\n\n    if (this.toss === null) {\n      return picked;\n    }\n\n    var filtered = $filter('filter')(\n      this.sides,\n      {\n        value: this.toss\n      }\n    );\n\n    if (filtered.length === 0) {\n      console.warn('Invalid value for `toss` - using random value!');\n      return picked;\n    }\n\n    return filtered[0];\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('diversificationTaskCoin', function(){\n    return {\n      scope: {\n        toss: '=?diversificationTaskCoinToss',\n        flip: '=?diversificationTaskCoinFlip',\n        onInit: '&diversificationTaskCoinOnInit',\n        onStart: '&diversificationTaskCoinOnStart',\n        onFinish: '&diversificationTaskCoinOnFinish',\n        startSide: '=?diversificationTaskCoinStartSide',\n        startValue: '=?diversificationTaskCoinStartValue'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: DiversificationTaskCoin,\n      controllerAs: 'diversificationTaskCoinController',\n      templateUrl: 'views/directives/tasks/diversification-task-coin.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // BombTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var BombTask = function($scope, $attrs, $element, $injector) {\n    var type = $injector.get('TYPE_RISK');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n  };\n\n  BombTask.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  BombTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} started If the task has started. */\n  BombTask.prototype.started = false;\n\n  /** @var {boolean} stopped If the task has stopped. */\n  BombTask.prototype.stopped = false;\n\n  /** @var {boolean} hasBomb If bomb is in current collection. */\n  BombTask.prototype.hasBomb = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  BombTask.prototype.resolved = false;\n\n  /** @var {number} totalBoxes Total boxes of current game. */\n  BombTask.prototype.totalBoxes = 0;\n\n  /** @var {number} remainingBoxes Remaining boxes of current game. */\n  BombTask.prototype.remainingBoxes = 0;\n\n  /** @var {number} collectedBoxes Collected boxes of current game. */\n  BombTask.prototype.collectedBoxes = 0;\n\n  // SETTINGS\n\n  /** @var {number} avg Average of collected boxes from statistics. */\n  BombTask.prototype.avg = 12;\n\n  /** @var {number} rows Amount of rows for bomb task. */\n  BombTask.prototype.rows = 5;\n\n  /** @var {number} cols Amount of cols for bomb task. */\n  BombTask.prototype.cols = 5;\n\n  /** @var {number} interval Timeout for interval in seconds. */\n  BombTask.prototype.interval = 1;\n\n  /** @var {boolean} random\n   * - If `random` = false, boxes are collected row-wise one-by-one, starting in the top-left corner\n   * - If `random` = true, boxes are collected randomly (Fisher-Yates Algorithm)\n   * Note that this affects game play independently of `dynamic` property\n   */\n  BombTask.prototype.random = false;\n\n  /** @var {boolean} dynamic\n   * - If `dynamic` = true, one box per time interval is collected automatically\n   * - In case of `dynamic` = true, game play is affected by the variables `interval` and `random`\n   * - If `dynamic` = false, subjects collect as many boxes as they want by clicking or entering the respective number\n   * - In case of `dynamic` = false, game play is affected by the variables `random`\n   */\n  BombTask.prototype.dynamic = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  BombTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  BombTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        hasBomb: this.hasBomb,\n        collectedBoxes: this.collectedBoxes\n      },\n      ticketCount: this.getTicketCount()\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  BombTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return false;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  BombTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.dynamic) {\n      return this.stopped;\n    }\n\n    if (!this.collectedBoxes) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  BombTask.prototype.init = function() {\n    this._initMembers();\n    this._initMatrix();\n    this._initBomb();\n\n    if (!this.dynamic) {\n      this.start();\n    }\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  BombTask.prototype.reset = function() {\n    this.init();\n  };\n\n  /**\n   * Sets `started` flag. If `dynamic` is true,\n   * the interval will start to reveal cards.\n   *\n   * @public\n   * @method start\n   * @return {Void}\n   */\n  BombTask.prototype.start = function(index) {\n    if (this.dynamic) {\n      var $interval = this.$injector.get('$interval');\n\n      this._intIndex = index || 0;\n\n      var me = this;\n      var max = this.iterator.length;\n      this._intervalId = $interval(\n        function(){\n\n          var item = me.iterator[me._intIndex];\n          me.update(item,true);\n\n          me._intIndex++;\n          if (me._intIndex===max) {\n            me.stop();\n          }\n\n        },\n        this.interval*1000, // = from seconds\n        max - this._intIndex // = max iterations\n      );\n    }\n\n    this.started = true;\n  };\n\n  /**\n   * Sets `stopped` flag. If `dynamic` is true,\n   * the interval will be stopped in addition.\n   *\n   * @public\n   * @method start\n   * @return {Void}\n   */\n  BombTask.prototype.stop = function() {\n    if (this.dynamic && this._intervalId) {\n      var $interval = this.$injector.get('$interval');\n      $interval.cancel(this._intervalId);\n    }\n\n    this.stopped = true;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  BombTask.prototype.resolve = function() {\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var resolveCard = function(card) {\n      card.$$resolved = true;\n    };\n\n    var me = this;\n    var successCallback = function() {\n      angular.forEach(me.collection, resolveCard);\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  BombTask.prototype.getTicketCount = function(){\n    if (this.hasBomb) {\n      return 1;\n    }\n\n    return this.collectedBoxes;\n  };\n\n  /**\n   * Callback for card click. Updates all\n   * related properties for final result.\n   *\n   * @public\n   * @method toggle\n   * @param {object} column\n   * @param {boolean} active\n   * @return {Void}\n   */\n  BombTask.prototype.toggle = function(column, active) {\n    var index = this.collection.indexOf(column);\n\n    if (active) {\n      if (index<0) {\n        this.collection.push(column);\n        this.collectedBoxes++;\n      }\n\n      column.$$active = true;\n    } else {\n      if (index>=0) {\n        this.collection.splice(index,1);\n        column.$$active = false;\n        this.collectedBoxes--;\n      }\n    }\n\n    if (this.isBomb(column)) {\n      this.hasBomb = true;\n    }\n\n    var total = this.totalBoxes;\n    var collected = this.collectedBoxes;\n    this.remainingBoxes = total - collected;\n  };\n\n  /**\n   * Provides indiviual tracking id for column.\n   *\n   * @public\n   * @method trackId\n   * @param {object} column\n   * @return {Void}\n   */\n  BombTask.prototype.trackId = function(column) {\n    return column.row + '_' + column.col;\n  };\n\n  /**\n   * Determines if column is actual bomb.\n   *\n   * @public\n   * @method isBomb\n   * @param {object} column\n   * @return {Void}\n   */\n  BombTask.prototype.isBomb = function(column) {\n    return angular.equals(this.bomb,column);\n  };\n\n  /**\n   * Initialzes internal properties.\n   *\n   * @private\n   * @method _initMembers\n   * @return {Void}\n   */\n  BombTask.prototype._initMembers = function() {\n    this.collection = [];\n\n    this.hasBomb = false;\n    this.started = false;\n    this.stopped = false;\n    this.resolved = false;\n\n    this.collectedBoxes = 0;\n    this.remainingBoxes = 0;\n    this.totalBoxes = this.rows * this.cols;\n  };\n\n  /**\n   * Calculates the actual matrix.\n   *\n   * @private\n   * @method _initMatrix\n   * @return {Void}\n   */\n  BombTask.prototype._initMatrix = function() {\n    this.matrix = [];\n    this.iterator = [];\n\n    for (var i=0; i<this.rows; i++) {\n\n      var columns = [];\n      for( var j=0; j<this.cols; j++ ) {\n        var data = {\n          row: i+1,\n          col: j+1\n        };\n\n        columns.push(data);\n\n        if (this.dynamic) {\n          if (!this.random) {\n            this.iterator.push(data);\n          } else {\n            var random = this.$injector.get('random');\n            random.push(this.iterator,data);\n          }\n        }\n      }\n\n      this.matrix.push(columns);\n    }\n  };\n\n  /**\n   * Initializes bomb's actual location.\n   *\n   * @private\n   * @method _initBomb\n   * @return {Void}\n   */\n  BombTask.prototype._initBomb = function() {\n    var random = this.$injector.get('random');\n\n    var row = random.between(0,this.rows-1);\n    var col = random.between(0,this.cols-1);\n\n    this.bomb = this.matrix[row][col];\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('bombTask',function(){\n    return {\n      scope: {\n        avg: '=?bombTaskAvg',\n        rows: '=?bombTaskRows',\n        cols: '=?bombTaskCols',\n        random: '=?bombTaskRandom',\n        dynamic: '=?bombTaskDynamic',\n        interval: '=?bombTaskInterval',\n        onResolve: '&bombTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: BombTask,\n      bindToController: true,\n      controllerAs: 'bombTaskController',\n      templateUrl: 'views/directives/tasks/bomb-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // BombTask Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var BombTaskCard = function(){\n  };\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Card's accociated model. */\n  BombTaskCard.prototype.model = null;\n\n  /** @var {string} isActive If card is active. */\n  BombTaskCard.prototype.isActive = false;\n\n  /** @var {string} isDisabled If card is disabled. */\n  BombTaskCard.prototype.isDisabled = false;\n\n  /** @var {string} isClickable If card is clickable. */\n  BombTaskCard.prototype.isClickable = true;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Toggles `isActive` if `isDisabled` and\n   * `isClickable` allow the action. Invokes\n   * `onToggle` callback for consumer.\n   *\n   * @public\n   * @method toggle\n   * @return {Void}\n   */\n  BombTaskCard.prototype.toggle = function() {\n    if (this.isDisabled || !this.isClickable) {\n      return;\n    }\n\n    this.isActive = !this.isActive;\n\n    this.onToggle({\n      model:this.model,\n      state:this.isActive\n    });\n  };\n\n  // registry\n  angular.module(module).directive('bombTaskCard', function(){\n    return {\n      scope: {\n        model:'=bombTaskCard',\n        onToggle:'&bombTaskCardOnToggle',\n        isActive:'=?bombTaskCardIsActive',\n        isDisabled:'=?bombTaskCardIsDisabled',\n        isClickable:'=?bombTaskCardIsClickable'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: BombTaskCard,\n      bindToController: true,\n      controllerAs: 'bombTaskCardController',\n      templateUrl: 'views/directives/tasks/bomb-task-card.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // AnchoringTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var AnchoringTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_ANCHORING');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n    this.group = user.getGroupAsString();\n  };\n\n  AnchoringTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  AnchoringTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  AnchoringTask.prototype.choice = null;\n\n  /** @var {string} group Current user's group assignment. */\n  AnchoringTask.prototype.group = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  AnchoringTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   * Sets up event source for listening to\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  AnchoringTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {object}\n   */\n  AnchoringTask.prototype.getPayload = function() {\n    var user = this.$injector.get('user');\n\n    return {\n      task: this.task,\n      json: {\n        group: user.group,\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  AnchoringTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return false;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  AnchoringTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  AnchoringTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  AnchoringTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Sets current selection on `choice`.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  AnchoringTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  AnchoringTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('anchoringTask', function(){\n    return {\n      scope: {\n        onResolve: '&anchoringTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: AnchoringTask,\n      controllerAs: 'anchoringTaskController',\n      templateUrl: 'views/directives/tasks/anchoring-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // MentalBookkeepingTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var MentalBookkeepingTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_MENTAL_BOOKKEEPING');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n    this.group = user.getGroupAsString();\n  };\n\n  MentalBookkeepingTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  MentalBookkeepingTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  MentalBookkeepingTask.prototype.choice = null;\n\n  /** @var {string} group Current user's group assignment. */\n  MentalBookkeepingTask.prototype.group = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  MentalBookkeepingTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   * Sets up event source for listening to\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {object}\n   */\n  MentalBookkeepingTask.prototype.getPayload = function() {\n    var user = this.$injector.get('user');\n\n    return {\n      task: this.task,\n      json: {\n        group: user.group,\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  MentalBookkeepingTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return false;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  MentalBookkeepingTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('mentalBookkeepingTask', function(){\n    return {\n      scope: {\n        onResolve: '&mentalBookkeepingTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: MentalBookkeepingTask,\n      controllerAs: 'mentalBookkeepingTaskController',\n      templateUrl: 'views/directives/tasks/mental-bookkeeping-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // FramingTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var FramingTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_FRAMING');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  FramingTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  FramingTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  FramingTask.prototype.resolved = false;\n\n  /** @var {boolean} lotteryA If player opts in for lottery A. */\n  FramingTask.prototype.lotteryA = null;\n\n  /** @var {boolean} lotteryB If player opts in for lottery A. */\n  FramingTask.prototype.lotteryB = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  FramingTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  FramingTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        lotteryA: this.lotteryA,\n        lotteryB: this.lotteryB\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  FramingTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return false;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  FramingTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.lotteryA === null) {\n      return false;\n    }\n\n    if (this.lotteryB === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  FramingTask.prototype.init = function() {\n    this.lotteryA = null;\n    this.lotteryB = null;\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  FramingTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Updates provided lottery with given state.\n   *\n   * @public\n   * @method update\n   * @param {string} lottery\n   * @param {boolean} state\n   * @return {void}\n   */\n  FramingTask.prototype.update = function(lottery, state){\n    this[lottery] = state;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  FramingTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('framingTask', function(){\n    return {\n      scope: {\n        onResolve: '&framingTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: FramingTask,\n      controllerAs: 'framingTaskController',\n      templateUrl: 'views/directives/tasks/framing-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SavingsTargetTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SavingsTargetTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_SAVINGS_TARGET');\n\n    this.$attrs = $attrs;\n    this.$scope = $scope;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.user = this.$injector.get('user');\n    this.task = this.user.getTaskByType(type);\n    this.result = this.user.getPendingByType(type);\n\n    this._isLocked = null;\n  };\n\n  SavingsTargetTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} user Alias to user service. */\n  SavingsTargetTask.prototype.user = null;\n\n  /** @var {object} task Task's resource from server. */\n  SavingsTargetTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  SavingsTargetTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {number} step Current step . */\n  SavingsTargetTask.prototype.step = 1;\n\n  /** @var {number} total Players wish for saving target. */\n  SavingsTargetTask.prototype.total = 3;\n\n  /** @var {string} wish Players wish for saving target. */\n  SavingsTargetTask.prototype.wish = null;\n\n  /** @var {number} amount Players first amount for saving target. */\n  SavingsTargetTask.prototype.amount = null;\n\n  /** @var {number} amountRepeated Players second amount for saving target. */\n  SavingsTargetTask.prototype.amountRepeated = null;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SavingsTargetTask.prototype.resolved = false;\n\n  // MISC\n\n  /** @var {object} form Form collecting user input. */\n  SavingsTargetTask.prototype.form = null;\n\n  /** @var {number} minAmount Minimum amount for `amount` input. */\n  SavingsTargetTask.prototype.minAmount = 1;\n\n  /** @var {number} maxAmount Maximum amount for `amount` input. */\n  SavingsTargetTask.prototype.maxAmount = 999;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        step: this.step,\n        wish: this.wish,\n        total: this.total,\n        amount: this.amount,\n        amountRepeated: this.amountRepeated\n      },\n      isPending: this._isPending()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return false;\n    }\n\n    // if result was created and\n    // we are waiting for paused\n    // state, we skip unlocking\n    // with internal `_isLocked`\n    if (this.task.isActive) {\n      return this._isLocked;\n    }\n\n    // reset `_isLocked` flag if\n    // `isActive` changed again\n    this._isLocked = null;\n\n    // inactive\n    return true;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.form.$invalid) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.init = function() {\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // `amountRepeated` cannot be desisted cause it's the\n      // condition in last step before setting `isPending`\n      this.amount = json.amount;\n      this.total = json.total;\n      this.wish = json.wish;\n      this.step = json.step;\n\n      // set `_isLocked` only until last step cause the step\n      // before last one gets manually updated AFTER unlock!\n      var timestampTask = this.task.updatedAt;\n      var timestampResult = this.result.updatedAt;\n      this._isLocked = timestampResult > timestampTask;\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Increases `step` and invokes `resolve()`.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.update = function(){\n    if (this.step < this.total) {\n      this.step++;\n    }\n\n    var me = this;\n    var successCallback = function(){};\n    var failureCallback = function(){\n      me.step--;\n    };\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.resolve = function(){\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var payload = this.getPayload();\n    var result = callback({\n      payload: payload\n    });\n\n    // switch UI immediately\n    if (payload.isPending) {\n      this._isLocked = true;\n    }\n\n    var me = this;\n    var successCallback = function(result) {\n      if (result.isPending) {\n        if (me.step < me.total) {\n          var message = i18n.get('Thank you for your input!');\n          notification.success(message);\n        }\n\n        me.result = result;\n        return;\n      }\n\n      me.resolved = true;\n    };\n\n    var failureCallback = function() {\n      me._isLocked = null;\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates difference between `amount` and `amountRepeated`.\n   *\n   * @public\n   * @method getDifference\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.getDifference = function(){\n    return this.amountRepeated - this.amount;\n  };\n\n  /**\n   * Checks if `amountRepeated` is already set.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype._isPending = function(){\n    return this.amountRepeated === null;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('savingsTargetTask', function(){\n    return {\n      scope: {\n        onUpdate: '&savingsTargetTaskOnUpdate',\n        onResolve: '&savingsTargetTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: SavingsTargetTask,\n      controllerAs: 'savingsTargetTaskController',\n      templateUrl: 'views/directives/tasks/savings-target-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SavingsSupportedTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SavingsSupportedTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_SAVINGS_SUPPORTED');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n  };\n\n  SavingsSupportedTask.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  SavingsSupportedTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  SavingsSupportedTask.prototype.choice = null;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SavingsSupportedTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  SavingsSupportedTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  SavingsSupportedTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SavingsSupportedTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return false;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SavingsSupportedTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  SavingsSupportedTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  SavingsSupportedTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Sets current selection on `choice`.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  SavingsSupportedTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  SavingsSupportedTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('savingsSupportedTask', function(){\n    return {\n      scope: {\n        onResolve: '&savingsSupportedTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: SavingsSupportedTask,\n      controllerAs: 'savingsSupportedTaskController',\n      templateUrl: 'views/directives/tasks/savings-supported-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SelfCommitmentTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SelfCommitmentTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_SELF_COMMITMENT');\n\n    this.$injector = $injector;\n\n    this.user = this.$injector.get('user');\n    this.task = this.user.getTaskByType(type);\n    this.result = this.user.getPendingByType(type);\n  };\n\n  SelfCommitmentTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} user Alias to user service. */\n  SelfCommitmentTask.prototype.user = null;\n\n  /** @var {object} task Task's resource from server. */\n  SelfCommitmentTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  SelfCommitmentTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {object} watched Hash storing watched video ids. */\n  SelfCommitmentTask.prototype.videos = {\n    //'ImPxD_FDpKM': false,\n    //'gUYjYEGbxEY': false\n  };\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SelfCommitmentTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        videos: this.videos\n      },\n      isPending: this._isPending()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.isLocked = function() {\n    // admins always can watch\n    // videos for explanation!\n    if (!this.user.isUser()) {\n      return false;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.init = function() {\n    if (this.result !== null) {\n      var json = this.result.json;\n      this.videos = json.videos;\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.update = function(id){\n    if (this.videos[id]) {\n      return;\n    }\n\n    this.videos[id] = true;\n\n    var me = this;\n    var successCallback = function(){};\n    var failureCallback = function(){\n      me.videos[id] = false;\n    };\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var payload = this.getPayload();\n    var result = callback({\n      payload: payload\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      if (result.isPending) {\n        me.result = result;\n        return;\n      }\n\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Checks if user is allowed to watch videos:\n   * - (Super-)Admins are always allowed\n   * - Users only if not in workshop\n   *\n   * @public\n   * @method canWatch\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.canWatch = function(){\n    if (!this.user.isUser()) {\n      return true;\n    }\n\n    return !this.user.isInWorkshop();\n  };\n\n  /**\n   * Checks if all videos has been watched.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype._isPending = function(){\n    for (var id in this.videos) {\n      if (!this.videos[id]) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('selfCommitmentTask', function(){\n    return {\n      scope: {\n        onUpdate: '&selfCommitmentTaskOnUpdate',\n        onResolve: '&selfCommitmentTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: SelfCommitmentTask,\n      controllerAs: 'selfCommitmentTaskController',\n      templateUrl: 'views/directives/tasks/self-commitment-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, moment */\n/* jshint bitwise: false */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // ProcrastinationTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_PROCRASTINATION');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n    this.result = user.getPendingByType(type);\n\n    this.domId = 'procrastination-task-' + $scope.$id;\n\n    this._intervalId = null;\n    this._onInterval = this._onInterval.bind(this);\n  };\n\n  ProcrastinationTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {string} type Task's `type` property from server. */\n  ProcrastinationTask.prototype.type = null;\n\n  /** @var {object} task Task's resource from server. */\n  ProcrastinationTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  ProcrastinationTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {string} mode One of `ALL` or `SPLIT`. */\n  ProcrastinationTask.prototype.mode = null;\n\n  /** @var {number} rounds Current game round count. */\n  ProcrastinationTask.prototype.count = 0;\n\n  /** @var {number} total Total rounds depends on `mode`. */\n  ProcrastinationTask.prototype.total = 1;\n\n  /** @var {array} rounds Results of single game rounds. */\n  ProcrastinationTask.prototype.rounds = [];\n\n  /** @var {number} openRounds Number of left rounds to play. */\n  ProcrastinationTask.prototype.openRounds = null;\n\n  /** @var {number} minCatched Minimum catched bubbles depends on `mode`. */\n  ProcrastinationTask.prototype.minCatched = null;\n\n  /** @var {number} maxEscaped Maximum escaped bubbles depends on `mode`. */\n  ProcrastinationTask.prototype.maxEscaped = null;\n\n  /** @var {number} updatedAt When last result was written. */\n  ProcrastinationTask.prototype.updatedAt = null;\n\n  /** @var {number} invalidAt When task will be unresolvable. */\n  ProcrastinationTask.prototype.invalidAt = null;\n\n  /** @var {string} state One of `IDLE`, `DECISION`, `PLAYING`. */\n  ProcrastinationTask.prototype.state = 'IDLE';\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  ProcrastinationTask.prototype.resolved = false;\n\n  // MISC\n\n  /** @var {string} domId Unique dom id for this task for scrolling purposes. */\n  ProcrastinationTask.prototype.domId = null;\n\n  /** @var {boolean} warmup If dry-run has been finished. */\n  ProcrastinationTask.prototype.hasWarmup = false;\n\n  /** @var {number} warmupMaxEscaped Maximum escaped bubbles for demo mode. */\n  ProcrastinationTask.prototype.warmupMaxEscaped = 2;\n\n  /** @var {number} warmupMinCatched Minimum catched bubbles for demo mode. */\n  ProcrastinationTask.prototype.warmupMinCatched = 20;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.$onDestroy = function() {\n    var $interval = this.$injector.get('$interval');\n\n    if (this._intervalId !== null) {\n      $interval.cancel(this._intervalId);\n    }\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        mode: this.mode,\n        state: this.state,\n        rounds: this.rounds,\n        success: this.hasSuccess()\n      },\n      isPending: this._isPending(),\n      ticketCount: this.getTicketCount()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return false;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (!this.hasWarmup) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.init = function() {\n    // check for pending result\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // 1) apply round / count\n      this.rounds = json.rounds;\n      this.count = json.rounds.length;\n\n      // 2) call setters only now\n      this.setWarmup(true);\n      this.setMode(json.mode);\n      this.setState(json.state);\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.update = function(result){\n    var state = this.state;\n    var count = this.count;\n\n    switch (this.state) {\n      case 'IDLE':\n        this.setState('DECISION');\n        break;\n\n      case 'DECISION':\n        this.setState('PLAYING');\n        break;\n\n      case 'PLAYING':\n        this.count = this.rounds.push(result);\n        break;\n      default:\n    }\n\n    var me = this;\n    var successCallback = function(){};\n    var failureCallback = function(){\n      me.setState(state);\n      me.count = count;\n    };\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.resolve = function(){\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n    var $q = this.$injector.get('$q');\n\n    console.log('>>>RESOLVE!');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var result = callback({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      var message;\n\n      if (result.isPending) {\n        me.result = result;\n\n        switch (me.state) {\n          case 'IDLE': break;\n          case 'DECISION': break;\n          case 'PLAYING':\n            switch (me.mode) {\n              case 'ALL': break;\n              case 'SPLIT':\n                if (me.count > 0) {\n                  message = i18n.get(\n                    'Super, you have succeeded exercise %s of %s!',\n                    me.count,\n                    me.total\n                  );\n                  notification.success(message);\n                }\n                break;\n              default:\n                break;\n            }\n            break;\n          default:\n        }\n\n        return;\n      }\n\n      if (!me.hasSuccess()) {\n        message = i18n.get('Sorry, but the time has expired for this exercise and you retrieve only 1 ticket!');\n        notification.error(message);\n      } else {\n        message = i18n.get('Super, you have successfully done this exercise and retrieve 5 tickets!');\n        notification.success(message);\n      }\n\n      me.resolved = true;\n    };\n\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Sets game mode to `ALL` or `SPLIT`.\n   *\n   * @public\n   * @method setMode\n   * @param {string} mode\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setMode = function(mode){\n    switch (mode) {\n      case 'ALL':\n        this.total = 1;\n        this.maxEscaped = 15;\n        this.minCatched = 150;\n        break;\n      case 'SPLIT':\n        this.total = 3;\n        this.maxEscaped = 5;\n        this.minCatched = 50;\n        break;\n      default:\n        return;\n    }\n\n    this.mode = mode;\n    this.openRounds = this.total - this.count;\n  };\n\n  /**\n   * Sets game state to `IDLE`, `DECISION` or `PLAYING`.\n   *\n   * @public\n   * @method setState\n   * @param {string} state\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setState = function(state){\n    var $interval = this.$injector.get('$interval');\n\n    switch (state) {\n      case 'IDLE':\n        break;\n      case 'DECISION':\n        break;\n      case 'PLAYING':\n        var updatedAt = this.result.updatedAt;\n        this.updatedAt = moment.unix(updatedAt);\n        this.invalidAt = this.updatedAt.clone();\n\n        switch (this.mode) {\n          case 'ALL':\n            this.invalidAt.add(6, 'weeks');\n            break;\n          case 'SPLIT':\n            this.invalidAt.add(2, 'weeks');\n            break;\n          default:\n        }\n\n        this._intervalId = $interval(this._onInterval, 1000);\n\n        break;\n      default:\n        return;\n    }\n\n    this.state = state;\n  };\n\n  /**\n   * Sets `hasWarmup` flag after dry run.\n   *\n   * @public\n   * @method setWarmup\n   * @param {boolean} warmup\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setWarmup = function(warmup){\n    this.hasWarmup = warmup;\n  };\n\n  /**\n   * Whether or not task is actually invalid.\n   *\n   * @public\n   * @method isInvalid\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.isInvalid = function() {\n    if (this.invalidAt === null) {\n      return false;\n    }\n\n    return +this._now() > +this.invalidAt;\n  };\n\n  /**\n   * If amount of results corresponds to `total`.\n   *\n   * @public\n   * @method hasSuccess\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.hasSuccess = function() {\n    return this.rounds.length === this.total;\n  };\n\n  /**\n   * Retrieves the current played round.\n   *\n   * @public\n   * @method getCurrentRound\n   * @return {string}\n   */\n  ProcrastinationTask.prototype.getCurrentRound = function(){\n    return this.count + 1;\n  };\n\n  /**\n   * Calculates remaining time for finishing\n   * this task depending on chosen game mode.\n   *\n   * @public\n   * @method getRemainingTime\n   * @return {string}\n   */\n  ProcrastinationTask.prototype.getRemainingTime = function(){\n    var string = this.$injector.get('string');\n    var i18n = this.$injector.get('i18n');\n\n    if (this.invalidAt === null) {\n      return '';\n    }\n\n    var difference = this.invalidAt.diff(this._now());\n    var duration = moment.duration(difference);\n\n    var seconds = ~~duration.asSeconds();\n    var minutes = ~~duration.asMinutes();\n    var hours = ~~duration.asHours();\n    var days = ~~duration.asDays();\n    var value, keys;\n\n    if (days > 0) {\n      value = days;\n      keys = ['day', 'days'];\n    } else if (hours > 0) {\n      value = hours;\n      keys = ['hour', 'hours'];\n    } else if (minutes > 0) {\n      value = minutes;\n      keys = ['minute', 'minutes'];\n    } else {\n      value = seconds >= 0 ? seconds : 0;\n      keys = ['second', 'seconds'];\n    }\n\n    var key = value === 1 ?\n      keys[0] :\n      keys[1];\n\n    var unit = i18n.get(key);\n\n    return string.sprintf('%s %s', value, unit);\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  ProcrastinationTask.prototype.getTicketCount = function(){\n    if (this.hasSuccess()) {\n      return 5;\n    }\n\n    return 1;\n  };\n\n  /**\n   * Interval callback for checking invalidation.\n   *\n   * @private\n   * @method _onInterval\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype._onInterval = function() {\n    var $interval = this.$injector.get('$interval');\n    if (!this.isInvalid() || !this.canResolve()) {\n      return;\n    }\n\n    $interval.cancel(this._intervalId);\n    this.count = this.total;\n    this.resolve();\n  };\n\n  /**\n   * Whether or not task is currently pending.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype._isPending = function() {\n    return this.count < this.total;\n  };\n\n  /**\n   * Gets the current timestamp as moment.\n   *\n   * @private\n   * @method _now\n   * @return {object}\n   */\n  ProcrastinationTask.prototype._now = function() {\n    /*\n    if (!this._testInvalidation) {\n      this._testInvalidation = this.invalidAt.clone().subtract(3, 'seconds')\n    } else {\n      this._testInvalidation.add(1, 'second');\n    }\n    return this._testInvalidation;\n    */\n    return moment();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTask', function(){\n    return {\n      scope: {\n        onUpdate: '&procrastinationTaskOnUpdate',\n        onResolve: '&procrastinationTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: ProcrastinationTask,\n      controllerAs: 'procrastinationTaskController',\n      templateUrl: 'views/directives/tasks/procrastination-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // ProcrastinationTask Game\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTaskGame = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.bubbles = {};\n    this.viewport = {};\n    this.domId = 'viewport-' + $scope.$id;\n\n    this._nextId = 0;\n    this._tapped = 0;\n    this._rounds = 0;\n    this._retries = 0;\n    this._timeout = 100;\n    this._requestId = null;\n\n    this._loop = this._loop.bind(this);\n    this._update = this._update.bind(this);\n    this._resize = this._resize.bind(this);\n\n    this._window = angular.element(window);\n    this._viewport = this.$element.find('.viewport');\n  };\n\n  ProcrastinationTaskGame.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} catched Count of catched bubbles. */\n  ProcrastinationTaskGame.prototype.catched = 0;\n\n  /** @var {number} escaped Count of escaped bubbles. */\n  ProcrastinationTaskGame.prototype.escaped = 0;\n\n  /** @var {number} accuracy Players scoring accuracy. */\n  ProcrastinationTaskGame.prototype.accuracy = 0;\n\n  /** @var {object} bubbles Hash map keeping bubble objects. */\n  ProcrastinationTaskGame.prototype.bubbles = null;\n\n  /** @var {object} viewport Viewport holding dimensions and offsets. */\n  ProcrastinationTaskGame.prototype.viewport = null;\n\n  /** @var {boolean} state One of `IDLE`, `RUNNING`, `TIMEOUT`, `GAME_OVER` or `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.state = 'IDLE';\n\n  /** @var {boolean} expired Flag for expiring current game while its running. */\n  ProcrastinationTaskGame.prototype.expired = false;\n\n  /** @var {number} maxRounds Maximum number of rounds after `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.maxRounds = 1;\n\n  /** @var {number} maxRounds Maximum number of retries after `GAME_OVER`. */\n  ProcrastinationTaskGame.prototype.maxRetries = Number.POSITIVE_INFINITY;\n\n  /** @var {number} maxEscaped Maximum amount of escaped bubbles for `GAME_OVER`. */\n  ProcrastinationTaskGame.prototype.maxEscaped = 15;\n\n  /** @var {number} maxEscaped Maximum amount of escaped bubbles for `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.minCatched = 150;\n\n  /** @var {string} bubbleDelay Timeout until next bubble will appear on viewport. */\n  ProcrastinationTaskGame.prototype.bubbleDelay = 100;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up event listeners and animation frame.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.$onInit = function() {\n    this._window.on('resize', this._resize);\n\n    var me = this;\n    this._unwatch = this.$scope.$watch(\n      function() {\n        return me.expired;\n      },\n      function(isExpired) {\n        if (isExpired) {\n          me.expire();\n        }\n      }\n    );\n  };\n\n  /**\n   * Removes event listener and animation frame.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.$onDestroy = function() {\n    this._window.off('resize', this._resize);\n    this._unwatch();\n    this._unloop();\n  };\n\n  /**\n   * Invokes game loop and sets `RUNNING` state.\n   *\n   * @public\n   * @method start\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.start = function() {\n    // calculate viewport now that we can\n    // be sure that elements are rendered\n    this.viewport = this._getViewport();\n\n    this.state = 'RUNNING';\n    this._loop();\n  };\n\n  /**\n   * Stops and sets `GAME_OVER` state.\n   *\n   * @public\n   * @method gameOver\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.quit = function() {\n    this._unloop();\n\n    this._retries++;\n\n    this.bubbles = {};\n    this.state = 'GAME_OVER';\n\n    var result = this._getResult();\n    this.onGameOver({ result: result });\n  };\n\n  /**\n   * Stops and sets `FINISHED` state.\n   *\n   * @public\n   * @method done\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.done = function() {\n    this._unloop();\n\n    this._rounds++;\n\n    this.bubbles = {};\n    this.state = 'GAME_DONE';\n\n    var result = this._getResult();\n    this.onGameDone({ result: result });\n  };\n\n  /**\n   * Stops and sets `TIMEOUT` state.\n   *\n   * @public\n   * @method expire\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.expire = function() {\n    this._unloop();\n\n    this.bubbles = {};\n    this.state = 'TIMEOUT';\n  };\n\n  /**\n   * Resets game and sets `IDLE` state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.reset = function() {\n    this._unloop();\n\n    this._nextId = 0;\n    this._tapped = 0;\n    this._timeout = 100;\n    this._requestId = null;\n\n    this.catched = 0;\n    this.escaped = 0;\n    this.accuracy = 0;\n    this.state = 'IDLE';\n  };\n\n  /**\n   * Initializes\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.onClick = function($event) {\n    switch (this.state) {\n      case 'IDLE':\n        this.start();\n        break;\n      case 'RUNNING':\n        this._tapped++;\n\n        var target = $event.target;\n        var viewport = this._viewport.get(0);\n\n        // only update accuracy immediately if\n        // clicked on viewport, otherwise this\n        // will be done after bubble animation!\n        if (viewport.id === target.id) {\n          this._setAccuracy();\n        }\n\n        break;\n      case 'TIMEOUT':\n        // noop - disabled\n        break;\n      case 'GAME_OVER':\n        if (this.canRetry()) {\n          this.reset();\n          this.start();\n        }\n\n        break;\n      case 'GAME_DONE':\n        if (this.canRestart()) {\n          this.reset();\n          this.start();\n        }\n\n        break;\n      default:\n    }\n  };\n\n  /**\n   * True if player can retry game after `GAME_OVER`.\n   *\n   * @public\n   * @method canRetry\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.canRetry = function() {\n    return this._retries < this.maxRetries;\n  };\n\n  /**\n   * True if player can retry game after `GAME_OVER`.\n   *\n   * @public\n   * @method canRestart\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.canRestart = function() {\n    return this._rounds < this.maxRounds;\n  };\n\n  /**\n   * Adds bubble controller to internal hash.\n   *\n   * @public\n   * @method addBubble\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.addBubble = function(bubble) {\n    this.bubbles[bubble.id] = bubble;\n  };\n\n  /**\n   * Removes bubble, update counters and checks game state.\n   *\n   * @public\n   * @method removeBubble\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.removeBubble = function(bubble) {\n    // don't remove twice ($onDestroy)\n    if (!this.bubbles[bubble.id]) {\n      return;\n    }\n\n    // catched - check min count\n    if (bubble.catched) {\n      this.catched++;\n\n      // update accuracy\n      this._setAccuracy();\n\n      var min = this.minCatched;\n      if (this.catched >= min) {\n        this.done();\n      }\n    }\n\n    // escaped - check max count\n    if (bubble.escaped) {\n      this.escaped++;\n\n      var max = this.maxEscaped;\n      if (this.escaped > max) {\n        this.quit();\n      }\n    }\n\n    delete this.bubbles[bubble.id];\n  };\n\n  /**\n   * Actual gaming loop for animation frame.\n   *\n   * @private\n   * @method _loop\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._loop = function() {\n    var animation = this.$injector.get('animation');\n\n    this._requestId = animation.requestAnimationFrame(this._loop);\n    this.$scope.$evalAsync(this._update);\n  };\n\n  /**\n   * Removes current animation frame.\n   *\n   * @public\n   * @method stop\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._unloop = function() {\n    var animation = this.$injector.get('animation');\n    animation.cancelAnimationFrame(this._requestId);\n  };\n\n  /**\n   * Animation frame callback handling creation of new\n   * bubbles being rendered and propagates `update()`.\n   *\n   * @private\n   * @method _update\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._update = function() {\n    var random = this.$injector.get('random');\n\n    this._timeout--;\n    if (this._timeout === 0 ) {\n      this._timeout = random.between(0, this.bubbleDelay) + 25;\n      this.bubbles[this._nextId++] = null;\n    }\n\n    for (var id in this.bubbles) {\n      var bubble = this.bubbles[id];\n      if (!bubble) {\n        continue;\n      }\n\n      bubble.update();\n    }\n  };\n\n  /**\n   * Sets up new `ratio` of viewport and propages `resize()`.\n   *\n   * @private\n   * @method resize\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._resize = function() {\n    this.viewport = this._getViewport();\n\n    var height = this.viewport.height;\n    var width = this.viewport.width;\n\n    this.ratio = width / height;\n\n    for (var id in this.bubbles) {\n      var bubble = this.bubbles[id];\n      if (!bubble) {\n        continue;\n      }\n\n      bubble.resize();\n    }\n  };\n\n  /**\n   * Gets result payload for game callbacks.\n   *\n   * @private\n   * @method _getResult\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._getResult = function() {\n    return {\n      catched: this.catched,\n      escaped: this.escaped,\n      accuracy: this.accuracy\n    };\n  };\n\n  /**\n   * Calculates and sets `accuracy` property.\n   *\n   * @private\n   * @method _setAccuracy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._setAccuracy = function() {\n    this.accuracy = this.catched / this._tapped;\n  };\n\n  /**\n   * Gets viewport dimensions and offsets.\n   *\n   * @private\n   * @method _getViewport\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._getViewport = function() {\n    var width = this._viewport.width();\n    var height = this._viewport.height();\n    var top = this._viewport.scrollTop();\n    var left = this._viewport.scrollLeft();\n\n    return {\n      top: top,\n      left: left,\n      width: width,\n      height: height,\n      right: left + width,\n      bottom: top + height\n    };\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTaskGame', function(){\n    return {\n      scope: {\n        expired: '=?procrastinationTaskGameExpired',\n        maxRounds: '=?procrastinationTaskGameMaxRounds',\n        maxRetries: '=?procrastinationTaskGameMaxRetries',\n        onGameDone: '&procrastinationTaskGameOnGameDone',\n        onGameOver: '&procrastinationTaskGameOnGameOver',\n        minCatched: '=?procrastinationTaskGameMinCatched',\n        maxEscaped: '=?procrastinationTaskGameMaxEscaped',\n        bubbleDelay: '=?procrastinationTaskGameBubbleDelay'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: ProcrastinationTaskGame,\n      controllerAs: 'procrastinationTaskGameController',\n      templateUrl: 'views/directives/tasks/procrastination-task-game.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // ProcrastinationTask Bubble\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTaskBubble = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.domId = 'bubble-' + $scope.$id;\n  };\n\n  ProcrastinationTaskBubble.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} themes Predefined themes for bubbles. */\n  ProcrastinationTaskBubble.prototype.themes = [\n    'theme-1',\n    'theme-2',\n    'theme-3',\n    'theme-4',\n    'theme-5'\n  ];\n\n  /**\n\n  /** @var {string} class CSS class namem for bubble. */\n  ProcrastinationTaskBubble.prototype.class = 'bubble';\n\n  /** @var {object} style Style definitions for bubble. */\n  ProcrastinationTaskBubble.prototype.style = {};\n\n  /** @var {string} theme A random theme for bubble. */\n  ProcrastinationTaskBubble.prototype.theme = null;\n\n  /** @var {number} radius Radius of bubble. */\n  ProcrastinationTaskBubble.prototype.radius = null;\n\n  /** @var {number} radius Animation speed of bubble. */\n  ProcrastinationTaskBubble.prototype.speed = null;\n\n  /** @var {number} wave Horizontal swinging intensity. */\n  ProcrastinationTaskBubble.prototype.wave = null;\n\n  /** @var {number} x Current x position of bubble. */\n  ProcrastinationTaskBubble.prototype.x = null;\n\n  /** @var {number} y Current y position of bubble. */\n  ProcrastinationTaskBubble.prototype.y = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registeres bubble with game controller after inital setup.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.$onInit = function() {\n    var random = this.$injector.get('random');\n    var game = this.gameController;\n\n    this.theme = random.pick(this.themes);\n\n    this.radius = random.between(0, 15) + 20;\n    this.speed = random.between(0, 1.25)  + 2.25;\n    this.wave = 1.5 + this.radius;\n\n    var xOffset = this.radius * 2;\n    this.y = game.viewport.height + random.between(0, 50) + 50;\n    this.x = random.between(xOffset, game.viewport.width - xOffset);\n\n    this._originalR = game.ratio;\n    this._originalX = this.x;\n\n    this.style = {\n      top: this.y,\n      left: this.x,\n      width: this.radius * 2,\n      height: this.radius * 2\n    };\n\n    this.gameController.addBubble(this);\n  };\n\n  /**\n   * Unregisteres bubble with game controller.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.$onDestroy = function() {\n    this.gameController.removeBubble(this);\n  };\n\n  /**\n   * Updates `x` and `y` coordinates and applies style.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.update = function() {\n    var sin = Math.sin(new Date().getTime() * 0.002);\n    this.x = this.wave * sin + this._originalX;\n    this.y = this.y - this.speed;\n\n    this.style.left = this.x;\n    this.style.top = this.y;\n\n    var offscreenY = -this.radius * 2;\n    if (this.y > offscreenY) {\n      return;\n    }\n\n    this.escaped = true;\n    this.gameController.removeBubble(this);\n  };\n\n  /**\n   * Updates `x` coordinate according to new ratio.\n   *\n   * @public\n   * @method resize\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.resize = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n    var timeout = function() {\n      var ratio = me.gameController.ratio;\n      var move = ratio / me._originalR;\n\n      me._originalX *= move;\n      me._resizeId = null;\n    };\n\n    if (this._resizeId) {\n      $timeout.cancel(this._resizeId);\n    }\n\n    this._resizeId = $timeout(timeout, 250);\n  };\n\n  /**\n   *\n   *\n   * @public\n   * @method onClick\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.onClick = function() {\n    var animation = this.$injector.get('animation');\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n\n    var evalAsync = function() {\n      me.gameController.removeBubble(me);\n    };\n\n    var onAnimationEnd = function() {\n      me.$scope.$evalAsync(evalAsync);\n      me.$element.off(\n        animation.animationEndEvent,\n        onAnimationEnd\n      );\n    };\n\n    if (animation.animationEndEvent) {\n      this.$element.on(\n        animation.animationEndEvent,\n        onAnimationEnd\n      );\n    } else {\n      $timeout(evalAsync, 50);\n    }\n\n    this.catched = true;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTaskBubble', function(){\n    return {\n      scope: {\n        id: '=procrastinationTaskBubble'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: ProcrastinationTaskBubble,\n      require: {\n        'gameController': '^procrastinationTaskGame'\n      },\n      controllerAs: 'procrastinationTaskBubbleController',\n      templateUrl: 'views/directives/tasks/procrastination-task-bubble.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var LoginFrontend = function($scope, $injector, code) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n\n    // @see: next()\n    this.code = code;\n  };\n\n  LoginFrontend.$inject = ['$scope', '$injector', 'code'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} code Workshop code for authentication. */\n  LoginFrontend.prototype.code = null;\n\n  /** @var {string} username User name for authentication. */\n  LoginFrontend.prototype.username = null;\n\n  /** @var {RegExp} codeMinLength Minimum length of password. */\n  LoginFrontend.prototype.codeMinLength = 8;\n\n  /** @var {RegExp} codePattern Regular expression for `username` property. */\n  LoginFrontend.prototype.codePattern = /^[A-Za-z0-9]+$/;\n\n  /** @var {RegExp} userpattern Regular expression for `username` property. */\n  LoginFrontend.prototype.userpattern = /^[A-Za-z][A-Za-z](?:0[1-9]|[12]\\d|3[01])(?:0[1-9]|1[012])\\d$/;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Signs a user in with personal code to gather JWT token.\n   *\n   * @public\n   * @method signin\n   * @return {Void}\n   */\n  LoginFrontend.prototype.signin = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You have successfully signed in!');\n        notification.success(message);\n        $state.go('frontend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth.signin({\n        username: this.username\n      }, 'frontend').then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Signs a user up with personal and workshop code.\n   *\n   * @public\n   * @method signup\n   * @return {Void}\n   */\n  LoginFrontend.prototype.signup = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You have successfully signed up!');\n        notification.success(message);\n        $state.go('frontend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth\n        .signup({\n          username: this.username,\n          password: this.code\n        }, 'frontend').then(\n          successCallback,\n          failureCallback\n        );\n    };\n\n  /**\n   * Persists code in storage and navigates to `step2` of signup.\n   *\n   * @public\n   * @method continue\n   * @return {Void}\n   */\n  LoginFrontend.prototype.next = function()\n    {\n      var CODE_STORAGE_KEY = this.$injector.get('CODE_STORAGE_KEY');\n      var storage = this.$injector.get('storage').getProxy();\n      var $state = this.$injector.get('$state');\n\n      storage.setItem(CODE_STORAGE_KEY, this.code);\n      $state.go('login.frontend.signup.step2', {}, {\n        // note: this is important to avoid usual\n        // redirection by refetching resolve data\n        // of `login.frontend` parent state\n        reload: true\n      });\n    };\n\n  angular.module(module).controller('LoginFrontendController', LoginFrontend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var LoginBackend = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  LoginBackend.$inject = ['$scope', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} username Username for authentication. */\n  LoginBackend.prototype.username = null;\n\n  /** @var {string} workshop Password for authentication. */\n  LoginBackend.prototype.password = null;\n\n  /** @var {RegExp} usernameMinLength Minimum length of username. */\n  LoginBackend.prototype.usernameMinLength = 5;\n\n  /** @var {RegExp} passwordMinLength Minimum length of password. */\n  LoginBackend.prototype.passwordMinLength = 8;\n\n  /** @var {RegExp} passwordMaxLength Maximum length of password. */\n  LoginBackend.prototype.passwordMaxLength = 4096;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Signs an admin in with username and password.\n   *\n   * @public\n   * @method signin\n   * @return {Void}\n   */\n  LoginBackend.prototype.signin = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You are logged in now!');\n        notification.success(message);\n        $state.go('backend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth.signin({\n        username: this.username,\n        password: this.password\n      }, 'backend').then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  angular.module(module).controller('LoginBackendController', LoginBackend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Contact = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  Contact.$inject = ['$scope','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of contact. */\n  Contact.prototype.name = null;\n\n  /** @var {string} email Email of contact. */\n  Contact.prototype.email = null;\n\n  /** @var {string} subject Subject of contact. */\n  Contact.prototype.subject = null;\n\n  /** @var {string} message Message of contact. */\n  Contact.prototype.message = null;\n\n  /** @var {string} messageMinLength Message minmimum length. */\n  Contact.prototype.messageMinLength = 25;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends an email from contact form to admins.\n   *\n   * @public\n   * @method submit\n   * @return {Void}\n   */\n  Contact.prototype.submit = function()\n    {\n      var mail = this.$injector.get('mail');\n      var form = this.$scope.contactForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var me = this;\n\n      var successCallback = function()\n      {\n        me.reset();\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      mail.send({\n        name: this.name,\n        email: this.email,\n        subject: this.subject,\n        message: this.message\n      }).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Resets all form inputs to initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  Contact.prototype.reset = function()\n    {\n      this.name = null;\n      this.email = null;\n      this.subject = null;\n      this.message = null;\n    };\n\n  angular.module(module).controller('ContactController', Contact);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Frontend = function($injector) {\n    this.$injector = $injector;\n\n    this.user = $injector.get('user');\n  };\n\n  Frontend.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} user User service object. */\n  Frontend.prototype.user = null;\n\n  /** @var {boolean} confirmLogout Flag for logout confirmation. */\n  Frontend.prototype.confirmLogout = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Creates a new result resource from task payload.\n   *\n   * @public\n   * @method createResult\n   * @param {object} payload\n   * @return {Void}\n   */\n  Frontend.prototype.createResult = function(payload)\n  {\n    var Result = this.$injector.get('Result');\n    var user = this.$injector.get('user');\n\n    var successCallback = function(result)\n      {\n        // update user object from response\n        // handling comparisons for `state`,\n        // `tickets` and showing messages\n        user.update(result);\n      };\n\n    var failureCallback = function()\n      {\n        // noop\n      };\n\n    var result = new Result(payload);\n    var promise = result.$create();\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Updates a new result resource from task `result`.\n   *\n   * @public\n   * @method updateResult\n   * @param {object} result\n   * @return {Void}\n   */\n  Frontend.prototype.updateResult = function(payload)\n  {\n    var Result = this.$injector.get('Result');\n    var user = this.$injector.get('user');\n\n    var successCallback = function(result)\n      {\n        // update user object from response\n        // handling comparisons for `state`,\n        // `tickets` and showing messages\n        user.update(result);\n      };\n\n    var failureCallback = function()\n      {\n        // noop\n      };\n\n    var promise = Result.update({ id: payload.id }, payload).$promise;\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @public\n   * @method logout\n   * @return {Void}\n   */\n  Frontend.prototype.logout = function()\n    {\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var isUser = this.user.isUser();\n\n      var successCallback = function()\n        {\n          if (isUser) {\n            $state.go('login.frontend');\n          } else {\n            $state.go('login.backend');\n          }\n        };\n\n      var failureCallback = function()\n        {\n\n        };\n\n      auth.signout().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Redirects router to state.\n   *\n   * @public\n   * @method goTo\n   * @param {string} state\n   * @return {Void}\n   */\n  Frontend.prototype.goTo = function(state)\n    {\n      var $state = this.$injector.get('$state');\n\n      $state.go(state);\n    };\n\n  /**\n   * Sets `confirmLogout` flag to true.\n   *\n   * @public\n   * @method markConfirmLogout\n   * @return {Void}\n   */\n  Frontend.prototype.markConfirmLogout = function()\n    {\n      this.confirmLogout = true;\n    };\n\n  angular.module(module).controller('FrontendController', Frontend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Workshop = function($scope, $injector, workshops) {\n    this.workshops = workshops;\n    this.$injector = $injector;\n    this.$scope = $scope;\n\n    this._resultsSource = null;\n    this._userSources = {};\n    this._workshops = {};\n    this._tasks = {};\n\n    this._initWorkshops();\n    this._initListener();\n  };\n\n  Workshop.$inject = ['$scope', '$injector', 'workshops'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of new workshop. */\n  Workshop.prototype.name = null;\n\n  /** @var {string} code Code of new workshop. */\n  Workshop.prototype.code = null;\n\n  /** @var {RegExp} nameMinLength Minimum length of workshop name. */\n  Workshop.prototype.nameMinLength = 8;\n\n  /** @var {RegExp} codeMinLength Minimum length of workshop code. */\n  Workshop.prototype.codeMinLength = 8;\n\n  /** @var {RegExp} userpattern Regular expression for `username` property. */\n  Workshop.prototype.codePattern = /^[A-Za-z0-9]+$/;\n\n  /** @var {object} deleteWorkshop Currently marked workshop for deletion. */\n  Workshop.prototype.deleteWorkshop = null;\n\n  /** @var {object} drawingWorkshop Currently marked workshop for drawing. */\n  Workshop.prototype.drawingWorkshop = null;\n\n  /** @var {array} drawingTickets Randomly picked tickets of drawing. */\n  Workshop.prototype.drawingTickets = null;\n\n  /** @var {array} drawingTicketsOne Randomized tickets for first run. */\n  Workshop.prototype.drawingTicketsOne = null;\n\n  /** @var {array} drawingTicketsTwo Randomized tickets for second run. */\n  Workshop.prototype.drawingTicketsTwo = null;\n\n  /** @var {array} drawingAmount Amount of chosen tickets for drawing. */\n  Workshop.prototype.drawingAmount = 2;\n\n  /** @var {array} chartResults Currently loaded results for chart. */\n  Workshop.prototype.chartResults = null;\n\n  /** @var {object} chartTask Currently selected task of results. */\n  Workshop.prototype.chartTask = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Toggles `$$expanded` flag on workshop depending on query params.\n   * https://ui-router.github.io/ng1/docs/latest/interfaces/ng1.ng1controller.html#uionparamschanged\n   *\n   * @public\n   * @method uiOnParamsChanged\n   * @param {object} params\n   * @return {void}\n   */\n  Workshop.prototype.uiOnParamsChanged = function(params)\n    {\n      var workshop = this._workshops[params.expand];\n\n\n      // close opened workshop before toggling\n      if (this._expanded) {\n        this._expanded.$$expanded = false;\n        this._expanded = null;\n      }\n\n      // expand the new workshop now\n      if (workshop) {\n        workshop.$$expanded = true;\n        this._expanded = workshop;\n      }\n    };\n\n  /**\n   * Creates a new workshop.\n   *\n   * @public\n   * @method create\n   * @return {void}\n   */\n  Workshop.prototype.create = function()\n    {\n      var notification = this.$injector.get('notification');\n      var Workshop = this.$injector.get('Workshop');\n      var i18n = this.$injector.get('i18n');\n\n      var workshop = new Workshop({\n        name: this.name,\n        code: this.code\n      });\n\n      var me = this;\n\n      var successCallback = function(workshop)\n        {\n          var message = i18n.get('Workshop has been created successfully!');\n          notification.success(message);\n\n          me.workshops.unshift(workshop);\n          me._initWorkshop(workshop);\n\n          me.name = null;\n          me.code = null;\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      workshop.$create().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Deletes a workshop after confirmation.\n   *\n   * @public\n   * @method delete\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.delete = function(workshop)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Workshop has been deleted successfully!');\n          notification.success(message);\n\n          var index = me.workshops.indexOf(workshop);\n          me.workshops.splice(index, 1);\n\n          me._removeUsersStream(workshop);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      workshop.$delete().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Loads and randomizes workshop tickets and invokes modal dialog.\n   *\n   * @public\n   * @method markWorkshopForDrawing\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.markWorkshopForDrawing = function(workshop)\n    {\n      var Ticket = this.$injector.get('Ticket');\n      var random = this.$injector.get('random');\n\n      var me = this;\n\n      var successCallback = function(tickets)\n        {\n          me.drawingTickets = random.shuffle(tickets);\n\n          var rightSide = me.drawingTickets.map(\n            function(ticket) { return ticket.id; }\n          );\n          var halfSize = Math.ceil(tickets.length/2);\n          var leftSide = rightSide.splice(0, halfSize);\n\n          me.drawingTicketsOne = leftSide.concat(rightSide);\n          me.drawingTicketsTwo = rightSide.concat(leftSide);\n\n          me.drawingWorkshop = workshop;\n        };\n\n      var failureCallback = function()\n        {\n        };\n\n      var resource = Ticket.getByWorkshop({ workshopId: workshop.id });\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets `$$shuffle` flag for drawing workshop to kick off drawing directive.\n   *\n   * @public\n   * @method makeWorkshopDrawing\n   * @return {void}\n   */\n  Workshop.prototype.makeWorkshopDrawing = function() {\n    this.drawingWorkshop.$$shuffle = true;\n  };\n\n  /**\n   * Invokes confirmation modal for deleting a workshop.\n   *\n   * @public\n   * @method markWorkshopForDeletion\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.markWorkshopForDeletion = function(workshop)\n    {\n      this.deleteWorkshop = workshop;\n    };\n\n  /**\n   * Toggles `isActive` of a workshop.\n   *\n   * @public\n   * @method toggleWorkshop\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.toggleWorkshop = function(workshop)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function(workshop)\n        {\n          var message = i18n.get(\n            workshop.isActive ?\n              'Workshop has been unlocked successfully. Students can register now!' :\n              'Workshop has been locked successfully. Students can now only use their access from home!'\n          );\n          notification.success(message);\n\n          me._initWorkshop(workshop);\n        };\n\n      var failureCallback = function()\n        {\n          // revert the change on failed update!\n          workshop.isActive = !workshop.isActive;\n        };\n\n      workshop.isActive = !workshop.isActive;\n\n      workshop.$update().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Toggles `$$showCode` of a workshop.\n   *\n   * @public\n   * @method toggleCode\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.toggleCode = function(workshop)\n    {\n      workshop.$$code = !workshop.$$code;\n    };\n\n  /**\n   * Loads task's results and invokes modal dialog.\n   *\n   * @public\n   * @method markTaskForChart\n   * @param {object} task\n   * @return {void}\n   */\n  Workshop.prototype.markTaskForChart = function(task)\n    {\n      var Result = this.$injector.get('Result');\n\n      var me = this;\n      var successCallback = function(results)\n        {\n          me.chartResults = results;\n          me.chartTask = task;\n        };\n\n      var failureCallback = function()\n        {\n        };\n\n      var resource = Result.getByTask({ taskId: task.id });\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Toggles `isActive` of a task.\n   *\n   * @public\n   * @method toggleTask\n   * @param {object} task\n   * @return {void}\n   */\n  Workshop.prototype.toggleTask = function(task)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n      var Task = this.$injector.get('Task');\n\n      var successCallback = function(/*workshop*/)\n        {\n          var message = i18n.get(\n            task.isActive ?\n              'Task has been unlocked successfully. Students can send results now!' :\n              'Task has been locked successfully. Students cannot send results currently!'\n          );\n          notification.success(message);\n        };\n\n      var failureCallback = function()\n        {\n          // revert the change on failed update!\n          task.isActive = !task.isActive;\n        };\n\n      task.isActive = !task.isActive;\n\n      var resource = Task.update({ id: task.id}, task);\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets `expand` query parameter dependending on\n   * workshop's current `$$expanded` flag info.\n   *\n   * @public\n   * @method expand\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.expand = function(workshop)\n    {\n      var $state = this.$injector.get('$state');\n      var expand = !workshop.$$expanded ?\n        workshop.id : \n        null;\n\n      $state.go('backend.workshops', {\n        expand: expand\n      });\n    };\n\n  /**\n   * Sets up an event source for streaming user count.\n   *\n   * @private\n   * @method _addUsersStream\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._addUsersStream = function(workshop)\n    {\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      var _onMessage = function(data) {\n        me.$scope.$evalAsync(function(){\n          workshop.$$users = data;\n        });\n      };\n\n      var url = API_URL + '/sse/workshop/' + workshop.id + '/users';\n      var options = { onMessage: _onMessage, sleep: 10 };\n      var source = sse.addSource(url, options);\n      this._userSources[workshop.id] = source;\n    };\n\n  /**\n   * Removes an event source from internal stack and service.\n   *\n   * @private\n   * @method _removeUsersStream\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._removeUsersStream = function(workshop)\n    {\n      var sse = this.$injector.get('sse');\n\n      var source = this._userSources[workshop.id];\n      if (!source) {\n        return;\n      }\n\n      delete this._userSources[workshop.id];\n      sse.removeSource(source);\n    };\n\n  /**\n   * Sets up event sources for updating result counters.\n   *\n   * @private\n   * @method _streamResults\n   * @return {void}\n   */\n  Workshop.prototype._streamResults = function()\n    {\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      // --- SSE ---\n      var _onMessage = function(workshop, data) {\n        me.$scope.$evalAsync(function(){\n          // remove event source if workshop is not\n          // active at the moment === one-shot only\n          if (!workshop.isActive) {\n            sse.removeSource(me._resultsSource);\n          }\n\n          angular.forEach(data, function(item){\n            var task = me._tasks[item.id];\n            task.$$results = item.results;\n          });\n        });\n      };\n\n      var _watchExpression = function() {\n        // workshop must be opened, but we also need\n        // to watch `isActive` state to catch toggle\n        // from property to reinitialize event source\n        return me._expanded && me._expanded.isActive;\n      };\n\n      var _watchCallback = function() {\n        if (me._resultsSource) {\n          sse.removeSource(me._resultsSource);\n        }\n\n        if (me._expanded) {\n          var url = API_URL + '/sse/workshop/' + me._expanded.id + '/results';\n          var onMessage = _onMessage.bind(me, me._expanded);\n          var options = { onMessage: onMessage, sleep: 5 };\n          me._resultsSource = sse.addSource(url, options);\n        }\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Maps all workshops to hash maps, sets up streaming and query params.\n   *\n   * @private\n   * @method _initWorkshops\n   * @return {void}\n   */\n  Workshop.prototype._initWorkshops = function()\n    {\n      var $uiRouterGlobals = this.$injector.get('$uiRouterGlobals');\n\n      // create hash maps for workshops and tasks for ease lookups\n      angular.forEach(this.workshops, this._initWorkshop.bind(this));\n\n      // now make the initial call to change handler\n      this.uiOnParamsChanged($uiRouterGlobals.params);\n\n      // kick off general streaming of task results\n      this._streamResults();\n    };\n\n  /**\n   * Adds workshop and tasks to hash map and initializes\n   * streaming for workshop depending on `isActive` flag.\n   *\n   * @private\n   * @method _initWorkshop\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._initWorkshop = function(workshop)\n    {\n      // map all `tasks` to internal hash and set `$$results`\n      var me = this;\n      angular.forEach(workshop.tasks, function(task){\n        var old = me._tasks[task.id] || null;\n        task.$$results = old !== null ?\n          old.$$results\n          : 0;\n\n        me._tasks[task.id] = task;\n      });\n\n      // initialize `$$code` flag for this workshop\n      workshop.$$code = false;\n\n      // check `$$expanded` flag for this workshop\n      var id = this._expanded && this._expanded.id;\n      workshop.$$expanded = workshop.id === id;\n\n      // initialize `$$users` and set up streaming\n      workshop.$$users = workshop.users.length;\n\n      if (!workshop.isActive) {\n        this._removeUsersStream(workshop);\n      } else {\n        this._addUsersStream(workshop);\n      }\n\n      this._workshops[workshop.id] = workshop;\n    };\n\n  /**\n   * Removes all watches, listeners and sources\n   * as soon as controller's $scope is destroyed.\n   *\n   * @private\n   * @method _initListener\n   * @return {void}\n   */\n  Workshop.prototype._initListener = function()\n    {\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      var _onDestroy = function() {\n        for (var id in me._userSources) {\n          sse.removeSource(me._userSources[id]);\n        }\n\n        if (me._resultsSource) {\n          sse.removeSource(me._resultsSource);\n        }\n\n        me._resultsSource = null;\n        me._userSources = {};\n\n        me._unlisten();\n        me._unwatch();\n      };\n\n      this._unlisten = this.$scope.$on('$destroy', _onDestroy);\n    };\n\n\n  angular.module(module).controller('WorkshopController', Workshop);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Admin = function($scope, $injector, admins) {\n    this.admins = admins;\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  Admin.$inject = ['$scope', '$injector', 'admins'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of new workshop. */\n  Admin.prototype.username = null;\n\n  /** @var {string} code Code of new workshop. */\n  Admin.prototype.password = null;\n\n  /** @var {RegExp} usernameMinLength Minimum length of workshop name. */\n  Admin.prototype.usernameMinLength = 5;\n\n  /** @var {RegExp} passwordMinLength Minimum length of workshop code. */\n  Admin.prototype.passwordMinLength = 8;\n\n  /** @var {object} editAdmin Currently marked workshop for editing. */\n  Admin.prototype.editAdmin = null;\n\n  /** @var {object} deleteAdmin Currently marked workshop for deletion. */\n  Admin.prototype.deleteAdmin = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Creates a new admin.\n   *\n   * @public\n   * @method create\n   * @return {void}\n   */\n  Admin.prototype.create = function()\n    {\n      var notification = this.$injector.get('notification');\n      var Admin = this.$injector.get('Admin');\n      var i18n = this.$injector.get('i18n');\n\n      var admin = new Admin({\n        username: this.username,\n        password: this.password\n      });\n\n      var me = this;\n\n      var successCallback = function(admin)\n        {\n          var message = i18n.get('Admin has been created successfully!');\n          notification.success(message);\n\n          me.admins.unshift(admin);\n\n          me.username = null;\n          me.password = null;\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$create().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for deleting a admin.\n   *\n   * @public\n   * @method markAdminForDeletion\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.markAdminForDeletion = function(admin)\n    {\n      this.deleteAdmin = admin;\n    };\n\n  /**\n   * Deletes a admin after confirmation.\n   *\n   * @public\n   * @method delete\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.delete = function(admin)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Admin has been deleted successfully!');\n          notification.success(message);\n\n          var index = me.admins.indexOf(admin);\n          me.admins.splice(index, 1);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$delete().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for editing a admin.\n   *\n   * @public\n   * @method markAdminForEdit\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.markAdminForEdit = function(admin)\n    {\n      this.editAdmin = admin;\n    };\n\n  /**\n   * Updates a admin after confirmation.\n   *\n   * @public\n   * @method update\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.update = function(admin)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Password has been successfully updated!');\n          notification.success(message);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$update().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  angular.module(module).controller('AdminController', Admin);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Backend = function($injector, isSuperAdmin) {\n    this.$injector = $injector;\n\n    this.isSuperAdmin = isSuperAdmin;\n  };\n\n  Backend.$inject = ['$injector', 'isSuperAdmin'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isSuperAdmin If user is super admin. */\n  Backend.prototype.isSuperAdmin = false;\n\n  /** @var {boolean} confirmLogout Flag for logout confirmation. */\n  Backend.prototype.confirmLogout = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @public\n   * @method logout\n   * @return {Void}\n   */\n  Backend.prototype.logout = function()\n    {\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n\n      var successCallback = function()\n        {\n          $state.go('login.backend');\n        };\n\n      var failureCallback = function()\n        {\n\n        };\n\n      auth.signout().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Redirects router to state.\n   *\n   * @public\n   * @method goTo\n   * @param {string} state\n   * @return {Void}\n   */\n  Backend.prototype.goTo = function(state)\n    {\n      var $state = this.$injector.get('$state');\n\n      $state.go(state);\n    };\n\n  /**\n   * Sets `confirmLogout` flag to true.\n   *\n   * @public\n   * @method markConfirmLogout\n   * @return {Void}\n   */\n  Backend.prototype.markConfirmLogout = function()\n    {\n      this.confirmLogout = true;\n    };\n\n  angular.module(module).controller('BackendController', Backend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/workshop/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      validateWorkshopBackend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/workshop/code/:code'\n      },\n      validateUsernameFrontend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/auth/validate/username/:username'\n      },\n      validateWorkshopFrontend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/auth/validate/workshop/:code'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Workshop', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/ticket/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      getByWorkshop: {\n        method: 'GET',\n        isArray: true,\n        url: API_URL + '/ticket/workshop/:workshopId'\n      }\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Ticket', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, $injector, API_URL) {\n    var url = API_URL + '/result/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      getByTask: {\n        method: 'GET',\n        isArray: true,\n        url: API_URL + '/result/task/:taskId'\n      }\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', '$injector', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Result', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/admin/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      validateAdmin: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/admin/username/:username'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Admin', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/task/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Task', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/user/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      current: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/user/current'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('User', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // i18n\n  // --------------------------------------------------\n  angular.module(module).filter('i18n',['i18n',function(i18n){\n    var filter = function()\n      {\n        return i18n.get.apply(i18n, arguments);\n      };\n\n    filter.$stateful = true;\n\n    return filter;\n  }]);\n\n  // --------------------------------------------------\n  // Percentage\n  // --------------------------------------------------\n  angular.module(module).filter('percent', function(){\n    return function(value, fraction) {\n      fraction = isNaN(fraction) ? 0 : fraction;\n      value = isNaN(value) ? 0 : value * 100;\n\n      return value.toFixed(fraction) + '%';\n    };\n  });\n\n  // --------------------------------------------------\n  // Coin\n  // --------------------------------------------------\n  angular.module(module).filter('coin', function(){\n    return function(value) {\n\n      if (value >= 1) {\n        return value + '&#8364;';\n      }\n\n      return (value*100) + '&#162;';\n    };\n  });\n\n  // --------------------------------------------------\n  // Note\n  // --------------------------------------------------\n  angular.module(module).filter('note', function(){\n    return function(value) {\n      return value + '&#8364;';\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* globals UIkit */\n(function() {\n  'use strict';\n\n  UIkit.component('off-canvas-scroll', {\n\n    defaults: {\n      offset: 0,\n      target: '',\n      duration: 1000,\n      transition: 'easeOutExpo'\n    },\n\n    props: {\n      target: String,\n      offset: Number,\n      duration: Number,\n      transition: String\n    },\n\n    computed: {\n        offcanvas: function() {\n          return UIkit.offcanvas(this.target);\n        },\n\n        $offcanvas: function() {\n          return this.offcanvas && this.offcanvas.$el;\n        }\n    },\n\n    init: function() {\n      if (!this.target) {\n        console.error('off-canvas-scroll: Required \"target\" option is not set.');\n        return;\n      }\n\n      if (!this.offcanvas) {\n        console.error('off-canvas-scroll: No offcanvas component found with id: ' + this.target);\n        return;\n      }\n    },\n\n    events: {\n      click: function(event, data) {\n        if (data && data.scroll) {\n          return;\n        }\n\n        this.offcanvas.hide();\n        this.$offcanvas.on('hidden', this._onHidden);\n      }\n    },\n\n    methods: {\n\n      _onHidden: function() {\n        this.$offcanvas.off('hidden', this._onHidden);\n\n        this._dummyScroll = UIkit.scroll(this.$el, {\n          transition: this.transition,\n          duration: this.duration,\n          offset: this.offset\n        });\n\n        this.$el.on('scrolled', this._onScrolled);\n        this.$el.trigger('click', { scroll: true });\n      },\n\n      _onScrolled: function() {\n        this.$el.off('scrolled', this._onScrolled);\n        this._dummyScroll.$destroy();\n      }\n    }\n  });\n\n})();\n"]}