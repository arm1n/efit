{"version":3,"sources":["js/app-c9545b4973.min.js"],"names":["global","angular","module","app","config","$locationProvider","$stateProvider","$urlRouterProvider","$httpProvider","$templateRequestProvider","$resourceProvider","$qProvider","VIEWS_PATH","html5Mode","hashPrefix","interceptors","push","errorOnUnhandledRejections","defaults","actions","get","method","list","isArray","update","create","delete","decorator","state","parent","newViewConfig","views","forEach","view","viewMatch","match","viewName","stateName","name","replace","templateUrl","join","httpOptions","skipAuthorization","url","abstract","resolve","translations","i18n","load","template","current","user","$state","$q","promise","$promise","e","go","data","role","navbar@frontend","home@frontend","topics@frontend","financial-knowledge@frontend","financial-knowledge/interest-task@frontend","financial-knowledge/diversification-task@frontend","consumer-behaviour@frontend","consumer-behaviour/bomb-task@frontend","consumer-behaviour/anchoring-task@frontend","consumer-behaviour/mental-bookkeeping-task@frontend","consumer-behaviour/framing-task@frontend","self-control@frontend","self-control/savings-target-task@frontend","self-control/savings-supported-task@frontend","self-control/self-commitment-task@frontend","self-control/procrastination-task@frontend","status@frontend","contact@frontend","controller","controllerAs","footer@frontend","offcanvas@","@","isSuperAdmin","auth","defer","successCallback","failureCallback","hasRole","then","redirectTo","main@backend","navbar@backend","footer@backend","workshops","Workshop","params","expand","value","dynamic","redirects","ROLE_ADMIN","admins","Admin","ROLE_USER","ROLE_SUPER_ADMIN","otherwise","run","$injector","$transitions","$rootScope","appState","onStart","transition","routerBusy","to","getUser","roles","indexOf","target","onError","onSuccess","$watch","isBusy","httpBusy","FastClick","attach","document","body","ANGULAR_MODULE","window","HttpInterceptor","this","_urls","$inject","prototype","getLastSuccessResponse","_lastSuccessResponse","getLastErrorResponse","_lastErrorResponse","getLastResponse","_lastResponse","getUrls","request","_setUrl","headers","token","Authorization","jwtToken","_getJWTToken","when","requestError","rejection","reject","response","_setLastSuccessResponse","_setLastResponse","responseError","_showGlobalErrorMessage","_setLastErrorResponse","$httpParamSerializer","responseOrRejection","notification","skipGlobalErrorMessage","message","error","jwt","getToken","isExpired","refresh","factory","httpInterceptor","instantiate","Notification","notify","status","options","UIkit","success","primary","warning","closeAll","service","AppState","routeBusy","Animation","animationEndEvent","dummy","createElement","events","WebkitAnimation","MozTAnimation","animation","key","event","style","undefined","transitionEndEvent","OTransition","MozTransition","WebkitTransition","translate","x","y","z","string","isUndefined","sprintf","webkitTransform","mozTransform","msTransform","oTransform","transform","requestAnimationFrame","lastTime","vendors","i","length","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","Math","max","timeout","id","setTimeout","bind","clearTimeout","Random","_spareRandomCache","between","min","fact","rand","random","floor","gaussian","mean","stdDev","spare","u","v","s","m","sqrt","log","pick","array","shuffle","temp","String","input","variables","slice","call","arguments","truncate","maxLength","substring","trim","toCamel","part","toUpperCase","toSpinal","toLowerCase","toSnake","Storage","MODE_COOKIES","MODE_STORAGE","getProxy","mode","_getCookieProxy","_getLocalStorageProxy","supportsLocalStorage","$window","storageProxy","localStorage","val","setItem","removeItem","_encode","JSON","stringify","encodeURIComponent","_decode","decoded","decodeURIComponent","parse","documentProxy","me","_getAll","items","cookies","cookie","split","setCookie","expires","domain","path","secure","date","isNaN","Error","toUTCString","getCookie","hasOwnProperty","getAllCookies","removeCookie","removeAllCookies","getItem","getAllItems","removeAllItems","clear","Auth","signup","firewall","$http","_saveToken","_getSignupUrl","post","_username","username","_password","password","extend","signin","_getSigninUrl","signout","invalidate","unload","_getSignoutUrl","_getRefereshUrl","refresh_token","getRefreshToken","acceptExpired","decode","resolveRole","isString","setRefreshToken","setToken","API_URL","I18N","setLocale","_detectLocale","locales","de","defaultLocale","locale","getLocale","$log","_getJSONUrl","text","language","navigator","android","userAgent","userLanguage","systemLanguage","browserLanguage","substr","JWT","storage","tokenKey","refreshKey","removeRefreshToken","removeToken","refreshToken","getExpirationDate","exp","setUTCSeconds","offset","now","valueOf","parts","_base64Decode","fromJson","output","atob","escaped","escape","User","_states","_eventSource","_results","_payload","_pending","_tasks","group","tickets","toJSON","_initTickets","_initState","_initGroup","isUser","_initWatches","_initTasks","_initPending","_initResults","_initSSE","sse","removeSource","_unwatchTickets","_unwatchState","result","_addResult","isAdmin","isInWorkshop","workshop","isActive","getTasks","getTaskByType","type","getPendingByType","getGroupAsString","getStateAsString","STATE_BEGINNER","_watchStateExpression","_watchStateCallback","newState","oldState","_watchTicketsExpression","_watchTicketsCallback","newTickets","oldTickets","oldCount","newCount","$watchCollection","_onMessage","$evalAsync","item","unix","updatedAt","task","onMessage","sleep","addSource","tasks","pending","results","$$results","Mail","send","_getPostUrl","_name","_mail","email","_subject","subject","_message","SSE","_sources","retry","_buildUrl","source","EventSource","onmessage","onerror","close","CardContainer","cards","canToggle","add","card","set","selected","directive","scope","restrict","bindToController","Card","$scope","$element","$attrs","$transclude","$id","hasIcon","isSlotFilled","disabled","isCheckbox","$onInit","cardContainer","click","$event","stopPropagation","preventDefault","changed","onClick","transclude","title","icon","buttons","require","Chart","_chart","_getOptions","labels","_getLabels","series","_getData","_render","$onDestroy","detach","mapResults","GROUP_A","GROUP_B","map","choice1","choice2","count","json","choice","groupA","groupB","SPLIT","ALL","failure","all","seriesBarDistance","chartPadding","top","left","right","bottom","axisY","labelInterpolationFnc","ticks","Chartist","FixedScaleAxis","high","low","plugins","legend","legendNames","$timeout","addClass","element","render","Bar","Modal","_element","_modal","_scope","isVisible","_onShow","onShow","_onShown","onShown","_onBeforeShow","onBeforeShow","_onHide","onHide","_onHidden","onHidden","_onBeforeHide","onBeforeHide","_unwatch","destroy","clone","on","append","modal","show","off","remove","$destroy","hide","Status","iconRatio","isCompact","iconColor","tasksVisible","ticketsVisible","_watchTasksExpression","_watchTasksCallback","_unwatchTasks","toggleTasks","toggleTickets","StatusIcons","ratio","color","isBeginner","isAmateuer","isAdvanced","isExpert","isProfi","STATE_AMATEUR","STATE_ADVANCED","STATE_EXPERT","_watchExpression","_watchCallback","isAmateur","StatusLabel","StatusTickets","Tabber","domId","hasExercise","exercise","description","Draggable","_body","_clone","_coordinates","_interactable","_activeClass","_itemClass","_disabledClass","removeClass","draggable","enabled","_onResize","restriction","interact","inertia","autoScroll","onend","_onEndItem","onmove","_onMoveItem","onstart","_onStartItem","snap","targets","interaction","_origin","startCoords","page","dropTarget","endOnly","manualStart","_onMove","getData","_window","_resize","unset","_trigger","$data","dx","dy","_translate","dropped","interactable","currentTarget","pointerIsDown","interacting","offsetY","clientHeight","offsetX","clientWidth","pageY","touches","pageX","css","position","start","args","onDragStart","onDragMove","onDragEnd","onDrop","Dropable","_enterClass","_acceptClass","accept","dropzone","ondrop","_onDrop","ondragenter","_onDragEnter","ondragleave","_onDragLeave","ondropactivate","_onDropActivate","ondropdeactivate","_onDropDeactivate","onDropDeactivate","onDropActivate","onDragEnter","onDragLeave","ScrollTo","_source","_target","_scroller","_onClick","_onScrolled","jQuery","charAt","console","warn","href","duration","easing","scroll","scrollTo","isFunction","Evaluation","customButtons","defaultButtons","LockedState","isLocked","userText","adminText","FormField","_transcludeElements","_transcludeScopes","_cloneDefault","_cloneLabel","_unlisten","label","ngModel","resetEmpty","showMessages","labelClass","failureClass","successClass","_addWatches","_transclude","unlisten","unwatch","setModel","_update","$valid","$invalid","_reset","$setUntouched","unwatchModel","newModel","oldModel","$touched","$pending","$viewValue","transcludeDefault","attr","replaceWith","transcludeLabel","messageMin","messageMax","messageUrl","messageEmail","messageNumber","messagePattern","messageRequired","messageMinlength","messageMaxlength","messagesCustom","FormFieldModel","formField","ValidatorWorkshopExists","keyLocked","$asyncValidators","validatorWorkshopExists","validate","modelValue","$setValidity","validateWorkshopFrontend","code","ValidatorWorkshopUnique","validatorWorkshopUnique","validateWorkshopBackend","ValidatorAdminUnique","validatorAdminUnique","validateAdmin","InterestTask","resolved","correctAnswers","exercise1Answer","exercise2Answer","exercise1Correct","exercise2Correct","exercise1Result","exercise2Result","amount","rate","years","init","getPayload","exercise1","current_result","actual_result","is_valid","exercise2","canResolve","_calculateResult","reset","onResolve","payload","pow","InterestTaskExercise","stack","sum","notes","coins","onUpdate","revert","pop","DiversificationTask","$elemnt","heads","tails","companies","sides","one","company","two","throws","toss","ticketCount","getTicketCount","image","ticket","action","factorA","factorB","ticketsA","ticketsB","DiversificationTaskCoin","find","_animationEndEvent","_getAnimationEndEvent","flip","animate","back","front","startSide","class","_toss","_getToss","_timeoutCallback","_iterateSides","side","_watchFlipCallback","newFlip","_watchFlipExpression","_watchTossCallback","newToss","oldToss","_watchTossExpression","_evalAsyncCallback","onFinish","_animationEndCallback","onInit","_unwatchFlip","_unwatchToss","transitions","$filter","picked","filtered","BombTask","started","stopped","hasBomb","totalBoxes","remainingBoxes","collectedBoxes","avg","rows","cols","interval","_initMembers","_initMatrix","_initBomb","index","$interval","_intIndex","iterator","_intervalId","stop","cancel","resolveCard","$$resolved","collection","toggle","column","active","$$active","splice","isBomb","total","collected","trackId","row","col","equals","bomb","matrix","columns","j","BombTaskCard","model","isDisabled","isClickable","onToggle","AnchoringTask","MentalBookkeepingTask","FramingTask","lotteryA","lotteryB","lottery","SavingsTargetTask","_flag","_storageKey","step","wish","amountRepeated","form","minAmount","maxAmount","isPending","isNumber","getDifference","SelfCommitmentTask","ProcrastinationTask","_onInterval","rounds","openRounds","minCatched","maxEscaped","invalidAt","hasWarmup","warmupMaxEscaped","warmupMinCatched","hasSuccess","_isPending","setMode","setState","moment","setWarmup","warmup","isInvalid","_now","isAfter","getCurrentRound","getRemainingTime","keys","difference","diff","seconds","asSeconds","minutes","asMinutes","hours","asHours","days","asDays","unit","ProcrastinationTaskGame","_nextId","_tapped","_rounds","_retries","_timeout","_requestId","_loop","_viewport","catched","accuracy","bubbles","viewport","expired","maxRounds","maxRetries","Number","POSITIVE_INFINITY","bubbleDelay","expire","quit","_unloop","_getResult","onGameOver","done","onGameDone","_setAccuracy","canRetry","canRestart","addBubble","bubble","removeBubble","_getViewport","height","width","resize","scrollTop","scrollLeft","ProcrastinationTaskBubble","themes","theme","radius","speed","wave","game","gameController","_originalR","_originalX","sin","offscreenY","move","_resizeId","endEvent","evalAsync","onAnimationEnd","LoginFrontend","codeMinLength","codePattern","userpattern","loginForm","LoginBackend","usernameMinLength","passwordMinLength","passwordMaxLength","Contact","messageMinLength","submit","mail","contactForm","Frontend","createResult","Result","$create","updateResult","logout","goTo","_resultsSource","_userSources","_workshops","_initWorkshops","_initListener","nameMinLength","deleteWorkshop","drawingWorkshop","drawingTickets","drawingAmount","chartResults","chartTask","uiOnParamsChanged","$$expanded","_expanded","unshift","_initWorkshop","_removeUsersStream","$delete","markWorkshopForDrawing","Ticket","resource","getByWorkshop","workshopId","markWorkshopForDeletion","toggleWorkshop","$update","markTaskForChart","getByTask","taskId","toggleTask","Task","_addUsersStream","$$users","_streamResults","$uiRouterGlobals","old","users","_onDestroy","$on","editAdmin","deleteAdmin","admin","markAdminForDeletion","markAdminForEdit","Backend","Factory","$resource","paramDefaults","validateUsernameFrontend","filter","apply","$stateful","fraction","toFixed","component","props","computed","offcanvas","$offcanvas","$el","methods","_dummyScroll","trigger"],"mappings":"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","file":"../../js/app-c9545b4973.min.js","sourcesContent":["/*!\n * efit-frontend\n * eFit Frontend\n * http://www.finanz-training.at\n * @author Armin Pfurtscheller\n * @version 1.0.0\n * Copyright 2017. MIT licensed.\n */\n/* global angular, FastClick */\n(function(global, angular){\n  'use strict';\n\n  //\n  // MODULE\n  //\n  var module = 'eFit';\n\n  //\n  // APP\n  //\n  var app = angular.module(module, [\n    'ngSanitize',\n    'ngMessages',\n    'ngResource',\n    'ui.router',\n    'eFit.views',\n    'eFit.config'\n  ]);\n\n  //\n  // CONSTANTS\n  //\n\n  // @see: config.js\n\n  //\n  // CONFIG\n  //\n  app.config([\n    '$locationProvider', '$stateProvider', '$urlRouterProvider', '$httpProvider',\n    '$templateRequestProvider', '$resourceProvider', '$qProvider', 'VIEWS_PATH',\n    function(\n      $locationProvider, $stateProvider, $urlRouterProvider, $httpProvider,\n      $templateRequestProvider, $resourceProvider, $qProvider, VIEWS_PATH) {\n\n      // -------------------------\n      // LOCATION\n      // -------------------------\n      $locationProvider.html5Mode(false);\n      $locationProvider.hashPrefix('!');\n\n      // -------------------------\n      // INTERCEPTORS\n      // -------------------------\n      $httpProvider.interceptors.push('httpInterceptor');\n\n      // -------------------------\n      // PROMISES\n      // -------------------------\n      $qProvider.errorOnUnhandledRejections(false);\n\n      // -------------------------\n      // RESOURCES\n      // -------------------------\n      $resourceProvider.defaults.actions = {\n        get:    { method: 'GET' },\n        list:   { method: 'GET', isArray:true },\n        update: { method: 'PATCH' },\n        create: { method: 'POST'},\n        delete: { method: 'DELETE'}\n      };\n\n      // -------------------------\n      // TEMPLATES\n      // -------------------------\n\n      // assign default `templateUrl` for states\n      $stateProvider.decorator('views', function(state, parent) {\n        //\n        // Assigns default template URL:\n        // ./path/to/state/[view/][/name].html\n        //\n        var newViewConfig = {}, views = parent(state);\n        angular.forEach(views, function(config, view){\n          var viewMatch = view.match(/([^@]+)\\@/); // [parentView/]view@state.name\n          var viewName = viewMatch ? '/' + viewMatch[1] : '';\n\n          var stateName = state.name.replace(/\\./g, '/');\n\n          var templateUrl = config.templateUrl || [\n            VIEWS_PATH,\n            stateName,\n            viewName,\n            '.html'\n          ].join('');\n\n          config.templateUrl = templateUrl;\n          newViewConfig[view] = config;\n        });\n\n        return newViewConfig;\n      });\n\n      // ignore JWT authorization on template requests\n      $templateRequestProvider.httpOptions({\n        skipAuthorization: true\n      });\n\n      // -------------------------\n      // STATES\n      // -------------------------\n\n      // main (i18n)\n      $stateProvider.state('main', {\n        url: '',\n        abstract: true,\n        resolve: {\n          translations: ['i18n', function(i18n){\n            return i18n.load('de', {\n              skipAuthorization: true\n            });\n          }],\n        },\n        template: '<div id=\"main\" data-ui-view=\"\"></div>'\n      });\n\n      // frontend\n      $stateProvider.state('frontend', {\n        parent: 'main',\n        url: '/',\n        resolve: {\n          current: [\n            'user', '$state', '$q',\n            function(user, $state, $q){\n              var promise = user.load().$promise;\n              return promise.catch(function(e){\n                $state.go('login.frontend');\n              });\n            }\n          ]\n        },\n        data: {\n          role: [\n            'ROLE_USER',\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        views: {\n          'navbar@frontend': {},\n          'home@frontend': {},\n          'topics@frontend': {},\n\n          'financial-knowledge@frontend':{},\n          'financial-knowledge/interest-task@frontend':{},\n          'financial-knowledge/diversification-task@frontend':{},\n\n          'consumer-behaviour@frontend':{},\n          'consumer-behaviour/bomb-task@frontend':{},\n          'consumer-behaviour/anchoring-task@frontend':{},\n          'consumer-behaviour/mental-bookkeeping-task@frontend':{},\n          'consumer-behaviour/framing-task@frontend':{},\n\n          'self-control@frontend':{},\n          'self-control/savings-target-task@frontend':{},\n          'self-control/savings-supported-task@frontend':{},\n          'self-control/self-commitment-task@frontend':{},\n          'self-control/procrastination-task@frontend':{},\n\n          'status@frontend': {},\n          'contact@frontend': {\n            controller: 'ContactController',\n            controllerAs: 'contactController'\n          },\n          'footer@frontend': {},\n          'offcanvas@': {\n            controller: 'FrontendController',\n            controllerAs: 'frontendController'\n          },\n          '@': {\n            controller: 'FrontendController',\n            controllerAs: 'frontendController'\n          }\n        }\n      });\n\n      // backend\n      $stateProvider.state('backend', {\n        parent: 'main',\n        url: '/admin',\n        data: {\n          role: [\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        resolve: {\n          isSuperAdmin: [\n            'auth', '$state', '$q',\n            function(auth, $state, $q){\n              var defer = $q.defer();\n\n              var successCallback = function() {\n                defer.resolve(true);\n              };\n              var failureCallback = function() {\n                defer.resolve(false);\n              };\n\n              var promise = auth.hasRole(\n                'ROLE_SUPER_ADMIN'\n              ).then(\n                successCallback,\n                failureCallback\n              );\n\n              return defer.promise;\n            }\n          ]\n        },\n        redirectTo: 'backend.workshops',\n        views: {\n          'main@backend': {},\n          'navbar@backend': {},\n          'footer@backend': {},\n          'offcanvas@': {\n            controller: 'BackendController',\n            controllerAs: 'backendController'\n          },\n          '@': {\n            controller: 'BackendController',\n            controllerAs: 'backendController'\n          }\n        },\n\n      });\n\n      $stateProvider.state('backend.workshops', {\n        url: '?{expand:int}',\n        data: {\n          role: [\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        resolve: {\n          workshops: ['Workshop', function(Workshop){\n            return Workshop.list().$promise;\n          }]\n        },\n        params: {\n          expand: {\n            value: null,\n            dynamic: true\n          }\n        },\n        controller: 'WorkshopController',\n        controllerAs: 'workshopController'\n      });\n\n      $stateProvider.state('backend.admins', {\n        url: '/trainer',\n        data: {\n          role: 'ROLE_SUPER_ADMIN',\n          redirects: {\n            ROLE_ADMIN: 'backend'\n          }\n        },\n        resolve: {\n          admins: ['Admin', function(Admin){\n            return Admin.list().$promise;\n          }]\n        },\n        controller: 'AdminController',\n        controllerAs: 'adminController'\n      });\n\n      // login\n      $stateProvider.state('login', {\n        url: '/login',\n        parent: 'main',\n        abstract: true,\n        redirectTo: 'login.frontend.index'\n      });\n\n      $stateProvider.state('login.frontend', {\n        url: '/app',\n        data: {\n          redirects: {\n            ROLE_USER: 'frontend'\n          }\n        },\n        redirectTo: 'login.frontend.index',\n        controller: 'LoginFrontendController',\n        controllerAs: 'loginFrontendController'\n      });\n\n      $stateProvider.state('login.frontend.index', {\n        url: ''\n      });\n\n      $stateProvider.state('login.frontend.signup', {\n        url: '/schule'\n      });\n\n      $stateProvider.state('login.frontend.signin', {\n        url: '/zuhause'\n      });\n\n      $stateProvider.state('login.backend', {\n        url: '/admin',\n        data: {\n          redirects: {\n            ROLE_ADMIN: 'backend',\n            ROLE_SUPER_ADMIN: 'backend'\n          }\n        },\n        controller: 'LoginBackendController',\n        controllerAs: 'loginBackendController'\n      });\n\n      $urlRouterProvider.otherwise('/');\n    }\n  ]);\n\n  //\n  // RUN\n  //\n  app.run(['$injector', function($injector) {\n      var $transitions = $injector.get('$transitions');\n      var $rootScope = $injector.get('$rootScope');\n      var appState = $injector.get('appState');\n      var $state = $injector.get('$state');\n      var auth = $injector.get('auth');\n\n      var onStart = function(transition) {\n        appState.routerBusy = true;\n\n        var state = transition.to();\n        var data = state.data || {};\n        var role = data.role || null;\n        var redirects = data.redirects || {};\n\n        // no authentication check for states\n        // without any authorization settings\n        if (role === null) {\n\n          // try to redirect authenticated users\n          // with auth roles to configured route\n          var user = auth.getUser();\n          if (user === null) {\n            return true;\n          }\n\n          var roles = user.roles || [];\n          for (role in redirects) {\n            if (roles.indexOf(role)>=0) {\n              var target = redirects[role];\n              return $state.target(target);\n            }\n          }\n\n          return true;\n        }\n\n        // assert role an array for callbacks\n        if (!angular.isArray(role)) {\n          role = [role];\n        }\n\n        var successCallback = function()\n          {\n            return true;\n          };\n\n        var failureCallback = function()\n          {\n            // redirect to login page depending on\n            // given role with unsufficient rights\n            // or possibly failed refresh process!\n            switch(role[0])\n            {\n              case 'ROLE_ADMIN':\n              case 'ROLE_SUPER_ADMIN':\n                return $state.target('login.backend');\n              default:\n                return $state.target('login.frontend');\n            }\n          };\n\n        return auth.hasRole(role).then(\n          successCallback,\n          failureCallback\n        );\n      };\n\n      var onError = function(/*transition*/) {\n        appState.routerBusy = false;\n      };\n\n      var onSuccess = function(transition) {\n        $rootScope.state = transition.to();\n        appState.routerBusy = false;\n      };\n\n      $rootScope.$watch(\n        function() {\n          return appState.isBusy();\n        },\n        function(isBusy) {\n          $rootScope.isBusy = isBusy;\n          $rootScope.httpBusy = appState.httpBusy;\n          $rootScope.routerBusy = appState.routerBusy;\n        }\n      );\n\n      $transitions.onError({}, onError);\n      $transitions.onStart({}, onStart);\n      $transitions.onSuccess({}, onSuccess);\n\n      FastClick.attach(document.body);\n    }\n  ]);\n\n  //\n  // EXPOSE\n  //\n  global.ANGULAR_MODULE = module;\n\n})(window, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  var HttpInterceptor = function($injector)\n    {\n      this.$injector = $injector;\n      this._urls = {};\n    };\n\n  /** @var {Array.<string>} $inject Dependencies to be injected by Angular. */\n  HttpInterceptor.$inject = ['$injector'];\n\n  /**\n   * Gets latest response from $http.\n   */\n  HttpInterceptor.prototype.getLastSuccessResponse = function()\n    {\n      return this._lastSuccessResponse;\n    };\n\n  /**\n   * Gets latest error from $http.\n   */\n  HttpInterceptor.prototype.getLastErrorResponse = function()\n    {\n      return this._lastErrorResponse;\n    };\n\n  /**\n   * Gets latest response from $http.\n   */\n  HttpInterceptor.prototype.getLastResponse = function()\n    {\n      return this._lastResponse;\n    };\n\n  /**\n   * Returns a hash of all requested urls.\n   */\n  HttpInterceptor.prototype.getUrls = function()\n    {\n      return this._urls;\n    };\n\n  /**\n   * Intercepts $http request's config before invocation.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.request = function(config)\n    {\n      var appState = this.$injector.get('appState');\n\n      // set app state to busy\n      appState.httpBusy = true;\n\n      // save url in internal cache\n      this._setUrl(config);\n\n      // set common headers\n      config.headers['X-Requested-With'] = 'XMLHttpRequest';\n\n      // JWT authorization\n      var successCallback = function(token) {\n        if (token) {\n          config.headers.Authorization = 'Bearer ' + token;\n        }\n\n        return config;\n      };\n\n      var failureCallback = function() {\n        return config;\n      };\n\n      if (config.skipAuthorization) {\n        return config;\n      }\n\n      var jwtToken = this._getJWTToken(config);\n      var $q = this.$injector.get('$q');\n      return $q.when(jwtToken).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Intercepts $http request error's config before invocation.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.requestError = function(rejection)\n    {\n      var appState = this.$injector.get('appState');\n      var $q = this.$injector.get('$q');\n\n      appState.httpBusy = false;\n\n      return $q.reject(rejection);\n    };\n\n  /**\n   * Intercepts $http response before forwarding.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.response = function(response)\n    {\n      var appState = this.$injector.get('appState');\n\n      this._setLastSuccessResponse(response);\n      this._setLastResponse(response);\n\n      appState.httpBusy = false;\n\n      return response;\n    };\n\n  /**\n   * Intercepts $http error response before forwarding.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.responseError = function(rejection)\n    {\n      var appState = this.$injector.get('appState');\n      var $q = this.$injector.get('$q');\n\n      this._showGlobalErrorMessage(rejection);\n      this._setLastErrorResponse(rejection);\n      this._setLastResponse(rejection);\n\n      appState.httpBusy = false;\n\n      return $q.reject(rejection);\n    };\n\n  /**\n   * Sets fully qualified url with query string for a request.\n   * This is useful to manage Angular's $cacheFactory for $http.\n   * @param {object} config\n   */\n  HttpInterceptor.prototype._setUrl = function(config)\n    {\n      var $httpParamSerializer = this.$injector.get('$httpParamSerializer');\n      var params = $httpParamSerializer(config.params);\n      var url = config.url + (\n        params ?\n          '?' + params :\n          ''\n      );\n\n      this._urls[url] = true;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastResponse = function(responseOrRejection)\n    {\n      this._lastResponse = responseOrRejection;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastErrorResponse = function(rejection)\n    {\n      this._lastErrorResponse = rejection;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastSuccessResponse = function(response)\n    {\n      this._lastSuccessResponse = response;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._showGlobalErrorMessage = function(rejection)\n  {\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n\n    var config = rejection.config || {};\n    if (config.skipGlobalErrorMessage) {\n      return;\n    }\n\n    var data = rejection.data || {};\n    if (!data.message) {\n      return;\n    }\n\n    notification.error(i18n.get(data.message));\n  };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._getJWTToken = function() {\n    var auth = this.$injector.get('auth');\n    var jwt = this.$injector.get('jwt');\n\n    // a) no token available in storage\n    var token = jwt.getToken();\n    if (!token) {\n      return null;\n    }\n\n    // b) token is still valid, check for\n    // refresh if it expires in 5 minutes\n    if (jwt.isExpired(token, 600)) {\n      var successCallback = function() {\n        return jwt.getToken();\n      };\n\n      var failureCallback = function() {\n        return null;\n      };\n\n      return auth.refresh().then(\n        successCallback,\n        failureCallback\n      );\n    }\n\n    // c) use current token\n    return jwt.getToken();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('httpInterceptor',['$injector',function($injector){\n\n      var httpInterceptor = $injector.instantiate(HttpInterceptor);\n\n      return { // important: $http service invokes this methods with global scope!\n        getUrls: function(){ return httpInterceptor.getUrls(); },\n        getLastResponse: function(){ return httpInterceptor.getLastResponse(); },\n        getLastErrorResponse: function(){ return httpInterceptor.getLastErrorResponse(); },\n        getLastSuccessResponse: function(){ return httpInterceptor.getLastSuccessResponse(); },\n        request: function(config){ return httpInterceptor.request(config); },\n        response: function(response){ return httpInterceptor.response(response); },\n        requestError: function(rejection){ return httpInterceptor.responseError(rejection); },\n        responseError: function(rejection){ return httpInterceptor.responseError(rejection); }\n      };\n    }]);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Notification = function() {\n  };\n\n  Notification.$inject = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Shows user notification in a toast message.\n   *\n   * @public\n   * @method notify\n   * @param {string} message\n   * @param {string} status One of `danger`, `warning`, `success` or `primary`.\n   * @param {object} options Additional options like `timeout` and `pos`.\n   * @return {object} Notification object\n   */\n  Notification.prototype.notify = function(message, status, options) {\n    status = status || 'default';\n    options = options || {};\n\n    options.message = message;\n    options.status = status;\n\n    return UIkit.notification(options);\n  };\n\n  /**\n   * Shows user success notification.\n   *\n   * @public\n   * @method success\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.success = function(message, options) {\n    this.notify(message, 'success', options);\n  };\n\n  /**\n   * Shows user primary notification.\n   *\n   * @public\n   * @method success\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.primary = function(message, options) {\n    this.notify(message, 'primary', options);\n  };\n\n  /**\n   * Shows user error notification.\n   *\n   * @public\n   * @method error\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.error = function(message, options) {\n    this.notify(message, 'danger', options);\n  };\n\n  /**\n   * Shows user warning notification.\n   *\n   * @public\n   * @method warning\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.warning = function(message, options) {\n    this.notify(message, 'warning', options);\n  };\n\n  /**\n   * Closes all open notifications.\n   *\n   * @public\n   * @method closeAll\n   * @return {void}\n   */\n  Notification.prototype.closeAll = function() {\n    UIkit.notification.closeAll();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('notification', Notification);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var AppState = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  AppState.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} httpBusy If $http is currently doing work. */\n  AppState.prototype.httpBusy = false;\n\n  /** @var {boolean} routerBusy If router is currently doing work. */\n  AppState.prototype.routerBusy = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Returns true if `httpBusy` or `routeBusy` is true.\n   *\n   * @public\n   * @method isBusy\n   * @return {void}\n   */\n  AppState.prototype.isBusy = function() {\n    return this.httpBusy || this.routeBusy;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('appState', AppState);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Animation = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  Animation.$inject = ['$injector'];\n\n  /**\n   * Gets correctly prefixed animation end event.\n   *\n   * @private\n   * @property animationEndEvent\n   * @return {void}\n   */\n  Animation.prototype.animationEndEvent = (function() {\n    var dummy = document.createElement('div');\n    var events = {\n      'WebkitAnimation': 'webkitAnimationEnd',\n      'MozTAnimation': 'animationend',\n      'animation': 'animationend'\n    };\n\n    for(var key in events){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return events[key];\n        }\n    }\n\n    return null;\n  })();\n\n  /**\n   * Gets correctly prefixed transition end event.\n   *\n   * @private\n   * @property transitionEndEvent\n   * @return {void}\n   */\n  Animation.prototype.transitionEndEvent = (function() {\n    var dummy = document.createElement('div');\n    var events = {\n      'transition':'transitionend',\n      'OTransition':'oTransitionEnd',\n      'MozTransition':'transitionend',\n      'WebkitTransition':'webkitTransitionEnd'\n    };\n\n    for(var key in events){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return events[key];\n        }\n    }\n\n    return null;\n  })();\n\n  /**\n   * Prepares cross-browser compatible tranlsate hash for ng-style.\n   *\n   * @public\n   * @method translate\n   * @param {number} x\n   * @param {number} y\n   * @param {number} [z]\n   * @return {object}\n   */\n  Animation.prototype.translate = function(x, y, z) {\n    var string = this.$injector.get('string');\n\n    var translate = angular.isUndefined(z) ?\n      string.sprintf('translate(%spx,%spx)', x, y) :\n      string.sprintf('translate3d(%spx,%spx,%spx)', x, y, z);\n\n    return {\n      'webkitTransform': translate,\n      'mozTransform': translate,\n      'msTransform': translate,\n      'oTransform': translate,\n      'transform': translate\n    };\n  };\n\n  /**\n   * Polyfills potentially missing `requestAnimationFrame`.\n   *\n   * @private\n   * @method requestAnimationFrame\n   * @return {void}\n   */\n  Animation.prototype.requestAnimationFrame = (function(){\n      var lastTime = 0;\n      var vendors = ['ms', 'moz', 'webkit', 'o'];\n      for(var i = 0; i < vendors.length && !window.requestAnimationFrame; i++) {\n          window.requestAnimationFrame = window[vendors[i]+'RequestAnimationFrame'];\n          window.cancelAnimationFrame = (\n            window[vendors[i]+'CancelAnimationFrame'] ||\n            window[vendors[i]+'CancelRequestAnimationFrame']\n          );\n      }\n\n      if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function(callback) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var timeout = function() { callback(currTime + timeToCall); };\n            var id = window.setTimeout(timeout, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n      }\n\n      return window.requestAnimationFrame.bind(window);\n  }());\n\n  /**\n   * Polyfills potentially missing `cancelAnimationFrame`.\n   *\n   * @private\n   * @method cancelAnimationFrame\n   * @return {void}\n   */\n  Animation.prototype.cancelAnimationFrame = (function(){\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function(id) { clearTimeout(id); };\n    }\n\n    return window.cancelAnimationFrame.bind(window);\n  })();\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('animation', Animation);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  var Random = function() {\n    this._spareRandomCache = null;\n  };\n\n  Random.$inject = [];\n\n  Random.prototype.between = function(min, max) {\n    min = typeof min !== 'undefined' ? min : 0;\n    max = typeof max !== 'undefined' ? max : 1;\n\n    var fact = (max - min + 1);\n    var rand = Math.random();\n\n    return Math.floor(rand * fact + min);\n  };\n\n  Random.prototype.gaussian = function(mean, stdDev) {\n    stdDev = typeof stdDev !== 'undefined' ? stdDev : 1;\n    mean = typeof mean !== 'undefined' ? mean : 0;\n\n    var spare = this._spareRandomCache;\n    if (this._spareRandomCache !== null) {\n      this._spareRandomCache = null;\n      return mean + stdDev * spare;\n    }\n\n    var u, v, s;\n\n    do {\n      u = 2 * Math.random() - 1;\n      v = 2 * Math.random() - 1;\n      s = u*u + v*v;\n    } while (s >= 1 || s===0);\n\n    var m = Math.sqrt(-2 * Math.log(s) / s);\n    this._spareRandomCache = v * m;\n    return mean + stdDev * u * m;\n  };\n\n  Random.prototype.pick = function(array) {\n    return array[this.between(0, array.length - 1)];\n  };\n\n  Random.prototype.push = function(array, value) {\n    var rand = this.between(0, array.length - 1);\n    array.push(array[rand]);\n    array[rand] = value;\n\n    return array.length;\n  };\n\n  Random.prototype.shuffle = function(array) {\n    for( var i=array.length-1; i>0; i-- ) {\n      var rand = this.between(0, i);\n      var temp = array[i];\n\n      array[i] = array[rand];\n      array[rand] = temp;\n    }\n\n    return array;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('random', Random);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var String = function()\n    {\n    };\n\n  String.$inject = [];\n\n  /**\n   * Replaces placeholders (= '%s') from a string with variables.\n   *\n   * @public\n   * @method sprintf\n   * @param {string} input String to replace placeholders.\n   * @param {object} variables Object holding replacements.\n   * @return {string}\n   */\n  String.prototype.sprintf = function(input,variables)\n    {\n        if (!angular.isArray(variables)) {\n          variables = [].slice.call(arguments, 1);\n        }\n\n        for (var i=0; i<variables.length; i++) {\n          input = input.replace(/%s/,variables[i]);\n        }\n\n        return input;\n    };\n\n  /**\n   * Truncates a string by given params.\n   *\n   * @public\n   * @method truncate\n   * @param {string} input String to be truncated.\n   * @param {number} [maxLength=20] Maximum number of chars.\n   * @return {string}\n   */\n  String.prototype.truncate = function(input,maxLength)\n    {\n        maxLength = maxLength || 20;\n        if (input.length <= maxLength) {\n          return input;\n        }\n\n        return input.substring(0,maxLength) + '...';\n    };\n\n  /**\n   * Trims a string.\n   *\n   * @public\n   * @method trim\n   * @param {string} input String to trim.\n   * @return {string}\n   */\n  String.prototype.trim = function(input)\n    {\n        return input.replace(/^\\s+|\\s+$/g, '');\n    };\n\n  /**\n   * Transforms a string to camel case.\n   *\n   * @public\n   * @method toCamel\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toCamel = function(input)\n    {\n        return input.replace(/([-_][a-z])/g, function(part){\n            return part.toUpperCase().replace(/[-_]/,'');\n        });\n    };\n\n  /**\n   * Transforms a string to spinal case.\n   *\n   * @public\n   * @method toSpinal\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toSpinal = function(input)\n    {\n        return input.replace(/([A-Z]|_[a-z])/g, function(part){\n            return '-' + part.toLowerCase().replace(/_/,'');\n        });\n    };\n\n  /**\n   * Transforms a string to snake case.\n   *\n   * @public\n   * @method toSnake\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toSnake = function(input)\n    {\n        return input.replace(/([A-Z]|-[a-z])/g, function(part){\n            return '_' + part.toLowerCase().replace(/-/,'');\n        });\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('string', String);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  /**\n   * @varructor\n   */\n  var Storage = function($injector) {\n    this.$injector = $injector;\n  };\n\n  Storage.MODE_COOKIES = 'COOKIES';\n  Storage.MODE_STORAGE = 'STORAGE';\n  Storage.$inject = ['$injector'];\n\n  /**\n   * Gets the current storage interface of the service.\n   * Can be one of modes `COOKIES` or `STORAGE`. If no\n   * one is given will default to local storage if it's\n   * supported, otherwise falls back to cookies.\n   *\n   * @public\n   * @method getProxy\n   * @param {String} mode\n   * @return {Object}\n   */\n  Storage.prototype.getProxy = function(mode) {\n    switch (mode) {\n      case Storage.MODE_COOKIES:\n       return this._getCookieProxy();\n\n      case Storage.MODE_STORAGE:\n       return this._getLocalStorageProxy();\n\n     default:\n      if (this.supportsLocalStorage()) {\n        return this._getLocalStorageProxy();\n      }\n\n      return this._getCookieProxy();\n    }\n  };\n\n  /**\n   * Checks if browser supports local storage.\n   *\n   * @public\n   * @method supportsLocalStorage\n   * @return {Boolean}\n   */\n  Storage.prototype.supportsLocalStorage = function() {\n    var $window = this.$injector.get('$window');\n    var storageProxy = $window.localStorage;\n    var key = '__local__storage__feature__test';\n    var val = '__local__storage__feature__test';\n\n    try {\n     storageProxy.setItem(key, val);\n     storageProxy.removeItem(key);\n    } catch (e) {\n     return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Stringifies and uri encodes a value.\n   *\n   * @private\n   * @param {Mixed} value\n   * @method _encode\n   *\n   * @return {String}\n   */\n  Storage.prototype._encode = function(value) {\n    try {\n     value = JSON.stringify(value);\n    } catch (e) {\n     value = undefined;\n    }\n\n    return encodeURIComponent(value);\n  };\n\n  /**\n   * Decodes a stringified and uri encoded value.\n   *\n   * @private\n   * @param {Mixed}\n   * @method _decodeValue\n   *\n   * @return {Mixed}\n   */\n  Storage.prototype._decode = function(value) {\n    var decoded;\n    switch (typeof value) {\n     case 'string':\n       decoded = decodeURIComponent(value);\n       try {\n         decoded = JSON.parse(decoded);\n       } catch (e) {\n         /* noop */\n       }\n       break;\n     default:\n       decoded = undefined;\n    }\n\n    if (decoded === 'undefined') {\n     decoded = undefined;\n    }\n\n    if (decoded === undefined) {\n     decoded = null;\n    }\n\n    return decoded;\n  };\n\n  /**\n   * Provides cookie storage proxy layer.\n   *\n   * @private\n   * @method _getCookieProxy\n   *\n   * @return {Object}\n   */\n  Storage.prototype._getCookieProxy = function() {\n    var documentProxy = this.$injector.get('$document');\n\n    var me = this;\n    var _getAll = function(parse) {\n     var items = {};\n\n     var cookies = documentProxy.cookie.split('; ');\n     if (cookies.length === 1 && cookies[0] === '') {\n       return items;\n     }\n\n     for (var i = 0; i < cookies.length; i++) {\n       var cookie = cookies[i].split('=');\n       if (!parse) {\n         items[cookie[0]] = cookie[1];\n         continue;\n       }\n\n       items[cookie[0]] = me._decode(cookie[1]);\n     }\n\n     return items;\n    };\n\n    var setCookie = function(key, value, expires, domain, path, secure) {\n     value = me._encode(value);\n\n     try {\n       var date = new Date(expires);\n       if (isNaN(date)) {\n         var input = expires;\n         expires = undefined;\n         throw new Error('storage.js: \"' + input + '\" cannot be converted to date string!');\n       }\n\n       expires = date.toUTCString();\n     } catch (e) {\n       /* noop */\n     }\n\n     expires = expires ? expires : false;\n\n     var cookie = key + '=' + value;\n     cookie += expires ? ';expires='+expires : '';\n     cookie += domain ? ';domain='+domain : '';\n     cookie += path ? ';path='+path : '';\n     cookie += secure ? ';secure' : '';\n\n     documentProxy.cookie = cookie;\n    };\n\n    var getCookie = function(key) {\n     var cookies = _getAll(false);\n     if (cookies.hasOwnProperty(key)) {\n       return me._decode(cookies[key]);\n     }\n\n     return null;\n    };\n\n    var getAllCookies = function() {\n     return _getAll(true);\n    };\n\n    var removeCookie = function(key) {\n     setCookie(key, '', -1);\n    };\n\n    var removeAllCookies = function() {\n     for (var key in getAllCookies()) {\n       removeCookie(key);\n     }\n    };\n\n    return {\n     getItem: getCookie,\n     getAllItems: getAllCookies,\n     setItem: setCookie,\n     removeItem: removeCookie,\n     removeAllItems: removeAllCookies\n    };\n  };\n\n  /**\n   * Provides local storage proxy layer.\n   *\n   * @private\n   * @method _getLocalStorageProxy\n   *\n   * @return {Object}\n   */\n  Storage.prototype._getLocalStorageProxy = function() {\n    var $window = this.$injector.get('$window');\n    var storageProxy = $window.localStorage;\n\n    var me = this;\n    var setItem = function(key, value) {\n     value = me._encode(value);\n     storageProxy.setItem(key, value);\n    };\n\n    var getItem = function(key) {\n     var value = storageProxy.getItem(key);\n     return me._decode(value);\n    };\n\n    var getAllItems = function() {\n     var items = {};\n\n     for (var i = 0; i < storageProxy.length; i++) {\n       var key = storageProxy.key(i);\n       items[key] = getItem(key);\n     }\n\n     return items;\n    };\n\n    var removeItem = function(key) {\n     storageProxy.removeItem(key);\n    };\n\n    var removeAllItems = function() {\n     storageProxy.clear();\n    };\n\n    return {\n     getItem: getItem,\n     getAllItems: getAllItems,\n     setItem: setItem,\n     removeItem: removeItem,\n     removeAllItems: removeAllItems\n    };\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('storage', Storage);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Auth = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  /**\n   * @property {Array.<string>} $inject\n   */\n  Auth.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends a POST request to register route and\n   * persists retrieved JWT token on success.\n   *\n   * @public\n   * @method signin\n   * @param {Object} data Data to submit.\n   * @param {string} [firewall='frontend'] firewall\n   * @param {Object} [config={}] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.signup = function(data, firewall, config)\n    {\n      var $http = this.$injector.get('$http');\n\n      firewall = firewall || 'frontend';\n      config = config || {};\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      var url = this._getSignupUrl(firewall);\n\n      var promise = $http.post(\n        url,\n        {\n          _username: data.username,\n          _password: data.password\n        },\n        angular.extend(config || {})\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Sends a POST request to login route and\n   * persists retrieved JWT token on success.\n   *\n   * @public\n   * @method signin\n   * @param {Object} data Data to submit.\n   * @param {string} [firewall='frontend'] firewall\n   * @param {Object} [config={}] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.signin = function(data, firewall, config)\n    {\n      var $http = this.$injector.get('$http');\n\n      firewall = firewall || 'frontend';\n      config = config || {};\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      var url = this._getSigninUrl(firewall);\n\n      var promise = $http.post(\n        url,\n        {\n          _username: data.username,\n          _password: data.password\n        },\n        angular.extend(config || {}, {\n          skipAuthorization: true\n        })\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Destroys JWT token representing user.\n   *\n   * @public\n   * @method logout\n   * @param {Object} [config] $http config.\n   * @return {Void}\n   */\n  Auth.prototype.signout = function(config)\n    {\n      var $http = this.$injector.get('$http');\n      var user = this.$injector.get('user');\n      var jwt = this.$injector.get('jwt');\n\n      var successCallback = function()\n        {\n          jwt.invalidate();\n          user.unload();\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      return $http.get(\n        this._getSignoutUrl(),\n        config || {}\n      ).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sends a POST request to refresh route\n   * with saved refresh token from login().\n   *\n   * @public\n   * @method refresh\n   * @param {Object} [config] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.refresh = function(config)\n    {\n      var $http = this.$injector.get('$http');\n      var jwt = this.$injector.get('jwt');\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function(rejection)\n        {\n          // invalidate possibly stored jwt\n          // token to avoid further lookups\n          // especially from router resolve\n          jwt.invalidate();\n        };\n\n      var promise = $http.post(\n        this._getRefereshUrl(),\n        {\n          /* jshint camelcase: false */\n          refresh_token: jwt.getRefreshToken()\n          /* jshint camelcase: true */\n        },\n        angular.extend(config || {}, {\n          skipGlobalErrorMessage: true,\n          skipAuthorization: true\n        })\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Returns decoded JWT token containing\n   * user information such as `username`.\n   * Note: By default expired tokens are\n   * not accepted, set parameter if you\n   * want to accept expired tokens too!\n   *\n   * @public\n   * @method getUser\n   * @param {boolean} [acceptExpired=false]\n   * @return {Object|null}\n   */\n  Auth.prototype.getUser = function(acceptExpired)\n    {\n      acceptExpired = acceptExpired || false;\n\n      var jwt = this.$injector.get('jwt');\n\n      var token = jwt.getToken();\n      if (!token) {\n        return null;\n      }\n\n      if (!acceptExpired) {\n        if (jwt.isExpired()) {\n          return null;\n        }\n      }\n\n      return jwt.decode(token);\n    };\n\n  /**\n   * Checks if user has given role provided\n   * in `roles` property encoded into JWT.\n   *\n   * @public\n   * @method hasRole\n   * @param {string|array} role\n   * @return {Promise}\n   */\n  Auth.prototype.hasRole = function(role)\n    {\n      var jwt = this.$injector.get('jwt');\n      var $q = this.$injector.get('$q');\n\n      var defer = $q.defer();\n      var promise = defer.promise;\n\n      var isArray = angular.isArray(role);\n      if (isArray && role.length === 0) {\n        defer.reject(null);\n        return promise;\n      }\n\n      if (!role) {\n        defer.reject(null);\n        return promise;\n      }\n\n      // accept expired tokens - we will\n      // use refresh() to get new token\n      // if current one is invalid now\n      var user = this.getUser(true);\n      if (user === null) {\n        defer.reject(null);\n        return promise;\n      }\n\n      // primitive method for role check\n      var resolveRole = function(user) {\n        var roles = user.roles || [];\n        if (angular.isString(role)) {\n          role = [role];\n        }\n\n        var hasRole = false;\n        for (var i=0; i<role.length; i++) {\n          if (roles.indexOf(role[i]) >= 0) {\n            hasRole = true;\n            break;\n          }\n        }\n\n        if (hasRole) {\n          defer.resolve();\n        } else {\n          defer.reject();\n        }\n      };\n\n      // immediately resolve valid tokens\n      if (!jwt.isExpired()) {\n        resolveRole(user);\n        return promise;\n      }\n\n      // try to refresh invalid tokens\n      var me = this;\n      var successCallback = function()\n        {\n          user = me.getUser();\n          resolveRole(user);\n        };\n\n      var failureCallback = function()\n        {\n          defer.reject();\n        };\n\n      this.refresh().then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Saves server response containing\n   * the `token` and `refresh_token`.\n   *\n   * @private\n   * @method _saveToken\n   * @param {object} response\n   * @return {void}\n   */\n  Auth.prototype._saveToken = function(data)\n    {\n      /* jshint camelcase: false */\n      var jwt = this.$injector.get('jwt');\n\n      jwt.setRefreshToken(data.refresh_token);\n      jwt.setToken(data.token);\n      /* jshint camelcase: true */\n    };\n\n  /**\n   * Returns endpoint to gather JWT depending on firewall.\n   *\n   * @private\n   * @method _getSigninUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSigninUrl = function(firewall){\n    var API_URL = this.$injector.get('API_URL');\n\n    switch(firewall) {\n      case 'backend':\n      case 'frontend':\n        return API_URL + '/auth/' + firewall + '/signin';\n      default:\n        throw new Error('Unknown firewall name: ' + firewall);\n    }\n  };\n\n  /**\n   * Returns endpoint to register at given firewall.\n   *\n   * @private\n   * @method _getSignupUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSignupUrl = function(firewall){\n    var API_URL = this.$injector.get('API_URL');\n\n    switch(firewall) {\n      case 'frontend':\n        return API_URL + '/auth/' + firewall + '/signup';\n      case 'backend':\n        throw new Error('Not implemented yet!');\n      default:\n        throw new Error('Unknown firewall name: ' + firewall);\n    }\n  };\n\n  /**\n   * Returns endpoint to refresh the JWT.\n   *\n   * @private\n   * @method _getRefereshUrl\n   * @return {string}\n   */\n  Auth.prototype._getRefereshUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/auth/refresh';\n  };\n\n  /**\n   * Returns endpoint to revoke the JWT.\n   *\n   * @private\n   * @method _getSignoutUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSignoutUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/signout';\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('auth', Auth);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var I18N = function($injector)\n    {\n      this.translations = {};\n      this.$injector = $injector;\n\n      this.setLocale(this._detectLocale());\n    };\n\n  I18N.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} locales Currently supported locales. */\n  I18N.prototype.locales = {\n    'de': true\n  };\n\n  /** @var {string} defaultLocale Default locale to use. */\n  I18N.prototype.defaultLocale = 'de';\n\n  /**\n   * Loads translations according to current locale if not available.\n   *\n   * @public\n   * @method load\n   * @param {locale} [locale] Two letter language code.\n   * @param {Object} [config] Additional config for $http\n   * @return {Promise|void}\n   */\n  I18N.prototype.load = function(locale, config)\n    {\n      locale = locale || this.getLocale();\n      config = config || {};\n\n      if (this.translations[locale]) {\n        return;\n      }\n\n      var $http = this.$injector.get('$http');\n      var $log = this.$injector.get('$log');\n\n      var me = this;\n      var url = this._getJSONUrl(locale);\n      var successCallback = function(response)\n        {\n          me.translations[locale] = response.data;\n        };\n\n      var failureCallback = function()\n        {\n          $log.error('Could not load translations!');\n        };\n\n      return $http.get(url, config).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets locale to given paraemter if it's a valid one.\n   * Falls back to `defaultLocale` if it's an invalid one.\n   *\n   * @public\n   * @method setLocale\n   * @param {string} locale\n   * @return {void}\n   */\n  I18N.prototype.setLocale = function(locale)\n    {\n      if (this.locales[locale]) {\n        this.locale = locale;\n        return;\n      }\n\n      this.locale = this.defaultLocale;\n    };\n\n  /**\n   * Delivers the currently used locale for translations.\n   *\n   * @public\n   * @method setLocale\n   * @param {string} locale\n   * @return {void}\n   */\n  I18N.prototype.getLocale = function()\n    {\n      return this.locale;\n    };\n\n  /**\n   * Makes a lookup within current translation dictionary.\n   *\n   * @param {string} key The i18n key.\n   * @param {string} ... Parameters to be replaced.\n   * @return {string}\n   */\n  I18N.prototype.get = function(key)\n    {\n      var string = this.$injector.get('string');\n      var params = [].slice.call(arguments,1);\n      var locale = this.getLocale();\n\n      var text;\n      try {\n        text = this.translations[locale][key];\n      } catch(e) {}\n\n      return string.sprintf(text || key, params);\n    };\n\n  /**\n   * Returns endpoint to gather JSON translations.\n   *\n   * @private\n   * @method _getTranslationsUrl\n   * @param {string} locale\n   * @return {string}\n   */\n  I18N.prototype._getJSONUrl = function(locale)\n    {\n      return 'json/' + locale + '.json';\n    };\n\n  /**\n   * @ignore\n   */\n  I18N.prototype._detectLocale = function()\n    {\n      var navigator = this.$injector.get('$window').navigator;\n      var android = /android.*\\W(\\w\\w)-(\\w\\w)\\W/i;\n      var language;\n\n      // try to find locale on android devices!\n      if( navigator && navigator.userAgent &&\n          (language = navigator.userAgent.match(android)) ) {\n          language = language[1];\n      }\n\n      // for all other browsers\n      if (!language && navigator) {\n        if( navigator.language ) {\n          language = navigator.language;\n        } else if( navigator.userLanguage ) {\n          language = navigator.userLanguage;\n        } else if( navigator.systemLanguage ) {\n          language = navigator.systemLanguage;\n        } else if( navigator.browserLanguage ) {\n          language = navigator.browserLanguage;\n        }\n      }\n\n      // now we can get iso code\n      if (language) {\n        return language.substr(0,2);\n      }\n\n      // use `defaultLocale` as fallback\n      return this.defaultLocale;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('i18n', I18N);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  /**\n  * @constructor\n  */\n  var JWT = function($injector, storage) {\n    this.$injector = $injector;\n    this.storage = storage.getProxy();\n  };\n\n  JWT.$inject = ['$injector', 'storage'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} tokenKey Token key for local storage. */\n  JWT.prototype.tokenKey = 'NAksNyshI3';\n\n  /** @var {string} refreshKey Refresh key for local storage. */\n  JWT.prototype.refreshKey = 'i08BFNG9t5';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Resets JWT token / refresh token in local storage.\n   *\n   * @public\n   * @method invalidate\n   * @return {void}\n   */\n  JWT.prototype.invalidate = function()\n    {\n      this.removeRefreshToken();\n      this.removeToken();\n    };\n\n  /**\n   * Gets JWT token from local storage.\n   *\n   * @public\n   * @method getToken\n   * @return {string|null}\n   */\n  JWT.prototype.getToken = function()\n    {\n      return this.storage.getItem(this.tokenKey);\n    };\n\n  /**\n   * Sets JWT token in local storage.\n   *\n   * @public\n   * @method setToken\n   * @param {string} token\n   * @return {void}\n   */\n  JWT.prototype.setToken = function(token)\n    {\n      this.storage.setItem(this.tokenKey,token);\n    };\n\n  /**\n   * Removes JWT token from local storage.\n   *\n   * @public\n   * @method removeToken\n   * @return {void}\n   */\n  JWT.prototype.removeToken = function()\n    {\n      this.storage.removeItem(this.tokenKey);\n    };\n\n  /**\n   * Gets JWT refresh token from local storage.\n   *\n   * @public\n   * @method getRefreshToken\n   * @return {string|null}\n   */\n  JWT.prototype.getRefreshToken = function()\n    {\n      return this.storage.getItem(this.refreshKey);\n    };\n\n  /**\n   * Sets JWT refresh token in local storage.\n   *\n   * @public\n   * @method setRefreshToken\n   * @param {string} refreshToken\n   * @return {void}\n   */\n  JWT.prototype.setRefreshToken = function(refreshToken)\n    {\n      this.storage.setItem(this.refreshKey, refreshToken);\n    };\n\n  /**\n   * Removes JWT refresh token from local storage.\n   *\n   * @public\n   * @method removeToken\n   * @return {void}\n   */\n  JWT.prototype.removeRefreshToken = function()\n    {\n      this.storage.removeItem(this.refreshKey);\n    };\n\n  /**\n   * Converts timestamp into date object.\n   *\n   * @public\n   * @method getExpirationDate\n   * @param {string} token\n   * @return {date}\n   */\n  JWT.prototype.getExpirationDate = function(token)\n    {\n      var $log = this.$injector.get('$log');\n\n      token = token || this.getToken();\n      if (!token) {\n        $log.error('No token given or available!');\n        return null;\n      }\n\n      var decoded = this.decode(token);\n      if (typeof decoded.exp==='undefined') {\n        $log.error('No `exp` property available!');\n        return null;\n      }\n\n      var date = new Date(0);\n      date.setUTCSeconds(decoded.exp);\n\n      return date;\n    };\n\n  /**\n   * Determines if given token is expired.\n   *\n   * @public\n   * @method isExpired\n   * @param {string} token\n   * @param {number} offset In seconds.\n   * @return {boolean}\n   */\n  JWT.prototype.isExpired = function(token, offset)\n    {\n      offset = offset || 0;\n      token = token || this.getToken();\n\n      var date = this.getExpirationDate(token);\n      if (date === null) {\n        return true;\n      }\n\n      var now = new Date().valueOf();\n      offset = now + offset * 1000;\n      date = date.valueOf();\n\n      return date <= offset;\n    };\n\n  /**\n   * Tries to decode a JWT token.\n   *\n   * @public\n   * @method decode\n   * @param {string} token\n   * @return {object|null}\n   */\n  JWT.prototype.decode = function(token)\n    {\n      var $log = this.$injector.get('$log');\n\n      try {\n        var parts = token.split('.');\n        if (parts.length !== 3) {\n          throw new Error('JWT must have 3 parts!');\n        }\n\n        var decoded = this._base64Decode(parts[1]);\n        if (!decoded) {\n          throw new Error('Cannot decode the token!');\n        }\n\n        return angular.fromJson(decoded);\n      } catch(e) {\n        $log.error(e);\n        return null;\n      }\n    };\n\n  /**\n   * Validates and decodes a base64 url.\n   *\n   * @private\n   * @method _base64Decode\n   * @param {string} input\n   * @return {string}\n   */\n  JWT.prototype._base64Decode = function(input)\n    {\n      var $window = this.$injector.get('$window');\n      var $log = this.$injector.get('$log');\n\n      var output = input\n        .replace(/-/g, '+')\n        .replace(/_/g, '/');\n\n      try{\n        switch (output.length % 4) {\n          case 0: {\n            break;\n          }\n\n          case 2: {\n            output += '=='; break;\n          }\n\n          case 3: {\n            output += '='; break;\n          }\n\n          default: {\n            throw new Error('Illegal base64url code!');\n          }\n        }\n      } catch(e) {\n        $log.error(e);\n        return '';\n      }\n\n      var decoded = $window.atob(output);\n      var escaped = $window.escape(decoded);\n\n      return $window.decodeURIComponent(escaped);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('jwt', JWT);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var User = function($injector) {\n    this.$injector = $injector;\n\n    this._states = [\n      $injector.get('STATE_BEGINNER'),\n      $injector.get('STATE_AMATEUR'),\n      $injector.get('STATE_ADVANCED'),\n      $injector.get('STATE_EXPERT')\n    ];\n\n    this._eventSource = null;\n    this._results = [];\n    this._payload = {};\n    this._pending = {};\n    this._tasks = {};\n  };\n\n  User.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} state Current state of user. */\n  User.prototype.state = null;\n\n  /** @var {number} group Random group of user. */\n  User.prototype.group = null;\n\n  /** @var {number} tickets Current ticket count. */\n  User.prototype.tickets = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Fetches current user through `User` resource.\n   *\n   * @public\n   * @method load\n   * @return {void}\n   */\n  User.prototype.load = function() {\n    var User = this.$injector.get('User');\n    var jwt = this.$injector.get('jwt');\n\n    var me = this;\n    var successCallback = function(user) {\n\n      // save only json payload from\n      // ng-resource's `user` object\n      me._payload = user.toJSON();\n\n      // initialize members\n      me._initTickets();\n      me._initState();\n      me._initGroup();\n\n      // gameplay setup calls\n      // only for `ROLE_USER`!\n      if (!me.isUser()) {\n        return;\n      }\n\n      // init tasks at first!\n      me._initWatches();\n      me._initTasks();\n\n      // then results & SSE!\n      me._initPending();\n      me._initResults();\n      me._initSSE();\n    };\n\n    var failureCallback = function(rejection) {\n      // invalidate possibly stored jwt\n      // token to avoid further lookups\n      // especially from router resolve\n      jwt.invalidate();\n    };\n\n    var current = User.current();\n\n    current.$promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return current;\n  };\n\n  /**\n   * Resets current user session from application.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  User.prototype.unload = function() {\n    var sse = this.$injector.get('sse');\n\n    if (this._eventSource) {\n      sse.removeSource(this._eventSource);\n    }\n\n    if (this._unwatchTickets) {\n      this._unwatchTickets();\n    }\n\n    if (this._unwatchState) {\n      this._unwatchState();\n    }\n\n    this._eventSource = null;\n    this._results = [];\n    this._payload = {};\n    this._pending = {};\n    this._tasks = {};\n\n    this.tickets = null;\n    this.state = null;\n    this.group = null;\n  };\n\n  /**\n   * Updates user from external scopes.\n   * This is helpful for refreshing its\n   * state without invoking a request to\n   * the server when user was embedded in\n   * another request's response.\n   *\n   * @public\n   * @method update\n   * @param {object} result\n   * @return {void}\n   *\n   */\n  User.prototype.update = function(result) {\n    this._payload = result.user;\n\n    this._addResult(result);\n    this._initTickets();\n    this._initState();\n    this._initGroup();\n  };\n\n  /**\n   * Checks if current user has role `ROLE_USER`.\n   *\n   * @public\n   * @method isUser\n   * @return {boolean}\n   */\n  User.prototype.isUser = function() {\n    return this.hasRole('ROLE_USER');\n  };\n\n  /**\n   * Checks if current user has role `ROLE_ADMIN`.\n   *\n   * @public\n   * @method isAdmin\n   * @return {boolean}\n   */\n  User.prototype.isAdmin = function() {\n    return this.hasRole('ROLE_ADMIN');\n  };\n\n  /**\n   * Checks if current user has role `ROLE_SUPER_ADMIN`.\n   *\n   * @public\n   * @method isSuperAdmin\n   * @return {boolean}\n   */\n  User.prototype.isSuperAdmin = function() {\n    return this.hasRole('ROLE_SUPER_ADMIN');\n  };\n\n  /**\n   * Checks if current user's workshop is active.\n   *\n   * @public\n   * @method isInWorkshop\n   * @return {boolean}\n   */\n  User.prototype.isInWorkshop = function() {\n    if (!this.isUser()) {\n      return true;\n    }\n\n    return this._payload.workshop.isActive;\n  };\n\n  /**\n   * Checks if current user has given role.\n   *\n   * @public\n   * @method hasRole\n   * @param {string|array} role\n   * @return {boolean}\n   */\n  User.prototype.hasRole = function(role) {\n    if (!angular.isArray(role)) {\n      role = [role];\n    }\n\n    var roles = this._payload.roles || [];\n    for (var i=0; i<role.length; i++) {\n      if (roles.indexOf(role[i])>=0) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Provides user's task hash map.\n   *\n   * @public\n   * @method getTasks\n   * @return {object}\n   */\n  User.prototype.getTasks = function() {\n    return this._tasks;\n  };\n\n  /**\n   * Gets `task` resource of user by type.\n   *\n   * @public\n   * @method getTaskByType\n   * @param {string} type\n   * @return {object|null}\n   */\n  User.prototype.getTaskByType = function(type) {\n    return this._tasks[type] || null;\n  };\n\n  /**\n   * Gets pending `result` resource of user by type.\n   *\n   * @public\n   * @method getResultByType\n   * @param {string} type\n   * @return {object|null}\n   */\n  User.prototype.getPendingByType = function(type) {\n    return this._pending[type] || null;\n  };\n\n  /**\n   * Gets `state` mapped to string representation.\n   *\n   * @public\n   * @method getGroupAsString\n   * @return {string}\n   */\n  User.prototype.getGroupAsString = function() {\n    switch(this.group) {\n      case this.$injector.get('GROUP_A'):\n        return 'GROUP_A';\n      case this.$injector.get('GROUP_B'):\n        return 'GROUP_B';\n      default:\n        return null;\n    }\n  };\n\n  /**\n   * Gets `state` mapped to string representation.\n   *\n   * @public\n   * @method getStateAsString\n   * @return {string}\n   */\n  User.prototype.getStateAsString = function() {\n    switch(this.state) {\n      case this.$injector.get('STATE_AMATEUR'):\n        return 'STATE_AMATEUR';\n      case this.$injector.get('STATE_ADVANCED'):\n        return 'STATE_ADVANCED';\n      case this.$injector.get('STATE_EXPERT'):\n        return 'STATE_EXPERT';\n      default:\n        return 'STATE_BEGINNER';\n    }\n  };\n\n  /**\n   * Initializes `state` member.\n   *\n   * @private\n   * @method _initState\n   * @return {void}\n   */\n  User.prototype._initState = function() {\n    var STATE_BEGINNER = this.$injector.get('STATE_BEGINNER');\n    this.state = this._payload.state || STATE_BEGINNER;\n  };\n\n  /**\n   * Initializes `group` member.\n   *\n   * @private\n   * @method _initGroup\n   * @return {void}\n   */\n  User.prototype._initGroup = function() {\n    this.group = this._payload.group || null;\n  };\n\n  /**\n   * Initializes `tickets` member.\n   *\n   * @private\n   * @method init\n   * @return {void}\n   */\n  User.prototype._initTickets = function() {\n    var tickets = this._payload.tickets;\n    this.tickets = tickets || [];\n  };\n\n  /**\n   * Watches `state` and `tickets` for changes to\n   * show the corresponding user notifications.\n   *\n   * @private\n   * @method _initWatches\n   * @return {void}\n   */\n  User.prototype._initWatches = function() {\n    var notification = this.$injector.get('notification');\n    var $rootScope = this.$injector.get('$rootScope');\n    var i18n = this.$injector.get('i18n');\n    var me = this;\n\n    var _watchStateExpression = function() {\n      return me.state;\n    };\n\n    var _watchStateCallback = function(newState, oldState) {\n      if (newState === oldState) {\n        return;\n      }\n\n      notification.success(\n        i18n.get(\n          'Congratulations, you have reached the state %s!',\n          i18n.get(me.getStateAsString())\n        )\n      );\n    };\n\n    var _watchTicketsExpression = function() {\n      return me.tickets;\n    };\n\n    var _watchTicketsCallback = function(newTickets, oldTickets) {\n      if (newTickets === oldTickets) {\n        return;\n      }\n\n      var oldCount = oldTickets && oldTickets.length;\n      var newCount = newTickets && newTickets.length;\n\n      var tickets = newCount - oldCount;\n      if (tickets < 0) {\n        return;\n      }\n\n      var message = tickets === 1 ?\n        i18n.get('Congratulations, you have earned 1 new ticket!') :\n        i18n.get('Congratulations, you have earned %s new tickets!', tickets);\n\n      notification.primary(message);\n    };\n\n    this._unwatchTickets = $rootScope.$watchCollection(\n      _watchTicketsExpression,\n      _watchTicketsCallback\n    );\n\n    this._unwatchState = $rootScope.$watch(\n      _watchStateExpression,\n      _watchStateCallback\n    );\n  };\n\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @private\n   * @method _initSSE\n   * @return {Void}\n   */\n  User.prototype._initSSE = function()\n    {\n      var $rootScope = this.$injector.get('$rootScope');\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      // don't setup SSE when playing remote\n      var workshop = this._payload.workshop;\n      if (!workshop.isActive) {\n        return;\n      }\n\n      var me = this;\n\n      var _onMessage = function(data) {\n        $rootScope.$evalAsync(function(){\n          angular.forEach(data, function(item) {\n            var unix = Date.parse(item.updatedAt);\n            var task = me._tasks[item.type];\n            task.isActive = !!item.isActive;\n\n            if (!isNaN(unix)) {\n              item.updatedAt = unix;\n            }\n          });\n        });\n      };\n\n      var url = API_URL + '/sse/workshop/' + workshop.id + '/tasks';\n      var options = { onMessage: _onMessage, sleep: 1 };\n      this._eventSource = sse.addSource(url, options);\n    };\n\n  /**\n   * Caches task hash map from workshop\n   * for lookups from `getTaskByType()`.\n   *\n   * @private\n   * @method _initTasks\n   * @return {void}\n   */\n  User.prototype._initTasks = function() {\n    var workshop = this._payload.workshop;\n    if (!workshop) {\n      return;\n    }\n\n    var me = this;\n    angular.forEach(workshop.tasks,function(task) {\n      me._tasks[task.type] = task;\n    });\n  };\n\n  /**\n   * Caches pending hash map from workshop\n   * for lookups from `getPendingByType()`.\n   *\n   * @private\n   * @method _initPending\n   * @return {void}\n   */\n  User.prototype._initPending = function() {\n    var pending = this._payload.pending;\n    if (!pending) {\n      return;\n    }\n\n    var me = this;\n    angular.forEach(pending,function(result) {\n      me._pending[result.task.type] = result;\n    });\n  };\n\n  /**\n   * Caches results hash map from workshop\n   * for lookups from `getResultsByType()`.\n   *\n   * @private\n   * @method _initResults\n   * @return {void}\n   */\n  User.prototype._initResults = function() {\n    var _addResult = this._addResult.bind(this);\n    var results = this._payload.results || [];\n\n    angular.forEach(results, _addResult);\n  };\n\n  /**\n   * Adds result to collection and sets `$$result`\n   *\n   * @private\n   * @method _addResult\n   * @param {object} result\n   * @return {void}\n   */\n  User.prototype._addResult = function(result) {\n    var task = this.getTaskByType(result.task.type);\n    if (task !== null) {\n      var current = task.$$results || 0;\n      task.$$results = current + 1;\n    }\n\n    this._results.push(result);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('user', User);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Mail = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  Mail.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends a POST request to send mail.\n   *\n   * @public\n   * @method send\n   * @param {Object} data\n   * @param {Object} [config] $http config.\n   * @return {Promise}\n   */\n  Mail.prototype.send = function(data, config) {\n    var notification = this.$injector.get('notification');\n    var $http = this.$injector.get('$http');\n    var i18n = this.$injector.get('i18n');\n\n    var successCallback = function(/*response*/)\n      {\n        notification.success(\n          i18n.get(\n            'Your email has been sent!'\n          )\n        );\n      };\n\n    var failureCallback = function(/*rejection*/)\n      {\n      };\n\n    var promise = $http.post(\n      this._getPostUrl(),\n      {\n        _name: data.name,\n        _mail: data.email,\n        _subject: data.subject,\n        _message: data.message\n      },\n      config || {}\n    );\n\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Returns endpoint to send the email.\n   *\n   * @private\n   * @method _getPostUrl\n   * @return {string}\n   */\n  Mail.prototype._getPostUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/mail';\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('mail', Mail);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, EventSource */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var SSE = function($injector)\n    {\n      this.$injector = $injector;\n      this._sources = {};\n    };\n\n  SSE.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Adds a new event source to listen to.\n   *\n   * @public\n   * @method add\n   * @param string url\n   * @param string event\n   * @param function callback\n   * @return {void}\n   */\n  SSE.prototype.addSource = function(url, config) {\n    config = config || {};\n\n    config.retry = config.retry || null;\n    config.event = config.event || null;\n    config.sleep = config.sleep || null;\n    config.onError = config.onError || function(){};\n    config.onMessage = config.onMessage || function(){};\n\n    url = this._buildUrl(url, config);\n    var source = new EventSource(url);\n\n    source.onmessage = function(event) {\n      var data = angular.fromJson(event.data);\n      config.onMessage.call(this, data, event);\n    };\n\n    source.onerror = function(event) {\n      config.onError.call(this, event);\n    };\n\n    this._sources[url] = source;\n    return source;\n  };\n\n  /**\n   * Adds a new event source to listen to.\n   *\n   * @public\n   * @method removeSource\n   * @param object source\n   * @return {void}\n   */\n  SSE.prototype.removeSource = function(source) {\n    delete this._sources[source.url];\n    source.close();\n  };\n\n  /**\n   * Appends JWT token as query string to url.\n   * Adds optional config options if available.\n   *\n   * @private\n   * @method _getUrl\n   * @param string url\n   * @param object config\n   * @return {string}\n   */\n  SSE.prototype._buildUrl = function(url, config){\n    var jwt = this.$injector.get('jwt');\n    var token = jwt.getToken();\n\n    url = url + '?bearer=' + token;\n\n    if (config.event) {\n      url += '&event=' + config.event;\n    }\n\n    if (config.sleep) {\n      url += '&sleep=' + config.sleep;\n    }\n\n    if (config.retry) {\n      url += '&retry=' + config.retry;\n    }\n\n    return url;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('sse', SSE);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var CardContainer = function() {\n  };\n\n  CardContainer.$inject = ['$scope', '$element', '$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} cards Stack of registered cards. */\n  CardContainer.prototype.cards = [];\n\n  /** @var {boolean} canToggle If cards can be toggled. */\n  CardContainer.prototype.canToggle = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Adds a `card` directive to stack.\n   *\n   * @public\n   * @method click\n   * @return {Void}\n   */\n  CardContainer.prototype.add = function(card) {\n    this.cards.push(card);\n  };\n\n  /**\n   * Toggles card state if `canToggle` is true.\n   *\n   * @public\n   * @method set\n   * @return {boolean}\n   */\n  CardContainer.prototype.set = function(card) {\n    if (card.selected && !this.canToggle) {\n      return false;\n    }\n\n    // toggle current card's state\n    var selected = !!card.selected;\n    card.selected = selected ? null : true;\n\n    // reset all other card states\n    angular.forEach(this.cards, function(current) {\n      if (current.id === card.id) {\n        return;\n      }\n\n      current.selected = card.selected ? false : null;\n    });\n\n    return true;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('cardContainer', function(){\n    return {\n      scope: {\n        canToggle: '=?cardContainerCanToggle'\n      },\n      restrict: 'A',\n      controller: CardContainer,\n      bindToController: true,\n      controllerAs: 'cardContainerController'\n    };\n  });\n\n  // --------------------------------------------------\n  // Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Card = function($scope, $element, $attrs, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n\n    this.id = this.$scope.$id;\n    this.hasIcon = $transclude.isSlotFilled('icon');\n  };\n\n  Card.$inject = ['$scope', '$element', '$attrs', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} id Unique id of card. */\n  Card.prototype.id = null;\n\n  /** @var {mixed} data Passthrough data of card. */\n  Card.prototype.data = null;\n\n  /** @var {boolean} selected If card is selected. */\n  Card.prototype.selected = null;\n\n  /** @var {boolean} disabled If card is disabled. */\n  Card.prototype.disabled = null;\n\n  /** @var {boolean} hasIcon If card has `icon` slot filled. */\n  Card.prototype.hasIcon = null;\n\n  /** @var {boolean} isCheckbox If card should behave as checkbox. */\n  Card.prototype.isCheckbox = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Invokes the `cardOnClick` callback.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Card.prototype.$onInit = function() {\n    if (!this.cardContainer) {\n      return;\n    }\n\n    this.cardContainer.add(this);\n  };\n\n  /**\n   * Invokes the `cardOnClick` callback.\n   *\n   * @public\n   * @method click\n   * @return {Void}\n   */\n  Card.prototype.click = function($event) {\n    if (this.disabled) {\n      return;\n    }\n\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    if (this.cardContainer) {\n      var changed = this.cardContainer.set(this);\n      if (!changed) {\n        return;\n      }\n    }\n\n    this.onClick({\n      data: this.data,\n      selected: this.selected,\n      disabled: this.disabled\n    });\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('card', function(){\n    return {\n      scope: {\n        data: '=?cardData',\n        onClick: '&cardOnClick',\n        selected: '=?cardSelected',\n        disabled: '=?cardDisabled',\n        isCheckbox: '=?cardIsCheckbox'\n      },\n      restrict: 'A',\n      transclude: {\n        text: 'cardText',\n        title: 'cardTitle',\n        icon: '?cardIcon',\n        buttons: '?cardButtons'\n      },\n      controller: Card,\n      bindToController: true,\n      controllerAs: 'cardController',\n      require:{\n        cardContainer: '^?cardContainer',\n      },\n      templateUrl: 'views/directives/card.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, Chartist */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Chart = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._chart = null;\n  };\n\n  Chart.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} data Chart data for series. */\n  Chart.prototype.data = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Inits chart with options and data\n   * and renders it with these settings.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Chart.prototype.$onInit = function()\n    {\n      var options = this._getOptions();\n\n      var data = {\n        labels: this._getLabels(),\n        series: this._getData()\n      };\n\n      this._render(data, options);\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Chart.prototype.$onDestroy = function()\n    {\n      if (this._chart !== null) {\n        this._chart.detach();\n        this._chart = null;\n      }\n    };\n\n  /**\n   * Gets data depending on current `task`.\n   *\n   * @public\n   * @method _getData\n   * @param {array} data\n   * @return int\n   */\n  Chart.prototype._getData = function() {\n    var GROUP_A = this.$injector.get('GROUP_A');\n    var GROUP_B = this.$injector.get('GROUP_B');\n\n    var me = this;\n\n    var map = {};\n    var data = [];\n    var mapResults;\n\n    switch(me.task.type) {\n      //case me.$injector.get('TYPE_INTEREST'):\n      //case me.$injector.get('TYPE_INFLATION'):\n      //case me.$injector.get('TYPE_DIVERSIFICATION'):\n      //case me.$injector.get('TYPE_RISK'):\n      case me.$injector.get('TYPE_ANCHORING'):\n      case me.$injector.get('TYPE_MENTAL_BOOKKEEPING'): {\n        map[GROUP_A] = { choice1: 0, choice2: 0, count:0 };\n        map[GROUP_B] = { choice1: 0, choice2: 0, count:0 };\n\n        mapResults = function(result) {\n          var group = result.json.group;\n\n          switch (result.json.choice) {\n            case 1:\n              map[group].choice1++;\n              break;\n            case 2:\n              map[group].choice2++;\n              break;\n            default:\n          }\n\n          map[group].count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        var groupA = map[GROUP_A];\n        var groupB = map[GROUP_B];\n\n        // series 1\n        data.push([\n          groupA.choice1 / groupA.count,\n          groupB.choice1 / groupB.count\n        ]);\n\n        // series 2\n        data.push([\n          groupA.choice2 / groupA.count,\n          groupB.choice2 / groupB.count\n        ]);\n\n        break;\n      }\n\n      //case me.$injector.get('TYPE_FRAMING'):\n      //case me.$injector.get('TYPE_SAVINGS_TARGET'):\n      //case me.$injector.get('TYPE_SAVINGS_SUPPORTED'):\n      //case me.$injector.get('TYPE_SELF_COMMITMENT'):\n      case me.$injector.get('TYPE_PROCRASTINATION'): {\n        var SPLIT = 'SPLIT';\n        var ALL = 'ALL';\n\n        map[SPLIT] = { success: 0, failure: 0, count:0 };\n        map[ALL] = { success: 0, failure: 0, count:0 };\n\n        mapResults = function(result) {\n          var mode = result.json.mode;\n\n          if (result.json.success) {\n            map[mode].success++;\n          } else {\n            map[mode].failure++;\n          }\n\n          map[mode].count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        var split = map[SPLIT];\n        var all = map[ALL];\n\n        // series 1\n        data.push([\n          split.success / split.count,\n          all.success / all.count\n        ]);\n\n        // series 2\n        data.push([\n          split.failure / split.count,\n          all.failure / all.count\n        ]);\n\n        break;\n      }\n\n      default:\n    }\n\n    return data;\n  };\n\n  /**\n   * Gets labels depending on current `task`.\n   *\n   * @private\n   * @method _getLabels\n   * @return array\n   */\n  Chart.prototype._getLabels = function() {\n    var i18n = this.$injector.get('i18n');\n\n    switch(this.task.type) {\n      case this.$injector.get('TYPE_ANCHORING'):\n      case this.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        return [\n          i18n.get('GROUP_A'),\n          i18n.get('GROUP_B')\n        ];\n      case this.$injector.get('TYPE_PROCRASTINATION'):\n        return [\n          i18n.get('ALL'),\n          i18n.get('SPLIT')\n        ];\n      default:\n        return [];\n    }\n  };\n\n  /**\n   * Gets options depending on current `task`.\n   *\n   * @private\n   * @method _getOptions\n   * @return array\n   */\n  Chart.prototype._getOptions = function() {\n    var i18n = this.$injector.get('i18n');\n\n    switch(this.task.type) {\n      case this.$injector.get('TYPE_ANCHORING'):\n      case this.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        return {\n          seriesBarDistance: 15,\n          chartPadding: {\n            top: 50,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          axisY:{\n            labelInterpolationFnc: function(value) {\n              return (value * 100) + '%';\n            },\n            ticks: [0, 0.2, 0.4, 0.6, 0.8, 1],\n            type: Chartist.FixedScaleAxis,\n            high: 1,\n            low: 0\n          },\n          plugins: [\n            Chartist.plugins.legend({\n              legendNames: [\n                i18n.get('Choice 1'),\n                i18n.get('Choice 2')\n              ]\n            })\n          ]\n        };\n      case this.$injector.get('TYPE_PROCRASTINATION'):\n        return {\n          seriesBarDistance: 15,\n          chartPadding: {\n            top: 50,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          axisY:{\n            labelInterpolationFnc: function(value) {\n              return (value * 100) + '%';\n            },\n            ticks: [0, 0.2, 0.4, 0.6, 0.8, 1],\n            type: Chartist.FixedScaleAxis,\n            high: 1,\n            low: 0\n          },\n          plugins: [\n            Chartist.plugins.legend({\n              legendNames: [\n                i18n.get('Target reached'),\n                i18n.get('Target dismissed')\n              ]\n            })\n          ]\n        };\n\n      default:\n        return {};\n    }\n  };\n\n  /**\n   * Renders chart depending on current `task`.\n   *\n   * @private\n   * @method _render\n   * @return array\n   */\n  Chart.prototype._render = function(data, options) {\n    var $timeout = this.$injector.get('$timeout');\n\n    this.$element.addClass('ct-chart');\n    var element = this.$element.get(0);\n\n    var me = this;\n    var render = function() {\n      switch(me.task.type) {\n        case me.$injector.get('TYPE_ANCHORING'):\n        case me.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        case me.$injector.get('TYPE_PROCRASTINATION'):\n          me._chart = new Chartist.Bar(element, data, options);\n          break;\n        default:\n      }\n    };\n\n    $timeout(render, 100);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('chart', function(){\n    return {\n      scope: {\n        task: '=?chartTask',\n        results: '=?chartResults'\n      },\n      restrict: 'A',\n      controller: Chart,\n      bindToController: true,\n      controllerAs: 'chartController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Modal\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Modal = function($scope, $attrs, $element, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$transclude = $transclude;\n\n    this._element = null;\n    this._modal = null;\n    this._scope = null;\n  };\n\n  Modal.$inject = ['$scope', '$attrs', '$element', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isVisible Flag for modal visibility. */\n  Modal.prototype.isVisible = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers UIkit callbacks and watches.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Modal.prototype.$onInit = function()\n    {\n      var me = this;\n\n      // listeners\n      this._onShow = function() {\n        me.$scope.$evalAsync(me.onShow);\n      };\n\n      this._onShown = function() {\n        me.$scope.$evalAsync(me.onShown);\n      };\n\n      this._onBeforeShow = function() {\n        me.$scope.$evalAsync(me.onBeforeShow);\n      };\n\n      this._onHide = function() {\n        me.$scope.$evalAsync(me.onHide);\n      };\n\n      this._onHidden = function() {\n        me.$scope.$evalAsync(function(){\n          me.isVisible = false;\n          me.onHidden();\n        });\n      };\n\n      this._onBeforeHide = function() {\n        me.$scope.$evalAsync(me.onBeforeHide);\n      };\n\n      // watches\n      this._unwatch = this.$scope.$watch(\n        'modalController.isVisible',\n        function(isVisible) {\n          if (isVisible) {\n            me.transclude();\n            return;\n          }\n\n          me.destroy();\n        }\n      );\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Modal.prototype.$onDestroy = function()\n    {\n      this._unwatch();\n      this.destroy();\n    };\n\n  /**\n   * Transcludes contents and shows modal.\n   *\n   * @public\n   * @method render\n   * @return {Void}\n   */\n  Modal.prototype.transclude = function() {\n    var me = this;\n\n    var transclude = function(clone, scope) {\n      // save element and scope\n      me._element = clone;\n      me._scope = scope;\n\n      // register UIKit listeners\n      me._element.on('show', me._onShow);\n      me._element.on('shown', me._onShown);\n      me._element.on('beforeshow', me._onBeforeShow);\n\n      me._element.on('hide', me._onHide);\n      me._element.on('hidden', me._onHidden);\n      me._element.on('beforeHide', me._onBeforeHide);\n\n      // replace with actual element\n      me.$element.append(clone);\n\n      // create and show the modal\n      me._modal = UIkit.modal(clone);\n      me._modal.show();\n    };\n\n    this.$transclude(transclude);\n  };\n\n  /**\n   * Destructs current modal transclusion from DOM.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Modal.prototype.destroy = function() {\n    if (this._element !== null) {\n      this._element.off('show', this._onShow);\n      this._element.off('shown', this._onShown);\n      this._element.off('beforeshow', this._onBeforeShow);\n\n      this._element.off('hide', this._onHide);\n      this._element.off('hidden', this._onHidden);\n      this._element.off('beforeHide', this._onBeforeHide);\n\n      this._element.remove();\n      this._element = null;\n    }\n\n    if (this._scope !== null) {\n      this._scope.$destroy();\n      this._scope = null;\n    }\n\n    if (this._modal !== null) {\n      this._modal.hide();\n      this._modal = null;\n    }\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('modal', function(){\n    return {\n      scope: {\n        isVisible: '=?modal',\n        onShow:'&modalOnShow',\n        onHide:'&modalOnHide',\n        onShown:'&modalOnShown',\n        onHidden:'&modalOnHidden',\n        onBeforeShow:'&modalOnBeforeShow',\n        onBeforeHide:'&modalOnBeforeHide'\n      },\n      restrict: 'A',\n      controller: Modal,\n      transclude: 'element',\n      bindToController: true,\n      controllerAs: 'modalController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Status\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Status = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.iconRatio = 1;\n    this.isCompact = false;\n    this.iconColor = 'currentcolor';\n  };\n\n  Status.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} tasks User's task hash map. */\n  Status.prototype.tasks = {};\n\n  /** @var {array} tickets User's ticket collection. */\n  Status.prototype.tickets = [];\n\n  /** @var {boolean} tasksVisible If task overview is visible. */\n  Status.prototype.tasksVisible = false;\n\n  /** @var {boolean} ticketsVisible If tickets overview is visible. */\n  Status.prototype.ticketsVisible = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `tasks` and `tickets` properties and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Status.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchTicketsExpression = function(){\n        return user.tickets;\n      };\n\n      var _watchTicketsCallback = function(tickets) {\n        me.tickets = tickets;\n      };\n\n      this._unwatchTickets = this.$scope.$watchCollection(\n        _watchTicketsExpression,\n        _watchTicketsCallback\n      );\n\n      var _watchTasksExpression = function(){\n        return user.getTasks();\n      };\n\n      var _watchTasksCallback = function(tasks) {\n        me.tasks = tasks;\n      };\n\n      this._unwatchTasks = this.$scope.$watch(\n        _watchTasksExpression,\n        _watchTasksCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Status.prototype.$onDestroy = function() {\n    this._unwatchTickets();\n    this._unwatchTasks();\n  };\n\n  /**\n   * Toggles `tasksVisible` property.\n   *\n   * @public\n   * @method toggleTasks\n   * @return {Void}\n   */\n  Status.prototype.toggleTasks = function()\n    {\n      this.tasksVisible = !this.tasksVisible;\n    };\n\n  /**\n   * Toggles `ticketsVisible` property.\n   *\n   * @public\n   * @method toggleTickets\n   * @return {Void}\n   */\n  Status.prototype.toggleTickets = function()\n    {\n      this.ticketsVisible = !this.ticketsVisible;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('status', function(){\n    return {\n      scope: {\n        iconRatio:'=?statusIconRatio',\n        iconColor:'=?statusIconColor',\n        isCompact:'=?statusIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: Status,\n      bindToController: true,\n      controllerAs: 'statusController',\n      templateUrl: 'views/directives/status.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Icons\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusIcons = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.ratio = 1;\n    this.color = 'currentcolor';\n  };\n\n  StatusIcons.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isBeginner If user has state `STATE_BEGINNER` or higher. */\n  StatusIcons.prototype.isBeginner = false;\n\n  /** @var {boolean} isAmateuer If user has state `STATE_AMATEUR` or higher. */\n  StatusIcons.prototype.isAmateuer = false;\n\n  /** @var {boolean} isAdvanced If user has state `STATE_ADVANCED` or higher. */\n  StatusIcons.prototype.isAdvanced = false;\n\n  /** @var {boolean} isExpert If user has state `STATE_EXPERT` or higher. */\n  StatusIcons.prototype.isExpert = false;\n\n  /** @var {boolean} isProfi If user has state `STATE_PROFI` or higher. */\n  StatusIcons.prototype.isProfi = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusIcons.prototype.$onInit = function()\n    {\n      var STATE_BEGINNER = this.$injector.get('STATE_BEGINNER');\n      var STATE_AMATEUR = this.$injector.get('STATE_AMATEUR');\n      var STATE_ADVANCED = this.$injector.get('STATE_ADVANCED');\n      var STATE_EXPERT = this.$injector.get('STATE_EXPERT');\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function(){\n        return user.state;\n      };\n\n      var _watchCallback = function(state) {\n        me.isBeginner = state >= STATE_BEGINNER;\n        me.isAmateur = state >= STATE_AMATEUR;\n        me.isAdvanced = state >= STATE_ADVANCED;\n        me.isExpert = state >= STATE_EXPERT;\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusIcons.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusIcons', function() {\n    return {\n      scope: {\n        ratio:'=?statusIconsRatio',\n        color:'=?statusIconsColor',\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusIcons,\n      bindToController: true,\n      controllerAs: 'statusIconsController',\n      templateUrl: 'views/directives/status-icons.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Label\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusLabel = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  StatusLabel.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} state String represenation of user's `state`. */\n  StatusLabel.prototype.state = null;\n\n  /** @var {boolean} isCompact If presentation is in compact format. */\n  StatusLabel.prototype.isCompact = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusLabel.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function() {\n        return user.state;\n      };\n\n      var _watchCallback = function() {\n        me.state = user.getStateAsString();\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusLabel.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusLabel', function(){\n    return {\n      scope: {\n        isCompact: '=?statusLabelIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusLabel,\n      bindToController: true,\n      controllerAs: 'statusLabelController',\n      templateUrl: 'views/directives/status-label.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Label\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusTickets = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  StatusTickets.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} tickets Current user ticket count. */\n  StatusTickets.prototype.tickets = 0;\n\n  /** @var {boolean} isCompact If presentation is in compact format. */\n  StatusTickets.prototype.isCompact = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusTickets.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function() {\n        return user.tickets;\n      };\n\n      var _watchCallback = function(tickets) {\n        me.tickets = tickets ? tickets.length : 0;\n      };\n\n      this._unwatch = this.$scope.$watchCollection(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusTickets.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusTickets', function(){\n    return {\n      scope: {\n        isCompact: '=?statusTicketsIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusTickets,\n      bindToController: true,\n      controllerAs: 'statusTicketsController',\n      templateUrl: 'views/directives/status-tickets.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Tabber\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Tabber = function($scope, $element, $attrs, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$transclude = $transclude;\n\n    this.domId = 'tabber-' + $scope.$id;\n\n    this.hasExercise = $transclude.isSlotFilled('exercise');\n  };\n\n  Tabber.$inject = ['$scope','$element','$attrs', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} hasExercise If slot `exercise` has contents. */\n  Tabber.prototype.hasExercise = false;\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('tabber', function(){\n    return {\n      scope: {\n        icon: '=?tabberIcon'\n      },\n      restrict: 'A',\n      transclude: {\n        exercise: '?tabberExercise',\n        description: 'tabberDescription'\n      },\n      controller: Tabber,\n      bindToController: true,\n      controllerAs: 'tabberController',\n      templateUrl: 'views/directives/tabber.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, interact */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Draggable\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Draggable = function($scope, $element, $attrs, $injector) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$injector = $injector;\n\n    this._body = null;\n    this._clone = null;\n    this._coordinates = {};\n    this._interactable = null;\n    this._activeClass = 'active';\n    this._itemClass = 'draggable';\n    this._disabledClass = 'disabled';\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.disabled; },\n      function(disabled) {\n        if (disabled) {\n          me.$element.addClass(me._disabledClass);\n        } else {\n          me.$element.removeClass(me._disabledClass);\n        }\n\n        me._interactable.draggable({enabled: !disabled});\n      }\n    );\n\n    this._onResize = this._onResize.bind(this);\n  };\n\n  Draggable.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} data Connected data for draggable. */\n  Draggable.prototype.data = null;\n\n  /** @type {boolean} clone If clone item should be used. */\n  Draggable.prototype.clone = false;\n\n  /** @var {boolean} disabled If draggable is disabled. */\n  Draggable.prototype.disabled = false;\n\n  /** @type {boolean} clone If clone item should be used. */\n  Draggable.prototype.restriction = 'parent';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes `interact` library on element\n   * with all available callbacks for dragging.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Draggable.prototype.$onInit = function() {\n    var $window = this.$injector.get('$window');\n\n    this._body = angular.element(document.body);\n    this.$element.addClass(this._itemClass);\n    var element = this.$element.get(0);\n\n    this._interactable = interact(element);\n\n    var me = this;\n    var options = {\n      inertia: true,\n      autoScroll: true,\n      enabled: !this.disabled,\n      onend: this._onEndItem.bind(this),\n      onmove: this._onMoveItem.bind(this),\n      onstart: this._onStartItem.bind(this),\n      snap: {\n          targets:[function(x,y,interaction) {\n            // 'startCoords' doesn't work here, so\n            // we catch initial position once from\n            // interaction element and this values\n            if (!me._origin) {\n              me._origin = {\n                x: interaction.startCoords.page.x,\n                y: interaction.startCoords.page.y\n              };\n            }\n\n            // if not dropped, move draggable\n            // smoothly back to origin point\n            if (!interaction.dropTarget) {\n              return {\n                x: me._origin.x, // instead of 0\n                y: me._origin.y  // instead of 0\n              };\n            }\n          }],\n          //offset: 'startCoords',\n          endOnly: true\n      }\n    };\n\n    if (this.clone) {\n      angular.extend(options, { manualStart: true });\n      this._interactable.on('move', this._onMove.bind(this));\n    }\n\n    this._interactable.draggable(options);\n    this._interactable.getData = this._getData.bind(this);\n\n    this._window = angular.element($window);\n    this._window.on('resize', this._resize);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Draggable.prototype.$onDestroy = function() {\n    this._window.off('resize', this._onResize);\n    this._interactable.unset();\n    this._unwatch();\n  };\n\n  /**\n   * Resets `origin` info for snapping.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Draggable.prototype._onResize = function() {\n    this._origin = null;\n  };\n\n  /**\n   * Adds `activeClass` to clone and invokes `onDragStart`.\n   *\n   * @private\n   * @method _onStartItem\n   * @return {Void}\n   */\n  Draggable.prototype._onStartItem = function(event) {\n    var target = !this.clone ?\n      angular.element(event.target) :\n      this._clone;\n\n    target.addClass(this._activeClass);\n\n    this._trigger('onDragStart', {\n      $event: event,\n      $data: this.data\n    });\n  };\n\n  /**\n   * This performs actual dragging logic with CSS.\n   * The method triggers the `onDragMove` callback.\n   *\n   * @private\n   * @method _onMoveItem\n   * @return {Void}\n   */\n  Draggable.prototype._onMoveItem = function(event) {\n    var target = !this.clone ?\n      angular.element(event.target) :\n      this._clone;\n\n    var x = (this._coordinates.x || 0) + event.dx;\n    var y = (this._coordinates.y || 0) + event.dy;\n\n    this._translate(target,x,y);\n\n    this._trigger('onDragMove', {\n      $event: event,\n      $data: this.data\n    });\n  };\n\n  /**\n   * This performs resetting work by removing clone.\n   * It invokes always the `onDragEnd` and the `onDrop`\n   * callbacks - if dropped on target element.\n   *\n   * @private\n   * @method _onEndItem\n   * @return {Void}\n   */\n  Draggable.prototype._onEndItem = function(event) {\n    var dropped = !!event.interaction.dropTarget;\n\n    if (!this.clone) {\n      var target = angular.element(event.target);\n      target.removeClass(this._activeClass);\n\n      // remove translate for snapping if\n      // animating back to origin coords!\n      if (!dropped) {\n        this._translate(target,0,0);\n      }\n\n    } else {\n      this._coordinates = {};\n      this._clone.remove();\n      this._clone = null;\n    }\n\n    this._trigger('onDragEnd', {\n      $event: event,\n      $data: this.data\n    });\n\n    if (dropped) {\n      this._trigger('onDrop', {\n        $event: event,\n        $data: this.data\n      });\n    }\n  };\n\n  /**\n   * Creates the clone and triggers manual kick-off for `interact`.\n   * This is necessary because we want:\n   *\n   * 1) being able to show clone object\n   * 2) being able to have disable control\n   *\n   * @private\n   * @method _onMove\n   * @return {Void}\n   */\n  Draggable.prototype._onMove = function(event) {\n    var interactable = event.interactable;\n    var interaction = event.interaction;\n    var element = event.currentTarget;\n\n    // we've to control `enabled` by our own as we are using the\n    // `manualStart` option to create clone - noop if `disabled`\n    if (this.disabled) {\n      return;\n    }\n\n    // create clone if user holds mouse/finger and no interaction\n    // is currently started - position absolutely at end of body!\n    if (interaction.pointerIsDown && !interaction.interacting()) {\n      this._clone = angular.element(element).clone();\n\n      var offsetY = element.clientHeight / 2;\n      var offsetX = element.clientWidth / 2;\n\n      var pageY = !!event.touches ?\n        event.touches[0].pageY :\n        event.pageY;\n      var pageX = !!event.touches ?\n        event.touches[0].pageX :\n        event.pageX;\n\n      this._clone.css({\n        left: (pageX - offsetX) + 'px',\n        top: (pageY - offsetY) + 'px',\n        position: 'absolute'\n      });\n\n      this._body.append(this._clone);\n      element = this._clone.get(0);\n    }\n\n    // invoke 'drag' interaction manually with the target/clone\n    interaction.start({ name: 'drag' }, interactable, element);\n  };\n\n  /**\n   * Retrieves the connected drag object data.\n   *\n   * @private\n   * @method _getData\n   * @return {object}\n   */\n  Draggable.prototype._getData = function() {\n    return this.data;\n  };\n\n  /**\n   * Translates DOM node to given coordinates.\n   *\n   * @private\n   * @method _translate\n   * @param object element\n   * @param number x\n   * @param number y\n   * @return {void}\n   */\n  Draggable.prototype._translate = function(element, x, y) {\n    var translate = 'translate('+x+'px,'+y+'px)';\n\n    element.css({\n      'webkitTransform': translate,\n      'mozTransform': translate,\n      'msTransform': translate,\n      'oTransform': translate,\n      'transform': translate\n    });\n\n    this._coordinates.x = x;\n    this._coordinates.y = y;\n  };\n\n  /**\n   * Primitive method for invoking callbacks.\n   *\n   * @private\n   * @method _trigger\n   * @return {void}\n   */\n  Draggable.prototype._trigger = function(method, args) {\n    this.$scope.$evalAsync(this[method].bind(this,args));\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('draggable', function(){\n    return {\n      scope: {\n        data: '=?draggableData',\n        clone: '=?draggableClone',\n        disabled: '=?draggableDisabled',\n        onDragStart: '&draggableOnDragStart',\n        onDragMove: '&draggableOnDragMove',\n        onDragEnd: '&draggableOnDragEnd',\n        onDrop: '&draggableOnDrop'\n      },\n      restrict: 'A',\n      controller: Draggable,\n      bindToController: true,\n      controllerAs: 'draggableController'\n    };\n  });\n\n  // --------------------------------------------------\n  // Dropable\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Dropable = function($scope, $element, $attrs) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n\n    this._interactable = null;\n    this._enterClass = 'enter';\n    this._activeClass = 'active';\n    this._itemClass = 'dropable';\n    this._acceptClass = 'draggable';\n    this._disabledClass = 'disabled';\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.disabled; },\n      function(disabled) {\n        if (disabled) {\n          me.$element.addClass(me._disabledClass);\n        } else {\n          me.$element.removeClass(me._disabledClass);\n        }\n      }\n    );\n  };\n\n  Dropable.$inject = ['$scope','$element','$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} disabled If draggable is disabled. */\n  Dropable.prototype.disabled = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes `interact` library on element\n   * with all available callbacks for dragging.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Dropable.prototype.$onInit = function() {\n    this._body = angular.element(document.body);\n    this.$element.addClass(this._itemClass);\n    var accept = '.' + this._acceptClass;\n    var element = this.$element.get(0);\n\n    this._interactable = interact(element)\n      .dropzone({\n        accept: accept,\n        enabled: !this.disabled,\n        ondrop: this._onDrop.bind(this),\n        ondragenter: this._onDragEnter.bind(this),\n        ondragleave: this._onDragLeave.bind(this),\n        ondropactivate: this._onDropActivate.bind(this),\n        ondropdeactivate: this._onDropDeactivate.bind(this)\n      });\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Dropable.prototype.$onDestroy = function() {\n    this._interactable.unset();\n    this._unwatch();\n  };\n\n  /**\n   * Removes the active class from element and\n   * triggers the `onDropDeactivate` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDropDeactivate = function(event) {\n    this.$element.removeClass(this._activeClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDropDeactivate', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Applies the active class from element and\n   * triggers the `onDropActivate` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDropActivate = function(event) {\n    this.$element.addClass(this._activeClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDropActivate', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Applies the enter class from element and\n   * triggers the `onDragEnter` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDragEnter = function(event) {\n    this.$element.addClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDragEnter', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Removes the enter class from element and\n   * triggers the `onDragLeave` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDragLeave = function(event) {\n    this.$element.removeClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDragLeave', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Removes the enter class from element and\n   * triggers the `onDrop` callback with data\n   * from the draggable element.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDrop = function(event) {\n    this.$element.removeClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDrop',{\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Primitive method for invoking callbacks.\n   *\n   * @private\n   * @method _trigger\n   * @return {void}\n   */\n  Dropable.prototype._trigger = function(method, args) {\n    this.$scope.$evalAsync(this[method].bind(this,args));\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('dropable', function(){\n    return {\n      scope: {\n        disabled: '=?dropableDisabled',\n        onDropDeactivate: '&dropableOnDropDeactivate',\n        onDropActivate: '&dropableOnDropActivate',\n        onDragEnter: '&dropableOnDragEnter',\n        onDragLeave: '&dropableOnDragLeave',\n        onDrop: '&dropableOnDrop'\n      },\n      restrict: 'A',\n      controller: Dropable,\n      bindToController: true,\n      controllerAs: 'droppableController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit, jQuery */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // ScrollTo\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ScrollTo = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._source = null;\n    this._target = null;\n    this._scroller = null;\n    this._onClick = this._onClick.bind(this);\n    this._onScrolled = this._onScrolled.bind(this);\n  };\n\n  ScrollTo.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} options Options for `scroll` service. */\n  ScrollTo.prototype.options = {};\n\n  /** @var {function} callback Callback for scroll finished. */\n  ScrollTo.prototype.callback = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ScrollTo.prototype.$onInit = function() {\n    // try to grab target from - can be either\n    // a jquery element or a string id / hash\n    if (this.element instanceof jQuery) {\n      this._target = this.element;\n    } else {\n      if (angular.isString(this.element)) {\n        if (this.element.charAt(0) !== '#') {\n          this._target = '#' + this.element;\n        }\n\n        this._target = jQuery(this._target);\n      }\n    }\n\n    if (this._target === null) {\n      console.warn('scroll-to.js: Invalid target element!');\n      return;\n    }\n\n    // need to create a dummy `<a href='#hash'></a>`\n    // element to set it as source object for UIkit\n    var href = '#' + this._target.id;\n    this._source = jQuery('<a href=\"'+href+'\"></a>');\n\n    this.options = this.options || {};\n    this.options.offset = this.options.offset || 80;\n    this.options.duration = this.options.duration || 500;\n    this.options.easing = this.options.easing || 'easeOutExpo';\n\n    this.$element.on('click', this._onClick);\n    this._source.on('scrolled', this._onScrolled);\n\n    this._scroller = UIkit.scroll(this._source, this.options);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ScrollTo.prototype.$onDestroy = function() {\n    this._source.off('scrolled', this._onScrolled);\n    this.$element.off('click', this._onClick);\n\n    this._scroller.$destroy(true);\n\n    this._scroller = null;\n    this._source = null;\n    this._target = null;\n  };\n\n  /**\n   * Invokes scrolling to target element.\n   *\n   * @private\n   * @method _onClick\n   * @return {void}\n   */\n  ScrollTo.prototype._onClick = function() {\n    this._scroller.scrollTo(this._target);\n  };\n\n  /**\n   * Tries to invoke callback after scrolling.\n   *\n   * @private\n   * @method _onScrolled\n   * @return {void}\n   */\n  ScrollTo.prototype._onScrolled = function() {\n    if (!angular.isFunction(this.callback)) {\n      return;\n    }\n\n    this.$scope.$evalAsync(this.callback);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('scrollTo', function(){\n    return {\n      scope: {\n        element: '=scrollTo',\n        options: '=?scrollToOptions',\n        callback: '=?scrollToCallback'\n      },\n      restrict: 'A',\n      controller: ScrollTo,\n      bindToController: true\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Evaluation\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Evaluation = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.user = $injector.get('user');\n    this.domId = 'evaluation-' + $scope.$id;\n  };\n\n  Evaluation.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} domId Unique dom id for scrolling. */\n  Evaluation.prototype.domId = null;\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('evaluation', function(){\n    return {\n      scope: {\n        parent: '=evaluation'\n      },\n      restrict: 'A',\n      transclude: {\n        text: 'evaluationText',\n        customButtons: '?evaluationCustomButtons',\n        defaultButtons: '?evaluationDefaultButtons'\n      },\n      controller: Evaluation,\n      bindToController: true,\n      controllerAs: 'evaluationController',\n      templateUrl: 'views/directives/evaluation.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Locked State\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var LockedState = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n\n    this.user = $injector.get('user');\n  };\n\n  LockedState.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('lockedState', function(){\n    return {\n      scope: {\n        isLocked: '=?lockedState'\n      },\n      restrict: 'A',\n      transclude: {\n        userText: '?userText',\n        adminText: '?adminTExt'\n      },\n      controller: LockedState,\n      bindToController: true,\n      controllerAs: 'lockedStateController',\n      templateUrl: 'views/directives/locked-state.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Form Field\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var FormField = function($scope, $element, $attrs, $transclude, $timeout)\n    {\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n      this.$timeout = $timeout;\n      this.$transclude = $transclude;\n\n      this._transcludeElements = [];\n      this._transcludeScopes = [];\n      this._cloneDefault = null;\n      this._cloneLabel = null;\n      this._unlisten = [];\n      this._unwatch = [];\n    };\n\n  FormField.$inject = ['$scope', '$element', '$attrs', '$transclude', '$timeout'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Dom id form element. */\n  FormField.prototype.id = '';\n\n  /** @var {string} label Label of form element. */\n  FormField.prototype.label = '';\n\n  /** @var {ngModelController} model Added `ngModel` controller. */\n  FormField.prototype.ngModel = null;\n\n  /** @var {boolean} resetEmpty If validation resets on empty model. */\n  FormField.prototype.resetEmpty = true;\n\n  /** @var {boolean} showMessages True if `ngMessages` are visible. */\n  FormField.prototype.showMessages = false;\n\n  /** @var {string} labelClass Class to append to label. */\n  FormField.prototype.labelClass = 'uk-form-label';\n\n  /** @var {string} failureClass Class to append on failure. */\n  FormField.prototype.failureClass = 'uk-form-danger';\n\n  /** @var {string} successClass Class to append on success. */\n  FormField.prototype.successClass = 'uk-form-success';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Renders custom transclusion (form element) and\n   * sets up watchers as well as clean up methods.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  FormField.prototype.$onInit = function()\n    {\n      // create dom id from `name` and $scope id\n      // controller properties are only available\n      // in $onInit() callback from Angular 1.5.x\n      this.id = 'form-field-' + this.$scope.$id;\n\n      // add watch properties\n      this._addWatches();\n\n      // transclude contents\n      this._transclude();\n    };\n\n  /**\n   * Removes transcluded elements, scope and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  FormField.prototype.$onDestroy = function()\n    {\n      angular.forEach(this._transcludeElements, function(element){\n        element.remove();\n      });\n\n      angular.forEach(this._transcludeScopes, function(scope){\n        scope.$destroy();\n      });\n\n      angular.forEach(this._unlisten, function(unlisten){\n        unlisten();\n      });\n\n      angular.forEach(this._unwatch, function(unwatch){\n        unwatch();\n      });\n    };\n\n  /**\n   * Sets model controller from transcluded form\n   * element using the `ng-model` attribute and\n   * the `form-field-model` helper component.\n   *\n   * @public\n   * @method setModel\n   * @param {NgModelController} ngModel\n   * @return {void}\n   */\n  FormField.prototype.setModel = function(ngModel)\n    {\n      this.ngModel = ngModel;\n    };\n\n  /**\n   * Updates validation depending on `ngModel.$valid`.\n   *\n   * @private\n   * @method _update\n   * @return {void}\n   */\n  FormField.prototype._update = function()\n    {\n      if (this.ngModel.$valid) {\n        this._cloneDefault.removeClass(this.failureClass);\n        this._cloneDefault.addClass(this.successClass);\n      } else {\n        this._cloneDefault.removeClass(this.successClass);\n        this._cloneDefault.addClass(this.failureClass);\n      }\n\n      this.showMessages = this.ngModel.$invalid;\n    };\n\n  /**\n   * Resets corresponding validation properties.\n   *\n   * @private\n   * @method _reset\n   * @return {boolean}\n   */\n  FormField.prototype._reset = function()\n    {\n      this._cloneDefault.removeClass(this.failureClass);\n      this._cloneDefault.removeClass(this.successClass);\n      this.ngModel.$setUntouched();\n      this.showMessages = false;\n    };\n\n  /**\n   * Adds scope watches for `isValid()` and `isInvalid()`.\n   *\n   * @private\n   * @method _addWatches\n   * @return {void}\n   */\n  FormField.prototype._addWatches = function()\n    {\n      var me = this;\n\n      // observes `ngModel` controller for changing any\n      // of its validation properties such as `$valid`\n      var unwatchModel = this.$scope.$watchCollection(\n        'formFieldController.ngModel',\n        function(newModel, oldModel)\n        {\n          // ignore initial invocation\n          if (newModel === oldModel) {\n            return;\n          }\n\n          // as long as model hasn't been\n          // touched no validation's made\n          if (!newModel.$touched) {\n              return;\n          }\n\n          // wait for async validators\n          if (newModel.$pending) {\n            return;\n          }\n\n          // if no view value is present\n          // reset all validation props!\n          if (!newModel.$viewValue) {\n            if (me.resetEmpty) {\n              me._reset();\n              return;\n            }\n          }\n\n          me._update();\n        }\n      );\n\n      this._unwatch.push(unwatchModel);\n    };\n\n  /**\n   * Transcludes `default` and `label` slot programmatically\n   * to append custom attributes and events to dom elements.\n   *\n   * @private\n   * @method _transclude\n   * @return {void}\n   */\n  FormField.prototype._transclude = function()\n    {\n      var me = this;\n\n      // adds `id` attribute to be focues by <label>\n      var transcludeDefault = function(clone, scope)\n      {\n        var domId = '#default-' + me.id;\n        var template = angular.element(domId);\n\n        clone.attr('id', me.id);\n\n        template.replaceWith(clone);\n\n        me._cloneDefault = clone;\n\n        me._transcludeScopes.push(scope);\n        me._transcludeElements.push(clone);\n      };\n\n      // adds `labelClass` and sets `for` attribute\n      // for <label> in order to auto focus element\n      var transcludeLabel = function(clone, scope)\n      {\n        var domId = '#label-' + me.id;\n        var template = angular.element(domId);\n\n        clone.attr('for', me.id);\n        clone.addClass(me.labelClass);\n\n        template.replaceWith(clone);\n\n        me._cloneLabel = clone;\n\n        me._transcludeScopes.push(scope);\n        me._transcludeElements.push(clone);\n      };\n\n      // wait for dom to be ready before transclude\n      var timeout = function()\n      {\n        me.$transclude(transcludeDefault, null, null);\n        me.$transclude(transcludeLabel, null, 'label');\n      };\n\n      this.$timeout(timeout);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('formField',function() {\n    return {\n      scope: {\n          name: '=formField',\n          resetEmpty: '=?formFieldResetEmpty',\n          labelClass: '=?formFieldLabelClass',\n          failureClass: '=?formFieldFailureClass',\n          successClass: '=?formFieldSuccessClass'\n      },\n      transclude: {\n        label: '?label',\n        messageMin: '?messageMin',\n        messageMax: '?messageMax',\n        messageUrl: '?messageUrl',\n        messageEmail: '?messageEmail',\n        messageNumber: '?messageNumber',\n        messagePattern: '?messagePattern',\n        messageRequired: '?messageRequired',\n        messageMinlength: '?messageMinlength',\n        messageMaxlength: '?messageMaxlength',\n        messagesCustom: '?messagesCustom'\n      },\n      restrict: 'A',\n      controller: FormField,\n      bindToController: true,\n      controllerAs: 'formFieldController',\n      templateUrl: 'views/directives/form-field.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Form Field Model\n  // --------------------------------------------------\n\n  /**\n   * @constructor\n   */\n  var FormFieldModel = function($scope, $attrs, $element, $log) {\n    this.$log = $log;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n  };\n\n  FormFieldModel.$inject = ['$scope', '$attrs', '$element', '$log'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers `ngModel` on `formField` controller.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  FormFieldModel.prototype.$onInit = function()\n    {\n      if (!this.formField) {\n        this.$log.warn('formFieldModel: No form field controller found!');\n        return;\n      }\n\n      this.formField.setModel(this.ngModel);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('formFieldModel', function(){\n    return {\n      restrict: 'A',\n      require: {\n        'ngModel': 'ngModel',\n        'formField': '^?formField'\n      },\n      bindToController: true,\n      controller: FormFieldModel\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Asynchronous Validators\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorWorkshopExists = function($scope, $element, $attrs, $q, Workshop)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Workshop = Workshop;\n\n      this.keyLocked = 'validatorWorkshopLocked';\n    };\n\n  ValidatorWorkshopExists.$inject = ['$scope', '$element', '$attrs', '$q', 'Workshop'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorWorkshopExists` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorWorkshopExists.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorWorkshopExists = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the workshop exists. It sets implicitly `validatorWorkshopLocked`\n   * to avoid multiple server queries and sets to invalid if `isActive` is not true (= locked).\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorWorkshopExists.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var me = this;\n      var successCallback = function(workshop)\n      {\n        if (!workshop.isActive) {\n          me.ngModel.$setValidity(me.keyLocked, false);\n          defer.reject();\n          return;\n        }\n\n        me.ngModel.$setValidity(me.keyLocked, true);\n        defer.resolve();\n      };\n\n      var failureCallback = function()\n      {\n        defer.reject();\n      };\n\n      this.Workshop.validateWorkshopFrontend(\n        {\n          code: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorWorkshopExists',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorWorkshopExists\n      };\n  });\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorWorkshopUnique = function($scope, $element, $attrs, $q, Workshop)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Workshop = Workshop;\n    };\n\n  ValidatorWorkshopUnique.$inject = ['$scope', '$element', '$attrs', '$q', 'Workshop'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorWorkshopUnique` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorWorkshopUnique.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorWorkshopUnique = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the workshop exists.\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorWorkshopUnique.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var successCallback = function()\n      {\n        defer.reject();\n      };\n\n      var failureCallback = function()\n      {\n        defer.resolve();\n      };\n\n      this.Workshop.validateWorkshopBackend(\n        {\n          code: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorWorkshopUnique',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorWorkshopUnique\n      };\n  });\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorAdminUnique = function($scope, $element, $attrs, $q, Admin)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Admin = Admin;\n    };\n\n  ValidatorAdminUnique.$inject = ['$scope', '$element', '$attrs', '$q', 'Admin'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorAdminUnique` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorAdminUnique.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorAdminUnique = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the admin exists.\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorAdminUnique.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var successCallback = function()\n      {\n        defer.reject();\n      };\n\n      var failureCallback = function()\n      {\n        defer.resolve();\n      };\n\n      this.Admin.validateAdmin(\n        {\n          username: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorAdminUnique',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorAdminUnique\n      };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // InterestTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var InterestTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_INTEREST');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n  };\n\n  InterestTask.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  InterestTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  InterestTask.prototype.resolved = false;\n\n   /** @var {number} correctAnswers Count of correct answers. */\n  InterestTask.prototype.correctAnswers = 0;\n\n  /** @var {number} exercise1Answer Answer for first exercise. */\n  InterestTask.prototype.exercise1Answer = 0;\n\n  /** @var {number} exercise2Answer Answer for second exercise. */\n  InterestTask.prototype.exercise2Answer = 0;\n\n  /** @var {boolean} exercise1Correct Resolution state of first exercise. */\n  InterestTask.prototype.exercise1Correct = false;\n\n  /** @var {boolean} exercise2Correct Resolution state of second exercise. */\n  InterestTask.prototype.exercise2Correct = false;\n\n  /** @var {number} exercise1Result Correct result for first exercise. */\n  InterestTask.prototype.exercise1Result = 0;\n\n  /** @var {number} exercise2Result Correct result for second exercise. */\n  InterestTask.prototype.exercise2Result = 0;\n\n  // SETTINGS\n\n  /** @var {number} amount Amount of money. */\n  InterestTask.prototype.amount = 1000;\n\n  /** @var {number} rate Interest rate. */\n  InterestTask.prototype.rate = 0.02;\n\n  /** @var {number} years Number of years. */\n  InterestTask.prototype.years = 1;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  InterestTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  InterestTask.prototype.getPayload = function() {\n    /* jshint camelcase: false */\n    return {\n      task: this.task,\n      json: {\n        exercise1: {\n          current_result: this.exercise1Result,\n          actual_result: this.exercise1Answer,\n          is_valid: this.exercise1Correct\n        },\n        exercise2: {\n          current_result: this.exercise2Result,\n          actual_result: this.exercise2Answer,\n          is_valid: this.exercise2Correct\n        }\n      }\n    };\n    /* jshint camelcase: true */\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  InterestTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  InterestTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.exercise1Answer) {\n      return false;\n    }\n\n    if (!this.exercise2Answer) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  InterestTask.prototype.init = function() {\n    this.resolved = false;\n    this.correctAnswers = 0;\n    this.exercise1Answer = 0;\n    this.exercise2Answer = 0;\n    this.exercise1Correct = false;\n    this.exercise2Correct = false;\n    this.exercise1Result = this._calculateResult(1);\n    this.exercise2Result = this._calculateResult(1 + this.years);\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  InterestTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Updates answers, state and counters\n   * for given exercise for evaluation.\n   *\n   * @public\n   * @method update\n   * @param {number} value\n   * @param {string} exercise\n   * @return {Void}\n   */\n  InterestTask.prototype.update = function(value, exercise){\n    switch(exercise) {\n      case 'exercise1':\n        this.exercise1Answer = value;\n        break;\n      case 'exercise2':\n        this.exercise2Answer = value;\n        break;\n      default:\n    }\n\n    this.exercise1Correct = this.exercise1Answer === this.exercise1Result;\n    this.exercise2Correct = this.exercise2Answer === this.exercise2Result;\n\n    if (this.exercise1Correct && this.exercise2Correct) {\n      this.correctAnswers = 2;\n    } else if (this.exercise1Correct) {\n      this.correctAnswers = 1;\n    } else if (this.exercise2Correct) {\n      this.correctAnswers = 1;\n    } else {\n      this.correctAnswers = 0;\n    }\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  InterestTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates result for given years.\n   *\n   * @private\n   * @method _calculateResult\n   * @param {number} years\n   * @return {number}\n   */\n  InterestTask.prototype._calculateResult = function(years) {\n    return this.amount * Math.pow(1 + this.rate, years || 1);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('interestTask', function(){\n    return {\n      scope: {\n        rate: '=?interestTaskRate',\n        years: '=?interestTaskYears',\n        amount: '=?interestTaskAmount',\n        onResolve: '&interestTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: InterestTask,\n      bindToController: true,\n      controllerAs: 'interestTaskController',\n      templateUrl: 'views/directives/tasks/interest-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // InterestTask Exercise\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var InterestTaskExercise = function($scope,$element,$attrs) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n\n    this.disabled = false;\n    this.stack = [];\n    this.sum = 0;\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.sum; },\n      function(sum) {\n        if (!sum) {\n          me.sum = 0;\n          me.stack = [];\n        }\n      }\n    );\n  };\n\n  InterestTaskExercise.$inject = ['$scope','$element','$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} disabled If exercise is currently disabled. */\n  InterestTaskExercise.prototype.disabled = false;\n\n  /** @var {array} stack Stack collection all notes and coins. */\n  InterestTaskExercise.prototype.stack = [];\n\n  /** @var {number} sum Total sum of all values from `stack`. */\n  InterestTaskExercise.prototype.sum = 0;\n\n  /** @var {array} notes All selectable notes for exercise. */\n  InterestTaskExercise.prototype.notes = [500,200,100,50,20,10,5];\n\n  /** @var {array} notes All selectable coins for exercise. */\n  InterestTaskExercise.prototype.coins = [2,1,0.5,0.2,0.1,0.05,0.02,0.01];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  InterestTaskExercise.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  /**\n   * Adds value to `stack`, increases `sum`\n   * and invokes the `onUpdate` callback.\n   *\n   * @public\n   * @method onDrop\n   * @return {Void}\n   */\n  InterestTaskExercise.prototype.onDrop = function(value){\n    this.stack.push(value);\n    this.sum += value;\n\n    this.onUpdate({\n      sum: this.sum\n    });\n  };\n\n  /**\n   * Removes last item from `stack`, decreases\n   * `sum` and invokes the `onUpdate` callback.\n   *\n   * @public\n   * @method revert\n   * @return {Void}\n   */\n  InterestTaskExercise.prototype.revert = function() {\n    this.sum -= this.stack.pop();\n\n    this.onUpdate({\n      sum: this.sum\n    });\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('interestTaskExercise', function(){\n    return {\n      scope: {\n        sum: '=?interestTaskExerciseSum',\n        onUpdate: '&interestTaskExerciseOnUpdate',\n        disabled: '=?interestTaskExerciseDisabled'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: InterestTaskExercise,\n      bindToController: true,\n      controllerAs: 'interestTaskExerciseController',\n      templateUrl: 'views/directives/tasks/interest-task-exercise.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // DiversificationTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var DiversificationTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_DIVERSIFICATION');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  DiversificationTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  DiversificationTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  DiversificationTask.prototype.resolved = false;\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTask.prototype.heads = 'K';\n\n  /** @var {string} tails Current class of tails side. */\n  DiversificationTask.prototype.tails = 'Z';\n\n  /** @var {array} companies Data for companies. */\n  DiversificationTask.prototype.companies = {};\n\n  /** @var {array} tickets Data for tickets. */\n  DiversificationTask.prototype.tickets = {};\n\n  /** @var {array} sides Two values for coin. */\n  DiversificationTask.prototype.sides = [];\n\n  /** @var {number} result Final result. */\n  DiversificationTask.prototype.sides = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  DiversificationTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  DiversificationTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        tickets: {\n          one: this.tickets.one.company,\n          two: this.tickets.two.company\n        },\n        throws: {\n          one: this.throws.one.toss,\n          two: this.throws.two.toss\n        }\n      },\n      ticketCount: this.getTicketCount()\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  DiversificationTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  DiversificationTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.tickets.one.company) {\n      return false;\n    }\n\n    if (!this.tickets.two.company) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  DiversificationTask.prototype.init = function() {\n    var random = this.$injector.get('random');\n\n    this.sides = [\n      this.heads,\n      this.tails\n    ];\n\n    this.throws = {\n      one: {\n        id: 1,\n        toss: random.pick(this.sides)\n      },\n      two: {\n        id: 2,\n        toss: random.pick(this.sides)\n      }\n    };\n\n    this.tickets = {\n      one: {\n        id: 1,\n        company: null\n      },\n      two: {\n        id: 2,\n        company: null\n      }\n    };\n\n    this.companies = {\n      one: {\n        id: 1,\n        count: 0,\n        tickets: {},\n        name: 'Smart',\n        image: 'company-a.svg'\n      },\n      two: {\n        id: 2,\n        count: 0,\n        tickets: {},\n        name: 'Phone',\n        image: 'company-b.svg'\n      }\n    };\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  DiversificationTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Adds or removes a ticket from given company.\n   *\n   * @public\n   * @method update\n   * @param ticket\n   * @param company\n   * @param action\n   * @return {void}\n   */\n  DiversificationTask.prototype.update = function(ticket, company, action){\n    switch (action) {\n      case 'add':\n        if (!company.tickets[ticket.id]) {\n          company.tickets[ticket.id] = ticket;\n          ticket.company = company.name;\n          company.count++;\n        }\n        break;\n      case 'remove':\n        if (company.tickets[ticket.id]) {\n          delete company.tickets[ticket.id];\n          ticket.company = null;\n          company.count--;\n        }\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  DiversificationTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  DiversificationTask.prototype.getTicketCount = function(){\n    var factorA = this.throws.one.toss === this.heads ? 2 : 1;\n    var factorB = this.throws.two.toss === this.heads ? 2 : 1;\n\n    var ticketsA = this.companies.one.count * factorA;\n    var ticketsB = this.companies.two.count * factorB;\n\n    return ticketsA + ticketsB;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('diversificationTask', function(){\n    return {\n      scope: {\n        onResolve: '&diversificationTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: DiversificationTask,\n      controllerAs: 'diversificationTaskController',\n      templateUrl: 'views/directives/tasks/diversification-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // DiversificationTask Coin\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var DiversificationTaskCoin = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._element = this.$element.find('.coin');\n    this._animationEndEvent = this._getAnimationEndEvent();\n  };\n\n  DiversificationTaskCoin.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} toss One of `heads` or `tails`. */\n  DiversificationTaskCoin.prototype.toss = null;\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTaskCoin.prototype.sides = [];\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTaskCoin.prototype.heads = 'K';\n\n  /** @var {string} tails Current class of tails side. */\n  DiversificationTaskCoin.prototype.tails = 'Z';\n\n  /** @var {boolean} flip Flag to invoke a new toss. */\n  DiversificationTaskCoin.prototype.flip = false;\n\n  /** @var {boolean} flip Flag to apply CSS classes. */\n  DiversificationTaskCoin.prototype.animate = false;\n\n  /** @var {string} backClass CSS class for back side. */\n  DiversificationTaskCoin.prototype.back = 'back';\n\n  /** @var {string} frontClass CSS class for front side. */\n  DiversificationTaskCoin.prototype.front = 'front';\n\n  /** @var {string} startSide Initially displayed side of coin. */\n  DiversificationTaskCoin.prototype.startSide = 'K';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype.$onInit = function() {\n    var $timeout = this.$injector.get('$timeout');\n    var me = this;\n\n    this.sides = [\n      {\n        value: this.heads,\n        class: this.front\n      },\n      {\n        value: this.tails,\n        class: this.back\n      }\n    ];\n\n    if (this.startSide !== this.heads) {\n      this.sides[0].class = this.back;\n      this.sides[1].class = this.front;\n    }\n\n    me._toss = me._getToss();\n\n    var _timeoutCallback = function() {\n      var _iterateSides = function(side) {\n        if (side.value === me._toss.value) {\n          side.class = me.front;\n          return;\n        }\n\n        side.class = me.back;\n      };\n\n      angular.forEach(me.sides, _iterateSides);\n    };\n\n    var _watchFlipCallback = function(newFlip/*,oldFlip*/) {\n      if (newFlip) {\n        me.onStart({toss: me._toss.value});\n        $timeout(_timeoutCallback, 100);\n        me.animate = true;\n      }\n    };\n\n    var _watchFlipExpression = function() {\n      return me.flip;\n    };\n\n    var _watchTossCallback = function(newToss, oldToss) {\n      if (newToss !== oldToss) {\n        me._toss = me._getToss();\n      }\n    };\n\n    var _watchTossExpression = function() {\n      return me.toss;\n    };\n\n    var _evalAsyncCallback = function() {\n      me.onFinish({toss: me._toss.value});\n      me.animate = false;\n    };\n\n    var _animationEndCallback = function() {\n      me.$scope.$evalAsync(_evalAsyncCallback);\n    };\n\n    this.onInit({toss: me._toss.value});\n\n    if (this._animationEndEvent) {\n      this._element.on(this._animationEndEvent, _animationEndCallback);\n    }\n\n    this._unwatchFlip = this.$scope.$watch(_watchFlipExpression, _watchFlipCallback);\n    this._unwatchToss = this.$scope.$watch(_watchTossExpression, _watchTossCallback);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype.$onDestroy = function() {\n    this._element.off(this._animationEndEvent);\n    this._unwatchToss();\n    this._unwatchFlip();\n  };\n\n  /**\n   * Gets correctly prefixed transition event.\n   *\n   * @private\n   * @method _getTransitionEvent\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype._getAnimationEndEvent = function() {\n    var dummy = document.createElement('div');\n    var transitions = {\n      'WebkitAnimation': 'webkitAnimationEnd',\n      'MozTAnimation': 'animationend',\n      'animation': 'animationend'\n    };\n\n    for(var key in transitions){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return transitions[key];\n        }\n    }\n\n    return null;\n  };\n\n  /**\n   * Transforms `toss` to one side either\n   * by random or by given consumer input.\n   *\n   * @private\n   * @method _getToss\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype._getToss = function() {\n    var $filter = this.$injector.get('$filter');\n    var random = this.$injector.get('random');\n    var picked = random.pick(this.sides);\n\n    if (this.toss === null) {\n      return picked;\n    }\n\n    var filtered = $filter('filter')(\n      this.sides,\n      {\n        value: this.toss\n      }\n    );\n\n    if (filtered.length === 0) {\n      console.warn('Invalid value for `toss` - using random value!');\n      return picked;\n    }\n\n    return filtered[0];\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('diversificationTaskCoin', function(){\n    return {\n      scope: {\n        toss: '=?diversificationTaskCoinToss',\n        flip: '=?diversificationTaskCoinFlip',\n        onInit: '&diversificationTaskCoinOnInit',\n        onStart: '&diversificationTaskCoinOnStart',\n        onFinish: '&diversificationTaskCoinOnFinish',\n        startSide: '=?diversificationTaskCoinStartSide'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: DiversificationTaskCoin,\n      controllerAs: 'diversificationTaskCoinController',\n      templateUrl: 'views/directives/tasks/diversification-task-coin.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // BombTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var BombTask = function($scope, $attrs, $element, $injector) {\n    var type = $injector.get('TYPE_RISK');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n  };\n\n  BombTask.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  BombTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} started If the task has started. */\n  BombTask.prototype.started = false;\n\n  /** @var {boolean} stopped If the task has stopped. */\n  BombTask.prototype.stopped = false;\n\n  /** @var {boolean} hasBomb If bomb is in current collection. */\n  BombTask.prototype.hasBomb = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  BombTask.prototype.resolved = false;\n\n  /** @var {number} totalBoxes Total boxes of current game. */\n  BombTask.prototype.totalBoxes = 0;\n\n  /** @var {number} remainingBoxes Remaining boxes of current game. */\n  BombTask.prototype.remainingBoxes = 0;\n\n  /** @var {number} collectedBoxes Collected boxes of current game. */\n  BombTask.prototype.collectedBoxes = 0;\n\n  // SETTINGS\n\n  /** @var {number} avg Average of collected boxes from statistics. */\n  BombTask.prototype.avg = 12;\n\n  /** @var {number} rows Amount of rows for bomb task. */\n  BombTask.prototype.rows = 5;\n\n  /** @var {number} cols Amount of cols for bomb task. */\n  BombTask.prototype.cols = 5;\n\n  /** @var {number} interval Timeout for interval in seconds. */\n  BombTask.prototype.interval = 1;\n\n  /** @var {boolean} random\n   * - If `random` = false, boxes are collected row-wise one-by-one, starting in the top-left corner\n   * - If `random` = true, boxes are collected randomly (Fisher-Yates Algorithm)\n   * Note that this affects game play independently of `dynamic` property\n   */\n  BombTask.prototype.random = false;\n\n  /** @var {boolean} dynamic\n   * - If `dynamic` = true, one box per time interval is collected automatically\n   * - In case of `dynamic` = true, game play is affected by the variables `interval` and `random`\n   * - If `dynamic` = false, subjects collect as many boxes as they want by clicking or entering the respective number\n   * - In case of `dynamic` = false, game play is affected by the variables `random`\n   */\n  BombTask.prototype.dynamic = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  BombTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  BombTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        hasBomb: this.hasBomb,\n        collectedBoxes: this.collectedBoxes\n      },\n      ticketCount: this.getTicketCount()\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  BombTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  BombTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.dynamic) {\n      return this.stopped;\n    }\n\n    if (!this.collectedBoxes) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  BombTask.prototype.init = function() {\n    this._initMembers();\n    this._initMatrix();\n    this._initBomb();\n\n    if (!this.dynamic) {\n      this.start();\n    }\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  BombTask.prototype.reset = function() {\n    this.init();\n  };\n\n  /**\n   * Sets `started` flag. If `dynamic` is true,\n   * the interval will start to reveal cards.\n   *\n   * @public\n   * @method start\n   * @return {Void}\n   */\n  BombTask.prototype.start = function(index) {\n    if (this.dynamic) {\n      var $interval = this.$injector.get('$interval');\n\n      this._intIndex = index || 0;\n\n      var me = this;\n      var max = this.iterator.length;\n      this._intervalId = $interval(\n        function(){\n\n          var item = me.iterator[me._intIndex];\n          me.update(item,true);\n\n          me._intIndex++;\n          if (me._intIndex===max) {\n            me.stop();\n          }\n\n        },\n        this.interval*1000, // = from seconds\n        max - this._intIndex // = max iterations\n      );\n    }\n\n    this.started = true;\n  };\n\n  /**\n   * Sets `stopped` flag. If `dynamic` is true,\n   * the interval will be stopped in addition.\n   *\n   * @public\n   * @method start\n   * @return {Void}\n   */\n  BombTask.prototype.stop = function() {\n    if (this.dynamic && this._intervalId) {\n      var $interval = this.$injector.get('$interval');\n      $interval.cancel(this._intervalId);\n    }\n\n    this.stopped = true;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  BombTask.prototype.resolve = function() {\n    var $q = this.$injector.get('$q');\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var resolveCard = function(card) {\n      card.$$resolved = true;\n    };\n\n    var me = this;\n    var successCallback = function() {\n      angular.forEach(me.collection, resolveCard);\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  BombTask.prototype.getTicketCount = function(){\n    if (this.hasBomb) {\n      return 1;\n    }\n\n    return this.collectedBoxes + 1;\n  };\n\n  /**\n   * Callback for card click. Updates all\n   * related properties for final result.\n   *\n   * @public\n   * @method toggle\n   * @param {object} column\n   * @param {boolean} active\n   * @return {Void}\n   */\n  BombTask.prototype.toggle = function(column, active) {\n    var index = this.collection.indexOf(column);\n\n    if (active) {\n      if (index<0) {\n        this.collection.push(column);\n        this.collectedBoxes++;\n      }\n\n      column.$$active = true;\n    } else {\n      if (index>=0) {\n        this.collection.splice(index,1);\n        column.$$active = false;\n        this.collectedBoxes--;\n      }\n    }\n\n    if (this.isBomb(column)) {\n      this.hasBomb = true;\n    }\n\n    var total = this.totalBoxes;\n    var collected = this.collectedBoxes;\n    this.remainingBoxes = total - collected;\n  };\n\n  /**\n   * Provides indiviual tracking id for column.\n   *\n   * @public\n   * @method trackId\n   * @param {object} column\n   * @return {Void}\n   */\n  BombTask.prototype.trackId = function(column) {\n    return column.row + '_' + column.col;\n  };\n\n  /**\n   * Determines if column is actual bomb.\n   *\n   * @public\n   * @method isBomb\n   * @param {object} column\n   * @return {Void}\n   */\n  BombTask.prototype.isBomb = function(column) {\n    return angular.equals(this.bomb,column);\n  };\n\n  /**\n   * Initialzes internal properties.\n   *\n   * @private\n   * @method _initMembers\n   * @return {Void}\n   */\n  BombTask.prototype._initMembers = function() {\n    this.collection = [];\n\n    this.hasBomb = false;\n    this.started = false;\n    this.stopped = false;\n    this.resolved = false;\n\n    this.collectedBoxes = 0;\n    this.remainingBoxes = 0;\n    this.totalBoxes = this.rows * this.cols;\n  };\n\n  /**\n   * Calculates the actual matrix.\n   *\n   * @private\n   * @method _initMatrix\n   * @return {Void}\n   */\n  BombTask.prototype._initMatrix = function() {\n    this.matrix = [];\n    this.iterator = [];\n\n    for (var i=0; i<this.rows; i++) {\n\n      var columns = [];\n      for( var j=0; j<this.cols; j++ ) {\n        var data = {\n          row: i+1,\n          col: j+1\n        };\n\n        columns.push(data);\n\n        if (this.dynamic) {\n          if (!this.random) {\n            this.iterator.push(data);\n          } else {\n            var random = this.$injector.get('random');\n            random.push(this.iterator,data);\n          }\n        }\n      }\n\n      this.matrix.push(columns);\n    }\n  };\n\n  /**\n   * Initializes bomb's actual location.\n   *\n   * @private\n   * @method _initBomb\n   * @return {Void}\n   */\n  BombTask.prototype._initBomb = function() {\n    var random = this.$injector.get('random');\n\n    var row = random.between(0,this.rows-1);\n    var col = random.between(0,this.cols-1);\n\n    this.bomb = this.matrix[row][col];\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('bombTask',function(){\n    return {\n      scope: {\n        avg: '=?bombTaskAvg',\n        rows: '=?bombTaskRows',\n        cols: '=?bombTaskCols',\n        random: '=?bombTaskRandom',\n        dynamic: '=?bombTaskDynamic',\n        interval: '=?bombTaskInterval',\n        onResolve: '&bombTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: BombTask,\n      bindToController: true,\n      controllerAs: 'bombTaskController',\n      templateUrl: 'views/directives/tasks/bomb-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // BombTask Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var BombTaskCard = function(){\n  };\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Card's accociated model. */\n  BombTaskCard.prototype.model = null;\n\n  /** @var {string} isActive If card is active. */\n  BombTaskCard.prototype.isActive = false;\n\n  /** @var {string} isDisabled If card is disabled. */\n  BombTaskCard.prototype.isDisabled = false;\n\n  /** @var {string} isClickable If card is clickable. */\n  BombTaskCard.prototype.isClickable = true;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Toggles `isActive` if `isDisabled` and\n   * `isClickable` allow the action. Invokes\n   * `onToggle` callback for consumer.\n   *\n   * @public\n   * @method toggle\n   * @return {Void}\n   */\n  BombTaskCard.prototype.toggle = function() {\n    if (this.isDisabled || !this.isClickable) {\n      return;\n    }\n\n    this.isActive = !this.isActive;\n\n    this.onToggle({\n      model:this.model,\n      state:this.isActive\n    });\n  };\n\n  // registry\n  angular.module(module).directive('bombTaskCard', function(){\n    return {\n      scope: {\n        model:'=bombTaskCard',\n        onToggle:'&bombTaskCardOnToggle',\n        isActive:'=?bombTaskCardIsActive',\n        isDisabled:'=?bombTaskCardIsDisabled',\n        isClickable:'=?bombTaskCardIsClickable'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: BombTaskCard,\n      bindToController: true,\n      controllerAs: 'bombTaskCardController',\n      templateUrl: 'views/directives/tasks/bomb-task-card.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // AnchoringTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var AnchoringTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_ANCHORING');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n    this.group = user.getGroupAsString();\n  };\n\n  AnchoringTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  AnchoringTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  AnchoringTask.prototype.choice = null;\n\n  /** @var {string} group Current user's group assignment. */\n  AnchoringTask.prototype.group = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  AnchoringTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   * Sets up event source for listening to\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  AnchoringTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {object}\n   */\n  AnchoringTask.prototype.getPayload = function() {\n    var user = this.$injector.get('user');\n\n    return {\n      task: this.task,\n      json: {\n        group: user.group,\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  AnchoringTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  AnchoringTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  AnchoringTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  AnchoringTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  AnchoringTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  AnchoringTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('anchoringTask', function(){\n    return {\n      scope: {\n        onResolve: '&anchoringTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: AnchoringTask,\n      bindToController: true,\n      controllerAs: 'anchoringTaskController',\n      templateUrl: 'views/directives/tasks/anchoring-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // MentalBookkeepingTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var MentalBookkeepingTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_MENTAL_BOOKKEEPING');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n    this.group = user.getGroupAsString();\n  };\n\n  MentalBookkeepingTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  MentalBookkeepingTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  MentalBookkeepingTask.prototype.choice = null;\n\n  /** @var {string} group Current user's group assignment. */\n  MentalBookkeepingTask.prototype.group = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  MentalBookkeepingTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   * Sets up event source for listening to\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {object}\n   */\n  MentalBookkeepingTask.prototype.getPayload = function() {\n    var user = this.$injector.get('user');\n\n    return {\n      task: this.task,\n      json: {\n        group: user.group,\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  MentalBookkeepingTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  MentalBookkeepingTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('mentalBookkeepingTask', function(){\n    return {\n      scope: {\n        onResolve: '&mentalBookkeepingTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: MentalBookkeepingTask,\n      controllerAs: 'mentalBookkeepingTaskController',\n      templateUrl: 'views/directives/tasks/mental-bookkeeping-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // FramingTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var FramingTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_FRAMING');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  FramingTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  FramingTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  FramingTask.prototype.resolved = false;\n\n  /** @var {boolean} lotteryA If player opts in for lottery A. */\n  FramingTask.prototype.lotteryA = null;\n\n  /** @var {boolean} lotteryB If player opts in for lottery A. */\n  FramingTask.prototype.lotteryB = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  FramingTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  FramingTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        lotteryA: this.lotteryA,\n        lotteryB: this.lotteryB\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  FramingTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  FramingTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.lotteryA === null) {\n      return false;\n    }\n\n    if (this.lotteryB === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  FramingTask.prototype.init = function() {\n    this.lotteryA = null;\n    this.lotteryB = null;\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  FramingTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Updates provided lottery with given state.\n   *\n   * @public\n   * @method update\n   * @param {string} lottery\n   * @param {boolean} state\n   * @return {void}\n   */\n  FramingTask.prototype.update = function(lottery, state){\n    this[lottery] = state;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  FramingTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('framingTask', function(){\n    return {\n      scope: {\n        onResolve: '&framingTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: FramingTask,\n      bindToController: true,\n      controllerAs: 'framingTaskController',\n      templateUrl: 'views/directives/tasks/framing-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SavingsTargetTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SavingsTargetTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_SAVINGS_TARGET');\n\n    this.$attrs = $attrs;\n    this.$scope = $scope;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._flag = false;\n\n    this.user = this.$injector.get('user');\n    this.task = this.user.getTaskByType(type);\n    this.result = this.user.getPendingByType(type);\n\n    this.storage = this.$injector.get('storage').getProxy();\n    this._storageKey = '__savings__target__task__updated__at__';\n  };\n\n  SavingsTargetTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} user Alias to user service. */\n  SavingsTargetTask.prototype.user = null;\n\n  /** @var {object} task Task's resource from server. */\n  SavingsTargetTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  SavingsTargetTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {number} step Current step . */\n  SavingsTargetTask.prototype.step = 1;\n\n  /** @var {number} total Players wish for saving target. */\n  SavingsTargetTask.prototype.total = 3;\n\n  /** @var {string} wish Players wish for saving target. */\n  SavingsTargetTask.prototype.wish = null;\n\n  /** @var {number} amount Players first amount for saving target. */\n  SavingsTargetTask.prototype.amount = null;\n\n  /** @var {number} amountRepeated Players second amount for saving target. */\n  SavingsTargetTask.prototype.amountRepeated = null;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SavingsTargetTask.prototype.resolved = false;\n\n  // MISC\n\n  /** @var {object} form Form collecting user input. */\n  SavingsTargetTask.prototype.form = null;\n\n  /** @var {number} minAmount Minimum amount for `amount` input. */\n  SavingsTargetTask.prototype.minAmount = 1;\n\n  /** @var {number} maxAmount Maximum amount for `amount` input. */\n  SavingsTargetTask.prototype.maxAmount = 999;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        step: this.step,\n        wish: this.wish,\n        total: this.total,\n        amount: this.amount,\n        amountRepeated: this.amountRepeated\n      },\n      isPending: this.amountRepeated === null\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    // if result was created and\n    // we are waiting for paused\n    // state, we skip unlocking\n    // by using internal `_flag`\n    if (this.task.isActive) {\n      return this._flag;\n    }\n\n    // reset `_flag` as soon as\n    // `isActive` changed again\n    this.storage.removeItem(\n      this._storageKey\n    );\n\n    this._flag = false;\n    return true;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.form.$invalid) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.init = function() {\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // set flag only if still waiting for `isActive` change\n      var updatedAt = this.storage.getItem(this._storageKey);\n      if (angular.isNumber(updatedAt)) {\n        this._flag = updatedAt >= this.task.updatedAt;\n      }\n\n      // amount repeated cannot be desisted cause it's the\n      // condition in last step before setting `isPending`\n      this.amount = json.amount;\n      this.total = json.total;\n      this.wish = json.wish;\n      this.step = json.step;\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Increases `step` and invokes `resolve()`.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.update = function(){\n    if (this.step < this.total) {\n      this.step++;\n    }\n\n    if (!this.canResolve()) {\n      return;\n    }\n\n    var me = this;\n    var successCallback = function(){};\n    var failureCallback = function(){\n      me.step--;\n    };\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.resolve = function(){\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n    var $q = this.$injector.get('$q');\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var result = callback({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      if (result.isPending) {\n        if (me.step < me.total) {\n          var message = i18n.get('Thank you for your input!');\n          notification.success(message);\n        }\n\n        me.result = result;\n        me.storage.setItem(\n          me._storageKey,\n          me.task.updatedAt\n        );\n        me._flag = true;\n        return;\n      }\n\n      me.resolved = true;\n    };\n\n    var failureCallback = function() {\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates difference between `amount` and `amountRepeated`.\n   *\n   * @public\n   * @method getDifference\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.getDifference = function(){\n    return this.amountRepeated - this.amount;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('savingsTargetTask', function(){\n    return {\n      scope: {\n        onUpdate: '&savingsTargetTaskOnUpdate',\n        onResolve: '&savingsTargetTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: SavingsTargetTask,\n      bindToController: true,\n      controllerAs: 'savingsTargetTaskController',\n      templateUrl: 'views/directives/tasks/savings-target-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SelfCommitmentTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SelfCommitmentTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_SELF_COMMITMENT');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  SelfCommitmentTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  SelfCommitmentTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SelfCommitmentTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {}\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.update = function(){\n    this.resolve();\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('selfCommitmentTask', function(){\n    return {\n      scope: {\n        onResolve: '&selfCommitmentTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: SelfCommitmentTask,\n      controllerAs: 'selfCommitmentTaskController',\n      templateUrl: 'views/directives/tasks/self-commitment-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, moment */\n/* jshint bitwise: false */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // ProcrastinationTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_PROCRASTINATION');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n    this.result = user.getPendingByType(type);\n\n    this.domId = 'procrastination-task-' + $scope.$id;\n\n    this._intervalId = null;\n    this._onInterval = this._onInterval.bind(this);\n  };\n\n  ProcrastinationTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {string} type Task's `type` property from server. */\n  ProcrastinationTask.prototype.type = null;\n\n  /** @var {object} task Task's resource from server. */\n  ProcrastinationTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  ProcrastinationTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {string} mode One of `ALL` or `SPLIT`. */\n  ProcrastinationTask.prototype.mode = null;\n\n  /** @var {number} rounds Current game round count. */\n  ProcrastinationTask.prototype.count = 0;\n\n  /** @var {number} total Total rounds depends on `mode`. */\n  ProcrastinationTask.prototype.total = 1;\n\n  /** @var {array} rounds Results of single game rounds. */\n  ProcrastinationTask.prototype.rounds = [];\n\n  /** @var {number} openRounds Number of left rounds to play. */\n  ProcrastinationTask.prototype.openRounds = null;\n\n  /** @var {number} minCatched Minimum catched bubbles depends on `mode`. */\n  ProcrastinationTask.prototype.minCatched = null;\n\n  /** @var {number} maxEscaped Maximum escaped bubbles depends on `mode`. */\n  ProcrastinationTask.prototype.maxEscaped = null;\n\n  /** @var {number} updatedAt When last result was written. */\n  ProcrastinationTask.prototype.updatedAt = null;\n\n  /** @var {number} invalidAt When task will be unresolvable. */\n  ProcrastinationTask.prototype.invalidAt = null;\n\n  /** @var {string} state One of `IDLE`, `DECISION`, `PLAYING`. */\n  ProcrastinationTask.prototype.state = 'IDLE';\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  ProcrastinationTask.prototype.resolved = false;\n\n  // MISC\n\n  /** @var {string} domId Unique dom id for this task for scrolling purposes. */\n  ProcrastinationTask.prototype.domId = null;\n\n  /** @var {boolean} warmup If dry-run has been finished. */\n  ProcrastinationTask.prototype.hasWarmup = false;\n\n  /** @var {number} warmupMaxEscaped Maximum escaped bubbles for demo mode. */\n  ProcrastinationTask.prototype.warmupMaxEscaped = 2;\n\n  /** @var {number} warmupMinCatched Minimum catched bubbles for demo mode. */\n  ProcrastinationTask.prototype.warmupMinCatched = 20;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.$onDestroy = function() {\n    var $interval = this.$injector.get('$interval');\n\n    if (this._intervalId !== null) {\n      $interval.cancel(this._intervalId);\n    }\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        mode: this.mode,\n        state: this.state,\n        rounds: this.rounds,\n        success: this.hasSuccess()\n      },\n      isPending: this._isPending(),\n      ticketCount: this.getTicketCount()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.hasWarmup) {\n\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.init = function() {\n    // check for pending result\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // 1) apply round / count\n      this.rounds = json.rounds;\n      this.count = json.rounds.length;\n\n      // 2) call setters only now\n      this.setMode(json.mode);\n      this.setState(json.state);\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.update = function(result){\n    switch (this.state) {\n      case 'IDLE':\n        this.setState('DECISION');\n        break;\n\n      case 'DECISION':\n        this.setState('PLAYING');\n        break;\n\n      case 'PLAYING':\n        this.count = this.rounds.push(result);\n        break;\n      default:\n    }\n\n    if (!this.canResolve()) {\n      return;\n    }\n\n    this.resolve();\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.resolve = function(){\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n    var $q = this.$injector.get('$q');\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var result = callback({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      var message;\n\n      if (result.isPending) {\n        me.result = result;\n\n        switch (me.state) {\n          case 'IDLE': break;\n          case 'DECISION': break;\n          case 'PLAYING':\n            switch (me.mode) {\n              case 'ALL': break;\n              case 'SPLIT':\n                if (me.count > 0) {\n                  message = i18n.get(\n                    'Super, you have succeeded exercise %s of %s!',\n                    me.count,\n                    me.total\n                  );\n                  notification.success(message);\n                }\n                break;\n              default:\n                break;\n            }\n            break;\n          default:\n        }\n\n        return;\n      }\n\n      if (!me.hasSuccess()) {\n        message = i18n.get('Sorry, but the time has expired for this exercise and you retrieve only 1 ticket!');\n        notification.error(message);\n      } else {\n        message = i18n.get('Super, you have successfully done this exercise and retrieve 5 tickets!');\n        notification.success(message);\n      }\n\n      me.resolved = true;\n    };\n\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Sets game mode to `ALL` or `SPLIT`.\n   *\n   * @public\n   * @method setMode\n   * @param {string} mode\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setMode = function(mode){\n    switch (mode) {\n      case 'ALL':\n        this.total = 1;\n        this.maxEscaped = 15;\n        this.minCatched = 150;\n        break;\n      case 'SPLIT':\n        this.total = 3;\n        this.maxEscaped = 5;\n        this.minCatched = 50;\n        break;\n      default:\n        return;\n    }\n\n    this.mode = mode;\n    this.openRounds = this.total - this.count;\n  };\n\n  /**\n   * Sets game state to `IDLE`, `DECISION` or `PLAYING`.\n   *\n   * @public\n   * @method setState\n   * @param {string} state\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setState = function(state){\n    var $interval = this.$injector.get('$interval');\n\n    switch (state) {\n      case 'IDLE':\n        break;\n      case 'DECISION':\n        break;\n      case 'PLAYING':\n        var updatedAt = this.result.updatedAt;\n        this.updatedAt = moment.unix(updatedAt);\n        this.invalidAt = this.updatedAt.clone();\n\n        switch (this.mode) {\n          case 'ALL':\n            this.invalidAt.add(6, 'weeks');\n            break;\n          case 'SPLIT':\n            this.invalidAt.add(2, 'weeks');\n            break;\n          default:\n        }\n\n        this._intervalId = $interval(this._onInterval, 1000);\n\n        break;\n      default:\n        return;\n    }\n\n    this.state = state;\n  };\n\n  /**\n   * Sets `hasWarmup` flag after dry run.\n   *\n   * @public\n   * @method setWarmup\n   * @param {boolean} warmup\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setWarmup = function(warmup){\n    this.hasWarmup = warmup;\n  };\n\n  /**\n   * Whether or not task is actually invalid.\n   *\n   * @public\n   * @method isInvalid\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.isInvalid = function() {\n    if (this.invalidAt === null) {\n      return false;\n    }\n\n    return this._now().isAfter(this.invalidAt);\n  };\n\n  /**\n   * If amount of results corresponds to `total`.\n   *\n   * @public\n   * @method hasSuccess\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.hasSuccess = function() {\n    return this.rounds.length === this.total;\n  };\n\n  /**\n   * Retrieves the current played round.\n   *\n   * @public\n   * @method getCurrentRound\n   * @return {string}\n   */\n  ProcrastinationTask.prototype.getCurrentRound = function(){\n    return this.count + 1;\n  };\n\n  /**\n   * Calculates remaining time for finishing\n   * this task depending on chosen game mode.\n   *\n   * @public\n   * @method getRemainingTime\n   * @return {string}\n   */\n  ProcrastinationTask.prototype.getRemainingTime = function(){\n    var string = this.$injector.get('string');\n    var i18n = this.$injector.get('i18n');\n\n    if (this.invalidAt === null) {\n      return '';\n    }\n\n    var difference = this.invalidAt.diff(this._now());\n    var duration = moment.duration(difference);\n\n    var seconds = ~~duration.asSeconds();\n    var minutes = ~~duration.asMinutes();\n    var hours = ~~duration.asHours();\n    var days = ~~duration.asDays();\n    var value, keys;\n\n    if (days > 0) {\n      value = days;\n      keys = ['day', 'days'];\n    } else if (hours > 0) {\n      value = hours;\n      keys = ['hour', 'hours'];\n    } else if (minutes > 0) {\n      value = minutes;\n      keys = ['minute', 'minutes'];\n    } else {\n      value = seconds >= 0 ? seconds : 0;\n      keys = ['second', 'seconds'];\n    }\n\n    var key = value === 1 ?\n      keys[0] :\n      keys[1];\n\n    var unit = i18n.get(key);\n\n    return string.sprintf('%s %s', value, unit);\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  ProcrastinationTask.prototype.getTicketCount = function(){\n    if (this.hasSuccess()) {\n      return 5;\n    }\n\n    return 1;\n  };\n\n  /**\n   * Interval callback for checking invalidation.\n   *\n   * @private\n   * @method _onInterval\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype._onInterval = function() {\n    var $interval = this.$injector.get('$interval');\n    if (!this.isInvalid() || !this.canResolve()) {\n      return;\n    }\n\n    $interval.cancel(this._intervalId);\n    this.count = this.total;\n    this.resolve();\n  };\n\n  /**\n   * Whether or not task is currently pending.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype._isPending = function() {\n    return this.count < this.total;\n  };\n\n  /**\n   * Gets the current timestamp as moment.\n   *\n   * @private\n   * @method _now\n   * @return {object}\n   */\n  ProcrastinationTask.prototype._now = function() {\n    /*\n    if (!this._testInvalidation) {\n      this._testInvalidation = this.invalidAt.clone().subtract(3, 'seconds')\n    } else {\n      this._testInvalidation.add(1, 'second');\n    }\n    return this._testInvalidation;\n    */\n    return moment();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTask', function(){\n    return {\n      scope: {\n        onUpdate: '&procrastinationTaskOnUpdate',\n        onResolve: '&procrastinationTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: ProcrastinationTask,\n      bindToController: true,\n      controllerAs: 'procrastinationTaskController',\n      templateUrl: 'views/directives/tasks/procrastination-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // ProcrastinationTask Game\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTaskGame = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.domId = 'viewport-' + $scope.$id;\n\n    this._nextId = 0;\n    this._tapped = 0;\n    this._rounds = 0;\n    this._retries = 0;\n    this._timeout = 100;\n    this._requestId = null;\n\n    this._loop = this._loop.bind(this);\n    this._update = this._update.bind(this);\n    this._resize = this._resize.bind(this);\n\n    this._window = angular.element(window);\n    this._viewport = this.$element.find('.viewport');\n  };\n\n  ProcrastinationTaskGame.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} catched Count of catched bubbles. */\n  ProcrastinationTaskGame.prototype.catched = 0;\n\n  /** @var {number} escaped Count of escaped bubbles. */\n  ProcrastinationTaskGame.prototype.escaped = 0;\n\n  /** @var {number} accuracy Players scoring accuracy. */\n  ProcrastinationTaskGame.prototype.accuracy = 0;\n\n  /** @var {object} bubbles Hash map keeping bubble objects. */\n  ProcrastinationTaskGame.prototype.bubbles = {};\n\n  /** @var {object} viewport Viewport holding dimensions and offsets. */\n  ProcrastinationTaskGame.prototype.viewport = {};\n\n  /** @var {boolean} state One of `IDLE`, `RUNNING`, `TIMEOUT`, `GAME_OVER` or `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.state = 'IDLE';\n\n  /** @var {boolean} expired Flag for expiring current game while its running. */\n  ProcrastinationTaskGame.prototype.expired = false;\n\n  /** @var {number} maxRounds Maximum number of rounds after `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.maxRounds = 1;\n\n  /** @var {number} maxRounds Maximum number of retries after `GAME_OVER`. */\n  ProcrastinationTaskGame.prototype.maxRetries = Number.POSITIVE_INFINITY;\n\n  /** @var {number} maxEscaped Maximum amount of escaped bubbles for `GAME_OVER`. */\n  ProcrastinationTaskGame.prototype.maxEscaped = 15;\n\n  /** @var {number} maxEscaped Maximum amount of escaped bubbles for `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.minCatched = 150;\n\n  /** @var {string} bubbleDelay Timeout until next bubble will appear on viewport. */\n  ProcrastinationTaskGame.prototype.bubbleDelay = 100;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up event listeners and animation frame.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.$onInit = function() {\n    this._window.on('resize', this._resize);\n    this._resize();\n\n    var me = this;\n    this._unwatch = this.$scope.$watch(\n      function() {\n        return me.expired;\n      },\n      function(isExpired) {\n        if (isExpired) {\n          me.expire();\n        }\n      }\n    );\n  };\n\n  /**\n   * Removes event listener and animation frame.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.$onDestroy = function() {\n    this._window.off('resize', this._resize);\n  };\n\n  /**\n   * Invokes game loop and sets `RUNNING` state.\n   *\n   * @public\n   * @method start\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.start = function() {\n    this._loop();\n    this.state = 'RUNNING';\n  };\n\n  /**\n   * Stops and sets `GAME_OVER` state.\n   *\n   * @public\n   * @method gameOver\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.quit = function() {\n    this._unloop();\n\n    this._retries++;\n\n    this.bubbles = {};\n    this.state = 'GAME_OVER';\n\n    var result = this._getResult();\n    this.onGameOver({ result: result });\n  };\n\n  /**\n   * Stops and sets `FINISHED` state.\n   *\n   * @public\n   * @method done\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.done = function() {\n    this._unloop();\n\n    this._rounds++;\n\n    this.bubbles = {};\n    this.state = 'GAME_DONE';\n\n    var result = this._getResult();\n    this.onGameDone({ result: result });\n  };\n\n  /**\n   * Stops and sets `TIMEOUT` state.\n   *\n   * @public\n   * @method expire\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.expire = function() {\n    this._unloop();\n\n    this.bubbles = {};\n    this.state = 'TIMEOUT';\n  };\n\n  /**\n   * Resets game and sets `IDLE` state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.reset = function() {\n    this._unloop();\n\n    this._nextId = 0;\n    this._tapped = 0;\n    this._timeout = 100;\n    this._requestId = null;\n\n    this.catched = 0;\n    this.escaped = 0;\n    this.accuracy = 0;\n    this.state = 'IDLE';\n  };\n\n  /**\n   * Initializes\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.onClick = function($event) {\n    switch (this.state) {\n      case 'IDLE':\n        this.start();\n        break;\n      case 'RUNNING':\n        this._tapped++;\n\n        var target = $event.target;\n        var viewport = this._viewport.get(0);\n\n        // only update accuracy immediately if\n        // clicked on viewport, otherwise this\n        // will be done after bubble animation!\n        if (viewport.id === target.id) {\n          this._setAccuracy();\n        }\n\n        break;\n      case 'TIMEOUT':\n        // noop - disabled\n        break;\n      case 'GAME_OVER':\n        if (this.canRetry()) {\n          this.reset();\n          this.start();\n        }\n\n        break;\n      case 'GAME_DONE':\n        if (this.canRestart()) {\n          this.reset();\n          this.start();\n        }\n\n        break;\n      default:\n    }\n  };\n\n  /**\n   * True if player can retry game after `GAME_OVER`.\n   *\n   * @public\n   * @method canRetry\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.canRetry = function() {\n    return this._retries < this.maxRetries;\n  };\n\n  /**\n   * True if player can retry game after `GAME_OVER`.\n   *\n   * @public\n   * @method canRestart\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.canRestart = function() {\n    return this._rounds < this.maxRounds;\n  };\n\n  /**\n   * Adds bubble controller to internal hash.\n   *\n   * @public\n   * @method addBubble\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.addBubble = function(bubble) {\n    this.bubbles[bubble.id] = bubble;\n  };\n\n  /**\n   * Removes bubble, update counters and checks game state.\n   *\n   * @public\n   * @method removeBubble\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.removeBubble = function(bubble) {\n    // don't remove twice ($onDestroy)\n    if (!this.bubbles[bubble.id]) {\n      return;\n    }\n\n    // catched - check min count\n    if (bubble.catched) {\n      this.catched++;\n\n      // update accuracy\n      this._setAccuracy();\n\n      var min = this.minCatched;\n      if (this.catched >= min) {\n        this.done();\n      }\n    }\n\n    // escaped - check max count\n    if (bubble.escaped) {\n      this.escaped++;\n\n      var max = this.maxEscaped;\n      if (this.escaped >= max) {\n        this.quit();\n      }\n    }\n\n    delete this.bubbles[bubble.id];\n  };\n\n  /**\n   * Actual gaming loop for animation frame.\n   *\n   * @private\n   * @method _loop\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._loop = function() {\n    var animation = this.$injector.get('animation');\n\n    this._requestId = animation.requestAnimationFrame(this._loop);\n    this.$scope.$evalAsync(this._update);\n  };\n\n  /**\n   * Removes current animation frame.\n   *\n   * @public\n   * @method stop\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._unloop = function() {\n    var animation = this.$injector.get('animation');\n    animation.cancelAnimationFrame(this._requestId);\n  };\n\n  /**\n   * Animation frame callback handling creation of new\n   * bubbles being rendered and propagates `update()`.\n   *\n   * @private\n   * @method _update\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._update = function() {\n    var random = this.$injector.get('random');\n\n    this._timeout--;\n    if (this._timeout === 0 ) {\n      this._timeout = random.between(0, this.bubbleDelay) + 25;\n      this.bubbles[this._nextId++] = null;\n    }\n\n    for (var id in this.bubbles) {\n      var bubble = this.bubbles[id];\n      if (!bubble) {\n        continue;\n      }\n\n      bubble.update();\n    }\n  };\n\n  /**\n   * Sets up new `ratio` of viewport and propages `resize()`.\n   *\n   * @private\n   * @method resize\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._resize = function() {\n    this.viewport = this._getViewport();\n\n    var height = this.viewport.height;\n    var width = this.viewport.width;\n\n    this.ratio = width / height;\n\n    for (var id in this.bubbles) {\n      var bubble = this.bubbles[id];\n      if (!bubble) {\n        continue;\n      }\n\n      bubble.resize();\n    }\n  };\n\n  /**\n   * Gets result payload for game callbacks.\n   *\n   * @private\n   * @method _getResult\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._getResult = function() {\n    return {\n      catched: this.catched,\n      escaped: this.escaped,\n      accuracy: this.accuracy\n    };\n  };\n\n  /**\n   * Calculates and sets `accuracy` property.\n   *\n   * @private\n   * @method _setAccuracy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._setAccuracy = function() {\n    this.accuracy = this.catched / this._tapped;\n  };\n\n  /**\n   * Gets viewport dimensions and offsets.\n   *\n   * @private\n   * @method _getViewport\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._getViewport = function() {\n    var width = this._viewport.width();\n    var height = this._viewport.height();\n    var top = this._viewport.scrollTop();\n    var left = this._viewport.scrollLeft();\n\n    return {\n      top: top,\n      left: left,\n      width: width,\n      height: height,\n      right: left + width,\n      bottom: top + height\n    };\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTaskGame', function(){\n    return {\n      scope: {\n        expired: '=?procrastinationTaskGameExpired',\n        maxRounds: '=?procrastinationTaskGameMaxRounds',\n        maxRetries: '=?procrastinationTaskGameMaxRetries',\n        onGameDone: '&procrastinationTaskGameOnGameDone',\n        onGameOver: '&procrastinationTaskGameOnGameOver',\n        minCatched: '=?procrastinationTaskGameMinCatched',\n        maxEscaped: '=?procrastinationTaskGameMaxEscaped',\n        bubbleDelay: '=?procrastinationTaskGameBubbleDelay'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: ProcrastinationTaskGame,\n      controllerAs: 'procrastinationTaskGameController',\n      templateUrl: 'views/directives/tasks/procrastination-task-game.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // ProcrastinationTask Bubble\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTaskBubble = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.domId = 'bubble-' + $scope.$id;\n  };\n\n  ProcrastinationTaskBubble.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} themes Predefined themes for bubbles. */\n  ProcrastinationTaskBubble.prototype.themes = [\n    'theme-1',\n    'theme-2',\n    'theme-3',\n    'theme-4',\n    'theme-5'\n  ];\n\n  /**\n\n  /** @var {string} class CSS class namem for bubble. */\n  ProcrastinationTaskBubble.prototype.class = 'bubble';\n\n  /** @var {object} style Style definitions for bubble. */\n  ProcrastinationTaskBubble.prototype.style = {};\n\n  /** @var {string} theme A random theme for bubble. */\n  ProcrastinationTaskBubble.prototype.theme = null;\n\n  /** @var {number} radius Radius of bubble. */\n  ProcrastinationTaskBubble.prototype.radius = null;\n\n  /** @var {number} radius Animation speed of bubble. */\n  ProcrastinationTaskBubble.prototype.speed = null;\n\n  /** @var {number} wave Horizontal swinging intensity. */\n  ProcrastinationTaskBubble.prototype.wave = null;\n\n  /** @var {number} x Current x position of bubble. */\n  ProcrastinationTaskBubble.prototype.x = null;\n\n  /** @var {number} y Current y position of bubble. */\n  ProcrastinationTaskBubble.prototype.y = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registeres bubble with game controller after inital setup.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.$onInit = function() {\n    var random = this.$injector.get('random');\n    var game = this.gameController;\n\n    this.theme = random.pick(this.themes);\n\n    this.radius = random.between(0, 15) + 20;\n    this.speed = random.between(0, 2.5)  + 2;\n    this.wave = 2 + this.radius;\n\n    this.y = game.viewport.height + random.between(0, 50) + 50;\n    this.x = random.between(this.radius, game.viewport.width) - this.radius;\n\n    this._originalR = game.ratio;\n    this._originalX = this.x;\n\n    this.style = {\n      top: this.y,\n      left: this.x,\n      width: this.radius * 2,\n      height: this.radius * 2\n    };\n\n    this.gameController.addBubble(this);\n  };\n\n  /**\n   * Unregisteres bubble with game controller.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.$onDestroy = function() {\n    this.gameController.removeBubble(this);\n  };\n\n  /**\n   * Updates `x` and `y` coordinates and applies style.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.update = function() {\n    var sin = Math.sin(new Date().getTime() * 0.002);\n    this.x = this.wave * sin + this._originalX;\n    this.y = this.y - this.speed;\n\n    this.style.left = this.x;\n    this.style.top = this.y;\n\n    var offscreenY = -this.radius * 2;\n    if (this.y > offscreenY) {\n      return;\n    }\n\n    this.escaped = true;\n    this.gameController.removeBubble(this);\n  };\n\n  /**\n   * Updates `x` coordinate according to new ratio.\n   *\n   * @public\n   * @method resize\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.resize = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n    var timeout = function() {\n      var ratio = me.gameController.ratio;\n      var move = ratio / me._originalR;\n\n      me._originalX *= move;\n      me._resizeId = null;\n    };\n\n    if (this._resizeId) {\n      $timeout.cancel(this._resizeId);\n    }\n\n    this._resizeId = $timeout(timeout, 250);\n  };\n\n  /**\n   *\n   *\n   * @public\n   * @method onClick\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.onClick = function() {\n    var animation = this.$injector.get('animation');\n    var $timeout = this.$injector.get('$timeout');\n    var endEvent = animation.animationEndEvent;\n\n    var me = this;\n\n    var evalAsync = function() {\n      me.gameController.removeBubble(me);\n    };\n\n    var onAnimationEnd = function() {\n      me.$scope.$evalAsync(evalAsync);\n      me.$element.off(endEvent, onAnimationEnd);\n    };\n\n    if (event) {\n      this.$element.on(endEvent, onAnimationEnd);\n    } else {\n      $timeout(evalAsync, 50);\n    }\n\n    this.catched = true;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTaskBubble', function(){\n    return {\n      scope: {\n        id: '=procrastinationTaskBubble'\n      },\n      restrict: 'A',\n      transclude: true,\n      require: {\n        'gameController': '^procrastinationTaskGame'\n      },\n      bindToController: true,\n      controller: ProcrastinationTaskBubble,\n      controllerAs: 'procrastinationTaskBubbleController',\n      templateUrl: 'views/directives/tasks/procrastination-task-bubble.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var LoginFrontend = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  LoginFrontend.$inject = ['$scope', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} code Workshop code for authentication. */\n  LoginFrontend.prototype.code = null;\n\n  /** @var {string} username User name for authentication. */\n  LoginFrontend.prototype.username = null;\n\n  /** @var {RegExp} codeMinLength Minimum length of password. */\n  LoginFrontend.prototype.codeMinLength = 8;\n\n  /** @var {RegExp} codePattern Regular expression for `username` property. */\n  LoginFrontend.prototype.codePattern = /^[A-Za-z0-9]+$/;\n\n  /** @var {RegExp} userpattern Regular expression for `username` property. */\n  LoginFrontend.prototype.userpattern = /^[A-Za-z][A-Za-z](?:0[1-9]|[12]\\d|3[01])[A-Za-z]\\d$/;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Signs a user in with personal code to gather JWT token.\n   *\n   * @public\n   * @method signin\n   * @return {Void}\n   */\n  LoginFrontend.prototype.signin = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You have successfully signed in!');\n        notification.success(message);\n        $state.go('frontend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth.signin({\n        username: this.username\n      }, 'frontend').then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Signs a user up with personal and workshop code.\n   *\n   * @public\n   * @method signup\n   * @return {Void}\n   */\n  LoginFrontend.prototype.signup = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You have successfully signed up!');\n        notification.success(message);\n        $state.go('frontend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth\n        .signup({\n          username: this.username,\n          password: this.code\n        }, 'frontend').then(\n          successCallback,\n          failureCallback\n        );\n    };\n\n  angular.module(module).controller('LoginFrontendController', LoginFrontend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var LoginBackend = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  LoginBackend.$inject = ['$scope', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} username Username for authentication. */\n  LoginBackend.prototype.username = null;\n\n  /** @var {string} workshop Password for authentication. */\n  LoginBackend.prototype.password = null;\n\n  /** @var {RegExp} usernameMinLength Minimum length of username. */\n  LoginBackend.prototype.usernameMinLength = 5;\n\n  /** @var {RegExp} passwordMinLength Minimum length of password. */\n  LoginBackend.prototype.passwordMinLength = 8;\n\n  /** @var {RegExp} passwordMaxLength Maximum length of password. */\n  LoginBackend.prototype.passwordMaxLength = 4096;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Signs an admin in with username and password.\n   *\n   * @public\n   * @method signin\n   * @return {Void}\n   */\n  LoginBackend.prototype.signin = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You are logged in now!');\n        notification.success(message);\n        $state.go('backend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth.signin({\n        username: this.username,\n        password: this.password\n      }, 'backend').then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  angular.module(module).controller('LoginBackendController', LoginBackend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Contact = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  Contact.$inject = ['$scope','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of contact. */\n  Contact.prototype.name = null;\n\n  /** @var {string} email Email of contact. */\n  Contact.prototype.email = null;\n\n  /** @var {string} subject Subject of contact. */\n  Contact.prototype.subject = null;\n\n  /** @var {string} message Message of contact. */\n  Contact.prototype.message = null;\n\n  /** @var {string} messageMinLength Message minmimum length. */\n  Contact.prototype.messageMinLength = 25;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends an email from contact form to admins.\n   *\n   * @public\n   * @method submit\n   * @return {Void}\n   */\n  Contact.prototype.submit = function()\n    {\n      var mail = this.$injector.get('mail');\n      var form = this.$scope.contactForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var me = this;\n\n      var successCallback = function()\n      {\n        me.reset();\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      mail.send({\n        name: this.name,\n        email: this.email,\n        subject: this.subject,\n        message: this.message\n      }).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Resets all form inputs to initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  Contact.prototype.reset = function()\n    {\n      this.name = null;\n      this.email = null;\n      this.subject = null;\n      this.message = null;\n    };\n\n  angular.module(module).controller('ContactController', Contact);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Frontend = function($injector) {\n    this.$injector = $injector;\n\n    this.user = $injector.get('user');\n  };\n\n  Frontend.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} user User service object. */\n  Frontend.prototype.user = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Creates a new result resource from task payload.\n   *\n   * @public\n   * @method createResult\n   * @param {object} payload\n   * @return {Void}\n   */\n  Frontend.prototype.createResult = function(payload)\n  {\n    var Result = this.$injector.get('Result');\n    var user = this.$injector.get('user');\n\n    var successCallback = function(result)\n      {\n        // update user object from response\n        // handling comparisons for `state`,\n        // `tickets` and showing messages\n        user.update(result);\n      };\n\n    var failureCallback = function()\n      {\n        // noop\n      };\n\n    var result = new Result(payload);\n    var promise = result.$create();\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Updates a new result resource from task `result`.\n   *\n   * @public\n   * @method updateResult\n   * @param {object} result\n   * @return {Void}\n   */\n  Frontend.prototype.updateResult = function(payload)\n  {\n    var Result = this.$injector.get('Result');\n    var user = this.$injector.get('user');\n\n    var successCallback = function(result)\n      {\n        // update user object from response\n        // handling comparisons for `state`,\n        // `tickets` and showing messages\n        user.update(result);\n      };\n\n    var failureCallback = function()\n      {\n        // noop\n      };\n\n    var promise = Result.update({ id: payload.id }, payload).$promise;\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @public\n   * @method logout\n   * @return {Void}\n   */\n  Frontend.prototype.logout = function()\n    {\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n\n      var successCallback = function()\n        {\n          $state.go('login.frontend');\n        };\n\n      var failureCallback = function()\n        {\n\n        };\n\n      auth.signout().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Redirects router to state.\n   *\n   * @public\n   * @method goTo\n   * @param {string} state\n   * @return {Void}\n   */\n  Frontend.prototype.goTo = function(state)\n    {\n      var $state = this.$injector.get('$state');\n\n      $state.go(state);\n    };\n\n  angular.module(module).controller('FrontendController', Frontend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Workshop = function($scope, $injector, workshops) {\n    this.workshops = workshops;\n    this.$injector = $injector;\n    this.$scope = $scope;\n\n    this._resultsSource = null;\n    this._userSources = {};\n    this._workshops = {};\n    this._tasks = {};\n\n    this._initWorkshops();\n    this._initListener();\n  };\n\n  Workshop.$inject = ['$scope', '$injector', 'workshops'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of new workshop. */\n  Workshop.prototype.name = null;\n\n  /** @var {string} code Code of new workshop. */\n  Workshop.prototype.code = null;\n\n  /** @var {RegExp} nameMinLength Minimum length of workshop name. */\n  Workshop.prototype.nameMinLength = 8;\n\n  /** @var {RegExp} codeMinLength Minimum length of workshop code. */\n  Workshop.prototype.codeMinLength = 8;\n\n  /** @var {RegExp} userpattern Regular expression for `username` property. */\n  Workshop.prototype.codePattern = /^[A-Za-z0-9]+$/;\n\n  /** @var {object} deleteWorkshop Currently marked workshop for deletion. */\n  Workshop.prototype.deleteWorkshop = null;\n\n  /** @var {object} drawingWorkshop Currently marked workshop for drawing. */\n  Workshop.prototype.drawingWorkshop = null;\n\n  /** @var {array} drawingTickets Randomly picked tickets of drawing. */\n  Workshop.prototype.drawingTickets = null;\n\n  /** @var {array} drawingAmount Amount of chosen tickets for drawing. */\n  Workshop.prototype.drawingAmount = 2;\n\n  /** @var {array} chartResults Currently loaded results for chart. */\n  Workshop.prototype.chartResults = null;\n\n  /** @var {object} chartTask Currently selected task of results. */\n  Workshop.prototype.chartTask = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Toggles `$$expanded` flag on workshop depending on query params.\n   * https://ui-router.github.io/ng1/docs/latest/interfaces/ng1.ng1controller.html#uionparamschanged\n   *\n   * @public\n   * @method uiOnParamsChanged\n   * @param {object} params\n   * @return {void}\n   */\n  Workshop.prototype.uiOnParamsChanged = function(params)\n    {\n      var workshop = this._workshops[params.expand];\n\n      if (workshop) {\n        workshop.$$expanded = true;\n        this._expanded = workshop;\n        return;\n      }\n\n      if (this._expanded) {\n        this._expanded.$$expanded = false;\n        this._expanded = null;\n        return;\n      }\n    };\n\n  /**\n   * Creates a new workshop.\n   *\n   * @public\n   * @method create\n   * @return {void}\n   */\n  Workshop.prototype.create = function()\n    {\n      var notification = this.$injector.get('notification');\n      var Workshop = this.$injector.get('Workshop');\n      var i18n = this.$injector.get('i18n');\n\n      var workshop = new Workshop({\n        name: this.name,\n        code: this.code\n      });\n\n      var me = this;\n\n      var successCallback = function(workshop)\n        {\n          var message = i18n.get('Workshop has been created successfully!');\n          notification.success(message);\n\n          me.workshops.unshift(workshop);\n          me._initWorkshop(workshop);\n\n          me.name = null;\n          me.code = null;\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      workshop.$create().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Deletes a workshop after confirmation.\n   *\n   * @public\n   * @method delete\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.delete = function(workshop)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Workshop has been deleted successfully!');\n          notification.success(message);\n\n          var index = me.workshops.indexOf(workshop);\n          me.workshops.splice(index, 1);\n\n          me._removeUsersStream(workshop);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      workshop.$delete().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Loads task's results and invokes modal dialog.\n   *\n   * @public\n   * @method markWorkshopForDrawing\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.markWorkshopForDrawing = function(workshop)\n    {\n      var Ticket = this.$injector.get('Ticket');\n      var random = this.$injector.get('random');\n\n      var me = this;\n      var successCallback = function(tickets)\n        {\n          me.drawingTickets = random.shuffle(tickets);\n          me.drawingWorkshop = workshop;\n        };\n\n      var failureCallback = function()\n        {\n        };\n\n      var resource = Ticket.getByWorkshop({ workshopId: workshop.id });\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for deleting a workshop.\n   *\n   * @public\n   * @method markWorkshopForDeletion\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.markWorkshopForDeletion = function(workshop)\n    {\n      this.deleteWorkshop = workshop;\n    };\n\n  /**\n   * Toggles `isActive` of a workshop.\n   *\n   * @public\n   * @method toggleActive\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.toggleWorkshop = function(workshop)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function(workshop)\n        {\n          var message = i18n.get(\n            workshop.isActive ?\n              'Workshop has been unlocked successfully. Students can register now!' :\n              'Workshop has been locked successfully. Students can now only use their access from home!'\n          );\n          notification.success(message);\n\n          me._initWorkshop(workshop);\n        };\n\n      var failureCallback = function()\n        {\n          // revert the change on failed update!\n          workshop.isActive = !workshop.isActive;\n        };\n\n      workshop.isActive = !workshop.isActive;\n\n      workshop.$update().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Loads task's results and invokes modal dialog.\n   *\n   * @public\n   * @method markTaskForChart\n   * @param {object} task\n   * @return {void}\n   */\n  Workshop.prototype.markTaskForChart = function(task)\n    {\n      var Result = this.$injector.get('Result');\n\n      var me = this;\n      var successCallback = function(results)\n        {\n          me.chartResults = results;\n          me.chartTask = task;\n        };\n\n      var failureCallback = function()\n        {\n        };\n\n      var resource = Result.getByTask({ taskId: task.id });\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Toggles `isActive` of a task.\n   *\n   * @public\n   * @method toggleTask\n   * @param {object} task\n   * @return {void}\n   */\n  Workshop.prototype.toggleTask = function(task)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n      var Task = this.$injector.get('Task');\n\n      var successCallback = function(/*workshop*/)\n        {\n          var message = i18n.get(\n            task.isActive ?\n              'Task has been unlocked successfully. Students can send results now!' :\n              'Task has been locked successfully. Students cannot send results currently!'\n          );\n          notification.success(message);\n        };\n\n      var failureCallback = function()\n        {\n          // revert the change on failed update!\n          task.isActive = !task.isActive;\n        };\n\n      task.isActive = !task.isActive;\n\n      var resource = Task.update({ id: task.id}, task);\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets `expand` query parameter dependending on\n   * workshop's current `$$expanded` flag info.\n   *\n   * @public\n   * @method expand\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.expand = function(workshop)\n    {\n      var $state = this.$injector.get('$state');\n      var expand = !workshop.$$expanded ?\n        workshop.id : \n        null;\n\n      $state.go('backend.workshops', {\n        expand: expand\n      });\n    };\n\n  /**\n   * Sets up an event source for streaming user count.\n   *\n   * @private\n   * @method _addUsersStream\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._addUsersStream = function(workshop)\n    {\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      var _onMessage = function(data) {\n        me.$scope.$evalAsync(function(){\n          workshop.$$users = data;\n        });\n      };\n\n      var url = API_URL + '/sse/workshop/' + workshop.id + '/users';\n      var options = { onMessage: _onMessage, sleep: 10 };\n      var source = sse.addSource(url, options);\n      this._userSources[workshop.id] = source;\n    };\n\n  /**\n   * Removes an event source from internal stack and service.\n   *\n   * @private\n   * @method _removeUsersStream\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._removeUsersStream = function(workshop)\n    {\n      var sse = this.$injector.get('sse');\n\n      var source = this._userSources[workshop.id];\n      if (!source) {\n        return;\n      }\n\n      delete this._userSources[workshop.id];\n      sse.removeSource(source);\n    };\n\n  /**\n   * Sets up event sources for updating result counters.\n   *\n   * @private\n   * @method _streamResults\n   * @return {void}\n   */\n  Workshop.prototype._streamResults = function()\n    {\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      // --- SSE ---\n      var _onMessage = function(workshop, data) {\n        me.$scope.$evalAsync(function(){\n          // remove event source if workshop is not\n          // active at the moment === one-shot only\n          if (!workshop.isActive) {\n            sse.removeSource(me._resultsSource);\n          }\n\n          angular.forEach(data, function(item){\n            var task = me._tasks[item.id];\n            task.$$results = item.results;\n          });\n        });\n      };\n\n      var _watchExpression = function() {\n        // workshop must be opened, but we also need\n        // to watch `isActive` state to catch toggle\n        // from property to reinitialize event source\n        return me._expanded && me._expanded.isActive;\n      };\n\n      var _watchCallback = function() {\n        if (me._resultsSource) {\n          sse.removeSource(me._resultsSource);\n        }\n\n        if (me._expanded) {\n          var url = API_URL + '/sse/workshop/' + me._expanded.id + '/results';\n          var onMessage = _onMessage.bind(me, me._expanded);\n          var options = { onMessage: onMessage, sleep: 5 };\n          me._resultsSource = sse.addSource(url, options);\n        }\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Maps all workshops to hash maps, sets up streaming and query params.\n   *\n   * @private\n   * @method _initWorkshops\n   * @return {void}\n   */\n  Workshop.prototype._initWorkshops = function()\n    {\n      var $uiRouterGlobals = this.$injector.get('$uiRouterGlobals');\n\n      // create hash maps for workshops and tasks for ease lookups\n      angular.forEach(this.workshops, this._initWorkshop.bind(this));\n\n      // now make the initial call to change handler\n      this.uiOnParamsChanged($uiRouterGlobals.params);\n\n      // kick off general streaming of task results\n      this._streamResults();\n    };\n\n  /**\n   * Adds workshop and tasks to hash map and initializes\n   * streaming for workshop depending on `isActive` flag.\n   *\n   * @private\n   * @method _initWorkshop\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._initWorkshop = function(workshop)\n    {\n      // map all `tasks` to internal hash and set `$$results`\n      var me = this;\n      angular.forEach(workshop.tasks, function(task){\n        var old = me._tasks[task.id] || null;\n        task.$$results = old !== null ?\n          old.$$results\n          : 0;\n\n        me._tasks[task.id] = task;\n      });\n\n      // check `$$expanded` flag for this workshop\n      var id = this._expanded && this._expanded.id;\n      workshop.$$expanded = workshop.id === id;\n\n      // initialize `$$users` and set up streaming\n      workshop.$$users = workshop.users.length;\n\n      if (!workshop.isActive) {\n        this._removeUsersStream(workshop);\n      } else {\n        this._addUsersStream(workshop);\n      }\n\n      this._workshops[workshop.id] = workshop;\n    };\n\n  /**\n   * Removes all watches, listeners and sources\n   * as soon as controller's $scope is destroyed.\n   *\n   * @private\n   * @method _initListener\n   * @return {void}\n   */\n  Workshop.prototype._initListener = function()\n    {\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      var _onDestroy = function() {\n        for (var id in me._userSources) {\n          sse.removeSource(me._userSources[id]);\n        }\n\n        if (me._resultsSource) {\n          sse.removeSource(me._resultsSource);\n        }\n\n        me._resultsSource = null;\n        me._userSources = {};\n\n        me._unlisten();\n        me._unwatch();\n      };\n\n      this._unlisten = this.$scope.$on('$destroy', _onDestroy);\n    };\n\n\n  angular.module(module).controller('WorkshopController', Workshop);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Admin = function($scope, $injector, admins) {\n    this.admins = admins;\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  Admin.$inject = ['$scope', '$injector', 'admins'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of new workshop. */\n  Admin.prototype.username = null;\n\n  /** @var {string} code Code of new workshop. */\n  Admin.prototype.password = null;\n\n  /** @var {RegExp} usernameMinLength Minimum length of workshop name. */\n  Admin.prototype.usernameMinLength = 5;\n\n  /** @var {RegExp} passwordMinLength Minimum length of workshop code. */\n  Admin.prototype.passwordMinLength = 8;\n\n  /** @var {object} editAdmin Currently marked workshop for editing. */\n  Admin.prototype.editAdmin = null;\n\n  /** @var {object} deleteAdmin Currently marked workshop for deletion. */\n  Admin.prototype.deleteAdmin = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Creates a new admin.\n   *\n   * @public\n   * @method create\n   * @return {void}\n   */\n  Admin.prototype.create = function()\n    {\n      var notification = this.$injector.get('notification');\n      var Admin = this.$injector.get('Admin');\n      var i18n = this.$injector.get('i18n');\n\n      var admin = new Admin({\n        username: this.username,\n        password: this.password\n      });\n\n      var me = this;\n\n      var successCallback = function(admin)\n        {\n          var message = i18n.get('Admin has been created successfully!');\n          notification.success(message);\n\n          me.admins.unshift(admin);\n\n          me.username = null;\n          me.password = null;\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$create().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for deleting a admin.\n   *\n   * @public\n   * @method markAdminForDeletion\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.markAdminForDeletion = function(admin)\n    {\n      this.deleteAdmin = admin;\n    };\n\n  /**\n   * Deletes a admin after confirmation.\n   *\n   * @public\n   * @method delete\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.delete = function(admin)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Admin has been deleted successfully!');\n          notification.success(message);\n\n          var index = me.admins.indexOf(admin);\n          me.admins.splice(index, 1);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$delete().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for editing a admin.\n   *\n   * @public\n   * @method markAdminForEdit\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.markAdminForEdit = function(admin)\n    {\n      this.editAdmin = admin;\n    };\n\n  /**\n   * Updates a admin after confirmation.\n   *\n   * @public\n   * @method update\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.update = function(admin)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Password has been successfully updated!');\n          notification.success(message);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$update().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  angular.module(module).controller('AdminController', Admin);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Backend = function($injector, isSuperAdmin) {\n    this.$injector = $injector;\n\n    this.isSuperAdmin = isSuperAdmin;\n  };\n\n  Backend.$inject = ['$injector', 'isSuperAdmin'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isSuperAdmin If user is super admin. */\n  Backend.prototype.isSuperAdmin = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @public\n   * @method logout\n   * @return {Void}\n   */\n  Backend.prototype.logout = function()\n    {\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n\n      var successCallback = function()\n        {\n          $state.go('login.backend');\n        };\n\n      var failureCallback = function()\n        {\n\n        };\n\n      auth.signout().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Redirects router to state.\n   *\n   * @public\n   * @method goTo\n   * @param {string} state\n   * @return {Void}\n   */\n  Backend.prototype.goTo = function(state)\n    {\n      var $state = this.$injector.get('$state');\n\n      $state.go(state);\n    };\n\n  angular.module(module).controller('BackendController', Backend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/workshop/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      validateWorkshopBackend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/workshop/code/:code'\n      },\n      validateUsernameFrontend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/auth/validate/username/:username'\n      },\n      validateWorkshopFrontend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/auth/validate/workshop/:code'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Workshop', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/ticket/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      getByWorkshop: {\n        method: 'GET',\n        isArray: true,\n        url: API_URL + '/ticket/workshop/:workshopId'\n      }\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Ticket', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, $injector, API_URL) {\n    var url = API_URL + '/result/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      getByTask: {\n        method: 'GET',\n        isArray: true,\n        url: API_URL + '/result/task/:taskId'\n      }\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', '$injector', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Result', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/admin/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      validateAdmin: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/admin/username/:username'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Admin', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/task/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Task', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/user/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      current: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/user/current'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('User', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // i18n\n  // --------------------------------------------------\n  angular.module(module).filter('i18n',['i18n',function(i18n){\n    var filter = function()\n      {\n        return i18n.get.apply(i18n, arguments);\n      };\n\n    filter.$stateful = true;\n\n    return filter;\n  }]);\n\n  // --------------------------------------------------\n  // Percentage\n  // --------------------------------------------------\n  angular.module(module).filter('percent', function(){\n    return function(value, fraction) {\n      fraction = isNaN(fraction) ? 0 : fraction;\n      value = isNaN(value) ? 0 : value * 100;\n\n      return value.toFixed(fraction) + '%';\n    };\n  });\n\n  // --------------------------------------------------\n  // Coin\n  // --------------------------------------------------\n  angular.module(module).filter('coin', function(){\n    return function(value) {\n\n      if (value >= 1) {\n        return value + '&#8364;';\n      }\n\n      return (value*100) + '&#162;';\n    };\n  });\n\n  // --------------------------------------------------\n  // Note\n  // --------------------------------------------------\n  angular.module(module).filter('note', function(){\n    return function(value) {\n      return value + '&#8364;';\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* globals UIkit */\n(function() {\n  'use strict';\n\n  UIkit.component('off-canvas-scroll', {\n\n    defaults: {\n      offset: 0,\n      target: '',\n      duration: 1000,\n      transition: 'easeOutExpo'\n    },\n\n    props: {\n      target: String,\n      offset: Number,\n      duration: Number,\n      transition: String\n    },\n\n    computed: {\n        offcanvas: function() {\n          return UIkit.offcanvas(this.target);\n        },\n\n        $offcanvas: function() {\n          return this.offcanvas && this.offcanvas.$el;\n        }\n    },\n\n    init: function() {\n      if (!this.target) {\n        console.error('off-canvas-scroll: Required \"target\" option is not set.');\n        return;\n      }\n\n      if (!this.offcanvas) {\n        console.error('off-canvas-scroll: No offcanvas component found with id: ' + this.target);\n        return;\n      }\n    },\n\n    events: {\n      click: function(event, data) {\n        if (data && data.scroll) {\n          return;\n        }\n\n        this.offcanvas.hide();\n        this.$offcanvas.on('hidden', this._onHidden);\n      }\n    },\n\n    methods: {\n\n      _onHidden: function() {\n        this.$offcanvas.off('hidden', this._onHidden);\n\n        this._dummyScroll = UIkit.scroll(this.$el, {\n          transition: this.transition,\n          duration: this.duration,\n          offset: this.offset\n        });\n\n        this.$el.on('scrolled', this._onScrolled);\n        this.$el.trigger('click', { scroll: true });\n      },\n\n      _onScrolled: function() {\n        this.$el.off('scrolled', this._onScrolled);\n        this._dummyScroll.$destroy();\n      }\n    }\n  });\n\n})();\n"]}