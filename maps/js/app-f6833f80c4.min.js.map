{"version":3,"sources":["js/app-f6833f80c4.min.js"],"names":["global","angular","module","app","config","$locationProvider","$stateProvider","$urlRouterProvider","$httpProvider","$templateRequestProvider","$resourceProvider","$qProvider","VIEWS_PATH","html5Mode","hashPrefix","interceptors","push","errorOnUnhandledRejections","defaults","actions","get","method","list","isArray","update","create","delete","decorator","state","parent","newViewConfig","views","forEach","view","viewMatch","match","viewName","stateName","name","replace","templateUrl","join","httpOptions","skipAuthorization","url","abstract","resolve","translations","i18n","load","template","current","user","$state","promise","$promise","go","data","role","navbar@frontend","home@frontend","topics@frontend","financial-knowledge@frontend","financial-knowledge/interest-task@frontend","financial-knowledge/diversification-task@frontend","consumer-behaviour@frontend","consumer-behaviour/bomb-task@frontend","consumer-behaviour/anchoring-task@frontend","consumer-behaviour/mental-bookkeeping-task@frontend","consumer-behaviour/framing-task@frontend","self-control@frontend","self-control/savings-target-task@frontend","self-control/savings-supported-task@frontend","self-control/self-commitment-task@frontend","self-control/procrastination-task@frontend","status@frontend","contact@frontend","controller","controllerAs","footer@frontend","offcanvas@","@","isSuperAdmin","auth","$q","defer","successCallback","failureCallback","hasRole","then","redirectTo","main@backend","navbar@backend","footer@backend","workshops","Workshop","params","expand","value","dynamic","redirects","ROLE_ADMIN","admins","Admin","code","CODE_STORAGE_KEY","storage","proxy","getProxy","getItem","ROLE_USER","transition","$injector","injector","getAsync","resolvePolicy","when","ROLE_SUPER_ADMIN","otherwise","run","$transitions","$rootScope","appState","onStart","routerBusy","to","getUser","roles","indexOf","target","onError","onSuccess","$watch","isBusy","httpBusy","FastClick","attach","document","body","ANGULAR_MODULE","window","HttpInterceptor","this","_urls","$inject","prototype","getLastSuccessResponse","_lastSuccessResponse","getLastErrorResponse","_lastErrorResponse","getLastResponse","_lastResponse","getUrls","request","_setUrl","headers","token","Authorization","jwtToken","_getJWTToken","requestError","rejection","reject","response","_setLastSuccessResponse","_setLastResponse","responseError","_showGlobalErrorMessage","_setLastErrorResponse","$httpParamSerializer","responseOrRejection","notification","skipGlobalErrorMessage","message","error","jwt","getToken","isExpired","refresh","factory","httpInterceptor","instantiate","Notification","notify","status","options","UIkit","success","primary","warning","closeAll","service","AppState","routeBusy","Animation","animationEndEvent","dummy","createElement","events","WebkitAnimation","MozTAnimation","animation","key","event","style","undefined","transitionEndEvent","OTransition","MozTransition","WebkitTransition","translate","x","y","z","string","isUndefined","sprintf","webkitTransform","mozTransform","msTransform","oTransform","transform","requestAnimationFrame","lastTime","vendors","i","length","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","Math","max","timeout","id","setTimeout","bind","clearTimeout","Random","_spareRandomCache","between","min","fact","rand","random","floor","gaussian","mean","stdDev","spare","u","v","s","m","sqrt","log","pick","array","shuffle","temp","String","input","variables","slice","call","arguments","truncate","maxLength","substring","trim","toCamel","part","toUpperCase","toSpinal","toLowerCase","toSnake","Storage","MODE_COOKIES","MODE_STORAGE","mode","_getCookieProxy","_getLocalStorageProxy","supportsLocalStorage","$window","storageProxy","localStorage","val","setItem","removeItem","e","_encode","JSON","stringify","encodeURIComponent","_decode","decoded","decodeURIComponent","parse","documentProxy","me","_getAll","items","cookies","cookie","split","setCookie","expires","domain","path","secure","date","isNaN","Error","toUTCString","getCookie","hasOwnProperty","getAllCookies","removeCookie","removeAllCookies","getAllItems","removeAllItems","clear","Auth","signup","firewall","$http","_saveToken","_getSignupUrl","post","_username","username","_password","password","extend","signin","_getSigninUrl","signout","unload","_getSignoutUrl","invalidate","_getRefereshUrl","refresh_token","getRefreshToken","acceptExpired","decode","resolveRole","isString","setRefreshToken","setToken","API_URL","I18N","setLocale","_detectLocale","locales","de","defaultLocale","locale","getLocale","$log","_getJSONUrl","text","language","navigator","android","userAgent","userLanguage","systemLanguage","browserLanguage","substr","JWT","tokenKey","refreshKey","removeRefreshToken","removeToken","refreshToken","getExpirationDate","exp","setUTCSeconds","offset","now","valueOf","parts","_base64Decode","fromJson","output","atob","escaped","escape","User","_states","_eventSource","_results","_payload","_pending","_tasks","group","tickets","toJSON","_initTickets","_initState","_initGroup","isUser","_initWatches","_initTasks","_initPending","_initResults","_initSSE","sse","removeSource","_unwatchTickets","_unwatchState","result","_addResult","isAdmin","isInWorkshop","workshop","isActive","getTasks","getTaskByType","type","getPendingByType","getGroupAsString","getStateAsString","STATE_BEGINNER","_watchStateExpression","_watchStateCallback","newState","oldState","_watchTicketsExpression","_watchTicketsCallback","newTickets","oldTickets","oldCount","newCount","$watchCollection","_onMessage","$evalAsync","item","unix","updatedAt","task","onMessage","sleep","addSource","tasks","pending","results","$$results","Mail","send","_getPostUrl","_name","_mail","email","_subject","subject","_message","SSE","_sources","retry","_buildUrl","source","EventSource","onmessage","onerror","close","CardContainer","cards","canToggle","add","card","set","selected","directive","scope","restrict","bindToController","Card","$scope","$element","$attrs","$transclude","$id","hasIcon","isSlotFilled","disabled","isCheckbox","$onInit","cardContainer","click","$event","stopPropagation","preventDefault","changed","onClick","transclude","title","icon","buttons","require","Chart","_chart","_getOptions","labels","_getLabels","series","_getData","_render","$onDestroy","detach","mapResults","GROUP_A","GROUP_B","map","choice1","choice2","count","json","choice","groupA","groupB","SPLIT","ALL","failure","all","seriesBarDistance","chartPadding","top","left","right","bottom","axisY","labelInterpolationFnc","ticks","Chartist","FixedScaleAxis","high","low","plugins","legend","legendNames","$timeout","addClass","element","render","Bar","Modal","_element","_modal","_scope","isVisible","_onShow","onShow","_onShown","onShown","_onBeforeShow","onBeforeShow","_onHide","onHide","_onHidden","onHidden","_onBeforeHide","onBeforeHide","_unwatch","destroy","clone","on","append","modal","show","off","remove","$destroy","hide","YOUTUBE_API_LOADED","onYouTubeIframeAPIReady","Video","_player","find","_onStateChange","width","height","videoId","init","_init","_watchAPIExpression","is","isLoaded","_watchAPICallback","isReady","_unwatchAPI","getStyle","padding-bottom","YT","Player","onStateChange","PlayerState","PLAYING","onPlaying","PAUSED","onPaused","ENDED","onEnded","CUED","onCued","onBuffering","Status","iconRatio","isCompact","iconColor","tasksVisible","ticketsVisible","_watchTasksExpression","_watchTasksCallback","_unwatchTasks","toggleTasks","toggleTickets","StatusIcons","ratio","color","isBeginner","isAmateuer","isAdvanced","isExpert","isProfi","STATE_AMATEUR","STATE_ADVANCED","STATE_EXPERT","_watchExpression","_watchCallback","isAmateur","StatusLabel","StatusTickets","Tabber","domId","hasExercise","exercise","description","Draggable","_body","_clone","_coordinates","_interactable","_activeClass","_itemClass","_disabledClass","removeClass","draggable","enabled","_onResize","restriction","interact","inertia","autoScroll","onend","_onEndItem","onmove","_onMoveItem","onstart","_onStartItem","snap","targets","interaction","_origin","startCoords","page","dropTarget","endOnly","manualStart","_onMove","getData","_window","_resize","unset","_trigger","$data","dx","dy","_translate","dropped","interactable","currentTarget","pointerIsDown","interacting","offsetY","clientHeight","offsetX","clientWidth","pageY","touches","pageX","css","position","start","args","onDragStart","onDragMove","onDragEnd","onDrop","Dropable","_enterClass","_acceptClass","accept","dropzone","ondrop","_onDrop","ondragenter","_onDragEnter","ondragleave","_onDragLeave","ondropactivate","_onDropActivate","ondropdeactivate","_onDropDeactivate","onDropDeactivate","onDropActivate","onDragEnter","onDragLeave","ScrollTo","_source","_target","_scroller","_onClick","_onScrolled","jQuery","charAt","console","warn","href","duration","easing","scroll","scrollTo","isFunction","Evaluation","customButtons","defaultButtons","LockedState","isLocked","userText","adminText","FormField","_transcludeElements","_transcludeScopes","_cloneDefault","_cloneLabel","_unlisten","label","ngModel","resetEmpty","showMessages","labelClass","failureClass","successClass","_addWatches","_transclude","unlisten","unwatch","setModel","_update","$valid","$invalid","_reset","$setUntouched","unwatchModel","newModel","oldModel","$touched","$pending","$viewValue","transcludeDefault","attr","replaceWith","transcludeLabel","messageMin","messageMax","messageUrl","messageEmail","messageNumber","messagePattern","messageRequired","messageMinlength","messageMaxlength","messagesCustom","FormFieldModel","autoFocus","formField","focus","ValidatorWorkshopExists","keyLocked","$asyncValidators","validatorWorkshopExists","validate","modelValue","$setValidity","validateWorkshopFrontend","ValidatorWorkshopUnique","validatorWorkshopUnique","validateWorkshopBackend","ValidatorAdminUnique","validatorAdminUnique","validateAdmin","InterestTask","resolved","correctAnswers","exercise1Answer","exercise2Answer","exercise1Correct","exercise2Correct","exercise1Result","exercise2Result","amount","rate","years","getPayload","exercise1","current_result","actual_result","is_valid","exercise2","canResolve","_calculateResult","reset","onResolve","payload","pow","InterestTaskExercise","stack","sum","notes","coins","onUpdate","revert","pop","DiversificationTask","$elemnt","heads","tails","companies","sides","one","company","two","throws","toss","ticketCount","getTicketCount","image","ticket","action","factorA","factorB","ticketsA","ticketsB","DiversificationTaskCoin","flip","animate","back","front","startSide","class","_toss","_getToss","_timeoutCallback","_iterateSides","side","_watchFlipCallback","newFlip","_watchFlipExpression","_watchTossCallback","newToss","oldToss","_watchTossExpression","_evalAsyncCallback","onFinish","_animationEndCallback","onInit","_unwatchFlip","_unwatchToss","$filter","picked","filtered","BombTask","started","stopped","hasBomb","totalBoxes","remainingBoxes","collectedBoxes","avg","rows","cols","interval","_initMembers","_initMatrix","_initBomb","index","$interval","_intIndex","iterator","_intervalId","stop","cancel","resolveCard","$$resolved","collection","toggle","column","active","$$active","splice","isBomb","total","collected","trackId","row","col","equals","bomb","matrix","columns","j","BombTaskCard","model","isDisabled","isClickable","onToggle","AnchoringTask","MentalBookkeepingTask","FramingTask","lotteryA","lotteryB","lottery","SavingsTargetTask","_flag","_storageKey","step","wish","amountRepeated","form","minAmount","maxAmount","isPending","isNumber","getDifference","SelfCommitmentTask","videos","ImPxD_FDpKM","gUYjYEGbxEY","_isPending","ProcrastinationTask","_onInterval","rounds","openRounds","minCatched","maxEscaped","invalidAt","hasWarmup","warmupMaxEscaped","warmupMinCatched","hasSuccess","setWarmup","setMode","setState","moment","warmup","isInvalid","_now","getCurrentRound","getRemainingTime","keys","difference","diff","seconds","asSeconds","minutes","asMinutes","hours","asHours","days","asDays","unit","ProcrastinationTaskGame","bubbles","viewport","_nextId","_tapped","_rounds","_retries","_timeout","_requestId","_loop","_viewport","catched","accuracy","expired","maxRounds","maxRetries","Number","POSITIVE_INFINITY","bubbleDelay","expire","_unloop","_getViewport","quit","_getResult","onGameOver","done","onGameDone","_setAccuracy","canRetry","canRestart","addBubble","bubble","removeBubble","resize","scrollTop","scrollLeft","ProcrastinationTaskBubble","themes","theme","radius","speed","wave","game","gameController","xOffset","_originalR","_originalX","sin","offscreenY","move","_resizeId","evalAsync","onAnimationEnd","LoginFrontend","codeMinLength","codePattern","userpattern","loginForm","next","reload","LoginBackend","usernameMinLength","passwordMinLength","passwordMaxLength","Contact","messageMinLength","submit","mail","contactForm","Frontend","createResult","Result","$create","updateResult","logout","goTo","_resultsSource","_userSources","_workshops","_initWorkshops","_initListener","nameMinLength","deleteWorkshop","drawingWorkshop","drawingTickets","drawingAmount","chartResults","chartTask","uiOnParamsChanged","$$expanded","_expanded","unshift","_initWorkshop","_removeUsersStream","$delete","markWorkshopForDrawing","Ticket","resource","getByWorkshop","workshopId","markWorkshopForDeletion","toggleWorkshop","$update","markTaskForChart","getByTask","taskId","toggleTask","Task","_addUsersStream","$$users","_streamResults","$uiRouterGlobals","old","users","_onDestroy","$on","editAdmin","deleteAdmin","admin","markAdminForDeletion","markAdminForEdit","Backend","Factory","$resource","paramDefaults","validateUsernameFrontend","filter","apply","$stateful","fraction","toFixed","component","props","computed","offcanvas","$offcanvas","$el","methods","_dummyScroll","trigger"],"mappings":"CASA,SAAUA,EAAQC,GAChB,YAKA,IAAIC,GAAS,OAKTC,EAAMF,EAAQC,OAAOA,GACvB,aACA,aACA,aACA,YACA,aACA,eAYFC,GAAIC,QACF,oBAAqB,iBAAkB,qBAAsB,gBAC7D,2BAA4B,oBAAqB,aAAc,aAC/D,SACEC,EAAmBC,EAAgBC,EAAoBC,EACvDC,EAA0BC,EAAmBC,EAAYC,GAKzDP,EAAkBQ,WAAU,GAC5BR,EAAkBS,WAAW,KAK7BN,EAAcO,aAAaC,KAAK,mBAKhCL,EAAWM,4BAA2B,GAKtCP,EAAkBQ,SAASC,SACzBC,KAAUC,OAAQ,OAClBC,MAAUD,OAAQ,MAAOE,SAAQ,GACjCC,QAAUH,OAAQ,SAClBI,QAAUJ,OAAQ,QAClBK,UAAUL,OAAQ,WAQpBf,EAAeqB,UAAU,QAAS,SAASC,EAAOC,GAKhD,GAAIC,MAAoBC,EAAQF,EAAOD,EAkBvC,OAjBA3B,GAAQ+B,QAAQD,EAAO,SAAS3B,EAAQ6B,GACtC,GAAIC,GAAYD,EAAKE,MAAM,aACvBC,EAAWF,EAAY,IAAMA,EAAU,GAAK,GAE5CG,EAAYT,EAAMU,KAAKC,QAAQ,MAAO,KAEtCC,EAAcpC,EAAOoC,cACvB5B,EACAyB,EACAD,EACA,SACAK,KAAK,GAEPrC,GAAOoC,YAAcA,EACrBV,EAAcG,GAAQ7B,IAGjB0B,IAITrB,EAAyBiC,aACvBC,mBAAmB,IAQrBrC,EAAesB,MAAM,QACnBgB,IAAK,GACLC,YAAU,EACVC,SACEC,cAAe,OAAQ,SAASC,GAC9B,MAAOA,GAAKC,KAAK,MACfN,mBAAmB,OAIzBO,SAAU,0CAIZ5C,EAAesB,MAAM,YACnBC,OAAQ,OACRe,IAAK,IACLE,SACEK,SACE,OAAQ,SAAU,KAClB,SAASC,EAAMC,GACb,GAAIC,GAAUF,EAAKH,OAAOM,QAC1B,OAAOD,GAAAA,SAAc,WACnBD,EAAOG,GAAG,uBAKlBC,MACEC,MACE,YACA,aACA,qBAGJ3B,OACE4B,qBACAC,mBACAC,qBAEAC,kCACAC,gDACAC,uDAEAC,iCACAC,2CACAC,gDACAC,yDACAC,8CAEAC,2BACAC,+CACAC,kDACAC,gDACAC,gDAEAC,qBACAC,oBACEC,WAAY,oBACZC,aAAc,qBAEhBC,qBACAC,cACEH,WAAY,qBACZC,aAAc,sBAEhBG,KACEJ,WAAY,qBACZC,aAAc,yBAMpBxE,EAAesB,MAAM,WACnBC,OAAQ,OACRe,IAAK,SACLa,MACEC,MACE,aACA,qBAGJZ,SACEoC,cACE,OAAQ,SAAU,KAClB,SAASC,EAAM9B,EAAQ+B,GACrB,GAAIC,GAAQD,EAAGC,QAEXC,EAAkB,WACpBD,EAAMvC,SAAQ,IAEZyC,EAAkB,WACpBF,EAAMvC,SAAQ,GAUhB,OAPAqC,GAAKK,QACH,oBACAC,KACAH,EACAC,GAGKF,EAAM/B,WAInBoC,WAAY,oBACZ3D,OACE4D,kBACAC,oBACAC,oBACAb,cACEH,WAAY,oBACZC,aAAc,qBAEhBG,KACEJ,WAAY,oBACZC,aAAc,wBAMpBxE,EAAesB,MAAM,qBACnBgB,IAAK,gBACLa,MACEC,MACE,aACA,qBAGJZ,SACEgD,WAAY,WAAY,SAASC,GAC/B,MAAOA,GAASzE,OAAOiC,YAG3ByC,QACEC,QACEC,MAAO,KACPC,SAAS,IAGbtB,WAAY,qBACZC,aAAc,uBAGhBxE,EAAesB,MAAM,kBACnBgB,IAAK,WACLa,MACEC,KAAM,mBACN0C,WACEC,WAAY,YAGhBvD,SACEwD,QAAS,QAAS,SAASC,GACzB,MAAOA,GAAMjF,OAAOiC,YAGxBsB,WAAY,kBACZC,aAAc,oBAIhBxE,EAAesB,MAAM,SACnBgB,IAAK,SACLf,OAAQ,OACRgB,YAAU,EACV6C,WAAY,yBAGdpF,EAAesB,MAAM,kBACnBgB,IAAK,OACLE,SACE0D,MACE,mBAAoB,UACpB,SAASC,EAAkBC,GACzB,GAAIC,GAAQD,EAAQE,UACpB,OAAOD,GAAME,QACXJ,MAKRhD,MACE2C,WACEU,UAAW,aAGfpB,WAAY,uBACZb,WAAY,0BACZC,aAAc,4BAGhBxE,EAAesB,MAAM,wBACnBgB,IAAK,KAGPtC,EAAesB,MAAM,yBACnBgB,IAAK,UACL8C,WAAY,gCAGdpF,EAAesB,MAAM,+BACnBgB,IAAK,aACL8C,WAAY,SAASqB,GACnB,GAAIrB,GAAa,SAASc,GACxB,GAAIA,EACF,MAAO,+BAIPQ,EAAYD,EAAWE,WACvBT,EAAOQ,EAAUE,SAAS,OAC9B,OAAOV,GAAKf,KAAKC,MAIrBpF,EAAesB,MAAM,+BACnBgB,IAAK,aACLuE,eAAiBC,KAAM,SACvB1B,WAAY,SAASqB,GACnB,GAAIrB,GAAa,SAASc,GACxB,IAAKA,EACH,MAAO,+BAIPQ,EAAYD,EAAWE,WACvBT,EAAOQ,EAAUE,SAAS,OAC9B,OAAOV,GAAKf,KAAKC,MAIrBpF,EAAesB,MAAM,yBACnBgB,IAAK,aAGPtC,EAAesB,MAAM,iBACnBgB,IAAK,SACLa,MACE2C,WACEC,WAAY,UACZgB,iBAAkB,YAGtBxC,WAAY,yBACZC,aAAc,2BAGhBvE,EAAmB+G,UAAU,QAOjCnH,EAAIoH,KAAK,YAAa,SAASP,GAC3B,GAAIQ,GAAeR,EAAU5F,IAAI,gBAC7BqG,EAAaT,EAAU5F,IAAI,cAC3BsG,EAAWV,EAAU5F,IAAI,YACzBiC,EAAS2D,EAAU5F,IAAI,UACvB+D,EAAO6B,EAAU5F,IAAI,QAErBuG,EAAU,SAASZ,GACrBW,EAASE,YAAa,CAEtB,IAAIhG,GAAQmF,EAAWc,KACnBpE,EAAO7B,EAAM6B,SACbC,EAAOD,EAAKC,MAAQ,KACpB0C,EAAY3C,EAAK2C,aAIrB,IAAa,OAAT1C,EAAe,CAIjB,GAAIN,GAAO+B,EAAK2C,SAChB,IAAa,OAAT1E,EACF,OAAO,CAGT,IAAI2E,GAAQ3E,EAAK2E,SACjB,KAAKrE,IAAQ0C,GACX,GAAI2B,EAAMC,QAAQtE,IAAO,EAAG,CAC1B,GAAIuE,GAAS7B,EAAU1C,EACvB,OAAOL,GAAO4E,OAAOA,GAIzB,OAAO,EAIJhI,EAAQsB,QAAQmC,KACnBA,GAAQA,GAGV,IAAI4B,GAAkB,WAElB,OAAO,GAGPC,EAAkB,WAKlB,OAAO7B,EAAK,IAEV,IAAK,aACL,IAAK,mBACH,MAAOL,GAAO4E,OAAO,gBACvB,SACE,MAAO5E,GAAO4E,OAAO,mBAI7B,OAAO9C,GAAKK,QAAQ9B,GAAM+B,KACxBH,EACAC,IAIA2C,EAAU,WACZR,EAASE,YAAa,GAGpBO,EAAY,SAASpB,GACvBU,EAAW7F,MAAQmF,EAAWc,KAC9BH,EAASE,YAAa,EAGxBH,GAAWW,OACT,WACE,MAAOV,GAASW,UAElB,SAASA,GACPZ,EAAWY,OAASA,EACpBZ,EAAWa,SAAWZ,EAASY,SAC/Bb,EAAWG,WAAaF,EAASE,aAIrCJ,EAAaU,WAAYA,GACzBV,EAAaG,WAAYA,GACzBH,EAAaW,aAAcA,GAE3BI,UAAUC,OAAOC,SAASC,SAO9B1I,EAAO2I,eAAiBzI,GAEvB0I,OAAQ3I,SAGX,SAAUC,EAAQD,GAChB,YAEA,IAAI4I,GAAkB,SAAS7B,GAE3B8B,KAAK9B,UAAYA,EACjB8B,KAAKC,SAITF,GAAgBG,SAAW,aAK3BH,EAAgBI,UAAUC,uBAAyB,WAE/C,MAAOJ,MAAKK,sBAMhBN,EAAgBI,UAAUG,qBAAuB,WAE7C,MAAON,MAAKO,oBAMhBR,EAAgBI,UAAUK,gBAAkB,WAExC,MAAOR,MAAKS,eAMhBV,EAAgBI,UAAUO,QAAU,WAEhC,MAAOV,MAAKC,OAQhBF,EAAgBI,UAAUQ,QAAU,SAASrJ,GAEzC,GAAIsH,GAAWoB,KAAK9B,UAAU5F,IAAI,WAGlCsG,GAASY,UAAW,EAGpBQ,KAAKY,QAAQtJ,GAGbA,EAAOuJ,QAAQ,oBAAsB,gBAGrC,IAAIrE,GAAkB,SAASsE,GAK7B,MAJIA,KACFxJ,EAAOuJ,QAAQE,cAAgB,UAAYD,GAGtCxJ,GAGLmF,EAAkB,WACpB,MAAOnF,GAGT,IAAIA,EAAOuC,kBACT,MAAOvC,EAGT,IAAI0J,GAAWhB,KAAKiB,aAAa3J,GAC7BgF,EAAK0D,KAAK9B,UAAU5F,IAAI,KAC5B,OAAOgE,GAAGgC,KAAK0C,GAAUrE,KACvBH,EACAC,IASNsD,EAAgBI,UAAUe,aAAe,SAASC,GAE9C,GAAIvC,GAAWoB,KAAK9B,UAAU5F,IAAI,YAC9BgE,EAAK0D,KAAK9B,UAAU5F,IAAI,KAI5B,OAFAsG,GAASY,UAAW,EAEblD,EAAG8E,OAAOD,IAQrBpB,EAAgBI,UAAUkB,SAAW,SAASA,GAE1C,GAAIzC,GAAWoB,KAAK9B,UAAU5F,IAAI,WAOlC,OALA0H,MAAKsB,wBAAwBD,GAC7BrB,KAAKuB,iBAAiBF,GAEtBzC,EAASY,UAAW,EAEb6B,GAQXtB,EAAgBI,UAAUqB,cAAgB,SAASL,GAE/C,GAAIvC,GAAWoB,KAAK9B,UAAU5F,IAAI,YAC9BgE,EAAK0D,KAAK9B,UAAU5F,IAAI,KAQ5B,OANA0H,MAAKyB,wBAAwBN,GAC7BnB,KAAK0B,sBAAsBP,GAC3BnB,KAAKuB,iBAAiBJ,GAEtBvC,EAASY,UAAW,EAEblD,EAAG8E,OAAOD,IAQrBpB,EAAgBI,UAAUS,QAAU,SAAStJ,GAEzC,GAAIqK,GAAuB3B,KAAK9B,UAAU5F,IAAI,wBAC1C4E,EAASyE,EAAqBrK,EAAO4F,QACrCpD,EAAMxC,EAAOwC,KACfoD,EACE,IAAMA,EACN,GAGJ8C,MAAKC,MAAMnG,IAAO,GAMtBiG,EAAgBI,UAAUoB,iBAAmB,SAASK,GAElD5B,KAAKS,cAAgBmB,GAMzB7B,EAAgBI,UAAUuB,sBAAwB,SAASP,GAEvDnB,KAAKO,mBAAqBY,GAM9BpB,EAAgBI,UAAUmB,wBAA0B,SAASD,GAEzDrB,KAAKK,qBAAuBgB,GAMhCtB,EAAgBI,UAAUsB,wBAA0B,SAASN,GAE3D,GAAIU,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClC4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1BhB,EAAS6J,EAAU7J,UACvB,KAAIA,EAAOwK,uBAAX,CAIA,GAAInH,GAAOwG,EAAUxG,QAChBA,GAAKoH,SAIVF,EAAaG,MAAM9H,EAAK5B,IAAIqC,EAAKoH,YAMnChC,EAAgBI,UAAUc,aAAe,WACvC,GAAI5E,GAAO2D,KAAK9B,UAAU5F,IAAI,QAC1B2J,EAAMjC,KAAK9B,UAAU5F,IAAI,OAGzBwI,EAAQmB,EAAIC,UAChB,KAAKpB,EACH,MAAO,KAKT,IAAImB,EAAIE,UAAUrB,EAAO,KAAM,CAC7B,GAAItE,GAAkB,WACpB,MAAOyF,GAAIC,YAGTzF,EAAkB,WACpB,MAAO,MAGT,OAAOJ,GAAK+F,UAAUzF,KACpBH,EACAC,GAKJ,MAAOwF,GAAIC,YAMb/K,EAAQC,OAAOA,GAAQiL,QAAQ,mBAAmB,YAAY,SAASnE,GAEnE,GAAIoE,GAAkBpE,EAAUqE,YAAYxC,EAE5C,QACEW,QAAS,WAAY,MAAO4B,GAAgB5B,WAC5CF,gBAAiB,WAAY,MAAO8B,GAAgB9B,mBACpDF,qBAAsB,WAAY,MAAOgC,GAAgBhC,wBACzDF,uBAAwB,WAAY,MAAOkC,GAAgBlC,0BAC3DO,QAAS,SAASrJ,GAAS,MAAOgL,GAAgB3B,QAAQrJ,IAC1D+J,SAAU,SAASA,GAAW,MAAOiB,GAAgBjB,SAASA,IAC9DH,aAAc,SAASC,GAAY,MAAOmB,GAAgBd,cAAcL,IACxEK,cAAe,SAASL,GAAY,MAAOmB,GAAgBd,cAAcL,SAI9EtB,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIqL,GAAe,YAGnBA,GAAatC,WAgBbsC,EAAarC,UAAUsC,OAAS,SAASV,EAASW,EAAQC,GAOxD,MANAD,GAASA,GAAU,UACnBC,EAAUA,MAEVA,EAAQZ,QAAUA,EAClBY,EAAQD,OAASA,EAEVE,MAAMf,aAAac,IAW5BH,EAAarC,UAAU0C,QAAU,SAASd,EAASY,GACjD3C,KAAKyC,OAAOV,EAAS,UAAWY,IAWlCH,EAAarC,UAAU2C,QAAU,SAASf,EAASY,GACjD3C,KAAKyC,OAAOV,EAAS,UAAWY,IAWlCH,EAAarC,UAAU6B,MAAQ,SAASD,EAASY,GAC/C3C,KAAKyC,OAAOV,EAAS,SAAUY,IAWjCH,EAAarC,UAAU4C,QAAU,SAAShB,EAASY,GACjD3C,KAAKyC,OAAOV,EAAS,UAAWY,IAUlCH,EAAarC,UAAU6C,SAAW,WAChCJ,MAAMf,aAAamB,YAMrB7L,EAAQC,OAAOA,GAAQ6L,QAAQ,eAAgBT,IAE9C3C,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAI+L,GAAW,SAAShF,GAEpB8B,KAAK9B,UAAYA,EAGrBgF,GAAShD,SAAW,aAOpBgD,EAAS/C,UAAUX,UAAW,EAG9B0D,EAAS/C,UAAUrB,YAAa,EAahCoE,EAAS/C,UAAUZ,OAAS,WAC1B,MAAOS,MAAKR,UAAYQ,KAAKmD,WAM/BhM,EAAQC,OAAOA,GAAQ6L,QAAQ,WAAYC,IAE1CrD,eAAgB1I,SAGnB,SAAUC,EAAQD,GAEhB,YASA,IAAIiM,GAAY,SAASlF,GAErB8B,KAAK9B,UAAYA,EAGrBkF,GAAUlD,SAAW,aASrBkD,EAAUjD,UAAUkD,kBAAoB,WACtC,GAAIC,GAAQ3D,SAAS4D,cAAc,OAC/BC,GACFC,gBAAmB,qBACnBC,cAAiB,eACjBC,UAAa,eAGf,KAAI,GAAIC,KAAOJ,GAAO,CAClB,GAAIK,GAAQP,EAAMQ,MAAMF,EACxB,IAAcG,SAAVF,EACF,MAAOL,GAAOI,GAIpB,MAAO,SAUTR,EAAUjD,UAAU6D,mBAAqB,WACvC,GAAIV,GAAQ3D,SAAS4D,cAAc,OAC/BC,GACFvF,WAAa,gBACbgG,YAAc,iBACdC,cAAgB,gBAChBC,iBAAmB,sBAGrB,KAAI,GAAIP,KAAOJ,GAAO,CAClB,GAAIK,GAAQP,EAAMQ,MAAMF,EACxB,IAAcG,SAAVF,EACF,MAAOL,GAAOI,GAIpB,MAAO,SAaTR,EAAUjD,UAAUiE,UAAY,SAASC,EAAGC,EAAGC,GAC7C,GAAIC,GAASxE,KAAK9B,UAAU5F,IAAI,UAE5B8L,EAAYjN,EAAQsN,YAAYF,GAClCC,EAAOE,QAAQ,uBAAwBL,EAAGC,GAC1CE,EAAOE,QAAQ,8BAA+BL,EAAGC,EAAGC,EAEtD,QACEI,gBAAmBP,EACnBQ,aAAgBR,EAChBS,YAAeT,EACfU,WAAcV,EACdW,UAAaX,IAWjBhB,EAAUjD,UAAU6E,sBAAyB,WAGzC,IAAI,GAFAC,GAAW,EACXC,GAAW,KAAM,MAAO,SAAU,KAC9BC,EAAI,EAAGA,EAAID,EAAQE,SAAWtF,OAAOkF,sBAAuBG,IAChErF,OAAOkF,sBAAwBlF,OAAOoF,EAAQC,GAAG,yBACjDrF,OAAOuF,qBACLvF,OAAOoF,EAAQC,GAAG,yBAClBrF,OAAOoF,EAAQC,GAAG,8BAexB,OAXKrF,QAAOkF,wBACVlF,OAAOkF,sBAAwB,SAASM,GACpC,GAAIC,IAAW,GAAIC,OAAOC,UACtBC,EAAaC,KAAKC,IAAI,EAAG,IAAML,EAAWN,IAC1CY,EAAU,WAAaP,EAASC,EAAWG,IAC3CI,EAAKhG,OAAOiG,WAAWF,EAASH,EAEpC,OADAT,GAAWM,EAAWG,EACfI,IAINhG,OAAOkF,sBAAsBgB,KAAKlG,WAU7CsD,EAAUjD,UAAUkF,qBAAuB,WAKzC,MAJKvF,QAAOuF,uBACVvF,OAAOuF,qBAAuB,SAASS,GAAMG,aAAaH,KAGrDhG,OAAOuF,qBAAqBW,KAAKlG,WAM1C3I,EAAQC,OAAOA,GAAQ6L,QAAQ,YAAaG,IAE3CvD,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAEA,IAAI+O,GAAS,WACXlG,KAAKmG,kBAAoB,KAG3BD,GAAOhG,WAEPgG,EAAO/F,UAAUiG,QAAU,SAASC,EAAKT,GACvCS,EAAqB,mBAARA,GAAsBA,EAAM,EACzCT,EAAqB,mBAARA,GAAsBA,EAAM,CAEzC,IAAIU,GAAQV,EAAMS,EAAM,EACpBE,EAAOZ,KAAKa,QAEhB,OAAOb,MAAKc,MAAMF,EAAOD,EAAOD,IAGlCH,EAAO/F,UAAUuG,SAAW,SAASC,EAAMC,GACzCA,EAA2B,mBAAXA,GAAyBA,EAAS,EAClDD,EAAuB,mBAATA,GAAuBA,EAAO,CAE5C,IAAIE,GAAQ7G,KAAKmG,iBACjB,IAA+B,OAA3BnG,KAAKmG,kBAEP,MADAnG,MAAKmG,kBAAoB,KAClBQ,EAAOC,EAASC,CAGzB,IAAIC,GAAGC,EAAGC,CAEV,GACEF,GAAI,EAAInB,KAAKa,SAAW,EACxBO,EAAI,EAAIpB,KAAKa,SAAW,EACxBQ,EAAIF,EAAEA,EAAIC,EAAEA,QACLC,GAAK,GAAS,IAAJA,EAEnB,IAAIC,GAAItB,KAAKuB,QAAUvB,KAAKwB,IAAIH,GAAKA,EAErC,OADAhH,MAAKmG,kBAAoBY,EAAIE,EACtBN,EAAOC,EAASE,EAAIG,GAG7Bf,EAAO/F,UAAUiH,KAAO,SAASC,GAC/B,MAAOA,GAAMrH,KAAKoG,QAAQ,EAAGiB,EAAMjC,OAAS,KAG9Cc,EAAO/F,UAAUjI,KAAO,SAASmP,EAAOjK,GACtC,GAAImJ,GAAOvG,KAAKoG,QAAQ,EAAGiB,EAAMjC,OAAS,EAI1C,OAHAiC,GAAMnP,KAAKmP,EAAMd,IACjBc,EAAMd,GAAQnJ,EAEPiK,EAAMjC,QAGfc,EAAO/F,UAAUmH,QAAU,SAASD,GAClC,IAAK,GAAIlC,GAAEkC,EAAMjC,OAAO,EAAGD,EAAE,EAAGA,IAAM,CACpC,GAAIoB,GAAOvG,KAAKoG,QAAQ,EAAGjB,GACvBoC,EAAOF,EAAMlC,EAEjBkC,GAAMlC,GAAKkC,EAAMd,GACjBc,EAAMd,GAAQgB,EAGhB,MAAOF,IAMTlQ,EAAQC,OAAOA,GAAQ6L,QAAQ,SAAUiD,IAExCrG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAEhB,YASA,IAAIqQ,GAAS,YAIbA,GAAOtH,WAWPsH,EAAOrH,UAAUuE,QAAU,SAAS+C,EAAMC,GAE/BvQ,EAAQsB,QAAQiP,KACnBA,KAAeC,MAAMC,KAAKC,UAAW,GAGvC,KAAK,GAAI1C,GAAE,EAAGA,EAAEuC,EAAUtC,OAAQD,IAChCsC,EAAQA,EAAMhO,QAAQ,KAAKiO,EAAUvC,GAGvC,OAAOsC,IAYbD,EAAOrH,UAAU2H,SAAW,SAASL,EAAMM,GAGrC,MADAA,GAAYA,GAAa,GACrBN,EAAMrC,QAAU2C,EACXN,EAGFA,EAAMO,UAAU,EAAED,GAAa,OAW5CP,EAAOrH,UAAU8H,KAAO,SAASR,GAE3B,MAAOA,GAAMhO,QAAQ,aAAc,KAWzC+N,EAAOrH,UAAU+H,QAAU,SAAST,GAE9B,MAAOA,GAAMhO,QAAQ,eAAgB,SAAS0O,GAC1C,MAAOA,GAAKC,cAAc3O,QAAQ,OAAO,OAYnD+N,EAAOrH,UAAUkI,SAAW,SAASZ,GAE/B,MAAOA,GAAMhO,QAAQ,kBAAmB,SAAS0O,GAC7C,MAAO,IAAMA,EAAKG,cAAc7O,QAAQ,IAAI,OAYtD+N,EAAOrH,UAAUoI,QAAU,SAASd,GAE9B,MAAOA,GAAMhO,QAAQ,kBAAmB,SAAS0O,GAC7C,MAAO,IAAMA,EAAKG,cAAc7O,QAAQ,IAAI,OAOtDtC,EAAQC,OAAOA,GAAQ6L,QAAQ,SAAUuE,IAExC3H,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIqR,GAAU,SAAStK,GACrB8B,KAAK9B,UAAYA,EAGnBsK,GAAQC,aAAe,UACvBD,EAAQE,aAAe,UACvBF,EAAQtI,SAAW,aAanBsI,EAAQrI,UAAUrC,SAAW,SAAS6K,GACpC,OAAQA,GACN,IAAKH,GAAQC,aACZ,MAAOzI,MAAK4I,iBAEb,KAAKJ,GAAQE,aACZ,MAAO1I,MAAK6I,uBAEd,SACC,MAAI7I,MAAK8I,uBACA9I,KAAK6I,wBAGP7I,KAAK4I,oBAWhBJ,EAAQrI,UAAU2I,qBAAuB,WACvC,GAAIC,GAAU/I,KAAK9B,UAAU5F,IAAI,WAC7B0Q,EAAeD,EAAQE,aACvBrF,EAAM,kCACNsF,EAAM,iCAEV,KACCF,EAAaG,QAAQvF,EAAKsF,GAC1BF,EAAaI,WAAWxF,GACvB,MAAOyF,GACR,OAAO,EAGR,OAAO,GAYTb,EAAQrI,UAAUmJ,QAAU,SAASlM,GACnC,IACCA,EAAQmM,KAAKC,UAAUpM,GACtB,MAAOiM,GACRjM,EAAQ2G,OAGT,MAAO0F,oBAAmBrM,IAY5BoL,EAAQrI,UAAUuJ,QAAU,SAAStM,GACnC,GAAIuM,EACJ,cAAevM,IACd,IAAK,SACHuM,EAAUC,mBAAmBxM,EAC7B,KACEuM,EAAUJ,KAAKM,MAAMF,GACrB,MAAON,IAGT,KACF,SACEM,EAAU5F,OAWb,MARgB,cAAZ4F,IACHA,EAAU5F,QAGKA,SAAZ4F,IACHA,EAAU,MAGJA,GAWTnB,EAAQrI,UAAUyI,gBAAkB,WAClC,GAAIkB,GAAgB9J,KAAK9B,UAAU5F,IAAI,aAEnCyR,EAAK/J,KACLgK,EAAU,SAASH,GACtB,GAAII,MAEAC,EAAUJ,EAAcK,OAAOC,MAAM,KACzC,IAAuB,IAAnBF,EAAQ9E,QAA+B,KAAf8E,EAAQ,GAClC,MAAOD,EAGT,KAAK,GAAI9E,GAAI,EAAGA,EAAI+E,EAAQ9E,OAAQD,IAAK,CACvC,GAAIgF,GAASD,EAAQ/E,GAAGiF,MAAM,IACzBP,GAKLI,EAAME,EAAO,IAAMJ,EAAGL,QAAQS,EAAO,IAJnCF,EAAME,EAAO,IAAMA,EAAO,GAO9B,MAAOF,IAGJI,EAAY,SAASzG,EAAKxG,EAAOkN,EAASC,EAAQC,EAAMC,GAC3DrN,EAAQ2M,EAAGT,QAAQlM,EAEnB,KACE,GAAIsN,GAAO,GAAIlF,MAAK8E,EACpB,IAAIK,MAAMD,GAAO,CACf,GAAIjD,GAAQ6C,CAEZ,MADAA,GAAUvG,OACJ,GAAI6G,OAAM,gBAAkBnD,EAAQ,yCAG5C6C,EAAUI,EAAKG,cACf,MAAOxB,IAITiB,IAAUA,GAAUA,CAEpB,IAAIH,GAASvG,EAAM,IAAMxG,CACzB+M,IAAUG,EAAU,YAAYA,EAAU,GAC1CH,GAAUI,EAAS,WAAWA,EAAS,GACvCJ,GAAUK,EAAO,SAASA,EAAO,GACjCL,GAAUM,EAAS,UAAY,GAE/BX,EAAcK,OAASA,GAGpBW,EAAY,SAASlH,GACxB,GAAIsG,GAAUF,GAAQ,EACtB,OAAIE,GAAQa,eAAenH,GAClBmG,EAAGL,QAAQQ,EAAQtG,IAGrB,MAGJoH,EAAgB,WACnB,MAAOhB,IAAQ,IAGZiB,EAAe,SAASrH,GAC3ByG,EAAUzG,EAAK,QAGZsH,EAAmB,WACtB,IAAK,GAAItH,KAAOoH,KACdC,EAAarH,GAIhB,QACC7F,QAAS+M,EACTK,YAAaH,EACb7B,QAASkB,EACTjB,WAAY6B,EACZG,eAAgBF,IAYnB1C,EAAQrI,UAAU0I,sBAAwB,WACxC,GAAIE,GAAU/I,KAAK9B,UAAU5F,IAAI,WAC7B0Q,EAAeD,EAAQE,aAEvBc,EAAK/J,KACLmJ,EAAU,SAASvF,EAAKxG,GAC3BA,EAAQ2M,EAAGT,QAAQlM,GACnB4L,EAAaG,QAAQvF,EAAKxG,IAGvBW,EAAU,SAAS6F,GACtB,GAAIxG,GAAQ4L,EAAajL,QAAQ6F,EACjC,OAAOmG,GAAGL,QAAQtM,IAGf+N,EAAc,WAGjB,IAAK,GAFDlB,MAEK9E,EAAI,EAAGA,EAAI6D,EAAa5D,OAAQD,IAAK,CAC5C,GAAIvB,GAAMoF,EAAapF,IAAIuB,EAC3B8E,GAAMrG,GAAO7F,EAAQ6F,GAGvB,MAAOqG,IAGJb,EAAa,SAASxF,GACzBoF,EAAaI,WAAWxF,IAGrBwH,EAAiB,WACpBpC,EAAaqC,QAGd,QACCtN,QAASA,EACToN,YAAaA,EACbhC,QAASA,EACTC,WAAYA,EACZgC,eAAgBA,IAOnBjU,EAAQC,OAAOA,GAAQ6L,QAAQ,UAAWuF,IAEzC3I,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAImU,GAAO,SAASpN,GAEhB8B,KAAK9B,UAAYA,EAMrBoN,GAAKpL,SAAW,aAiBhBoL,EAAKnL,UAAUoL,OAAS,SAAS5Q,EAAM6Q,EAAUlU,GAE7C,GAAImU,GAAQzL,KAAK9B,UAAU5F,IAAI,QAE/BkT,GAAWA,GAAY,WACvBlU,EAASA,KAET,IAAIyS,GAAK/J,KACLxD,EAAkB,SAAS6E,GAE3B0I,EAAG2B,WAAWrK,EAAS1G,OAGvB8B,EAAkB,aAKlB3C,EAAMkG,KAAK2L,cAAcH,GAEzBhR,EAAUiR,EAAMG,KAClB9R,GAEE+R,UAAWlR,EAAKmR,SAChBC,UAAWpR,EAAKqR,UAElB7U,EAAQ8U,OAAO3U,OAQjB,OALAkD,GAAQmC,KACNH,EACAC,GAGKjC,GAcX8Q,EAAKnL,UAAU+L,OAAS,SAASvR,EAAM6Q,EAAUlU,GAE7C,GAAImU,GAAQzL,KAAK9B,UAAU5F,IAAI,QAE/BkT,GAAWA,GAAY,WACvBlU,EAASA,KAET,IAAIyS,GAAK/J,KACLxD,EAAkB,SAAS6E,GAE3B0I,EAAG2B,WAAWrK,EAAS1G,OAGvB8B,EAAkB,aAKlB3C,EAAMkG,KAAKmM,cAAcX,GAEzBhR,EAAUiR,EAAMG,KAClB9R,GAEE+R,UAAWlR,EAAKmR,SAChBC,UAAWpR,EAAKqR,UAElB7U,EAAQ8U,OAAO3U,OACbuC,mBAAmB,IASvB,OALAW,GAAQmC,KACNH,EACAC,GAGKjC,GAWX8Q,EAAKnL,UAAUiM,QAAU,SAAS9U,GAE9B,GAAImU,GAAQzL,KAAK9B,UAAU5F,IAAI,SAC3BgC,EAAO0F,KAAK9B,UAAU5F,IAAI,QAE1BkE,EAAkB,WAElBlC,EAAK+R,UAGL5P,EAAkB,YAKtB,OAAOgP,GAAMnT,IACX0H,KAAKsM,iBACLhV,OACAqF,KACAH,EACAC,IAaN6O,EAAKnL,UAAUiC,QAAU,SAAS9K,GAE9B,GAAImU,GAAQzL,KAAK9B,UAAU5F,IAAI,SAC3B2J,EAAMjC,KAAK9B,UAAU5F,IAAI,OAEzByR,EAAK/J,KACLxD,EAAkB,SAAS6E,GAE3B0I,EAAG2B,WAAWrK,EAAS1G,OAGvB8B,EAAkB,WAKlBwF,EAAIsK,cAGJ/R,EAAUiR,EAAMG,KAClB5L,KAAKwM,mBAGHC,cAAexK,EAAIyK,mBAGrBvV,EAAQ8U,OAAO3U,OACbwK,wBAAwB,EACxBjI,mBAAmB,IASvB,OALAW,GAAQmC,KACNH,EACAC,GAGKjC,GAeX8Q,EAAKnL,UAAUnB,QAAU,SAAS2N,GAE9BA,EAAgBA,IAAiB,CAEjC,IAAI1K,GAAMjC,KAAK9B,UAAU5F,IAAI,OAEzBwI,EAAQmB,EAAIC,UAChB,OAAKpB,IAIA6L,GACC1K,EAAIE,YACC,KAIJF,EAAI2K,OAAO9L,GATT,MAqBbwK,EAAKnL,UAAUzD,QAAU,SAAS9B,GAE9B,GAAIqH,GAAMjC,KAAK9B,UAAU5F,IAAI,OACzBgE,EAAK0D,KAAK9B,UAAU5F,IAAI,MAExBiE,EAAQD,EAAGC,QACX/B,EAAU+B,EAAM/B,QAEhB/B,EAAUtB,EAAQsB,QAAQmC,EAC9B,IAAInC,GAA2B,IAAhBmC,EAAKwK,OAElB,MADA7I,GAAM6E,OAAO,MACN5G,CAGT,KAAKI,EAEH,MADA2B,GAAM6E,OAAO,MACN5G,CAMT,IAAIF,GAAO0F,KAAKhB,SAAQ,EACxB,IAAa,OAAT1E,EAEF,MADAiC,GAAM6E,OAAO,MACN5G,CAIT,IAAIqS,GAAc,SAASvS,GACzB,GAAI2E,GAAQ3E,EAAK2E,SACb9H,GAAQ2V,SAASlS,KACnBA,GAAQA,GAIV,KAAK,GADD8B,IAAU,EACLyI,EAAE,EAAGA,EAAEvK,EAAKwK,OAAQD,IAC3B,GAAIlG,EAAMC,QAAQtE,EAAKuK,KAAO,EAAG,CAC/BzI,GAAU,CACV,OAIAA,EACFH,EAAMvC,UAENuC,EAAM6E,SAKV,KAAKa,EAAIE,YAEP,MADA0K,GAAYvS,GACLE,CAIT,IAAIuP,GAAK/J,KACLxD,EAAkB,WAElBlC,EAAOyP,EAAG/K,UACV6N,EAAYvS,IAGZmC,EAAkB,WAElBF,EAAM6E,SAQV,OALApB,MAAKoC,UAAUzF,KACbH,EACAC,GAGKjC,GAYX8Q,EAAKnL,UAAUuL,WAAa,SAAS/Q,GAGjC,GAAIsH,GAAMjC,KAAK9B,UAAU5F,IAAI,MAE7B2J,GAAI8K,gBAAgBpS,EAAK8R,eACzBxK,EAAI+K,SAASrS,EAAKmG,QAYtBwK,EAAKnL,UAAUgM,cAAgB,SAASX,GACtC,GAAIyB,GAAUjN,KAAK9B,UAAU5F,IAAI,UAEjC,QAAOkT,GACL,IAAK,UACL,IAAK,WACH,MAAOyB,GAAU,SAAWzB,EAAW,SACzC,SACE,KAAM,IAAIZ,OAAM,0BAA4BY,KAYlDF,EAAKnL,UAAUwL,cAAgB,SAASH,GACtC,GAAIyB,GAAUjN,KAAK9B,UAAU5F,IAAI,UAEjC,QAAOkT,GACL,IAAK,WACH,MAAOyB,GAAU,SAAWzB,EAAW,SACzC,KAAK,UACH,KAAM,IAAIZ,OAAM,uBAClB,SACE,KAAM,IAAIA,OAAM,0BAA4BY,KAWlDF,EAAKnL,UAAUqM,gBAAkB,WAC/B,GAAIS,GAAUjN,KAAK9B,UAAU5F,IAAI,UAEjC,OAAO2U,GAAU,iBAWnB3B,EAAKnL,UAAUmM,eAAiB,WAC9B,GAAIW,GAAUjN,KAAK9B,UAAU5F,IAAI,UAEjC,OAAO2U,GAAU,YAMnB9V,EAAQC,OAAOA,GAAQ6L,QAAQ,OAAQqI,IAEtCzL,eAAgB1I,SAGnB,SAAUC,EAAQD,GAEhB,YASA,IAAI+V,GAAO,SAAShP,GAEhB8B,KAAK/F,gBACL+F,KAAK9B,UAAYA,EAEjB8B,KAAKmN,UAAUnN,KAAKoN,iBAGxBF,GAAKhN,SAAW,aAOhBgN,EAAK/M,UAAUkN,SACbC,IAAM,GAIRJ,EAAK/M,UAAUoN,cAAgB,KAW/BL,EAAK/M,UAAUhG,KAAO,SAASqT,EAAQlW,GAKnC,GAHAkW,EAASA,GAAUxN,KAAKyN,YACxBnW,EAASA,OAEL0I,KAAK/F,aAAauT,GAAtB,CAIA,GAAI/B,GAAQzL,KAAK9B,UAAU5F,IAAI,SAC3BoV,EAAO1N,KAAK9B,UAAU5F,IAAI,QAE1ByR,EAAK/J,KACLlG,EAAMkG,KAAK2N,YAAYH,GACvBhR,EAAkB,SAAS6E,GAE3B0I,EAAG9P,aAAauT,GAAUnM,EAAS1G,MAGnC8B,EAAkB,WAElBiR,EAAK1L,MAAM,gCAGf,OAAOyJ,GAAMnT,IAAIwB,EAAKxC,GAAQqF,KAC5BH,EACAC,KAaNyQ,EAAK/M,UAAUgN,UAAY,SAASK,GAEhC,MAAIxN,MAAKqN,QAAQG,QACfxN,KAAKwN,OAASA,QAIhBxN,KAAKwN,OAASxN,KAAKuN,gBAWvBL,EAAK/M,UAAUsN,UAAY,WAEvB,MAAOzN,MAAKwN,QAUhBN,EAAK/M,UAAU7H,IAAM,SAASsL,GAE1B,GAIIgK,GAJApJ,EAASxE,KAAK9B,UAAU5F,IAAI,UAC5B4E,KAAYyK,MAAMC,KAAKC,UAAU,GACjC2F,EAASxN,KAAKyN,WAGlB,KACEG,EAAO5N,KAAK/F,aAAauT,GAAQ5J,GACjC,MAAMyF,IAER,MAAO7E,GAAOE,QAAQkJ,GAAQhK,EAAK1G,IAWvCgQ,EAAK/M,UAAUwN,YAAc,SAASH,GAElC,MAAO,QAAUA,EAAS,SAM9BN,EAAK/M,UAAUiN,cAAgB,WAE3B,GAEIS,GAFAC,EAAY9N,KAAK9B,UAAU5F,IAAI,WAAWwV,UAC1CC,EAAU,6BAuBd,OAnBID,IAAaA,EAAUE,YACtBH,EAAWC,EAAUE,UAAU3U,MAAM0U,MACtCF,EAAWA,EAAS,KAInBA,GAAYC,IACXA,EAAUD,SACZA,EAAWC,EAAUD,SACZC,EAAUG,aACnBJ,EAAWC,EAAUG,aACZH,EAAUI,eACnBL,EAAWC,EAAUI,eACZJ,EAAUK,kBACnBN,EAAWC,EAAUK,kBAKrBN,EACKA,EAASO,OAAO,EAAE,GAIpBpO,KAAKuN,eAMhBpW,EAAQC,OAAOA,GAAQ6L,QAAQ,OAAQiK,IAEtCrN,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIkX,GAAM,SAASnQ,EAAWN,GAC5BoC,KAAK9B,UAAYA,EACjB8B,KAAKpC,QAAUA,EAAQE,WAGzBuQ,GAAInO,SAAW,YAAa,WAO5BmO,EAAIlO,UAAUmO,SAAW,aAGzBD,EAAIlO,UAAUoO,WAAa,aAa3BF,EAAIlO,UAAUoM,WAAa,WAEvBvM,KAAKwO,qBACLxO,KAAKyO,eAUTJ,EAAIlO,UAAU+B,SAAW,WAErB,MAAOlC,MAAKpC,QAAQG,QAAQiC,KAAKsO,WAWrCD,EAAIlO,UAAU6M,SAAW,SAASlM,GAE9Bd,KAAKpC,QAAQuL,QAAQnJ,KAAKsO,SAASxN,IAUvCuN,EAAIlO,UAAUsO,YAAc,WAExBzO,KAAKpC,QAAQwL,WAAWpJ,KAAKsO,WAUjCD,EAAIlO,UAAUuM,gBAAkB,WAE5B,MAAO1M,MAAKpC,QAAQG,QAAQiC,KAAKuO,aAWrCF,EAAIlO,UAAU4M,gBAAkB,SAAS2B,GAErC1O,KAAKpC,QAAQuL,QAAQnJ,KAAKuO,WAAYG,IAU1CL,EAAIlO,UAAUqO,mBAAqB,WAE/BxO,KAAKpC,QAAQwL,WAAWpJ,KAAKuO,aAWjCF,EAAIlO,UAAUwO,kBAAoB,SAAS7N,GAEvC,GAAI4M,GAAO1N,KAAK9B,UAAU5F,IAAI,OAG9B,IADAwI,EAAQA,GAASd,KAAKkC,YACjBpB,EAEH,MADA4M,GAAK1L,MAAM,gCACJ,IAGT,IAAI2H,GAAU3J,KAAK4M,OAAO9L,EAC1B,IAAyB,mBAAd6I,GAAQiF,IAEjB,MADAlB,GAAK1L,MAAM,gCACJ,IAGT,IAAI0I,GAAO,GAAIlF,MAAK,EAGpB,OAFAkF,GAAKmE,cAAclF,EAAQiF,KAEpBlE,GAYX2D,EAAIlO,UAAUgC,UAAY,SAASrB,EAAOgO,GAEtCA,EAASA,GAAU,EACnBhO,EAAQA,GAASd,KAAKkC,UAEtB,IAAIwI,GAAO1K,KAAK2O,kBAAkB7N,EAClC,IAAa,OAAT4J,EACF,OAAO,CAGT,IAAIqE,IAAM,GAAIvJ,OAAOwJ,SAIrB,OAHAF,GAASC,EAAe,IAATD,EACfpE,EAAOA,EAAKsE,UAELtE,GAAQoE,GAWnBT,EAAIlO,UAAUyM,OAAS,SAAS9L,GAE5B,GAAI4M,GAAO1N,KAAK9B,UAAU5F,IAAI,OAE9B,KACE,GAAI2W,GAAQnO,EAAMsJ,MAAM,IACxB,IAAqB,IAAjB6E,EAAM7J,OACR,KAAM,IAAIwF,OAAM,yBAGlB,IAAIjB,GAAU3J,KAAKkP,cAAcD,EAAM,GACvC,KAAKtF,EACH,KAAM,IAAIiB,OAAM,2BAGlB,OAAOzT,GAAQgY,SAASxF,GACxB,MAAMN,GAEN,MADAqE,GAAK1L,MAAMqH,GACJ,OAYbgF,EAAIlO,UAAU+O,cAAgB,SAASzH,GAEnC,GAAIsB,GAAU/I,KAAK9B,UAAU5F,IAAI,WAC7BoV,EAAO1N,KAAK9B,UAAU5F,IAAI,QAE1B8W,EAAS3H,EACVhO,QAAQ,KAAM,KACdA,QAAQ,KAAM,IAEjB,KACE,OAAQ2V,EAAOhK,OAAS,GACtB,IAAK,GACH,KAGF,KAAK,GACHgK,GAAU,IAAM,MAGlB,KAAK,GACHA,GAAU,GAAK,MAGjB,SACE,KAAM,IAAIxE,OAAM,4BAGpB,MAAMvB,GAEN,MADAqE,GAAK1L,MAAMqH,GACJ,GAGT,GAAIM,GAAUZ,EAAQsG,KAAKD,GACvBE,EAAUvG,EAAQwG,OAAO5F,EAE7B,OAAOZ,GAAQa,mBAAmB0F,IAMtCnY,EAAQC,OAAOA,GAAQ6L,QAAQ,MAAOoL,IAErCxO,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIqY,GAAO,SAAStR,GAClB8B,KAAK9B,UAAYA,EAEjB8B,KAAKyP,SACHvR,EAAU5F,IAAI,kBACd4F,EAAU5F,IAAI,iBACd4F,EAAU5F,IAAI,kBACd4F,EAAU5F,IAAI,iBAGhB0H,KAAK0P,aAAe,KACpB1P,KAAK2P,YACL3P,KAAK4P,YACL5P,KAAK6P,YACL7P,KAAK8P,UAGPN,GAAKtP,SAAW,aAOhBsP,EAAKrP,UAAUrH,MAAQ,KAGvB0W,EAAKrP,UAAU4P,MAAQ,KAGvBP,EAAKrP,UAAU6P,QAAU,KAazBR,EAAKrP,UAAUhG,KAAO,WACpB,GAAIqV,GAAOxP,KAAK9B,UAAU5F,IAAI,QAC1B2J,EAAMjC,KAAK9B,UAAU5F,IAAI,OAEzByR,EAAK/J,KACLxD,EAAkB,SAASlC,GAI7ByP,EAAG6F,SAAWtV,EAAK2V,SAGnBlG,EAAGmG,eACHnG,EAAGoG,aACHpG,EAAGqG,aAIErG,EAAGsG,WAKRtG,EAAGuG,eACHvG,EAAGwG,aAGHxG,EAAGyG,eACHzG,EAAG0G,eACH1G,EAAG2G,aAGDjU,EAAkB,WAIpBwF,EAAIsK,cAGFlS,EAAUmV,EAAKnV,SAOnB,OALAA,GAAQI,SAASkC,KACfH,EACAC,GAGKpC,GAUTmV,EAAKrP,UAAUkM,OAAS,WACtB,GAAIpK,GAAMjC,KAAK9B,UAAU5F,IAAI,OACzBqY,EAAM3Q,KAAK9B,UAAU5F,IAAI,MAEzB0H,MAAK0P,cACPiB,EAAIC,aAAa5Q,KAAK0P,cAGpB1P,KAAK6Q,iBACP7Q,KAAK6Q,kBAGH7Q,KAAK8Q,eACP9Q,KAAK8Q,gBAGP9Q,KAAK0P,aAAe,KACpB1P,KAAK2P,YACL3P,KAAK4P,YACL5P,KAAK6P,YACL7P,KAAK8P,UAEL9P,KAAKgQ,QAAU,KACfhQ,KAAKlH,MAAQ,KACbkH,KAAK+P,MAAQ,KAEb9N,EAAIsK,cAgBNiD,EAAKrP,UAAUzH,OAAS,SAASqY,GAC/B/Q,KAAK4P,SAAWmB,EAAOzW,KAEvB0F,KAAKgR,WAAWD,GAChB/Q,KAAKkQ,eACLlQ,KAAKmQ,aACLnQ,KAAKoQ,cAUPZ,EAAKrP,UAAUkQ,OAAS,WACtB,MAAOrQ,MAAKtD,QAAQ,cAUtB8S,EAAKrP,UAAU8Q,QAAU,WACvB,MAAOjR,MAAKtD,QAAQ,eAUtB8S,EAAKrP,UAAU/D,aAAe,WAC5B,MAAO4D,MAAKtD,QAAQ,qBAUtB8S,EAAKrP,UAAU+Q,aAAe,WAC5B,OAAKlR,KAAKqQ,UAIHrQ,KAAK4P,SAASuB,SAASC,UAWhC5B,EAAKrP,UAAUzD,QAAU,SAAS9B,GAC3BzD,EAAQsB,QAAQmC,KACnBA,GAAQA,GAIV,KAAK,GADDqE,GAAQe,KAAK4P,SAAS3Q,UACjBkG,EAAE,EAAGA,EAAEvK,EAAKwK,OAAQD,IAC3B,GAAIlG,EAAMC,QAAQtE,EAAKuK,KAAK,EAC1B,OAAO,CAIX,QAAO,GAUTqK,EAAKrP,UAAUkR,SAAW,WACxB,MAAOrR,MAAK8P,QAWdN,EAAKrP,UAAUmR,cAAgB,SAASC,GACtC,MAAOvR,MAAK8P,OAAOyB,IAAS,MAW9B/B,EAAKrP,UAAUqR,iBAAmB,SAASD,GACzC,MAAOvR,MAAK6P,SAAS0B,IAAS,MAUhC/B,EAAKrP,UAAUsR,iBAAmB,WAChC,OAAOzR,KAAK+P,OACV,IAAK/P,MAAK9B,UAAU5F,IAAI,WACtB,MAAO,SACT,KAAK0H,MAAK9B,UAAU5F,IAAI,WACtB,MAAO,SACT,SACE,MAAO,QAWbkX,EAAKrP,UAAUuR,iBAAmB,WAChC,OAAO1R,KAAKlH,OACV,IAAKkH,MAAK9B,UAAU5F,IAAI,iBACtB,MAAO,eACT,KAAK0H,MAAK9B,UAAU5F,IAAI,kBACtB,MAAO,gBACT,KAAK0H,MAAK9B,UAAU5F,IAAI,gBACtB,MAAO,cACT,SACE,MAAO,mBAWbkX,EAAKrP,UAAUgQ,WAAa,WAC1B,GAAIwB,GAAiB3R,KAAK9B,UAAU5F,IAAI,iBACxC0H,MAAKlH,MAAQkH,KAAK4P,SAAS9W,OAAS6Y,GAUtCnC,EAAKrP,UAAUiQ,WAAa,WAC1BpQ,KAAK+P,MAAQ/P,KAAK4P,SAASG,OAAS,MAUtCP,EAAKrP,UAAU+P,aAAe,WAC5B,GAAIF,GAAUhQ,KAAK4P,SAASI,OAC5BhQ,MAAKgQ,QAAUA,OAWjBR,EAAKrP,UAAUmQ,aAAe,WAC5B,GAAIzO,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClCqG,EAAaqB,KAAK9B,UAAU5F,IAAI,cAChC4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAC1ByR,EAAK/J,KAEL4R,EAAwB,WAC1B,MAAO7H,GAAGjR,OAGR+Y,EAAsB,SAASC,EAAUC,GACvCD,IAAaC,GAIjBlQ,EAAagB,QACX3I,EAAK5B,IACH,kDACA4B,EAAK5B,IAAIyR,EAAG2H,uBAKdM,EAA0B,WAC5B,MAAOjI,GAAGiG,SAGRiC,EAAwB,SAASC,EAAYC,GAC/C,GAAID,IAAeC,EAAnB,CAIA,GAAIC,GAAWD,GAAcA,EAAW/M,OACpCiN,EAAWH,GAAcA,EAAW9M,OAEpC4K,EAAUqC,EAAWD,CACzB,MAAIpC,GAAW,GAAf,CAIA,GAAIjO,GAAsB,IAAZiO,EACZ9V,EAAK5B,IAAI,kDACT4B,EAAK5B,IAAI,mDAAoD0X,EAE/DnO,GAAaiB,QAAQf,KAGvB/B,MAAK6Q,gBAAkBlS,EAAW2T,iBAChCN,EACAC,GAGFjS,KAAK8Q,cAAgBnS,EAAWW,OAC9BsS,EACAC,IAYJrC,EAAKrP,UAAUuQ,SAAW,WAEtB,GAAI/R,GAAaqB,KAAK9B,UAAU5F,IAAI,cAChC2U,EAAUjN,KAAK9B,UAAU5F,IAAI,WAC7BqY,EAAM3Q,KAAK9B,UAAU5F,IAAI,OAGzB6Y,EAAWnR,KAAK4P,SAASuB,QAC7B,IAAKA,EAASC,SAAd,CAIA,GAAIrH,GAAK/J,KAELuS,EAAa,SAAS5X,GACxBgE,EAAW6T,WAAW,WACpBrb,EAAQ+B,QAAQyB,EAAM,SAAS8X,GAC7B,GAAIC,GAAOlN,KAAKqE,MAAM4I,EAAKE,WACvBC,EAAO7I,EAAG+F,OAAO2C,EAAKlB,KAC1BqB,GAAKxB,WAAaqB,EAAKrB,SAElBzG,MAAM+H,KACTD,EAAKE,UAAYD,QAMrB5Y,EAAMmT,EAAU,iBAAmBkE,EAASrL,GAAK,SACjDnD,GAAYkQ,UAAWN,EAAYO,MAAO,EAC9C9S,MAAK0P,aAAeiB,EAAIoC,UAAUjZ,EAAK6I,KAW3C6M,EAAKrP,UAAUoQ,WAAa,WAC1B,GAAIY,GAAWnR,KAAK4P,SAASuB,QAC7B,IAAKA,EAAL,CAIA,GAAIpH,GAAK/J,IACT7I,GAAQ+B,QAAQiY,EAAS6B,MAAM,SAASJ,GACtC7I,EAAG+F,OAAO8C,EAAKrB,MAAQqB,MAY3BpD,EAAKrP,UAAUqQ,aAAe,WAC5B,GAAIyC,GAAUjT,KAAK4P,SAASqD,OAC5B,IAAKA,EAAL,CAIA,GAAIlJ,GAAK/J,IACT7I,GAAQ+B,QAAQ+Z,EAAQ,SAASlC,GAC/BhH,EAAG8F,SAASkB,EAAO6B,KAAKrB,MAAQR,MAYpCvB,EAAKrP,UAAUsQ,aAAe,WAC5B,GAAIO,GAAahR,KAAKgR,WAAWhL,KAAKhG,MAClCkT,EAAUlT,KAAK4P,SAASsD,WAE5B/b,GAAQ+B,QAAQga,EAASlC,IAW3BxB,EAAKrP,UAAU6Q,WAAa,SAASD,GACnC,GAAI6B,GAAO5S,KAAKsR,cAAcP,EAAO6B,KAAKrB,KAC1C,IAAa,OAATqB,EAAe,CACjB,GAAIvY,GAAUuY,EAAKO,WAAa,CAChCP,GAAKO,UAAY9Y,EAAU,EAG7B2F,KAAK2P,SAASzX,KAAK6Y,IAMrB5Z,EAAQC,OAAOA,GAAQ6L,QAAQ,OAAQuM,IAEtC3P,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIic,GAAO,SAASlV,GAEhB8B,KAAK9B,UAAYA,EAGrBkV,GAAKlT,SAAW,aAehBkT,EAAKjT,UAAUkT,KAAO,SAAS1Y,EAAMrD,GACnC,GAAIuK,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClCmT,EAAQzL,KAAK9B,UAAU5F,IAAI,SAC3B4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1BkE,EAAkB,WAElBqF,EAAagB,QACX3I,EAAK5B,IACH,+BAKJmE,EAAkB,aAIlBjC,EAAUiR,EAAMG,KAClB5L,KAAKsT,eAEHC,MAAO5Y,EAAKnB,KACZga,MAAO7Y,EAAK8Y,MACZC,SAAU/Y,EAAKgZ,QACfC,SAAUjZ,EAAKoH,SAEjBzK,MAQF,OALAkD,GAAQmC,KACNH,EACAC,GAGKjC,GAUT4Y,EAAKjT,UAAUmT,YAAc,WAC3B,GAAIrG,GAAUjN,KAAK9B,UAAU5F,IAAI,UAEjC,OAAO2U,GAAU,SAMnB9V,EAAQC,OAAOA,GAAQ6L,QAAQ,OAAQmQ,IAEtCvT,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAI0c,GAAM,SAAS3V,GAEf8B,KAAK9B,UAAYA,EACjB8B,KAAK8T,YAGTD,GAAI3T,SAAW,aAgBf2T,EAAI1T,UAAU4S,UAAY,SAASjZ,EAAKxC,GACtCA,EAASA,MAETA,EAAOyc,MAAQzc,EAAOyc,OAAS,KAC/Bzc,EAAOuM,MAAQvM,EAAOuM,OAAS,KAC/BvM,EAAOwb,MAAQxb,EAAOwb,OAAS,KAC/Bxb,EAAO8H,QAAU9H,EAAO8H,SAAW,aACnC9H,EAAOub,UAAYvb,EAAOub,WAAa,aAEvC/Y,EAAMkG,KAAKgU,UAAUla,EAAKxC,EAC1B,IAAI2c,GAAS,GAAIC,aAAYpa,EAY7B,OAVAma,GAAOE,UAAY,SAAStQ,GAC1B,GAAIlJ,GAAOxD,EAAQgY,SAAStL,EAAMlJ,KAClCrD,GAAOub,UAAUjL,KAAK5H,KAAMrF,EAAMkJ,IAGpCoQ,EAAOG,QAAU,SAASvQ,GACxBvM,EAAO8H,QAAQwI,KAAK5H,KAAM6D,IAG5B7D,KAAK8T,SAASha,GAAOma,EACdA,GAWTJ,EAAI1T,UAAUyQ,aAAe,SAASqD,SAC7BjU,MAAK8T,SAASG,EAAOna,KAC5Bma,EAAOI,SAaTR,EAAI1T,UAAU6T,UAAY,SAASla,EAAKxC,GACtC,GAAI2K,GAAMjC,KAAK9B,UAAU5F,IAAI,OACzBwI,EAAQmB,EAAIC,UAgBhB,OAdApI,GAAMA,EAAM,WAAagH,EAErBxJ,EAAOuM,QACT/J,GAAO,UAAYxC,EAAOuM,OAGxBvM,EAAOwb,QACThZ,GAAO,UAAYxC,EAAOwb,OAGxBxb,EAAOyc,QACTja,GAAO,UAAYxC,EAAOyc,OAGrBja,GAMT3C,EAAQC,OAAOA,GAAQ6L,QAAQ,MAAO4Q,IAErChU,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAImd,GAAgB,YAGpBA,GAAcpU,SAAW,SAAU,WAAY,UAO/CoU,EAAcnU,UAAUoU,SAGxBD,EAAcnU,UAAUqU,WAAY,EAapCF,EAAcnU,UAAUsU,IAAM,SAASC,GACrC1U,KAAKuU,MAAMrc,KAAKwc,IAUlBJ,EAAcnU,UAAUwU,IAAM,SAASD,GACrC,GAAIA,EAAKE,WAAa5U,KAAKwU,UACzB,OAAO,CAIT,IAAII,KAAaF,EAAKE,QAYtB,OAXAF,GAAKE,UAAWA,GAAW,KAG3Bzd,EAAQ+B,QAAQ8G,KAAKuU,MAAO,SAASla,GAC/BA,EAAQyL,KAAO4O,EAAK5O,KAIxBzL,EAAQua,UAAWF,EAAKE,UAAmB,SAGtC,GAMTzd,EAAQC,OAAOA,GAAQyd,UAAU,gBAAiB,WAChD,OACEC,OACEN,UAAW,4BAEbO,SAAU,IACVhZ,WAAYuY,EACZU,kBAAkB,EAClBhZ,aAAc,4BAelB,IAAIiZ,GAAO,SAASC,EAAQC,EAAUC,EAAQC,GAC5CrV,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAEhBnV,KAAK8F,GAAK9F,KAAKkV,OAAOI,IACtBtV,KAAKuV,QAAUF,EAAYG,aAAa,QAG1CP,GAAK/U,SAAW,SAAU,WAAY,SAAU,eAOhD+U,EAAK9U,UAAU2F,GAAK,KAGpBmP,EAAK9U,UAAUxF,KAAO,KAGtBsa,EAAK9U,UAAUyU,SAAW,KAG1BK,EAAK9U,UAAUsV,SAAW,KAG1BR,EAAK9U,UAAUoV,QAAU,KAGzBN,EAAK9U,UAAUuV,YAAa,EAa5BT,EAAK9U,UAAUwV,QAAU,WAClB3V,KAAK4V,eAIV5V,KAAK4V,cAAcnB,IAAIzU,OAUzBiV,EAAK9U,UAAU0V,MAAQ,SAASC,GAC9B,IAAI9V,KAAKyV,SAAT,CAOA,GAHAK,EAAOC,kBACPD,EAAOE,iBAEHhW,KAAK4V,cAAe,CACtB,GAAIK,GAAUjW,KAAK4V,cAAcjB,IAAI3U,KACrC,KAAKiW,EACH,OAIJjW,KAAKkW,SACHvb,KAAMqF,KAAKrF,KACXia,SAAU5U,KAAK4U,SACfa,SAAUzV,KAAKyV,aAOnBte,EAAQC,OAAOA,GAAQyd,UAAU,OAAQ,WACvC,OACEC,OACEna,KAAM,aACNub,QAAS,eACTtB,SAAU,iBACVa,SAAU,iBACVC,WAAY,oBAEdX,SAAU,IACVoB,YACEvI,KAAM,WACNwI,MAAO,YACPC,KAAM,YACNC,QAAS,gBAEXva,WAAYkZ,EACZD,kBAAkB,EAClBhZ,aAAc,iBACdua,SACEX,cAAe,mBAEjBlc,YAAa,iCAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIqf,GAAQ,SAAStB,EAAQE,EAAQD,EAAUjX,GAC7C8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAKyW,OAAS,KAGhBD,GAAMtW,SAAW,SAAU,SAAU,WAAY,aAOjDsW,EAAMrW,UAAUxF,QAchB6b,EAAMrW,UAAUwV,QAAU,WAEtB,GAAIhT,GAAU3C,KAAK0W,cAEf/b,GACFgc,OAAQ3W,KAAK4W,aACbC,OAAQ7W,KAAK8W,WAGf9W,MAAK+W,QAAQpc,EAAMgI,IAUvB6T,EAAMrW,UAAU6W,WAAa,WAEL,OAAhBhX,KAAKyW,SACPzW,KAAKyW,OAAOQ,SACZjX,KAAKyW,OAAS,OAYpBD,EAAMrW,UAAU2W,SAAW,WACzB,GAOII,GAPAC,EAAUnX,KAAK9B,UAAU5F,IAAI,WAC7B8e,EAAUpX,KAAK9B,UAAU5F,IAAI,WAE7ByR,EAAK/J,KAELqX,KACA1c,IAGJ,QAAOoP,EAAG6I,KAAKrB,MAKb,IAAKxH,GAAG7L,UAAU5F,IAAI,kBACtB,IAAKyR,GAAG7L,UAAU5F,IAAI,2BACpB+e,EAAIF,IAAaG,QAAS,EAAGC,QAAS,EAAGC,MAAM,GAC/CH,EAAID,IAAaE,QAAS,EAAGC,QAAS,EAAGC,MAAM,GAE/CN,EAAa,SAASnG,GACpB,GAAIhB,GAAQgB,EAAO0G,KAAK1H,KAExB,QAAQgB,EAAO0G,KAAKC,QAClB,IAAK,GACHL,EAAItH,GAAOuH,SACX,MACF,KAAK,GACHD,EAAItH,GAAOwH,UAKfF,EAAItH,GAAOyH,SAGbrgB,EAAQ+B,QAAQ8G,KAAKkT,QAASgE,EAE9B,IAAIS,GAASN,EAAIF,GACbS,EAASP,EAAID,EAGjBzc,GAAKzC,MACHyf,EAAOL,QAAUK,EAAOH,MACxBI,EAAON,QAAUM,EAAOJ,QAI1B7c,EAAKzC,MACHyf,EAAOJ,QAAUI,EAAOH,MACxBI,EAAOL,QAAUK,EAAOJ,OAG1B,MAOF,KAAKzN,GAAG7L,UAAU5F,IAAI,wBACpB,GAAIuf,GAAQ,QACRC,EAAM,KAEVT,GAAIQ,IAAWhV,QAAS,EAAGkV,QAAS,EAAGP,MAAM,GAC7CH,EAAIS,IAASjV,QAAS,EAAGkV,QAAS,EAAGP,MAAM,GAE3CN,EAAa,SAASnG,GACpB,GAAIpI,GAAOoI,EAAO0G,KAAK9O,IAEnBoI,GAAO0G,KAAK5U,QACdwU,EAAI1O,GAAM9F,UAEVwU,EAAI1O,GAAMoP,UAGZV,EAAI1O,GAAM6O,SAGZrgB,EAAQ+B,QAAQ8G,KAAKkT,QAASgE,EAE9B,IAAI9M,GAAQiN,EAAIQ,GACZG,EAAMX,EAAIS,EAGdnd,GAAKzC,MACHkS,EAAMvH,QAAUuH,EAAMoN,MACtBQ,EAAInV,QAAUmV,EAAIR,QAIpB7c,EAAKzC,MACHkS,EAAM2N,QAAU3N,EAAMoN,MACtBQ,EAAID,QAAUC,EAAIR,QASxB,MAAO7c,IAUT6b,EAAMrW,UAAUyW,WAAa,WAC3B,GAAI1c,GAAO8F,KAAK9B,UAAU5F,IAAI,OAE9B,QAAO0H,KAAK4S,KAAKrB,MACf,IAAKvR,MAAK9B,UAAU5F,IAAI,kBACxB,IAAK0H,MAAK9B,UAAU5F,IAAI,2BACtB,OACE4B,EAAK5B,IAAI,WACT4B,EAAK5B,IAAI,WAEb,KAAK0H,MAAK9B,UAAU5F,IAAI,wBACtB,OACE4B,EAAK5B,IAAI,OACT4B,EAAK5B,IAAI,SAEb,SACE,WAWNke,EAAMrW,UAAUuW,YAAc,WAC5B,GAAIxc,GAAO8F,KAAK9B,UAAU5F,IAAI,OAE9B,QAAO0H,KAAK4S,KAAKrB,MACf,IAAKvR,MAAK9B,UAAU5F,IAAI,kBACxB,IAAK0H,MAAK9B,UAAU5F,IAAI,2BACtB,OACE2f,kBAAmB,GACnBC,cACEC,IAAK,GACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GAEVC,OACEC,sBAAuB,SAASpb,GAC9B,MAAgB,KAARA,EAAe,KAEzBqb,OAAQ,EAAG,GAAK,GAAK,GAAK,GAAK,GAC/BlH,KAAMmH,SAASC,eACfC,KAAM,EACNC,IAAK,GAEPC,SACEJ,SAASI,QAAQC,QACfC,aACE9e,EAAK5B,IAAI,YACT4B,EAAK5B,IAAI,gBAKnB,KAAK0H,MAAK9B,UAAU5F,IAAI,wBACtB,OACE2f,kBAAmB,GACnBC,cACEC,IAAK,GACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GAEVC,OACEC,sBAAuB,SAASpb,GAC9B,MAAgB,KAARA,EAAe,KAEzBqb,OAAQ,EAAG,GAAK,GAAK,GAAK,GAAK,GAC/BlH,KAAMmH,SAASC,eACfC,KAAM,EACNC,IAAK,GAEPC,SACEJ,SAASI,QAAQC,QACfC,aACE9e,EAAK5B,IAAI,kBACT4B,EAAK5B,IAAI,wBAMnB,SACE,WAWNke,EAAMrW,UAAU4W,QAAU,SAASpc,EAAMgI,GACvC,GAAIsW,GAAWjZ,KAAK9B,UAAU5F,IAAI,WAElC0H,MAAKmV,SAAS+D,SAAS,WACvB,IAAIC,GAAUnZ,KAAKmV,SAAS7c,IAAI,GAE5ByR,EAAK/J,KACLoZ,EAAS,WACX,OAAOrP,EAAG6I,KAAKrB,MACb,IAAKxH,GAAG7L,UAAU5F,IAAI,kBACtB,IAAKyR,GAAG7L,UAAU5F,IAAI,2BACtB,IAAKyR,GAAG7L,UAAU5F,IAAI,wBACpByR,EAAG0M,OAAS,GAAIiC,UAASW,IAAIF,EAASxe,EAAMgI,IAMlDsW,GAASG,EAAQ,MAMnBjiB,EAAQC,OAAOA,GAAQyd,UAAU,QAAS,WACxC,OACEC,OACElC,KAAM,cACNM,QAAS,kBAEX6B,SAAU,IACVhZ,WAAYya,EACZxB,kBAAkB,EAClBhZ,aAAc,sBAIjB6D,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAImiB,GAAQ,SAASpE,EAAQE,EAAQD,EAAUE,GAC7CrV,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAKqV,YAAcA,EAEnBrV,KAAKuZ,SAAW,KAChBvZ,KAAKwZ,OAAS,KACdxZ,KAAKyZ,OAAS,KAGhBH,GAAMpZ,SAAW,SAAU,SAAU,WAAY,eAOjDoZ,EAAMnZ,UAAUuZ,WAAY,EAa5BJ,EAAMnZ,UAAUwV,QAAU,WAEtB,GAAI5L,GAAK/J,IAGTA,MAAK2Z,QAAU,WACb5P,EAAGmL,OAAO1C,WAAWzI,EAAG6P,SAG1B5Z,KAAK6Z,SAAW,WACd9P,EAAGmL,OAAO1C,WAAWzI,EAAG+P,UAG1B9Z,KAAK+Z,cAAgB,WACnBhQ,EAAGmL,OAAO1C,WAAWzI,EAAGiQ,eAG1Bha,KAAKia,QAAU,WACblQ,EAAGmL,OAAO1C,WAAWzI,EAAGmQ,SAG1Bla,KAAKma,UAAY,WACfpQ,EAAGmL,OAAO1C,WAAW,WACnBzI,EAAG2P,WAAY,EACf3P,EAAGqQ,cAIPpa,KAAKqa,cAAgB,WACnBtQ,EAAGmL,OAAO1C,WAAWzI,EAAGuQ,eAI1Bta,KAAKua,SAAWva,KAAKkV,OAAO5V,OAC1B,4BACA,SAASoa,GACP,MAAIA,OACF3P,GAAGoM,iBAILpM,GAAGyQ,aAYXlB,EAAMnZ,UAAU6W,WAAa,WAEzBhX,KAAKua,WACLva,KAAKwa,WAUTlB,EAAMnZ,UAAUgW,WAAa,WAC3B,GAAIpM,GAAK/J,KAELmW,EAAa,SAASsE,EAAO3F,GAE/B/K,EAAGwP,SAAWkB,EACd1Q,EAAG0P,OAAS3E,EAGZ/K,EAAGwP,SAASmB,GAAG,OAAQ3Q,EAAG4P,SAC1B5P,EAAGwP,SAASmB,GAAG,QAAS3Q,EAAG8P,UAC3B9P,EAAGwP,SAASmB,GAAG,aAAc3Q,EAAGgQ,eAEhChQ,EAAGwP,SAASmB,GAAG,OAAQ3Q,EAAGkQ,SAC1BlQ,EAAGwP,SAASmB,GAAG,SAAU3Q,EAAGoQ,WAC5BpQ,EAAGwP,SAASmB,GAAG,aAAc3Q,EAAGsQ,eAGhCtQ,EAAGoL,SAASwF,OAAOF,GAGnB1Q,EAAGyP,OAAS5W,MAAMgY,MAAMH,GACxB1Q,EAAGyP,OAAOqB,OAGZ7a,MAAKqV,YAAYc,IAUnBmD,EAAMnZ,UAAUqa,QAAU,WACF,OAAlBxa,KAAKuZ,WACPvZ,KAAKuZ,SAASuB,IAAI,OAAQ9a,KAAK2Z,SAC/B3Z,KAAKuZ,SAASuB,IAAI,QAAS9a,KAAK6Z,UAChC7Z,KAAKuZ,SAASuB,IAAI,aAAc9a,KAAK+Z;AAErC/Z,KAAKuZ,SAASuB,IAAI,OAAQ9a,KAAKia,SAC/Bja,KAAKuZ,SAASuB,IAAI,SAAU9a,KAAKma,WACjCna,KAAKuZ,SAASuB,IAAI,aAAc9a,KAAKqa,eAErCra,KAAKuZ,SAASwB,SACd/a,KAAKuZ,SAAW,MAGE,OAAhBvZ,KAAKyZ,SACPzZ,KAAKyZ,OAAOuB,WACZhb,KAAKyZ,OAAS,MAGI,OAAhBzZ,KAAKwZ,SACPxZ,KAAKwZ,OAAOyB,OACZjb,KAAKwZ,OAAS,OAOlBriB,EAAQC,OAAOA,GAAQyd,UAAU,QAAS,WACxC,OACEC,OACE4E,UAAW,UACXE,OAAO,eACPM,OAAO,eACPJ,QAAQ,gBACRM,SAAS,iBACTJ,aAAa,qBACbM,aAAa,sBAEfvF,SAAU,IACVhZ,WAAYud,EACZnD,WAAY,UACZnB,kBAAkB,EAClBhZ,aAAc,sBAIjB6D,eAAgB1I,SAGnB,SAAUC,EAAQD,EAASD,GACzB,YAIA,IAAIgkB,IAAqB,CACzBhkB,GAAOikB,wBAA0B,WAC/BD,GAAqB,EAcvB,IAAIE,GAAQ,SAASlG,EAAQC,EAAUC,EAAQlX,GAC7C8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAKqb,QAAU,KACfrb,KAAKuZ,SAAWvZ,KAAKmV,SAASmG,KAAK,WACnCtb,KAAKub,eAAiBvb,KAAKub,eAAevV,KAAKhG,MAGjDob,GAAMlb,SAAW,SAAU,WAAY,SAAU,aAOjDkb,EAAMjb,UAAUqb,MAAQ,IAGxBJ,EAAMjb,UAAUsb,OAAS,IAGzBL,EAAMjb,UAAUub,QAAU,KAc1BN,EAAMjb,UAAUwV,QAAU,WAEtB,GAAIsD,GAAWjZ,KAAK9B,UAAU5F,IAAI,YAC9BqjB,EAAO3b,KAAK4b,MAAM5V,KAAKhG,MAEvB+J,EAAK/J,KACL6b,EAAsB,WAGxB,GAAInC,GAAY3P,EAAGwP,SAASuC,GAAG,YAC3BC,EAAWb,CAEf,OAAQxB,IAAaqC,GAGnBC,EAAoB,SAASC,GAC3BA,IACFlS,EAAGmS,cACHjD,EAAS0C,EAAM,MAInB3b,MAAKkc,YAAclc,KAAKkV,OAAO5V,OAC7Buc,EACAG,IAWNZ,EAAMjb,UAAU6W,WAAa,WACvBhX,KAAKqb,SACPrb,KAAKqb,QAAQb,WAYjBY,EAAMjb,UAAUgc,SAAW,WACzB,OACEC,iBACEpc,KAAKyb,OACLzb,KAAKwb,MACL,IACE,MAWRJ,EAAMjb,UAAUyb,MAAQ,WAEpB,GAAIzC,GAAUnZ,KAAKuZ,SAASjhB,IAAI,EAEhC0H,MAAKqb,QAAU,GAAIgB,IAAGC,OACpBnD,GAEEqC,MAAOxb,KAAKwb,MACZC,OAAQzb,KAAKyb,OACbC,QAAS1b,KAAK0b,QACdlY,QACE+Y,cAAiBvc,KAAKub,mBAYhCH,EAAMjb,UAAUob,eAAiB,SAAS1X,GAEtC,OAAQA,EAAMlJ,MACZ,IAAK0hB,IAAGG,YAAYC,QAClBzc,KAAK0c,WACL,MACF,KAAKL,IAAGG,YAAYG,OAClB3c,KAAK4c,UACL,MACF,KAAKP,IAAGG,YAAYK,MAClB7c,KAAK8c,SACL,MACF,KAAKT,IAAGG,YAAYO,KAClB/c,KAAKgd,WASb7lB,EAAQC,OAAOA,GAAQyd,UAAU,QAAS,WACxC,OACEC,OACE4G,QAAQ,WACRF,MAAM,eACNC,OAAO,gBACPuB,OAAQ,eACRF,QAAS,gBACTF,SAAU,iBACVF,UAAW,kBACXO,YAAa,qBAEflI,SAAU,IACVoB,YAAY,EACZpa,WAAYqf,EACZpG,kBAAkB,EAClBhZ,aAAc,kBACdtC,YAAa,kCAIhBmG,eAAgB1I,QAAS6I,MAG5B,SAAU5I,EAAQD,GAChB,YAaA,IAAI+lB,GAAS,SAAShI,EAAQC,EAAUC,EAAQlX,GAC9C8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAKmd,UAAY,EACjBnd,KAAKod,WAAY,EACjBpd,KAAKqd,UAAY,eAGnBH,GAAOhd,SAAW,SAAU,WAAY,SAAU,aAOlDgd,EAAO/c,UAAU6S,SAGjBkK,EAAO/c,UAAU6P,WAGjBkN,EAAO/c,UAAUmd,cAAe,EAGhCJ,EAAO/c,UAAUod,gBAAiB,EAalCL,EAAO/c,UAAUwV,QAAU,WAEvB,GAAIrb,GAAO0F,KAAK9B,UAAU5F,IAAI,QAE1ByR,EAAK/J,KAELgS,EAA0B,WAC5B,MAAO1X,GAAK0V,SAGViC,EAAwB,SAASjC,GACnCjG,EAAGiG,QAAUA,EAGfhQ,MAAK6Q,gBAAkB7Q,KAAKkV,OAAO5C,iBACjCN,EACAC,EAGF,IAAIuL,GAAwB,WAC1B,MAAOljB,GAAK+W,YAGVoM,EAAsB,SAASzK,GACjCjJ,EAAGiJ,MAAQA,EAGbhT,MAAK0d,cAAgB1d,KAAKkV,OAAO5V,OAC/Bke,EACAC,IAWNP,EAAO/c,UAAU6W,WAAa,WAC5BhX,KAAK6Q,kBACL7Q,KAAK0d,iBAUPR,EAAO/c,UAAUwd,YAAc,WAE3B3d,KAAKsd,cAAgBtd,KAAKsd,cAU9BJ,EAAO/c,UAAUyd,cAAgB,WAE7B5d,KAAKud,gBAAkBvd,KAAKud,gBAMhCpmB,EAAQC,OAAOA,GAAQyd,UAAU,SAAU,WACzC,OACEC,OACEqI,UAAU,oBACVE,UAAU,oBACVD,UAAU,qBAEZrI,SAAU,IACVoB,YAAY,EACZpa,WAAYmhB,EACZlI,kBAAkB,EAClBhZ,aAAc,mBACdtC,YAAa,iCAejB,IAAImkB,GAAc,SAAS3I,EAAQE,EAAQD,EAAUjX,GACnD8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAK8d,MAAQ,EACb9d,KAAK+d,MAAQ,eAGfF,GAAY3d,SAAW,SAAU,SAAU,WAAY,aAOvD2d,EAAY1d,UAAU6d,YAAa,EAGnCH,EAAY1d,UAAU8d,YAAa,EAGnCJ,EAAY1d,UAAU+d,YAAa,EAGnCL,EAAY1d,UAAUge,UAAW,EAGjCN,EAAY1d,UAAUie,SAAU,EAahCP,EAAY1d,UAAUwV,QAAU,WAE5B,GAAIhE,GAAiB3R,KAAK9B,UAAU5F,IAAI,kBACpC+lB,EAAgBre,KAAK9B,UAAU5F,IAAI,iBACnCgmB,EAAiBte,KAAK9B,UAAU5F,IAAI,kBACpCimB,EAAeve,KAAK9B,UAAU5F,IAAI,gBAClCgC,EAAO0F,KAAK9B,UAAU5F,IAAI,QAE1ByR,EAAK/J,KAELwe,EAAmB,WACrB,MAAOlkB,GAAKxB,OAGV2lB,EAAiB,SAAS3lB,GAC5BiR,EAAGiU,WAAallB,GAAS6Y,EACzB5H,EAAG2U,UAAY5lB,GAASulB,EACxBtU,EAAGmU,WAAaplB,GAASwlB,EACzBvU,EAAGoU,SAAWrlB,GAASylB,EAGzBve,MAAKua,SAAWva,KAAKkV,OAAO5V,OAC1Bkf,EACAC,IAWNZ,EAAY1d,UAAU6W,WAAa,WACjChX,KAAKua,YAMPpjB,EAAQC,OAAOA,GAAQyd,UAAU,cAAe,WAC9C,OACEC,OACEgJ,MAAM,qBACNC,MAAM,sBAERhJ,SAAU,IACVoB,YAAY,EACZpa,WAAY8hB,EACZ7I,kBAAkB,EAClBhZ,aAAc,wBACdtC,YAAa,uCAejB,IAAIilB,GAAc,SAASzJ,EAAQE,EAAQD,EAAUjX,GACnD8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAGnBygB,GAAYze,SAAW,SAAU,SAAU,WAAY,aAOvDye,EAAYxe,UAAUrH,MAAQ,KAG9B6lB,EAAYxe,UAAUid,WAAY,EAalCuB,EAAYxe,UAAUwV,QAAU,WAE5B,GAAIrb,GAAO0F,KAAK9B,UAAU5F,IAAI,QAE1ByR,EAAK/J,KAELwe,EAAmB,WACrB,MAAOlkB,GAAKxB,OAGV2lB,EAAiB,WACnB1U,EAAGjR,MAAQwB,EAAKoX,mBAGlB1R,MAAKua,SAAWva,KAAKkV,OAAO5V,OAC1Bkf,EACAC,IAWNE,EAAYxe,UAAU6W,WAAa,WACjChX,KAAKua,YAMPpjB,EAAQC,OAAOA,GAAQyd,UAAU,cAAe,WAC9C,OACEC,OACEsI,UAAW,0BAEbrI,SAAU,IACVoB,YAAY,EACZpa,WAAY4iB,EACZ3J,kBAAkB,EAClBhZ,aAAc,wBACdtC,YAAa,uCAejB,IAAIklB,GAAgB,SAAS1J,EAAQE,EAAQD,EAAUjX,GACrD8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAGnB0gB,GAAc1e,SAAW,SAAU,SAAU,WAAY,aAOzD0e,EAAcze,UAAU6P,QAAU,EAGlC4O,EAAcze,UAAUid,WAAY,EAapCwB,EAAcze,UAAUwV,QAAU,WAE9B,GAAIrb,GAAO0F,KAAK9B,UAAU5F,IAAI,QAE1ByR,EAAK/J,KAELwe,EAAmB,WACrB,MAAOlkB,GAAK0V,SAGVyO,EAAiB,SAASzO,GAC5BjG,EAAGiG,QAAUA,EAAUA,EAAQ5K,OAAS,EAG1CpF,MAAKua,SAAWva,KAAKkV,OAAO5C,iBAC1BkM,EACAC,IAWNG,EAAcze,UAAU6W,WAAa,WACnChX,KAAKua,YAMPpjB,EAAQC,OAAOA,GAAQyd,UAAU,gBAAiB,WAChD,OACEC,OACEsI,UAAW,4BAEbrI,SAAU,IACVoB,YAAY,EACZpa,WAAY6iB,EACZ5J,kBAAkB,EAClBhZ,aAAc,0BACdtC,YAAa,2CAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAI0nB,GAAS,SAAS3J,EAAQC,EAAUC,EAAQC,GAC9CrV,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAKqV,YAAcA,EAEnBrV,KAAK8e,MAAQ,UAAY5J,EAAOI,IAEhCtV,KAAK+e,YAAc1J,EAAYG,aAAa,YAG9CqJ,GAAO3e,SAAW,SAAS,WAAW,SAAU,eAOhD2e,EAAO1e,UAAU4e,aAAc,EAK/B5nB,EAAQC,OAAOA,GAAQyd,UAAU,SAAU,WACzC,OACEC,OACEuB,KAAM,gBAERtB,SAAU,IACVoB,YACE6I,SAAU,kBACVC,YAAa,qBAEfljB,WAAY8iB,EACZ7J,kBAAkB,EAClBhZ,aAAc,mBACdtC,YAAa,mCAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAI+nB,GAAY,SAAShK,EAAQC,EAAUC,EAAQlX,GACjD8B,KAAKmV,SAAWA,EAChBnV,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAK9B,UAAYA,EAEjB8B,KAAKmf,MAAQ,KACbnf,KAAKof,OAAS,KACdpf,KAAKqf,gBACLrf,KAAKsf,cAAgB,KACrBtf,KAAKuf,aAAe,SACpBvf,KAAKwf,WAAa,YAClBxf,KAAKyf,eAAiB,UAEtB,IAAI1V,GAAK/J,IACTA,MAAKua,SAAWrF,EAAO5V,OACrB,WAAY,MAAOyK,GAAG0L,UACtB,SAASA,GACHA,EACF1L,EAAGoL,SAAS+D,SAASnP,EAAG0V,gBAExB1V,EAAGoL,SAASuK,YAAY3V,EAAG0V,gBAG7B1V,EAAGuV,cAAcK,WAAWC,SAAUnK,MAI1CzV,KAAK6f,UAAY7f,KAAK6f,UAAU7Z,KAAKhG,MAGvCkf,GAAUhf,SAAW,SAAS,WAAW,SAAS,aAOlDgf,EAAU/e,UAAUxF,KAAO,KAG3BukB,EAAU/e,UAAUsa,OAAQ,EAG5ByE,EAAU/e,UAAUsV,UAAW,EAG/ByJ,EAAU/e,UAAU2f,YAAc,SAclCZ,EAAU/e,UAAUwV,QAAU,WAC5B,GAAI5M,GAAU/I,KAAK9B,UAAU5F,IAAI,UAEjC0H,MAAKmf,MAAQhoB,EAAQgiB,QAAQxZ,SAASC,MACtCI,KAAKmV,SAAS+D,SAASlZ,KAAKwf,WAC5B,IAAIrG,GAAUnZ,KAAKmV,SAAS7c,IAAI,EAEhC0H,MAAKsf,cAAgBS,SAAS5G,EAE9B,IAAIpP,GAAK/J,KACL2C,GACFqd,SAAS,EACTC,YAAY,EACZL,SAAU5f,KAAKyV,SACfyK,MAAOlgB,KAAKmgB,WAAWna,KAAKhG,MAC5BogB,OAAQpgB,KAAKqgB,YAAYra,KAAKhG,MAC9BsgB,QAAStgB,KAAKugB,aAAava,KAAKhG,MAChCwgB,MACIC,SAAS,SAASpc,EAAEC,EAAEoc,GAapB,GATK3W,EAAG4W,UACN5W,EAAG4W,SACDtc,EAAGqc,EAAYE,YAAYC,KAAKxc,EAChCC,EAAGoc,EAAYE,YAAYC,KAAKvc,KAM/Boc,EAAYI,WACf,OACEzc,EAAG0F,EAAG4W,QAAQtc,EACdC,EAAGyF,EAAG4W,QAAQrc,KAKpByc,SAAS,GAIX/gB,MAAKya,QACPtjB,EAAQ8U,OAAOtJ,GAAWqe,aAAa,IACvChhB,KAAKsf,cAAc5E,GAAG,OAAQ1a,KAAKihB,QAAQjb,KAAKhG,QAGlDA,KAAKsf,cAAcK,UAAUhd,GAC7B3C,KAAKsf,cAAc4B,QAAUlhB,KAAK8W,SAAS9Q,KAAKhG,MAEhDA,KAAKmhB,QAAUhqB,EAAQgiB,QAAQpQ,GAC/B/I,KAAKmhB,QAAQzG,GAAG,SAAU1a,KAAKohB,UAUjClC,EAAU/e,UAAU6W,WAAa,WAC/BhX,KAAKmhB,QAAQrG,IAAI,SAAU9a,KAAK6f,WAChC7f,KAAKsf,cAAc+B,QACnBrhB,KAAKua,YAUP2E,EAAU/e,UAAU0f,UAAY,WAC9B7f,KAAK2gB,QAAU,MAUjBzB,EAAU/e,UAAUogB,aAAe,SAAS1c,GAC1C,GAAI1E,GAAUa,KAAKya,MAEjBza,KAAKof,OADLjoB,EAAQgiB,QAAQtV,EAAM1E,OAGxBA,GAAO+Z,SAASlZ,KAAKuf,cAErBvf,KAAKshB,SAAS,eACZxL,OAAQjS,EACR0d,MAAOvhB,KAAKrF,QAYhBukB,EAAU/e,UAAUkgB,YAAc,SAASxc,GACzC,GAAI1E,GAAUa,KAAKya,MAEjBza,KAAKof,OADLjoB,EAAQgiB,QAAQtV,EAAM1E,QAGpBkF,GAAKrE,KAAKqf,aAAahb,GAAK,GAAKR,EAAM2d,GACvCld,GAAKtE,KAAKqf,aAAa/a,GAAK,GAAKT,EAAM4d,EAE3CzhB,MAAK0hB,WAAWviB,EAAOkF,EAAEC,GAEzBtE,KAAKshB,SAAS,cACZxL,OAAQjS,EACR0d,MAAOvhB,KAAKrF,QAahBukB,EAAU/e,UAAUggB,WAAa,SAAStc,GACxC,GAAI8d,KAAY9d,EAAM6c,YAAYI,UAElC,IAAK9gB,KAAKya,MAWRza,KAAKqf,gBACLrf,KAAKof,OAAOrE,SACZ/a,KAAKof,OAAS,SAbC,CACf,GAAIjgB,GAAShI,EAAQgiB,QAAQtV,EAAM1E,OACnCA,GAAOugB,YAAY1f,KAAKuf,cAInBoC,GACH3hB,KAAK0hB,WAAWviB,EAAO,EAAE,GAS7Ba,KAAKshB,SAAS,aACZxL,OAAQjS,EACR0d,MAAOvhB,KAAKrF,OAGVgnB,GACF3hB,KAAKshB,SAAS,UACZxL,OAAQjS,EACR0d,MAAOvhB,KAAKrF,QAgBlBukB,EAAU/e,UAAU8gB,QAAU,SAASpd,GACrC,GAAI+d,GAAe/d,EAAM+d,aACrBlB,EAAc7c,EAAM6c,YACpBvH,EAAUtV,EAAMge,aAIpB,KAAI7hB,KAAKyV,SAAT,CAMA,GAAIiL,EAAYoB,gBAAkBpB,EAAYqB,cAAe,CAC3D/hB,KAAKof,OAASjoB,EAAQgiB,QAAQA,GAASsB,OAEvC,IAAIuH,GAAU7I,EAAQ8I,aAAe,EACjCC,EAAU/I,EAAQgJ,YAAc,EAEhCC,EAAUve,EAAMwe,QAClBxe,EAAMwe,QAAQ,GAAGD,MACjBve,EAAMue,MACJE,EAAUze,EAAMwe,QAClBxe,EAAMwe,QAAQ,GAAGC,MACjBze,EAAMye,KAERtiB,MAAKof,OAAOmD,KACVnK,KAAOkK,EAAQJ,EAAW,KAC1B/J,IAAMiK,EAAQJ,EAAW,KACzBQ,SAAU,aAGZxiB,KAAKmf,MAAMxE,OAAO3a,KAAKof,QACvBjG,EAAUnZ,KAAKof,OAAO9mB,IAAI,GAI5BooB,EAAY+B,OAAQjpB,KAAM,QAAUooB,EAAczI,KAUpD+F,EAAU/e,UAAU2W,SAAW,WAC7B,MAAO9W,MAAKrF,MAadukB,EAAU/e,UAAUuhB,WAAa,SAASvI,EAAS9U,EAAGC,GACpD,GAAIF,GAAY,aAAaC,EAAE,MAAMC,EAAE,KAEvC6U,GAAQoJ,KACN5d,gBAAmBP,EACnBQ,aAAgBR,EAChBS,YAAeT,EACfU,WAAcV,EACdW,UAAaX,IAGfpE,KAAKqf,aAAahb,EAAIA,EACtBrE,KAAKqf,aAAa/a,EAAIA,GAUxB4a,EAAU/e,UAAUmhB,SAAW,SAAS/oB,EAAQmqB,GAC9C1iB,KAAKkV,OAAO1C,WAAWxS,KAAKzH,GAAQyN,KAAKhG,KAAK0iB,KAMhDvrB,EAAQC,OAAOA,GAAQyd,UAAU,YAAa,WAC5C,OACEC,OACEna,KAAM,kBACN8f,MAAO,mBACPhF,SAAU,sBACVkN,YAAa,wBACbC,WAAY,uBACZC,UAAW,sBACXC,OAAQ,oBAEV/N,SAAU,IACVhZ,WAAYmjB,EACZlK,kBAAkB,EAClBhZ,aAAc,wBAelB,IAAI+mB,GAAW,SAAS7N,EAAQC,EAAUC,GACxCpV,KAAKmV,SAAWA,EAChBnV,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EAEdpV,KAAKsf,cAAgB,KACrBtf,KAAKgjB,YAAc,QACnBhjB,KAAKuf,aAAe,SACpBvf,KAAKwf,WAAa,WAClBxf,KAAKijB,aAAe,YACpBjjB,KAAKyf,eAAiB,UAEtB,IAAI1V,GAAK/J,IACTA,MAAKua,SAAWrF,EAAO5V,OACrB,WAAY,MAAOyK,GAAG0L,UACtB,SAASA,GACHA,EACF1L,EAAGoL,SAAS+D,SAASnP,EAAG0V,gBAExB1V,EAAGoL,SAASuK,YAAY3V,EAAG0V,kBAMnCsD,GAAS7iB,SAAW,SAAS,WAAW,UAOxC6iB,EAAS5iB,UAAUsV,UAAW,EAc9BsN,EAAS5iB,UAAUwV,QAAU,WAC3B3V,KAAKmf,MAAQhoB,EAAQgiB,QAAQxZ,SAASC,MACtCI,KAAKmV,SAAS+D,SAASlZ,KAAKwf,WAC5B,IAAI0D,GAAS,IAAMljB,KAAKijB,aACpB9J,EAAUnZ,KAAKmV,SAAS7c,IAAI,EAEhC0H,MAAKsf,cAAgBS,SAAS5G,GAC3BgK,UACCD,OAAQA,EACRtD,SAAU5f,KAAKyV,SACf2N,OAAQpjB,KAAKqjB,QAAQrd,KAAKhG,MAC1BsjB,YAAatjB,KAAKujB,aAAavd,KAAKhG,MACpCwjB,YAAaxjB,KAAKyjB,aAAazd,KAAKhG,MACpC0jB,eAAgB1jB,KAAK2jB,gBAAgB3d,KAAKhG,MAC1C4jB,iBAAkB5jB,KAAK6jB,kBAAkB7d,KAAKhG,SAWpD+iB,EAAS5iB,UAAU6W,WAAa,WAC9BhX,KAAKsf,cAAc+B,QACnBrhB,KAAKua,YAWPwI,EAAS5iB,UAAU0jB,kBAAoB,SAAShgB,GAC9C7D,KAAKmV,SAASuK,YAAY1f,KAAKuf,aAC/B,IAAI5kB,GAAOkJ,EAAM8b,UAAUuB,SAE3BlhB,MAAKshB,SAAS,oBACZxL,OAAQjS,EACR0d,MAAO5mB,KAYXooB,EAAS5iB,UAAUwjB,gBAAkB,SAAS9f,GAC5C7D,KAAKmV,SAAS+D,SAASlZ,KAAKuf,aAC5B,IAAI5kB,GAAOkJ,EAAM8b,UAAUuB,SAE3BlhB,MAAKshB,SAAS,kBACZxL,OAAQjS,EACR0d,MAAO5mB,KAYXooB,EAAS5iB,UAAUojB,aAAe,SAAS1f,GACzC7D,KAAKmV,SAAS+D,SAASlZ,KAAKgjB,YAC5B,IAAIroB,GAAOkJ,EAAM8b,UAAUuB,SAE3BlhB,MAAKshB,SAAS,eACZxL,OAAQjS,EACR0d,MAAO5mB,KAYXooB,EAAS5iB,UAAUsjB,aAAe,SAAS5f,GACzC7D,KAAKmV,SAASuK,YAAY1f,KAAKgjB,YAC/B,IAAIroB,GAAOkJ,EAAM8b,UAAUuB,SAE3BlhB,MAAKshB,SAAS,eACZxL,OAAQjS,EACR0d,MAAO5mB,KAaXooB,EAAS5iB,UAAUkjB,QAAU,SAASxf,GACpC7D,KAAKmV,SAASuK,YAAY1f,KAAKgjB,YAC/B,IAAIroB,GAAOkJ,EAAM8b,UAAUuB,SAE3BlhB,MAAKshB,SAAS,UACZxL,OAAQjS,EACR0d,MAAO5mB,KAWXooB,EAAS5iB,UAAUmhB,SAAW,SAAS/oB,EAAQmqB,GAC7C1iB,KAAKkV,OAAO1C,WAAWxS,KAAKzH,GAAQyN,KAAKhG,KAAK0iB,KAMhDvrB,EAAQC,OAAOA,GAAQyd,UAAU,WAAY,WAC3C,OACEC,OACEW,SAAU,qBACVqO,iBAAkB,4BAClBC,eAAgB,0BAChBC,YAAa,uBACbC,YAAa,uBACbnB,OAAQ,mBAEV/N,SAAU,IACVhZ,WAAYgnB,EACZ/N,kBAAkB,EAClBhZ,aAAc,0BAIjB6D,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAI+sB,GAAW,SAAShP,EAAQC,EAAUC,EAAQlX,GAChD8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAK2C,WAEL3C,KAAKmkB,QAAU,KACfnkB,KAAKokB,QAAU,KACfpkB,KAAKqkB,UAAY,KACjBrkB,KAAK4b,MAAQ5b,KAAK4b,MAAM5V,KAAKhG,MAC7BA,KAAKskB,SAAWtkB,KAAKskB,SAASte,KAAKhG,MACnCA,KAAKukB,YAAcvkB,KAAKukB,YAAYve,KAAKhG,MAG3CkkB,GAAShkB,SAAW,SAAS,WAAW,SAAU,aAOlDgkB,EAAS/jB,UAAUwC,QAAU,KAG7BuhB,EAAS/jB,UAAUmF,SAAW,KAa9B4e,EAAS/jB,UAAUwV,QAAU,WAC3B,GAAIsD,GAAWjZ,KAAK9B,UAAU5F,IAAI,WAGlC2gB,GAASjZ,KAAK4b,MAAO,IAUvBsI,EAAS/jB,UAAU6W,WAAa,WAC9BhX,KAAKmkB,QAAQrJ,IAAI,WAAY9a,KAAKukB,aAClCvkB,KAAKmV,SAAS2F,IAAI,QAAS9a,KAAKskB,UAEhCtkB,KAAKqkB,UAAUrJ,UAAS,IAU1BkJ,EAAS/jB,UAAUyb,MAAQ,WAezB,GAZI5b,KAAKmZ,kBAAmBqL,QAC1BxkB,KAAKokB,QAAUpkB,KAAKmZ,QAEhBhiB,EAAQ2V,SAAS9M,KAAKmZ,WACO,MAA3BnZ,KAAKmZ,QAAQsL,OAAO,KACtBzkB,KAAKokB,QAAU,IAAMpkB,KAAKmZ,SAG5BnZ,KAAKokB,QAAUI,OAAOxkB,KAAKokB,UAIH,IAAxBpkB,KAAKokB,QAAQhf,OAEf,WADAsf,SAAQC,KAAK,wCAMf,IAAIC,GAAO,IAAM5kB,KAAKokB,QAAQte,EAC9B9F,MAAKmkB,QAAUK,OAAO,YAAYI,EAAK,UAEvC5kB,KAAK2C,QAAU3C,KAAK2C,YACpB3C,KAAK2C,QAAQmM,OAAS9O,KAAK2C,QAAQmM,QAAU,GAC7C9O,KAAK2C,QAAQkiB,SAAW7kB,KAAK2C,QAAQkiB,UAAY,IACjD7kB,KAAK2C,QAAQmiB,OAAS9kB,KAAK2C,QAAQmiB,QAAU,cAE7C9kB,KAAKmV,SAASuF,GAAG,QAAS1a,KAAKskB,UAC/BtkB,KAAKmkB,QAAQzJ,GAAG,WAAY1a,KAAKukB,aAEjCvkB,KAAKqkB,UAAYzhB,MAAMmiB,OAAO/kB,KAAKmkB,QAASnkB,KAAK2C,UAUnDuhB,EAAS/jB,UAAUmkB,SAAW,WAC5BtkB,KAAKqkB,UAAUW,SAAShlB,KAAKokB,UAU/BF,EAAS/jB,UAAUokB,YAAc,WAC1BptB,EAAQ8tB,WAAWjlB,KAAKsF,WAI7BtF,KAAKkV,OAAO1C,WAAWxS,KAAKsF,WAM9BnO,EAAQC,OAAOA,GAAQyd,UAAU,WAAY,WAC3C,OACEC,OACEqE,QAAS,YACTxW,QAAS,oBACT2C,SAAU,sBAEZyP,SAAU,IACVhZ,WAAYmoB,EACZlP,kBAAkB,MAIrBnV,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAI+tB,GAAa,SAAShQ,EAAQC,EAAUC,EAAQlX,GAClD8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAK1F,KAAO4D,EAAU5F,IAAI,QAC1B0H,KAAK8e,MAAQ,cAAgB5J,EAAOI,IAGtC4P,GAAWhlB,SAAW,SAAS,WAAW,SAAU,aAOpDglB,EAAW/kB,UAAU2e,MAAQ,KAK7B3nB,EAAQC,OAAOA,GAAQyd,UAAU,aAAc,WAC7C,OACEC,OACE/b,OAAQ,eAEVgc,SAAU,IACVoB,YACEvI,KAAM,iBACNuX,cAAe,2BACfC,eAAgB,6BAElBrpB,WAAYmpB,EACZlQ,kBAAkB,EAClBhZ,aAAc,uBACdtC,YAAa,uCAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIkuB,GAAc,SAASnQ,EAAQC,EAAUC,EAAQlX,GACnD8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAEhBnV,KAAK1F,KAAO4D,EAAU5F,IAAI,QAG5B+sB,GAAYnlB,SAAW,SAAS,WAAW,SAAU,aAKrD/I,EAAQC,OAAOA,GAAQyd,UAAU,cAAe,WAC9C,OACEC,OACEwQ,SAAU,iBAEZvQ,SAAU,IACVoB,YACEoP,SAAU,YACVC,UAAW,cAEbzpB,WAAYspB,EACZrQ,kBAAkB,EAClBhZ,aAAc,wBACdtC,YAAa,yCAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIsuB,GAAY,SAASvQ,EAAQC,EAAUC,EAAQC,EAAa4D,GAE5DjZ,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAKiZ,SAAWA,EAChBjZ,KAAKqV,YAAcA,EAEnBrV,KAAK0lB,uBACL1lB,KAAK2lB,qBACL3lB,KAAK4lB,cAAgB,KACrB5lB,KAAK6lB,YAAc,KACnB7lB,KAAK8lB,aACL9lB,KAAKua,YAGTkL,GAAUvlB,SAAW,SAAU,WAAY,SAAU,cAAe,YAOpEulB,EAAUtlB,UAAU2F,GAAK,GAGzB2f,EAAUtlB,UAAU4lB,MAAQ,GAG5BN,EAAUtlB,UAAU6lB,QAAU,KAG9BP,EAAUtlB,UAAU8lB,YAAa,EAGjCR,EAAUtlB,UAAU+lB,cAAe,EAGnCT,EAAUtlB,UAAUgmB,WAAa,gBAGjCV,EAAUtlB,UAAUimB,aAAe,iBAGnCX,EAAUtlB,UAAUkmB,aAAe,kBAcnCZ,EAAUtlB,UAAUwV,QAAU,WAK1B3V,KAAK8F,GAAK,cAAgB9F,KAAKkV,OAAOI,IAGtCtV,KAAKsmB,cAGLtmB,KAAKumB,eAUTd,EAAUtlB,UAAU6W,WAAa,WAE7B7f,EAAQ+B,QAAQ8G,KAAK0lB,oBAAqB,SAASvM,GACjDA,EAAQ4B,WAGV5jB,EAAQ+B,QAAQ8G,KAAK2lB,kBAAmB,SAAS7Q,GAC/CA,EAAMkG,aAGR7jB,EAAQ+B,QAAQ8G,KAAK8lB,UAAW,SAASU,GACvCA,MAGFrvB,EAAQ+B,QAAQ8G,KAAKua,SAAU,SAASkM,GACtCA,OAcNhB,EAAUtlB,UAAUumB,SAAW,SAASV,GAEpChmB,KAAKgmB,QAAUA,GAUnBP,EAAUtlB,UAAUwmB,QAAU,WAEtB3mB,KAAKgmB,QAAQY,QACf5mB,KAAK4lB,cAAclG,YAAY1f,KAAKomB,cACpCpmB,KAAK4lB,cAAc1M,SAASlZ,KAAKqmB,gBAEjCrmB,KAAK4lB,cAAclG,YAAY1f,KAAKqmB,cACpCrmB,KAAK4lB,cAAc1M,SAASlZ,KAAKomB,eAGnCpmB,KAAKkmB,aAAelmB,KAAKgmB,QAAQa,UAUrCpB,EAAUtlB,UAAU2mB,OAAS,WAEzB9mB,KAAK4lB,cAAclG,YAAY1f,KAAKomB,cACpCpmB,KAAK4lB,cAAclG,YAAY1f,KAAKqmB,cACpCrmB,KAAKgmB,QAAQe,gBACb/mB,KAAKkmB,cAAe,GAUxBT,EAAUtlB,UAAUmmB,YAAc,WAE9B,GAAIvc,GAAK/J,KAILgnB,EAAehnB,KAAKkV,OAAO5C,iBAC7B,8BACA,SAAS2U,EAAUC,GAGjB,GAAID,IAAaC,GAMZD,EAASE,WAKVF,EAASG,SAMb,OAAKH,EAASI,YACRtd,EAAGkc,eACLlc,GAAG+c,aAKP/c,GAAG4c,WAIP3mB,MAAKua,SAASriB,KAAK8uB,IAWvBvB,EAAUtlB,UAAUomB,YAAc,WAE9B,GAAIxc,GAAK/J,KAGLsnB,EAAoB,SAAS7M,EAAO3F,GAEtC,GAAIgK,GAAQ,YAAc/U,EAAGjE,GACzB1L,EAAWjD,EAAQgiB,QAAQ2F,EAE/BrE,GAAM8M,KAAK,KAAMxd,EAAGjE,IAEpB1L,EAASotB,YAAY/M,GAErB1Q,EAAG6b,cAAgBnL,EAEnB1Q,EAAG4b,kBAAkBztB,KAAK4c,GAC1B/K,EAAG2b,oBAAoBxtB,KAAKuiB,IAK1BgN,EAAkB,SAAShN,EAAO3F,GAEpC,GAAIgK,GAAQ,UAAY/U,EAAGjE,GACvB1L,EAAWjD,EAAQgiB,QAAQ2F,EAE/BrE,GAAM8M,KAAK,MAAOxd,EAAGjE,IACrB2U,EAAMvB,SAASnP,EAAGoc,YAElB/rB,EAASotB,YAAY/M,GAErB1Q,EAAG8b,YAAcpL,EAEjB1Q,EAAG4b,kBAAkBztB,KAAK4c,GAC1B/K,EAAG2b,oBAAoBxtB,KAAKuiB,IAI1B5U,EAAU,WAEZkE,EAAGsL,YAAYiS,EAAmB,KAAM,MACxCvd,EAAGsL,YAAYoS,EAAiB,KAAM,SAGxCznB,MAAKiZ,SAASpT,IAMlB1O,EAAQC,OAAOyI,gBAAgBgV,UAAU,YAAY,WACnD,OACEC,OACItb,KAAM,aACNysB,WAAY,wBACZE,WAAY,wBACZC,aAAc,0BACdC,aAAc,2BAElBlQ,YACE4P,MAAO,SACP2B,WAAY,cACZC,WAAY,cACZC,WAAY,cACZC,aAAc,gBACdC,cAAe,iBACfC,eAAgB,kBAChBC,gBAAiB,mBACjBC,iBAAkB,oBAClBC,iBAAkB,oBAClBC,eAAgB,mBAElBpT,SAAU,IACVhZ,WAAY0pB,EACZzQ,kBAAkB,EAClBhZ,aAAc,sBACdtC,YAAa,qCAWjB,IAAI0uB,GAAiB,SAASlT,EAAQE,EAAQD,EAAUzH,GACtD1N,KAAK0N,KAAOA,EACZ1N,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAGlBiT,GAAeloB,SAAW,SAAU,SAAU,WAAY,QAO1DkoB,EAAejoB,UAAUkoB,WAAY,EAarCD,EAAejoB,UAAUwV,QAAU,WAE/B,MAAK3V,MAAKsoB,WAKNtoB,KAAKqoB,WACProB,KAAKmV,SAASoT,YAGhBvoB,MAAKsoB,UAAU5B,SAAS1mB,KAAKgmB,cAR3BhmB,MAAK0N,KAAKiX,KAAK,oDAcrBxtB,EAAQC,OAAOA,GAAQyd,UAAU,iBAAkB,WACjD,OACEC,OACEuT,UAAa,6BAEftT,SAAU,IACVwB,SACEyP,QAAW,UACXsC,UAAa,eAEftT,kBAAkB,EAClBjZ,WAAYqsB,MAIfvoB,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIqxB,GAA0B,SAAStT,EAAQC,EAAUC,EAAQ9Y,EAAIW,GAEjE+C,KAAK1D,GAAKA,EACV0D,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAEhBnV,KAAK/C,SAAWA,EAEhB+C,KAAKyoB,UAAY,0BAGrBD,GAAwBtoB,SAAW,SAAU,WAAY,SAAU,KAAM,YAazEsoB,EAAwBroB,UAAUwV,QAAU,WAExC3V,KAAKgmB,QAAQ0C,iBAAiBC,wBAA0B3oB,KAAK4oB,SAAS5iB,KAAKhG,OAW/EwoB,EAAwBroB,UAAUyoB,SAAW,SAASC,GAElD,GAAItsB,GAAQyD,KAAK1D,GAAGC,QAEhBwN,EAAK/J,KACLxD,EAAkB,SAAS2U,GAE7B,MAAKA,GAASC,UAMdrH,EAAGic,QAAQ8C,aAAa/e,EAAG0e,WAAW,OACtClsB,GAAMvC,YANJ+P,EAAGic,QAAQ8C,aAAa/e,EAAG0e,WAAW,OACtClsB,GAAM6E,WAQN3E,EAAkB,WAEpBF,EAAM6E,SAWR,OARApB,MAAK/C,SAAS8rB,0BAEVrrB,KAAMmrB,GAERrsB,EACAC,GAGKF,EAAM/B,SAMjBrD,EAAQC,OAAOyI,gBAAgBgV,UAAU,0BAA0B,WAC/D,OACEE,SAAU,IACVwB,SACEyP,QAAS,WAEXhR,kBAAkB,EAClBjZ,WAAYysB,IAWlB,IAAIQ,GAA0B,SAAS9T,EAAQC,EAAUC,EAAQ9Y,EAAIW,GAEjE+C,KAAK1D,GAAKA,EACV0D,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAEhBnV,KAAK/C,SAAWA,EAGpB+rB,GAAwB9oB,SAAW,SAAU,WAAY,SAAU,KAAM,YAazE8oB,EAAwB7oB,UAAUwV,QAAU,WAExC3V,KAAKgmB,QAAQ0C,iBAAiBO,wBAA0BjpB,KAAK4oB,SAAS5iB,KAAKhG,OAU/EgpB,EAAwB7oB,UAAUyoB,SAAW,SAASC,GAElD,GAAItsB,GAAQyD,KAAK1D,GAAGC,QAEhBC,EAAkB,WAEpBD,EAAM6E,UAGJ3E,EAAkB,WAEpBF,EAAMvC,UAWR,OARAgG,MAAK/C,SAASisB,yBAEVxrB,KAAMmrB,GAERrsB,EACAC,GAGKF,EAAM/B,SAMjBrD,EAAQC,OAAOyI,gBAAgBgV,UAAU,0BAA0B,WAC/D,OACEE,SAAU,IACVwB,SACEyP,QAAS,WAEXhR,kBAAkB,EAClBjZ,WAAYitB,IAWlB,IAAIG,GAAuB,SAASjU,EAAQC,EAAUC,EAAQ9Y,EAAImB,GAE9DuC,KAAK1D,GAAKA,EACV0D,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAEhBnV,KAAKvC,MAAQA,EAGjB0rB,GAAqBjpB,SAAW,SAAU,WAAY,SAAU,KAAM,SAatEipB,EAAqBhpB,UAAUwV,QAAU,WAErC3V,KAAKgmB,QAAQ0C,iBAAiBU,qBAAuBppB,KAAK4oB,SAAS5iB,KAAKhG,OAU5EmpB,EAAqBhpB,UAAUyoB,SAAW,SAASC,GAE/C,GAAItsB,GAAQyD,KAAK1D,GAAGC,QAEhBC,EAAkB,WAEpBD,EAAM6E,UAGJ3E,EAAkB,WAEpBF,EAAMvC,UAWR,OARAgG,MAAKvC,MAAM4rB,eAEPvd,SAAU+c,GAEZrsB,EACAC,GAGKF,EAAM/B,SAMjBrD,EAAQC,OAAOyI,gBAAgBgV,UAAU,uBAAuB,WAC5D,OACEE,SAAU,IACVwB,SACEyP,QAAS,WAEXhR,kBAAkB,EAClBjZ,WAAYotB,MAIjBtpB,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAImyB,GAAe,SAASpU,EAAQC,EAAUC,EAAQlX,GACpD,GAAIqT,GAAOrT,EAAU5F,IAAI,iBACrBgC,EAAO4D,EAAU5F,IAAI,OAEzB0H,MAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAK4S,KAAOtY,EAAKgX,cAAcC,GAGjC+X,GAAappB,SAAW,SAAU,WAAY,SAAU,aASxDopB,EAAanpB,UAAUyS,KAAO,KAK9B0W,EAAanpB,UAAUopB,UAAW,EAGlCD,EAAanpB,UAAUqpB,eAAiB,EAGxCF,EAAanpB,UAAUspB,gBAAkB,EAGzCH,EAAanpB,UAAUupB,gBAAkB,EAGzCJ,EAAanpB,UAAUwpB,kBAAmB,EAG1CL,EAAanpB,UAAUypB,kBAAmB,EAG1CN,EAAanpB,UAAU0pB,gBAAkB,EAGzCP,EAAanpB,UAAU2pB,gBAAkB,EAKzCR,EAAanpB,UAAU4pB,OAAS,IAGhCT,EAAanpB,UAAU6pB,KAAO,IAG9BV,EAAanpB,UAAU8pB,MAAQ,EAa/BX,EAAanpB,UAAUwV,QAAU,WAC/B3V,KAAK2b,QAUP2N,EAAanpB,UAAU+pB,WAAa,WAElC,OACEtX,KAAM5S,KAAK4S,KACX6E,MACE0S,WACEC,eAAgBpqB,KAAK6pB,gBACrBQ,cAAerqB,KAAKypB,gBACpBa,SAAUtqB,KAAK2pB,kBAEjBY,WACEH,eAAgBpqB,KAAK8pB,gBACrBO,cAAerqB,KAAK0pB,gBACpBY,SAAUtqB,KAAK4pB,qBAcvBN,EAAanpB,UAAUmlB,SAAW,WAChC,MAAkB,QAAdtlB,KAAK4S,OAID5S,KAAK4S,KAAKxB,UAUpBkY,EAAanpB,UAAUqqB,WAAa,WAClC,GAAIlwB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK+V,YAINrQ,KAAKslB,cAILtlB,KAAKupB,aAIJvpB,KAAKypB,mBAILzpB,KAAK0pB,oBAcZJ,EAAanpB,UAAUwb,KAAO,WAC5B3b,KAAKupB,UAAW,EAChBvpB,KAAKwpB,eAAiB,EACtBxpB,KAAKypB,gBAAkB,EACvBzpB,KAAK0pB,gBAAkB,EACvB1pB,KAAK2pB,kBAAmB,EACxB3pB,KAAK4pB,kBAAmB,EACxB5pB,KAAK6pB,gBAAkB7pB,KAAKyqB,iBAAiB,GAC7CzqB,KAAK8pB,gBAAkB9pB,KAAKyqB,iBAAiB,EAAIzqB,KAAKiqB,QAUxDX,EAAanpB,UAAUuqB,MAAQ,WAC7B1qB,KAAK2b,QAaP2N,EAAanpB,UAAUzH,OAAS,SAAS0E,EAAO4hB,GAC9C,OAAOA,GACL,IAAK,YACHhf,KAAKypB,gBAAkBrsB,CACvB,MACF,KAAK,YACH4C,KAAK0pB,gBAAkBtsB,EAK3B4C,KAAK2pB,iBAAmB3pB,KAAKypB,kBAAoBzpB,KAAK6pB,gBACtD7pB,KAAK4pB,iBAAmB5pB,KAAK0pB,kBAAoB1pB,KAAK8pB,gBAElD9pB,KAAK2pB,kBAAoB3pB,KAAK4pB,iBAChC5pB,KAAKwpB,eAAiB,EACbxpB,KAAK2pB,iBACd3pB,KAAKwpB,eAAiB,EACbxpB,KAAK4pB,iBACd5pB,KAAKwpB,eAAiB,EAEtBxpB,KAAKwpB,eAAiB,GAY1BF,EAAanpB,UAAUnG,QAAU,WAC/B,GAAIsC,GAAK0D,KAAK9B,UAAU5F,IAAI,MACxByY,EAAS/Q,KAAK2qB,WAChBC,QAAS5qB,KAAKkqB,eAGZngB,EAAK/J,KACLxD,EAAkB,WACpBuN,EAAGwf,UAAW,GAEZ9sB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKyS,EAMtB,OALAvW,GAAQmC,KACNH,EACAC,GAGKjC,GAWT8uB,EAAanpB,UAAUsqB,iBAAmB,SAASR,GACjD,MAAOjqB,MAAK+pB,OAASpkB,KAAKklB,IAAI,EAAI7qB,KAAKgqB,KAAMC,GAAS,IAMxD9yB,EAAQC,OAAOA,GAAQyd,UAAU,eAAgB,WAC/C,OACEC,OACEkV,KAAM,qBACNC,MAAO,sBACPF,OAAQ,uBACRY,UAAW,0BAEb5V,SAAU,IACVoB,YAAY,EACZpa,WAAYutB,EACZtU,kBAAkB,EAClBhZ,aAAc,yBACdtC,YAAa,8CAejB,IAAIoxB,GAAuB,SAAS5V,EAAOC,EAASC,GAClDpV,KAAKmV,SAAWA,EAChBnV,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EAEdpV,KAAKyV,UAAW,EAChBzV,KAAK+qB,SACL/qB,KAAKgrB,IAAM,CAEX,IAAIjhB,GAAK/J,IACTA,MAAKua,SAAWrF,EAAO5V,OACrB,WAAY,MAAOyK,GAAGihB,KACtB,SAASA,GACFA,IACHjhB,EAAGihB,IAAM,EACTjhB,EAAGghB,YAMXD,GAAqB5qB,SAAW,SAAS,WAAW,UAOpD4qB,EAAqB3qB,UAAUsV,UAAW,EAG1CqV,EAAqB3qB,UAAU4qB,SAG/BD,EAAqB3qB,UAAU6qB,IAAM,EAGrCF,EAAqB3qB,UAAU8qB,OAAS,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAG7DH,EAAqB3qB,UAAU+qB,OAAS,EAAE,EAAE,GAAI,GAAI,GAAI,IAAK,IAAK,KAalEJ,EAAqB3qB,UAAU6W,WAAa,WAC1ChX,KAAKua,YAWPuQ,EAAqB3qB,UAAU2iB,OAAS,SAAS1lB,GAC/C4C,KAAK+qB,MAAM7yB,KAAKkF,GAChB4C,KAAKgrB,KAAO5tB,EAEZ4C,KAAKmrB,UACHH,IAAKhrB,KAAKgrB,OAYdF,EAAqB3qB,UAAUirB,OAAS,WACtCprB,KAAKgrB,KAAOhrB,KAAK+qB,MAAMM,MAEvBrrB,KAAKmrB,UACHH,IAAKhrB,KAAKgrB,OAOd7zB,EAAQC,OAAOA,GAAQyd,UAAU,uBAAwB,WACvD,OACEC,OACEkW,IAAK,4BACLG,SAAU,gCACV1V,SAAU,kCAEZV,SAAU,IACVoB,YAAY,EACZpa,WAAY+uB,EACZ9V,kBAAkB,EAClBhZ,aAAc,iCACdtC,YAAa,yDAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIm0B,GAAsB,SAASpW,EAAQqW,EAASnW,EAAQlX,GAC1D,GAAIqT,GAAOrT,EAAU5F,IAAI,wBACrBgC,EAAO4D,EAAU5F,IAAI,OAEzB0H,MAAK9B,UAAYA,EACjB8B,KAAK4S,KAAOtY,EAAKgX,cAAcC,GAGjC+Z,GAAoBprB,SAAW,SAAS,WAAW,SAAU,aAK7DorB,EAAoBnrB,UAAUyS,KAAO,KAKrC0Y,EAAoBnrB,UAAUopB,UAAW,EAGzC+B,EAAoBnrB,UAAUqrB,MAAQ,IAGtCF,EAAoBnrB,UAAUsrB,MAAQ,IAGtCH,EAAoBnrB,UAAUurB,aAG9BJ,EAAoBnrB,UAAU6P,WAG9Bsb,EAAoBnrB,UAAUwrB,SAa9BL,EAAoBnrB,UAAUwV,QAAU,WACtC3V,KAAK2b,QAUP2P,EAAoBnrB,UAAU+pB,WAAa,WACzC,OACEtX,KAAM5S,KAAK4S,KACX6E,MACEzH,SACE4b,IAAK5rB,KAAKgQ,QAAQ4b,IAAIC,QACtBC,IAAK9rB,KAAKgQ,QAAQ8b,IAAID,SAExBE,UACEH,IAAK5rB,KAAAA,UAAY4rB,IAAII,KACrBF,IAAK9rB,KAAAA,UAAY8rB,IAAIE,OAGzBC,YAAajsB,KAAKksB,mBAWtBZ,EAAoBnrB,UAAUmlB,SAAW,WACvC,MAAkB,QAAdtlB,KAAK4S,OAID5S,KAAK4S,KAAKxB,UAUpBka,EAAoBnrB,UAAUqqB,WAAa,WACzC,GAAIlwB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK+V,YAINrQ,KAAKslB,cAILtlB,KAAKupB,aAIJvpB,KAAKgQ,QAAQ4b,IAAIC,WAIjB7rB,KAAKgQ,QAAQ8b,IAAID,YAcxBP,EAAoBnrB,UAAUwb,KAAO,WACnC,GAAInV,GAASxG,KAAK9B,UAAU5F,IAAI,SAEhC0H,MAAK2rB,OACH3rB,KAAKwrB,MACLxrB,KAAKyrB,OAGPzrB,KAAAA,WACE4rB,KACE9lB,GAAI,EACJkmB,KAAMxlB,EAAOY,KAAKpH,KAAK2rB,QAEzBG,KACEhmB,GAAI,EACJkmB,KAAMxlB,EAAOY,KAAKpH,KAAK2rB,SAI3B3rB,KAAKgQ,SACH4b,KACE9lB,GAAI,EACJ+lB,QAAS,MAEXC,KACEhmB,GAAI,EACJ+lB,QAAS,OAIb7rB,KAAK0rB,WACHE,KACE9lB,GAAI,EACJ0R,MAAO,EACPxH,WACAxW,KAAM,QACN2yB,MAAO,iBAETL,KACEhmB,GAAI,EACJ0R,MAAO,EACPxH,WACAxW,KAAM,QACN2yB,MAAO,kBAIXnsB,KAAKupB,UAAW,GAUlB+B,EAAoBnrB,UAAUuqB,MAAQ,WACpC1qB,KAAK2b,QAaP2P,EAAoBnrB,UAAUzH,OAAS,SAAS0zB,EAAQP,EAASQ,GAC/D,OAAQA,GACN,IAAK,MACER,EAAQ7b,QAAQoc,EAAOtmB,MAC1B+lB,EAAQ7b,QAAQoc,EAAOtmB,IAAMsmB,EAC7BA,EAAOP,QAAUA,EAAQryB,KACzBqyB,EAAQrU,QAEV,MACF,KAAK,SACCqU,EAAQ7b,QAAQoc,EAAOtmB,YAClB+lB,GAAQ7b,QAAQoc,EAAOtmB,IAC9BsmB,EAAOP,QAAU,KACjBA,EAAQrU,WAehB8T,EAAoBnrB,UAAUnG,QAAU,WACtC,GAAIsC,GAAK0D,KAAK9B,UAAU5F,IAAI,MAExByY,EAAS/Q,KAAK2qB,WAChBC,QAAS5qB,KAAKkqB,eAGZngB,EAAK/J,KACLxD,EAAkB,WACpBuN,EAAGwf,UAAW,GAEZ9sB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKyS,EAMtB,OALAvW,GAAQmC,KACNH,EACAC,GAGKjC,GAUT8wB,EAAoBnrB,UAAU+rB,eAAiB,WAC7C,GAAII,GAAUtsB,KAAAA,UAAY4rB,IAAII,OAAShsB,KAAKwrB,MAAQ,EAAI,EACpDe,EAAUvsB,KAAAA,UAAY8rB,IAAIE,OAAShsB,KAAKwrB,MAAQ,EAAI,EAEpDgB,EAAWxsB,KAAK0rB,UAAUE,IAAIpU,MAAQ8U,EACtCG,EAAWzsB,KAAK0rB,UAAUI,IAAItU,MAAQ+U,CAE1C,OAAOC,GAAWC,GAMpBt1B,EAAQC,OAAOA,GAAQyd,UAAU,sBAAuB,WACtD,OACEC,OACE6V,UAAW,iCAEb5V,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClBjZ,WAAYuvB,EACZtvB,aAAc,gCACdtC,YAAa,qDAejB,IAAIgzB,GAA0B,SAASxX,EAAOC,EAASC,EAAOlX,GAC5D8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAKuZ,SAAWvZ,KAAKmV,SAASmG,KAAK,SAGrCoR,GAAwBxsB,SAAW,SAAS,WAAW,SAAS,aAOhEwsB,EAAwBvsB,UAAU6rB,KAAO,KAGzCU,EAAwBvsB,UAAUwrB,SAGlCe,EAAwBvsB,UAAUqrB,MAAQ,IAG1CkB,EAAwBvsB,UAAUsrB,MAAQ,IAG1CiB,EAAwBvsB,UAAUwsB,MAAO,EAGzCD,EAAwBvsB,UAAUysB,SAAU,EAG5CF,EAAwBvsB,UAAU0sB,KAAO,OAGzCH,EAAwBvsB,UAAU2sB,MAAQ,QAG1CJ,EAAwBvsB,UAAU4sB,UAAY,IAa9CL,EAAwBvsB,UAAUwV,QAAU,WAC1C,GAAIhS,GAAY3D,KAAK9B,UAAU5F,IAAI,aAC/B2gB,EAAWjZ,KAAK9B,UAAU5F,IAAI,YAE9ByR,EAAK/J,IAETA,MAAK2rB,QAEDvuB,MAAO4C,KAAKwrB,MACZwB,QAAOhtB,KAAK8sB,QAGZ1vB,MAAO4C,KAAKyrB,MACZuB,QAAOhtB,KAAK6sB,OAIZ7sB,KAAK+sB,YAAc/sB,KAAKwrB,QAC1BxrB,KAAK2rB,MAAM,GAAX3rB,SAAsBA,KAAK6sB,KAC3B7sB,KAAK2rB,MAAM,GAAX3rB,SAAsBA,KAAK8sB,OAG7B/iB,EAAGkjB,MAAQljB,EAAGmjB,UAEd,IAAIC,GAAmB,WACrB,GAAIC,GAAgB,SAASC,GAC3B,MAAIA,GAAKjwB,QAAU2M,EAAGkjB,MAAM7vB,WAC1BiwB,EAAAA,SAAatjB,EAAG+iB,YAIlBO,EAAAA,SAAatjB,EAAG8iB,MAGlB11B,GAAQ+B,QAAQ6Q,EAAG4hB,MAAOyB,IAGxBE,EAAqB,SAASC,GAC5BA,IACFxjB,EAAGlL,SAASmtB,KAAMjiB,EAAGkjB,MAAM7vB,QAC3B6b,EAASkU,EAAkB,KAC3BpjB,EAAG6iB,SAAU,IAIbY,EAAuB,WACzB,MAAOzjB,GAAG4iB,MAGRc,EAAqB,SAASC,EAASC,GACrCD,IAAYC,IACd5jB,EAAGkjB,MAAQljB,EAAGmjB,aAIdU,EAAuB,WACzB,MAAO7jB,GAAGiiB,MAGR6B,EAAqB,WACvB9jB,EAAG+jB,UAAU9B,KAAMjiB,EAAGkjB,MAAM7vB,QAC5B2M,EAAG6iB,SAAU,GAGXmB,EAAwB,WAC1BhkB,EAAGmL,OAAO1C,WAAWqb,GAGvB7tB,MAAKguB,QAAQhC,KAAMjiB,EAAGkjB,MAAM7vB,QAExBuG,EAAUN,mBACZrD,KAAKuZ,SAASmB,GACZ/W,EAAUN,kBACV0qB,GAIJ/tB,KAAKiuB,aAAejuB,KAAKkV,OAAO5V,OAAOkuB,EAAsBF,GAC7DttB,KAAKkuB,aAAeluB,KAAKkV,OAAO5V,OAAOsuB,EAAsBH,IAU/Df,EAAwBvsB,UAAU6W,WAAa,WAC7C,GAAIrT,GAAY3D,KAAK9B,UAAU5F,IAAI,YAEnC0H,MAAKuZ,SAASuB,IAAInX,EAAUN,mBAC5BrD,KAAKkuB,eACLluB,KAAKiuB,gBAWPvB,EAAwBvsB,UAAU+sB,SAAW,WAC3C,GAAIiB,GAAUnuB,KAAK9B,UAAU5F,IAAI,WAC7BkO,EAASxG,KAAK9B,UAAU5F,IAAI,UAC5B81B,EAAS5nB,EAAOY,KAAKpH,KAAK2rB,MAE9B,IAAkB,OAAd3rB,KAAKgsB,KACP,MAAOoC,EAGT,IAAIC,GAAWF,EAAQ,UACrBnuB,KAAK2rB,OAEHvuB,MAAO4C,KAAKgsB,MAIhB,OAAwB,KAApBqC,EAASjpB,QACXsf,QAAQC,KAAK,kDACNyJ,GAGFC,EAAS,IAMlBl3B,EAAQC,OAAOA,GAAQyd,UAAU,0BAA2B,WAC1D,OACEC,OACEkX,KAAM,gCACNW,KAAM,gCACNqB,OAAQ,iCACRnvB,QAAS,kCACTivB,SAAU,mCACVf,UAAW,sCAEbhY,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClBjZ,WAAY2wB,EACZ1wB,aAAc,oCACdtC,YAAa,4DAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIm3B,GAAW,SAASpZ,EAAQE,EAAQD,EAAUjX,GAChD,GAAIqT,GAAOrT,EAAU5F,IAAI,aACrBgC,EAAO4D,EAAU5F,IAAI,OAEzB0H,MAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAK4S,KAAOtY,EAAKgX,cAAcC,GAGjC+c,GAASpuB,SAAW,SAAU,SAAU,WAAY,aASpDouB,EAASnuB,UAAUyS,KAAO,KAK1B0b,EAASnuB,UAAUouB,SAAU,EAG7BD,EAASnuB,UAAUquB,SAAU,EAG7BF,EAASnuB,UAAUsuB,SAAU,EAG7BH,EAASnuB,UAAUopB,UAAW,EAG9B+E,EAASnuB,UAAUuuB,WAAa,EAGhCJ,EAASnuB,UAAUwuB,eAAiB,EAGpCL,EAASnuB,UAAUyuB,eAAiB,EAKpCN,EAASnuB,UAAU0uB,IAAM,GAGzBP,EAASnuB,UAAU2uB,KAAO,EAG1BR,EAASnuB,UAAU4uB,KAAO,EAG1BT,EAASnuB,UAAU6uB,SAAW,EAO9BV,EAASnuB,UAAUqG,QAAS,EAQ5B8nB,EAASnuB,UAAU9C,SAAU,EAa7BixB,EAASnuB,UAAUwV,QAAU,WAC3B3V,KAAK2b,QAUP2S,EAASnuB,UAAU+pB,WAAa,WAC9B,OACEtX,KAAM5S,KAAK4S,KACX6E,MACEgX,QAASzuB,KAAKyuB,QACdG,eAAgB5uB,KAAK4uB,gBAEvB3C,YAAajsB,KAAKksB,mBAWtBoC,EAASnuB,UAAUmlB,SAAW,WAC5B,MAAkB,QAAdtlB,KAAK4S,OAID5S,KAAK4S,KAAKxB,UAUpBkd,EAASnuB,UAAUqqB,WAAa,WAC9B,GAAIlwB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK+V,YAINrQ,KAAKslB,cAILtlB,KAAKupB,WAILvpB,KAAK3C,QACA2C,KAAKwuB,UAGTxuB,KAAK4uB,mBAcZN,EAASnuB,UAAUwb,KAAO,WACxB3b,KAAKivB,eACLjvB,KAAKkvB,cACLlvB,KAAKmvB,YAEAnvB,KAAK3C,SACR2C,KAAKyiB,SAWT6L,EAASnuB,UAAUuqB,MAAQ,WACzB1qB,KAAK2b,QAWP2S,EAASnuB,UAAUsiB,MAAQ,SAAS2M,GAClC,GAAIpvB,KAAK3C,QAAS,CAChB,GAAIgyB,GAAYrvB,KAAK9B,UAAU5F,IAAI,YAEnC0H,MAAKsvB,UAAYF,GAAS,CAE1B,IAAIrlB,GAAK/J,KACL4F,EAAM5F,KAAKuvB,SAASnqB,MACxBpF,MAAKwvB,YAAcH,EACjB,WAEE,GAAI5c,GAAO1I,EAAGwlB,SAASxlB,EAAGulB,UAC1BvlB,GAAGrR,OAAO+Z,GAAK,GAEf1I,EAAGulB,YACCvlB,EAAGulB,YAAY1pB,GACjBmE,EAAG0lB,QAIO,IAAdzvB,KAAKgvB,SACLppB,EAAM5F,KAAKsvB,WAIftvB,KAAKuuB,SAAU,GAWjBD,EAASnuB,UAAUsvB,KAAO,WACxB,GAAIzvB,KAAK3C,SAAW2C,KAAKwvB,YAAa,CACpC,GAAIH,GAAYrvB,KAAK9B,UAAU5F,IAAI,YACnC+2B,GAAUK,OAAO1vB,KAAKwvB,aAGxBxvB,KAAKwuB,SAAU,GAWjBF,EAASnuB,UAAUnG,QAAU,WAC3B,GAAIsC,GAAK0D,KAAK9B,UAAU5F,IAAI,MACxByY,EAAS/Q,KAAK2qB,WAChBC,QAAS5qB,KAAKkqB,eAGZyF,EAAc,SAASjb,GACzBA,EAAKkb,YAAa,GAGhB7lB,EAAK/J,KACLxD,EAAkB,WACpBrF,EAAQ+B,QAAQ6Q,EAAG8lB,WAAYF,GAC/B5lB,EAAGwf,UAAW,GAEZ9sB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKyS,EAMtB,OALAvW,GAAQmC,KACNH,EACAC,GAGKjC,GAUT8zB,EAASnuB,UAAU+rB,eAAiB,WAClC,MAAIlsB,MAAKyuB,QACA,EAGFzuB,KAAK4uB,eAAiB,GAa/BN,EAASnuB,UAAU2vB,OAAS,SAASC,EAAQC,GAC3C,GAAIZ,GAAQpvB,KAAK6vB,WAAW3wB,QAAQ6wB,EAEhCC,IACEZ,EAAM,IACRpvB,KAAK6vB,WAAW33B,KAAK63B,GACrB/vB,KAAK4uB,kBAGPmB,EAAOE,UAAW,GAEdb,GAAO,IACTpvB,KAAK6vB,WAAWK,OAAOd,EAAM,GAC7BW,EAAOE,UAAW,EAClBjwB,KAAK4uB,kBAIL5uB,KAAKmwB,OAAOJ,KACd/vB,KAAKyuB,SAAU,EAGjB,IAAI2B,GAAQpwB,KAAK0uB,WACb2B,EAAYrwB,KAAK4uB,cACrB5uB,MAAK2uB,eAAiByB,EAAQC,GAWhC/B,EAASnuB,UAAUmwB,QAAU,SAASP,GACpC,MAAOA,GAAOQ,IAAM,IAAMR,EAAOS,KAWnClC,EAASnuB,UAAUgwB,OAAS,SAASJ,GACnC,MAAO54B,GAAQs5B,OAAOzwB,KAAK0wB,KAAKX,IAUlCzB,EAASnuB,UAAU8uB,aAAe,WAChCjvB,KAAK6vB,cAEL7vB,KAAKyuB,SAAU,EACfzuB,KAAKuuB,SAAU,EACfvuB,KAAKwuB,SAAU,EACfxuB,KAAKupB,UAAW,EAEhBvpB,KAAK4uB,eAAiB,EACtB5uB,KAAK2uB,eAAiB,EACtB3uB,KAAK0uB,WAAa1uB,KAAK8uB,KAAO9uB,KAAK+uB,MAUrCT,EAASnuB,UAAU+uB,YAAc,WAC/BlvB,KAAK2wB,UACL3wB,KAAKuvB,WAEL,KAAK,GAAIpqB,GAAE,EAAGA,EAAEnF,KAAK8uB,KAAM3pB,IAAK,CAG9B,IAAK,GADDyrB,MACKC,EAAE,EAAGA,EAAE7wB,KAAK+uB,KAAM8B,IAAM,CAC/B,GAAIl2B,IACF41B,IAAKprB,EAAE,EACPqrB,IAAKK,EAAE,EAKT,IAFAD,EAAQ14B,KAAKyC,GAETqF,KAAK3C,QACP,GAAK2C,KAAKwG,OAEH,CACL,GAAIA,GAASxG,KAAK9B,UAAU5F,IAAI,SAChCkO,GAAOtO,KAAK8H,KAAKuvB,SAAS50B,OAH1BqF,MAAKuvB,SAASr3B,KAAKyC,GAQzBqF,KAAK2wB,OAAOz4B,KAAK04B,KAWrBtC,EAASnuB,UAAUgvB,UAAY,WAC7B,GAAI3oB,GAASxG,KAAK9B,UAAU5F,IAAI,UAE5Bi4B,EAAM/pB,EAAOJ,QAAQ,EAAEpG,KAAK8uB,KAAK,GACjC0B,EAAMhqB,EAAOJ,QAAQ,EAAEpG,KAAK+uB,KAAK,EAErC/uB,MAAK0wB,KAAO1wB,KAAK2wB,OAAOJ,GAAKC,IAM/Br5B,EAAQC,OAAOA,GAAQyd,UAAU,WAAW,WAC1C,OACEC,OACE+Z,IAAK,gBACLC,KAAM,iBACNC,KAAM,iBACNvoB,OAAQ,mBACRnJ,QAAS,oBACT2xB,SAAU,qBACVrE,UAAW,sBAEb5V,SAAU,IACVoB,YAAY,EACZpa,WAAYuyB,EACZtZ,kBAAkB,EAClBhZ,aAAc,qBACdtC,YAAa,0CAejB,IAAIo3B,GAAe,YAQnBA,GAAa3wB,UAAU4wB,MAAQ,KAG/BD,EAAa3wB,UAAUiR,UAAW,EAGlC0f,EAAa3wB,UAAU6wB,YAAa,EAGpCF,EAAa3wB,UAAU8wB,aAAc,EAerCH,EAAa3wB,UAAU2vB,OAAS,YAC1B9vB,KAAKgxB,YAAehxB,KAAKixB,cAI7BjxB,KAAKoR,UAAYpR,KAAKoR;AAEtBpR,KAAKkxB,UACHH,MAAM/wB,KAAK+wB,MACXj4B,MAAMkH,KAAKoR,aAKfja,EAAQC,OAAOA,GAAQyd,UAAU,eAAgB,WAC/C,OACEC,OACEic,MAAM,gBACNG,SAAS,wBACT9f,SAAS,yBACT4f,WAAW,2BACXC,YAAY,6BAEdlc,SAAU,IACVoB,YAAY,EACZpa,WAAY+0B,EACZ9b,kBAAkB,EAClBhZ,aAAc,yBACdtC,YAAa,iDAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIg6B,GAAgB,SAASjc,EAAQC,EAAUC,EAAQlX,GACrD,GAAIqT,GAAOrT,EAAU5F,IAAI,kBACrBgC,EAAO4D,EAAU5F,IAAI,OAEzB0H,MAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAK4S,KAAOtY,EAAKgX,cAAcC,GAC/BvR,KAAK+P,MAAQzV,EAAKmX,mBAGpB0f,GAAcjxB,SAAW,SAAS,WAAW,SAAU,aASvDixB,EAAchxB,UAAUyS,KAAO,KAK/Bue,EAAchxB,UAAUuX,OAAS,KAGjCyZ,EAAchxB,UAAU4P,OAAQ,EAGhCohB,EAAchxB,UAAUopB,UAAW,EAcnC4H,EAAchxB,UAAUwV,QAAU,WAChC3V,KAAK2b,QAUPwV,EAAchxB,UAAU+pB,WAAa,WACnC,GAAI5vB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAE9B,QACEsa,KAAM5S,KAAK4S,KACX6E,MACE1H,MAAOzV,EAAKyV,MACZ2H,OAAQ1X,KAAK0X,UAYnByZ,EAAchxB,UAAUmlB,SAAW,WACjC,MAAkB,QAAdtlB,KAAK4S,OAID5S,KAAK4S,KAAKxB,UAUpB+f,EAAchxB,UAAUqqB,WAAa,WACnC,GAAIlwB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK+V,YAINrQ,KAAKslB,cAILtlB,KAAKupB,YAIJvpB,KAAK0X,UAcZyZ,EAAchxB,UAAUwb,KAAO,WAC7B3b,KAAKupB,UAAW,GAUlB4H,EAAchxB,UAAUuqB,MAAQ,WAC9B1qB,KAAK2b,QAYPwV,EAAchxB,UAAUzH,OAAS,SAASgf,EAAQ9C,GAChD5U,KAAK0X,OAAS9C,EAAW8C,EAAS,MAWpCyZ,EAAchxB,UAAUnG,QAAU,WAChC,GAAIsC,GAAK0D,KAAK9B,UAAU5F,IAAI,MAGxByY,EAAS/Q,KAAK2qB,WAChBC,QAAS5qB,KAAKkqB,eAGZngB,EAAK/J,KACLxD,EAAkB,WACpBuN,EAAGwf,UAAW,GAEZ9sB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKyS,EAMtB,OALAvW,GAAQmC,KACNH,EACAC,GAGKjC,GAMTrD,EAAQC,OAAOA,GAAQyd,UAAU,gBAAiB,WAChD,OACEC,OACE6V,UAAW,2BAEb5V,SAAU,IACVoB,YAAY,EACZpa,WAAYo1B,EACZnc,kBAAkB,EAClBhZ,aAAc,0BACdtC,YAAa,iDAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIi6B,GAAwB,SAASlc,EAAQC,EAAUC,EAAQlX,GAC7D,GAAIqT,GAAOrT,EAAU5F,IAAI,2BACrBgC,EAAO4D,EAAU5F,IAAI,OAEzB0H,MAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAK4S,KAAOtY,EAAKgX,cAAcC,GAC/BvR,KAAK+P,MAAQzV,EAAKmX,mBAGpB2f,GAAsBlxB,SAAW,SAAS,WAAW,SAAU,aAS/DkxB,EAAsBjxB,UAAUyS,KAAO,KAKvCwe,EAAsBjxB,UAAUuX,OAAS,KAGzC0Z,EAAsBjxB,UAAU4P,OAAQ,EAGxCqhB,EAAsBjxB,UAAUopB,UAAW,EAc3C6H,EAAsBjxB,UAAUwV,QAAU,WACxC3V,KAAK2b,QAUPyV,EAAsBjxB,UAAU+pB,WAAa,WAC3C,GAAI5vB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAE9B,QACEsa,KAAM5S,KAAK4S,KACX6E,MACE1H,MAAOzV,EAAKyV,MACZ2H,OAAQ1X,KAAK0X,UAYnB0Z,EAAsBjxB,UAAUmlB,SAAW,WACzC,MAAkB,QAAdtlB,KAAK4S,OAID5S,KAAK4S,KAAKxB,UAUpBggB,EAAsBjxB,UAAUqqB,WAAa,WAC3C,GAAIlwB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK+V,YAINrQ,KAAKslB,cAILtlB,KAAKupB,YAIJvpB,KAAK0X,UAcZ0Z,EAAsBjxB,UAAUwb,KAAO,WACrC3b,KAAKupB,UAAW,GAUlB6H,EAAsBjxB,UAAUuqB,MAAQ,WACtC1qB,KAAK2b,QAYPyV,EAAsBjxB,UAAUzH,OAAS,SAASgf,EAAQ9C,GACxD5U,KAAK0X,OAAS9C,EAAW8C,EAAS,MAWpC0Z,EAAsBjxB,UAAUnG,QAAU,WACxC,GAAIsC,GAAK0D,KAAK9B,UAAU5F,IAAI,MACxByY,EAAS/Q,KAAK2qB,WAChBC,QAAS5qB,KAAKkqB,eAGZngB,EAAK/J,KACLxD,EAAkB,WACpBuN,EAAGwf,UAAW,GAEZ9sB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKyS,EAMtB,OALAvW,GAAQmC,KACNH,EACAC,GAGKjC,GAMTrD,EAAQC,OAAOA,GAAQyd,UAAU,wBAAyB,WACxD,OACEC,OACE6V,UAAW,mCAEb5V,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClBjZ,WAAYq1B,EACZp1B,aAAc,kCACdtC,YAAa,0DAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIk6B,GAAc,SAASnc,EAAQqW,EAASnW,EAAQlX,GAClD,GAAIqT,GAAOrT,EAAU5F,IAAI,gBACrBgC,EAAO4D,EAAU5F,IAAI,OAEzB0H,MAAK9B,UAAYA,EACjB8B,KAAK4S,KAAOtY,EAAKgX,cAAcC,GAGjC8f,GAAYnxB,SAAW,SAAS,WAAW,SAAU,aAKrDmxB,EAAYlxB,UAAUyS,KAAO,KAK7Bye,EAAYlxB,UAAUopB,UAAW,EAGjC8H,EAAYlxB,UAAUmxB,SAAW,KAGjCD,EAAYlxB,UAAUoxB,SAAW,KAajCF,EAAYlxB,UAAUwV,QAAU,WAC9B3V,KAAK2b,QAUP0V,EAAYlxB,UAAU+pB,WAAa,WACjC,OACEtX,KAAM5S,KAAK4S,KACX6E,MACE6Z,SAAUtxB,KAAKsxB,SACfC,SAAUvxB,KAAKuxB,YAYrBF,EAAYlxB,UAAUmlB,SAAW,WAC/B,MAAkB,QAAdtlB,KAAK4S,OAID5S,KAAK4S,KAAKxB,UAUpBigB,EAAYlxB,UAAUqqB,WAAa,WACjC,GAAIlwB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK+V,YAINrQ,KAAKslB,cAILtlB,KAAKupB,WAIa,OAAlBvpB,KAAKsxB,UAIa,OAAlBtxB,KAAKuxB,aAcXF,EAAYlxB,UAAUwb,KAAO,WAC3B3b,KAAKsxB,SAAW,KAChBtxB,KAAKuxB,SAAW,KAChBvxB,KAAKupB,UAAW,GAUlB8H,EAAYlxB,UAAUuqB,MAAQ,WAC5B1qB,KAAK2b,QAYP0V,EAAYlxB,UAAUzH,OAAS,SAAS84B,EAAS14B,GAC/CkH,KAAKwxB,GAAW14B,GAWlBu4B,EAAYlxB,UAAUnG,QAAU,WAC9B,GAAIsC,GAAK0D,KAAK9B,UAAU5F,IAAI,MAExByY,EAAS/Q,KAAK2qB,WAChBC,QAAS5qB,KAAKkqB,eAGZngB,EAAK/J,KACLxD,EAAkB,WACpBuN,EAAGwf,UAAW,GAEZ9sB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKyS,EAMtB,OALAvW,GAAQmC,KACNH,EACAC,GAGKjC,GAMTrD,EAAQC,OAAOA,GAAQyd,UAAU,cAAe,WAC9C,OACEC,OACE6V,UAAW,yBAEb5V,SAAU,IACVoB,YAAY,EACZpa,WAAYs1B,EACZrc,kBAAkB,EAClBhZ,aAAc,wBACdtC,YAAa,+CAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIs6B,GAAoB,SAASvc,EAAQC,EAAUC,EAAQlX,GACzD,GAAIqT,GAAOrT,EAAU5F,IAAI,sBAEzB0H,MAAKoV,OAASA,EACdpV,KAAKkV,OAASA,EACdlV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAK0xB,OAAQ,EAEb1xB,KAAK1F,KAAO0F,KAAK9B,UAAU5F,IAAI,QAC/B0H,KAAK4S,KAAO5S,KAAK1F,KAAKgX,cAAcC,GACpCvR,KAAK+Q,OAAS/Q,KAAK1F,KAAKkX,iBAAiBD,GAEzCvR,KAAKpC,QAAUoC,KAAK9B,UAAU5F,IAAI,WAAWwF,WAC7CkC,KAAK2xB,YAAc,yCAGrBF,GAAkBvxB,SAAW,SAAS,WAAW,SAAU,aAK3DuxB,EAAkBtxB,UAAU7F,KAAO,KAGnCm3B,EAAkBtxB,UAAUyS,KAAO,KAGnC6e,EAAkBtxB,UAAU4Q,OAAS,KAKrC0gB,EAAkBtxB,UAAUyxB,KAAO,EAGnCH,EAAkBtxB,UAAUiwB,MAAQ,EAGpCqB,EAAkBtxB,UAAU0xB,KAAO,KAGnCJ,EAAkBtxB,UAAU4pB,OAAS,KAGrC0H,EAAkBtxB,UAAU2xB,eAAiB,KAG7CL,EAAkBtxB,UAAUopB,UAAW,EAKvCkI,EAAkBtxB,UAAU4xB,KAAO,KAGnCN,EAAkBtxB,UAAU6xB,UAAY,EAGxCP,EAAkBtxB,UAAU8xB,UAAY,IAaxCR,EAAkBtxB,UAAUwV,QAAU,WACpC3V,KAAK2b,QAUP8V,EAAkBtxB,UAAU+pB,WAAa,WACvC,GAAIU,IACFhY,KAAM5S,KAAK4S,KACX6E,MACEma,KAAM5xB,KAAK4xB,KACXC,KAAM7xB,KAAK6xB,KACXzB,MAAOpwB,KAAKowB,MACZrG,OAAQ/pB,KAAK+pB,OACb+H,eAAgB9xB,KAAK8xB,gBAEvBI,UAAmC,OAAxBlyB,KAAK8xB,eAUlB,OAPoB,QAAhB9xB,KAAK+Q,SACP6Z,EAAUzzB,EAAQ8U,OAChBjM,KAAK+Q,OACL6Z,IAIGA,GAUT6G,EAAkBtxB,UAAUmlB,SAAW,WACrC,MAAkB,QAAdtlB,KAAK4S,OAQL5S,KAAK4S,KAAKxB,SACLpR,KAAK0xB,OAKd1xB,KAAKpC,QAAQwL,WACXpJ,KAAK2xB,aAGP3xB,KAAK0xB,OAAQ,GACN,KAUTD,EAAkBtxB,UAAUqqB,WAAa,WACvC,GAAIlwB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK+V,YAINrQ,KAAK+xB,KAAKlL,YAIV7mB,KAAKslB,aAILtlB,KAAKupB,YAcXkI,EAAkBtxB,UAAUwb,KAAO,WACjC,GAAoB,OAAhB3b,KAAK+Q,OAAiB,CACxB,GAAI0G,GAAOzX,KAAK+Q,OAAO0G,KAGnB9E,EAAY3S,KAAKpC,QAAQG,QAAQiC,KAAK2xB,YACtCx6B,GAAQg7B,SAASxf,KACnB3S,KAAK0xB,MAAQ/e,GAAa3S,KAAK4S,KAAKD,WAKtC3S,KAAK+pB,OAAStS,EAAKsS,OACnB/pB,KAAKowB,MAAQ3Y,EAAK2Y,MAClBpwB,KAAK6xB,KAAOpa,EAAKoa,KACjB7xB,KAAK4xB,KAAOna,EAAKma,KAGnB5xB,KAAKupB,UAAW,GAUlBkI,EAAkBtxB,UAAUuqB,MAAQ,WAClC1qB,KAAK2b,QAUP8V,EAAkBtxB,UAAUzH,OAAS,WAKnC,GAJIsH,KAAK4xB,KAAO5xB,KAAKowB,OACnBpwB,KAAK4xB,OAGF5xB,KAAKwqB,aAAV,CAIA,GAAIzgB,GAAK/J,KACLxD,EAAkB,aAClBC,EAAkB,WACpBsN,EAAG6nB,OAGL5xB,MAAKhG,UAAU2C,KACbH,EACAC,KAYJg1B,EAAkBtxB,UAAUnG,QAAU,WACpC,GAAI6H,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClC4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAC1BgE,EAAK0D,KAAK9B,UAAU5F,IAAI,MAExBgN,EAA2B,OAAhBtF,KAAK+Q,OAClB/Q,KAAK2qB,UACL3qB,KAAKmrB,SAEHP,EAAU5qB,KAAKkqB,aACfnZ,EAASzL,GACXslB,QAASA,GAGPA,GAAQsH,YACVlyB,KAAK0xB,OAAQ,EAGf,IAAI3nB,GAAK/J,KACLxD,EAAkB,SAASuU,GAC7B,GAAIA,EAAOmhB,UAAW,CACpB,GAAInoB,EAAG6nB,KAAO7nB,EAAGqmB,MAAO,CACtB,GAAIruB,GAAU7H,EAAK5B,IAAI,4BACvBuJ,GAAagB,QAAQd,GAQvB,MALAgI,GAAGgH,OAASA,MACZhH,GAAGnM,QAAQuL,QACTY,EAAG4nB,YACH5nB,EAAG6I,KAAKD,WAKZ5I,EAAGwf,UAAW,GAGZ9sB,EAAkB,WACpBuD,KAAK0xB,OAAQ,GAGXl3B,EAAU8B,EAAGgC,KAAKyS,EAMtB,OALAvW,GAAQmC,KACNH,EACAC,GAGKjC,GAUTi3B,EAAkBtxB,UAAUiyB,cAAgB,WAC1C,MAAOpyB,MAAK8xB,eAAiB9xB,KAAK+pB,QAMpC5yB,EAAQC,OAAOA,GAAQyd,UAAU,oBAAqB,WACpD,OACEC,OACEqW,SAAU,6BACVR,UAAW,+BAEb5V,SAAU,IACVoB,YAAY,EACZpa,WAAY01B,EACZzc,kBAAkB,EAClBhZ,aAAc,8BACdtC,YAAa,sDAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAaA,IAAIk7B,GAAqB,SAASnd,EAAQqW,EAASnW,EAAQlX,GACzD,GAAIqT,GAAOrT,EAAU5F,IAAI,uBAEzB0H,MAAK9B,UAAYA,EAEjB8B,KAAK1F,KAAO0F,KAAK9B,UAAU5F,IAAI,QAC/B0H,KAAK4S,KAAO5S,KAAK1F,KAAKgX,cAAcC,GACpCvR,KAAK+Q,OAAS/Q,KAAK1F,KAAKkX,iBAAiBD,GAG3C8gB,GAAmBnyB,SAAW,SAAS,WAAW,SAAU,aAK5DmyB,EAAmBlyB,UAAU7F,KAAO,KAGpC+3B,EAAmBlyB,UAAUyS,KAAO,KAGpCyf,EAAmBlyB,UAAU4Q,OAAS,KAKtCshB,EAAmBlyB,UAAUmyB,QAC3BC,aAAe,EACfC,aAAe,GAIjBH,EAAmBlyB,UAAUopB,UAAW,EAaxC8I,EAAmBlyB,UAAUwV,QAAU,WACrC3V,KAAK2b,QAUP0W,EAAmBlyB,UAAU+pB,WAAa,WACxC,GAAIU,IACFhY,KAAM5S,KAAK4S,KACX6E,MACE6a,OAAQtyB,KAAKsyB,QAEfJ,UAAWlyB,KAAKyyB,aAUlB,OAPoB,QAAhBzyB,KAAK+Q,SACP6Z,EAAUzzB,EAAQ8U,OAChBjM,KAAK+Q,OACL6Z,IAIGA,GAUTyH,EAAmBlyB,UAAUmlB,SAAW,WACtC,MAAkB,QAAdtlB,KAAK4S,OAID5S,KAAK4S,KAAKxB,UAUpBihB,EAAmBlyB,UAAUqqB,WAAa,WACxC,GAAIlwB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK+V,YAINrQ,KAAKslB,aAILtlB,KAAKupB,WAcX8I,EAAmBlyB,UAAUwb,KAAO,WAClC,GAAoB,OAAhB3b,KAAK+Q,OAAiB,CACxB,GAAI0G,GAAOzX,KAAK+Q,OAAO0G,IACvBzX,MAAKsyB,OAAS7a,EAAK6a,OAGrBtyB,KAAKupB,UAAW,GAUlB8I,EAAmBlyB,UAAUuqB,MAAQ,WACnC1qB,KAAK2b,QAUP0W,EAAmBlyB,UAAUzH,OAAS,SAASoN,GAC7C,IAAI9F,KAAKsyB,OAAOxsB,KAIhB9F,KAAKsyB,OAAOxsB,IAAM,EACb9F,KAAKwqB,cAAV,CAIA,GAAIzgB,GAAK/J,KACLxD,EAAkB,aAClBC,EAAkB,WACpBsN,EAAGuoB,OAAOxsB,IAAM,EAGlB9F,MAAKhG,UAAU2C,KACbH,EACAC,KAYJ41B,EAAmBlyB,UAAUnG,QAAU,WACrC,GAAIsC,GAAK0D,KAAK9B,UAAU5F,IAAI,MAExBgN,EAA2B,OAAhBtF,KAAK+Q,OAClB/Q,KAAK2qB,UACL3qB,KAAKmrB,SAEHP,EAAU5qB,KAAKkqB,aACfnZ,EAASzL,GACXslB,QAASA,IAGP7gB,EAAK/J,KACLxD,EAAkB,SAASuU,GAC7B,MAAIA,GAAOmhB,eACTnoB,EAAGgH,OAASA,QAIdhH,EAAGwf,UAAW,IAEZ9sB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKyS,EAMtB,OALAvW,GAAQmC,KACNH,EACAC,GAGKjC,GAUT63B,EAAmBlyB,UAAUsyB,WAAa,WACxC,IAAK,GAAI3sB,KAAM9F,MAAKsyB,OAClB,IAAKtyB,KAAKsyB,OAAOxsB,GACf,OAAO,CAIX,QAAO,GAMT3O,EAAQC,OAAOA,GAAQyd,UAAU,qBAAsB,WACrD,OACEC,OACEqW,SAAU,8BACVR,UAAW,gCAEb5V,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClBjZ,WAAYs2B,EACZr2B,aAAc,+BACdtC,YAAa,uDAIhBmG,eAAgB1I,SAInB,SAAUC,EAAQD,GAChB,YAaA,IAAIu7B,GAAsB,SAASxd,EAAQqW,EAASnW,EAAQlX,GAC1D,GAAIqT,GAAOrT,EAAU5F,IAAI,wBACrBgC,EAAO4D,EAAU5F,IAAI,OAEzB0H,MAAK9B,UAAYA,EACjB8B,KAAK4S,KAAOtY,EAAKgX,cAAcC,GAC/BvR,KAAK+Q,OAASzW,EAAKkX,iBAAiBD,GAEpCvR,KAAK8e,MAAQ,wBAA0B5J,EAAOI,IAE9CtV,KAAKwvB,YAAc,KACnBxvB,KAAK2yB,YAAc3yB,KAAK2yB,YAAY3sB,KAAKhG,MAG3C0yB,GAAoBxyB,SAAW,SAAS,WAAW,SAAU,aAK7DwyB,EAAoBvyB,UAAUoR,KAAO,KAGrCmhB,EAAoBvyB,UAAUyS,KAAO,KAGrC8f,EAAoBvyB,UAAU4Q,OAAS,KAKvC2hB,EAAoBvyB,UAAUwI,KAAO,KAGrC+pB,EAAoBvyB,UAAUqX,MAAQ,EAGtCkb,EAAoBvyB,UAAUiwB,MAAQ,EAGtCsC,EAAoBvyB,UAAUyyB,UAG9BF,EAAoBvyB,UAAU0yB,WAAa,KAG3CH,EAAoBvyB,UAAU2yB,WAAa,KAG3CJ,EAAoBvyB,UAAU4yB,WAAa,KAG3CL,EAAoBvyB,UAAUwS,UAAY,KAG1C+f,EAAoBvyB,UAAU6yB,UAAY,KAG1CN,EAAoBvyB,UAAUrH,MAAQ,OAGtC45B,EAAoBvyB,UAAUopB,UAAW,EAKzCmJ,EAAoBvyB,UAAU2e,MAAQ,KAGtC4T,EAAoBvyB,UAAU8yB,WAAY,EAG1CP,EAAoBvyB,UAAU+yB,iBAAmB,EAGjDR,EAAoBvyB,UAAUgzB,iBAAmB,GAajDT,EAAoBvyB,UAAUwV,QAAU,WACtC3V,KAAK2b,QAUP+W,EAAoBvyB,UAAU6W,WAAa,WACzC,GAAIqY,GAAYrvB,KAAK9B,UAAU5F,IAAI,YAEV,QAArB0H,KAAKwvB,aACPH,EAAUK,OAAO1vB,KAAKwvB,cAW1BkD,EAAoBvyB,UAAU+pB,WAAa,WACzC,GAAIU,IACFhY,KAAM5S,KAAK4S,KACX6E,MACE9O,KAAM3I,KAAK2I,KACX7P,MAAOkH,KAAKlH,MACZ85B,OAAQ5yB,KAAK4yB,OACb/vB,QAAS7C,KAAKozB,cAEhBlB,UAAWlyB,KAAKyyB,aAChBxG,YAAajsB,KAAKksB,iBAUpB,OAPoB,QAAhBlsB,KAAK+Q,SACP6Z,EAAUzzB,EAAQ8U,OAChBjM,KAAK+Q,OACL6Z,IAIGA,GAUT8H,EAAoBvyB,UAAUmlB,SAAW,WACvC,MAAkB,QAAdtlB,KAAK4S,OAID5S,KAAK4S,KAAKxB,UAUpBshB,EAAoBvyB,UAAUqqB,WAAa,WACzC,GAAIlwB,GAAO0F,KAAK9B,UAAU5F,IAAI,OAC9B,SAAKgC,EAAK+V,YAINrQ,KAAKslB,eAIJtlB,KAAKizB,YAINjzB,KAAKupB,YAcXmJ,EAAoBvyB,UAAUwb,KAAO,WAEnC,GAAoB,OAAhB3b,KAAK+Q,OAAiB,CACxB,GAAI0G,GAAOzX,KAAK+Q,OAAO0G,IAGvBzX,MAAK4yB,OAASnb,EAAKmb,OACnB5yB,KAAKwX,MAAQC,EAAKmb,OAAOxtB,OAGzBpF,KAAKqzB,WAAU,GACfrzB,KAAKszB,QAAQ7b,EAAK9O,MAClB3I,KAAKuzB,SAAS9b,EAAK3e,OAGrBkH,KAAKupB,UAAW,GAUlBmJ,EAAoBvyB,UAAUuqB,MAAQ,WACpC1qB,KAAK2b,QAUP+W,EAAoBvyB,UAAUzH,OAAS,SAASqY,GAC9C,OAAQ/Q,KAAKlH,OACX,IAAK,OACHkH,KAAKuzB,SAAS,WACd,MAEF,KAAK,WACHvzB,KAAKuzB,SAAS,UACd,MAEF,KAAK,UACHvzB,KAAKwX,MAAQxX,KAAK4yB,OAAO16B,KAAK6Y,GAK7B/Q,KAAKwqB,cAIVxqB,KAAKhG,WAWP04B,EAAoBvyB,UAAUnG,QAAU,WACtC,GAAI6H,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClC4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAC1BgE,EAAK0D,KAAK9B,UAAU5F,IAAI,MAExBgN,EAA2B,OAAhBtF,KAAK+Q,OAClB/Q,KAAK2qB,UACL3qB,KAAKmrB,SAEHpa,EAASzL,GACXslB,QAAS5qB,KAAKkqB,eAGZngB,EAAK/J,KACLxD,EAAkB,SAASuU,GAC7B,GAAIhP,EAEJ,IAAIgP,EAAOmhB,UAGT,OAFAnoB,EAAGgH,OAASA,EAEJhH,EAAGjR,OACT,IAAK,OAAQ,KACb,KAAK,WAAY,KACjB,KAAK,UACH,OAAQiR,EAAGpB,MACT,IAAK,MAAO,KACZ,KAAK,QACCoB,EAAGyN,MAAQ,IACbzV,EAAU7H,EAAK5B,IACb,+CACAyR,EAAGyN,MACHzN,EAAGqmB,OAELvuB,EAAagB,QAAQd,SAa5BgI,GAAGqpB,cAINrxB,EAAU7H,EAAK5B,IAAI,2EACnBuJ,EAAagB,QAAQd,KAJrBA,EAAU7H,EAAK5B,IAAI,qFACnBuJ,EAAaG,MAAMD,IAMrBgI,EAAGwf,UAAW,GAGZ9sB,EAAkB,aAIlBjC,EAAU8B,EAAGgC,KAAKyS,EAMtB,OALAvW,GAAQmC,KACNH,EACAC,GAGKjC,GAWTk4B,EAAoBvyB,UAAUmzB,QAAU,SAAS3qB,GAC/C,OAAQA,GACN,IAAK,MACH3I,KAAKowB,MAAQ,EACbpwB,KAAK+yB,WAAa,GAClB/yB,KAAK8yB,WAAa,GAClB,MACF,KAAK,QACH9yB,KAAKowB,MAAQ,EACbpwB,KAAK+yB,WAAa,EAClB/yB,KAAK8yB,WAAa,EAClB,MACF,SACE,OAGJ9yB,KAAK2I,KAAOA,EACZ3I,KAAK6yB,WAAa7yB,KAAKowB,MAAQpwB,KAAKwX,OAWtCkb,EAAoBvyB,UAAUozB,SAAW,SAASz6B,GAChD,GAAIu2B,GAAYrvB,KAAK9B,UAAU5F,IAAI,YAEnC,QAAQQ,GACN,IAAK,OACH,KACF,KAAK,WACH,KACF,KAAK,UACH,GAAI6Z,GAAY3S,KAAK+Q,OAAO4B,SAI5B,QAHA3S,KAAK2S,UAAY6gB,OAAO9gB,KAAKC,GAC7B3S,KAAKgzB,UAAYhzB,KAAK2S,UAAU8H,QAExBza,KAAK2I,MACX,IAAK,MACH3I,KAAKgzB,UAAUve,IAAI,EAAG,QACtB,MACF,KAAK,QACHzU,KAAKgzB,UAAUve,IAAI,EAAG,SAK1BzU,KAAKwvB,YAAcH,EAAUrvB,KAAK2yB,YAAa,IAE/C,MACF,SACE,OAGJ3yB,KAAKlH,MAAQA,GAWf45B,EAAoBvyB,UAAUkzB,UAAY,SAASI,GACjDzzB,KAAKizB,UAAYQ,GAUnBf,EAAoBvyB,UAAUuzB,UAAY,WACxC,MAAuB,QAAnB1zB,KAAKgzB,YAIDhzB,KAAK2zB,QAAU3zB,KAAKgzB,WAU9BN,EAAoBvyB,UAAUizB,WAAa,WACzC,MAAOpzB,MAAK4yB,OAAOxtB,SAAWpF,KAAKowB,OAUrCsC,EAAoBvyB,UAAUyzB,gBAAkB,WAC9C,MAAO5zB,MAAKwX,MAAQ,GAWtBkb,EAAoBvyB,UAAU0zB,iBAAmB,WAC/C,GAAIrvB,GAASxE,KAAK9B,UAAU5F,IAAI,UAC5B4B,EAAO8F,KAAK9B,UAAU5F,IAAI,OAE9B,IAAuB,OAAnB0H,KAAKgzB,UACP,MAAO,EAGT,IAOI51B,GAAO02B,EAPPC,EAAa/zB,KAAKgzB,UAAUgB,KAAKh0B,KAAK2zB,QACtC9O,EAAW2O,OAAO3O,SAASkP,GAE3BE,IAAYpP,EAASqP,YACrBC,IAAYtP,EAASuP,YACrBC,IAAUxP,EAASyP,UACnBC,IAAS1P,EAAS2P,QAGlBD,GAAO,GACTn3B,EAAQm3B,EACRT,GAAQ,MAAO,SACNO,EAAQ,GACjBj3B,EAAQi3B,EACRP,GAAQ,OAAQ,UACPK,EAAU,GACnB/2B,EAAQ+2B,EACRL,GAAQ,SAAU,aAElB12B,EAAQ62B,GAAW,EAAIA,EAAU,EACjCH,GAAQ,SAAU,WAGpB,IAAIlwB,GAAgB,IAAVxG,EACR02B,EAAK,GACLA,EAAK,GAEHW,EAAOv6B,EAAK5B,IAAIsL,EAEpB,OAAOY,GAAOE,QAAQ,QAAStH,EAAOq3B,IAUxC/B,EAAoBvyB,UAAU+rB,eAAiB,WAC7C,MAAIlsB,MAAKozB,aACA,EAGF,GAUTV,EAAoBvyB,UAAUwyB,YAAc,WAC1C,GAAItD,GAAYrvB,KAAK9B,UAAU5F,IAAI,YAC9B0H,MAAK0zB,aAAgB1zB,KAAKwqB,eAI/B6E,EAAUK,OAAO1vB,KAAKwvB,aACtBxvB,KAAKwX,MAAQxX,KAAKowB,MAClBpwB,KAAKhG,YAUP04B,EAAoBvyB,UAAUsyB,WAAa,WACzC,MAAOzyB,MAAKwX,MAAQxX,KAAKowB,OAU3BsC,EAAoBvyB,UAAUwzB,KAAO,WASnC,MAAOH,WAMTr8B,EAAQC,OAAOA,GAAQyd,UAAU,sBAAuB,WACtD,OACEC,OACEqW,SAAU,+BACVR,UAAW,iCAEb5V,SAAU,IACVoB,YAAY,EACZpa,WAAY22B,EACZ1d,kBAAkB,EAClBhZ,aAAc,gCACdtC,YAAa,qDAejB,IAAIg7B,GAA0B,SAASxf,EAAOC,EAASC,EAAOlX,GAC5D8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAK20B,WACL30B,KAAK40B,YACL50B,KAAK8e,MAAQ,YAAc5J,EAAOI,IAElCtV,KAAK60B,QAAU,EACf70B,KAAK80B,QAAU,EACf90B,KAAK+0B,QAAU,EACf/0B,KAAKg1B,SAAW,EAChBh1B,KAAKi1B,SAAW,IAChBj1B,KAAKk1B,WAAa,KAElBl1B,KAAKm1B,MAAQn1B,KAAKm1B,MAAMnvB,KAAKhG,MAC7BA,KAAK2mB,QAAU3mB,KAAK2mB,QAAQ3gB,KAAKhG,MACjCA,KAAKohB,QAAUphB,KAAKohB,QAAQpb,KAAKhG,MAEjCA,KAAKmhB,QAAUhqB,EAAQgiB,QAAQrZ,QAC/BE,KAAKo1B,UAAYp1B,KAAKmV,SAASmG,KAAK,aAGtCoZ,GAAwBx0B,SAAW,SAAS,WAAW,SAAS,aAOhEw0B,EAAwBv0B,UAAUk1B,QAAU,EAG5CX,EAAwBv0B,UAAUmP,QAAU,EAG5ColB,EAAwBv0B,UAAUm1B,SAAW,EAG7CZ,EAAwBv0B,UAAUw0B,QAAU,KAG5CD,EAAwBv0B,UAAUy0B,SAAW,KAG7CF,EAAwBv0B,UAAUrH,MAAQ,OAG1C47B,EAAwBv0B,UAAUo1B,SAAU,EAG5Cb,EAAwBv0B,UAAUq1B,UAAY,EAG9Cd,EAAwBv0B,UAAUs1B,WAAaC,OAAOC,kBAGtDjB,EAAwBv0B,UAAU4yB,WAAa,GAG/C2B,EAAwBv0B,UAAU2yB,WAAa,IAG/C4B,EAAwBv0B,UAAUy1B,YAAc,IAahDlB,EAAwBv0B,UAAUwV,QAAU,WAC1C3V,KAAKmhB,QAAQzG,GAAG,SAAU1a,KAAKohB,QAE/B,IAAIrX,GAAK/J,IACTA,MAAKua,SAAWva,KAAKkV,OAAO5V,OAC1B,WACE,MAAOyK,GAAGwrB,SAEZ,SAASpzB,GACHA,GACF4H,EAAG8rB,YAaXnB,EAAwBv0B,UAAU6W,WAAa,WAC7ChX,KAAKmhB,QAAQrG,IAAI,SAAU9a,KAAKohB,SAChCphB,KAAKua,WACLva,KAAK81B,WAUPpB,EAAwBv0B,UAAUsiB,MAAQ,WAGxCziB,KAAK40B,SAAW50B,KAAK+1B,eAErB/1B,KAAKlH,MAAQ,UACbkH,KAAKm1B,SAUPT,EAAwBv0B,UAAU61B,KAAO,WACvCh2B,KAAK81B,UAEL91B,KAAKg1B,WAELh1B,KAAK20B,WACL30B,KAAKlH,MAAQ,WAEb,IAAIiY,GAAS/Q,KAAKi2B,YAClBj2B,MAAKk2B,YAAanlB,OAAQA,KAU5B2jB,EAAwBv0B,UAAUg2B,KAAO,WACvCn2B,KAAK81B,UAEL91B,KAAK+0B,UAEL/0B,KAAK20B,WACL30B,KAAKlH,MAAQ,WAEb,IAAIiY,GAAS/Q,KAAKi2B,YAClBj2B,MAAKo2B,YAAarlB,OAAQA,KAU5B2jB,EAAwBv0B,UAAU01B,OAAS,WACzC71B,KAAK81B,UAEL91B,KAAK20B,WACL30B,KAAKlH,MAAQ,WAUf47B,EAAwBv0B,UAAUuqB,MAAQ,WACxC1qB,KAAK81B,UAEL91B,KAAK60B,QAAU,EACf70B,KAAK80B,QAAU,EACf90B,KAAKi1B,SAAW,IAChBj1B,KAAKk1B,WAAa,KAElBl1B,KAAKq1B,QAAU,EACfr1B,KAAKsP,QAAU,EACftP,KAAKs1B,SAAW,EAChBt1B,KAAKlH,MAAQ,QAUf47B,EAAwBv0B,UAAU+V,QAAU,SAASJ,GACnD,OAAQ9V,KAAKlH,OACX,IAAK,OACHkH,KAAKyiB,OACL,MACF,KAAK,UACHziB,KAAK80B,SAEL,IAAI31B,GAAS2W,EAAO3W,OAChBy1B,EAAW50B,KAAKo1B,UAAU98B,IAAI,EAK9Bs8B,GAAS9uB,KAAO3G,EAAO2G,IACzB9F,KAAKq2B,cAGP,MACF,KAAK,UAEH,KACF,KAAK,YACCr2B,KAAKs2B,aACPt2B,KAAK0qB,QACL1qB,KAAKyiB,QAGP,MACF,KAAK,YACCziB,KAAKu2B,eACPv2B,KAAK0qB,QACL1qB,KAAKyiB,WAebiS,EAAwBv0B,UAAUm2B,SAAW,WAC3C,MAAOt2B,MAAKg1B,SAAWh1B,KAAKy1B,YAU9Bf,EAAwBv0B,UAAUo2B,WAAa,WAC7C,MAAOv2B,MAAK+0B,QAAU/0B,KAAKw1B,WAU7Bd,EAAwBv0B,UAAUq2B,UAAY,SAASC,GACrDz2B,KAAK20B,QAAQ8B,EAAO3wB,IAAM2wB,GAU5B/B,EAAwBv0B,UAAUu2B,aAAe,SAASD,GAExD,GAAKz2B,KAAK20B,QAAQ8B,EAAO3wB,IAAzB,CAKA,GAAI2wB,EAAOpB,QAAS,CAClBr1B,KAAKq1B,UAGLr1B,KAAKq2B,cAEL,IAAIhwB,GAAMrG,KAAK8yB,UACX9yB,MAAKq1B,SAAWhvB,GAClBrG,KAAKm2B,OAKT,GAAIM,EAAOnnB,QAAS,CAClBtP,KAAKsP,SAEL,IAAI1J,GAAM5F,KAAK+yB,UACX/yB,MAAKsP,SAAW1J,GAClB5F,KAAKg2B,aAIFh2B,MAAK20B,QAAQ8B,EAAO3wB,MAU7B4uB,EAAwBv0B,UAAUg1B,MAAQ,WACxC,GAAIxxB,GAAY3D,KAAK9B,UAAU5F,IAAI,YAEnC0H,MAAKk1B,WAAavxB,EAAUqB,sBAAsBhF,KAAKm1B,OACvDn1B,KAAKkV,OAAO1C,WAAWxS,KAAK2mB,UAU9B+N,EAAwBv0B,UAAU21B,QAAU,WAC1C,GAAInyB,GAAY3D,KAAK9B,UAAU5F,IAAI,YACnCqL,GAAU0B,qBAAqBrF,KAAKk1B,aAWtCR,EAAwBv0B,UAAUwmB,QAAU,WAC1C,GAAIngB,GAASxG,KAAK9B,UAAU5F,IAAI,SAEhC0H,MAAKi1B,WACiB,IAAlBj1B,KAAKi1B,WACPj1B,KAAKi1B,SAAWzuB,EAAOJ,QAAQ,EAAGpG,KAAK41B,aAAe,GACtD51B,KAAK20B,QAAQ30B,KAAK60B,WAAa,KAGjC,KAAK,GAAI/uB,KAAM9F,MAAK20B,QAAS,CAC3B,GAAI8B,GAASz2B,KAAK20B,QAAQ7uB,EACrB2wB,IAILA,EAAO/9B,WAWXg8B,EAAwBv0B,UAAUihB,QAAU,WAC1CphB,KAAK40B,SAAW50B,KAAK+1B,cAErB,IAAIta,GAASzb,KAAK40B,SAASnZ,OACvBD,EAAQxb,KAAK40B,SAASpZ,KAE1Bxb,MAAK8d,MAAQtC,EAAQC,CAErB,KAAK,GAAI3V,KAAM9F,MAAK20B,QAAS,CAC3B,GAAI8B,GAASz2B,KAAK20B,QAAQ7uB,EACrB2wB,IAILA,EAAOE,WAWXjC,EAAwBv0B,UAAU81B,WAAa,WAC7C,OACEZ,QAASr1B,KAAKq1B,QACd/lB,QAAStP,KAAKsP,QACdgmB,SAAUt1B,KAAKs1B,WAWnBZ,EAAwBv0B,UAAUk2B,aAAe,WAC/Cr2B,KAAKs1B,SAAWt1B,KAAKq1B,QAAUr1B,KAAK80B,SAUtCJ,EAAwBv0B,UAAU41B,aAAe,WAC/C,GAAIva,GAAQxb,KAAKo1B,UAAU5Z,QACvBC,EAASzb,KAAKo1B,UAAU3Z,SACxBtD,EAAMnY,KAAKo1B,UAAUwB,YACrBxe,EAAOpY,KAAKo1B,UAAUyB,YAE1B,QACE1e,IAAKA,EACLC,KAAMA,EACNoD,MAAOA,EACPC,OAAQA,EACRpD,MAAOD,EAAOoD,EACdlD,OAAQH,EAAMsD,IAOlBtkB,EAAQC,OAAOA,GAAQyd,UAAU,0BAA2B,WAC1D,OACEC,OACEygB,QAAS,mCACTC,UAAW,qCACXC,WAAY,sCACZW,WAAY,qCACZF,WAAY,qCACZpD,WAAY,sCACZC,WAAY,sCACZ6C,YAAa,wCAEf7gB,SAAU,IACVoB,YAAY,EACZnB,kBAAkB,EAClBjZ,WAAY24B,EACZ14B,aAAc,oCACdtC,YAAa,0DAejB,IAAIo9B,GAA4B,SAAS5hB,EAAOC,EAASC,EAAOlX,GAC9D8B,KAAKkV,OAASA,EACdlV,KAAKoV,OAASA,EACdpV,KAAKmV,SAAWA,EAChBnV,KAAK9B,UAAYA,EAEjB8B,KAAK8e,MAAQ,UAAY5J,EAAOI,IAGlCwhB,GAA0B52B,SAAW,SAAS,WAAW,SAAS,aAOlE42B,EAA0B32B,UAAU42B,QAClC,UACA,UACA,UACA,UACA,WAMFD,EAA0B32B,UAA1B22B,SAA4C,SAG5CA,EAA0B32B,UAAU2D,SAGpCgzB,EAA0B32B,UAAU62B,MAAQ,KAG5CF,EAA0B32B,UAAU82B,OAAS,KAG7CH,EAA0B32B,UAAU+2B,MAAQ,KAG5CJ,EAA0B32B,UAAUg3B,KAAO,KAG3CL,EAA0B32B,UAAUkE,EAAI,KAGxCyyB,EAA0B32B,UAAUmE,EAAI,KAaxCwyB,EAA0B32B,UAAUwV,QAAU,WAC5C,GAAInP,GAASxG,KAAK9B,UAAU5F,IAAI,UAC5B8+B,EAAOp3B,KAAKq3B,cAEhBr3B,MAAKg3B,MAAQxwB,EAAOY,KAAKpH,KAAK+2B,QAE9B/2B,KAAKi3B,OAASzwB,EAAOJ,QAAQ,EAAG,IAAM,GACtCpG,KAAKk3B,MAAQ1wB,EAAOJ,QAAQ,EAAG,MAAS,KACxCpG,KAAKm3B,KAAO,IAAMn3B,KAAKi3B,MAEvB,IAAIK,GAAwB,EAAdt3B,KAAKi3B,MACnBj3B,MAAKsE,EAAI8yB,EAAKxC,SAASnZ,OAASjV,EAAOJ,QAAQ,EAAG,IAAM,GACxDpG,KAAKqE,EAAImC,EAAOJ,QAAQkxB,EAASF,EAAKxC,SAASpZ,MAAQ8b,GAEvDt3B,KAAKu3B,WAAaH,EAAKtZ,MACvB9d,KAAKw3B,WAAax3B,KAAKqE,EAEvBrE,KAAK8D,OACHqU,IAAKnY,KAAKsE,EACV8T,KAAMpY,KAAKqE,EACXmX,MAAqB,EAAdxb,KAAKi3B,OACZxb,OAAsB,EAAdzb,KAAKi3B,QAGfj3B,KAAKq3B,eAAeb,UAAUx2B,OAUhC82B,EAA0B32B,UAAU6W,WAAa,WAC/ChX,KAAKq3B,eAAeX,aAAa12B,OAUnC82B,EAA0B32B,UAAUzH,OAAS,WAC3C,GAAI++B,GAAM9xB,KAAK8xB,IAA2B,MAAvB,GAAIjyB,OAAOC,UAC9BzF,MAAKqE,EAAIrE,KAAKm3B,KAAOM,EAAMz3B,KAAKw3B,WAChCx3B,KAAKsE,EAAItE,KAAKsE,EAAItE,KAAKk3B,MAEvBl3B,KAAK8D,MAAMsU,KAAOpY,KAAKqE,EACvBrE,KAAK8D,MAAMqU,IAAMnY,KAAKsE,CAEtB,IAAIozB,GAA4B,GAAd13B,KAAKi3B,MACnBj3B,MAAKsE,EAAIozB,IAIb13B,KAAKsP,SAAU,EACftP,KAAKq3B,eAAeX,aAAa12B,QAUnC82B,EAA0B32B,UAAUw2B,OAAS,WAC3C,GAAI1d,GAAWjZ,KAAK9B,UAAU5F,IAAI,YAE9ByR,EAAK/J,KACL6F,EAAU,WACZ,GAAIiY,GAAQ/T,EAAGstB,eAAevZ,MAC1B6Z,EAAO7Z,EAAQ/T,EAAGwtB,UAEtBxtB,GAAGytB,YAAcG,EACjB5tB,EAAG6tB,UAAY,KAGb53B,MAAK43B,WACP3e,EAASyW,OAAO1vB,KAAK43B,WAGvB53B,KAAK43B,UAAY3e,EAASpT,EAAS,MAUrCixB,EAA0B32B,UAAU+V,QAAU,WAC5C,GAAIvS,GAAY3D,KAAK9B,UAAU5F,IAAI,aAC/B2gB,EAAWjZ,KAAK9B,UAAU5F,IAAI,YAE9ByR,EAAK/J,KAEL63B,EAAY,WACd9tB,EAAGstB,eAAeX,aAAa3sB,IAG7B+tB,EAAiB,WACnB/tB,EAAGmL,OAAO1C,WAAWqlB,GACrB9tB,EAAGoL,SAAS2F,IACVnX,EAAUN,kBACVy0B,GAIAn0B,GAAUN,kBACZrD,KAAKmV,SAASuF,GACZ/W,EAAUN,kBACVy0B,GAGF7e,EAAS4e,EAAW,IAGtB73B,KAAKq1B,SAAU,GAMjBl+B,EAAQC,OAAOA,GAAQyd,UAAU,4BAA6B,WAC5D,OACEC,OACEhP,GAAI,8BAENiP,SAAU,IACVoB,YAAY,EACZI,SACE8gB,eAAkB,4BAEpBriB,kBAAkB,EAClBjZ,WAAY+6B,EACZ96B,aAAc,sCACdtC,YAAa,8DAIhBmG,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAI4gC,GAAgB,SAAS7iB,EAAQhX,EAAWR,GAC9CsC,KAAK9B,UAAYA,EACjB8B,KAAKkV,OAASA,EAGdlV,KAAKtC,KAAOA,EAGdq6B,GAAc73B,SAAW,SAAU,YAAa,QAOhD63B,EAAc53B,UAAUzC,KAAO,KAG/Bq6B,EAAc53B,UAAU2L,SAAW,KAGnCisB,EAAc53B,UAAU63B,cAAgB,EAGxCD,EAAc53B,UAAU83B,YAAc,iBAGtCF,EAAc53B,UAAU+3B,YAAc,+DAatCH,EAAc53B,UAAU+L,OAAS,WAE7B,GAAIrK,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClCiC,EAASyF,KAAK9B,UAAU5F,IAAI,UAC5B+D,EAAO2D,KAAK9B,UAAU5F,IAAI,QAC1B4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1By5B,EAAO/xB,KAAKkV,OAAOijB,SACvB,KAAIpG,EAAKlL,SAAT,CAIA,GAAIrqB,GAAkB,WAEpB,GAAIuF,GAAU7H,EAAK5B,IAAI,mCACvBuJ,GAAagB,QAAQd,GACrBxH,EAAOG,GAAG,aAGR+B,EAAkB,YAKtBJ,GAAK6P,QACHJ,SAAU9L,KAAK8L,UACd,YAAYnP,KACbH,EACAC,KAWNs7B,EAAc53B,UAAUoL,OAAS,WAE7B,GAAI1J,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClCiC,EAASyF,KAAK9B,UAAU5F,IAAI,UAC5B+D,EAAO2D,KAAK9B,UAAU5F,IAAI,QAC1B4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1By5B,EAAO/xB,KAAKkV,OAAOijB,SACvB,KAAIpG,EAAKlL,SAAT,CAIA,GAAIrqB,GAAkB,WAEpB,GAAIuF,GAAU7H,EAAK5B,IAAI,mCACvBuJ,GAAagB,QAAQd,GACrBxH,EAAOG,GAAG,aAGR+B,EAAkB,YAKtBJ,GACGkP,QACCO,SAAU9L,KAAK8L,SACfE,SAAUhM,KAAKtC,MACd,YAAYf,KACbH,EACAC,KAWRs7B,EAAc53B,UAAUi4B,KAAO,WAE3B,GAAIz6B,GAAmBqC,KAAK9B,UAAU5F,IAAI,oBACtCsF,EAAUoC,KAAK9B,UAAU5F,IAAI,WAAWwF,WACxCvD,EAASyF,KAAK9B,UAAU5F,IAAI,SAEhCsF,GAAQuL,QAAQxL,EAAkBqC,KAAKtC,MACvCnD,EAAOG,GAAG,kCAIR29B,QAAQ,KAIdlhC,EAAQC,OAAOA,GAAQ2E,WAAW,0BAA2Bg8B,IAE5Dl4B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAImhC,GAAe,SAASpjB,EAAQhX,GAClC8B,KAAK9B,UAAYA,EACjB8B,KAAKkV,OAASA,EAGhBojB,GAAap4B,SAAW,SAAU,aAOlCo4B,EAAan4B,UAAU2L,SAAW,KAGlCwsB,EAAan4B,UAAU6L,SAAW,KAGlCssB,EAAan4B,UAAUo4B,kBAAoB,EAG3CD,EAAan4B,UAAUq4B,kBAAoB,EAG3CF,EAAan4B,UAAUs4B,kBAAoB,KAa3CH,EAAan4B,UAAU+L,OAAS,WAE5B,GAAIrK,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClCiC,EAASyF,KAAK9B,UAAU5F,IAAI,UAC5B+D,EAAO2D,KAAK9B,UAAU5F,IAAI,QAC1B4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1By5B,EAAO/xB,KAAKkV,OAAOijB,SACvB,KAAIpG,EAAKlL,SAAT,CAIA,GAAIrqB,GAAkB,WAEpB,GAAIuF,GAAU7H,EAAK5B,IAAI,yBACvBuJ,GAAagB,QAAQd,GACrBxH,EAAOG,GAAG,YAGR+B,EAAkB,YAKtBJ,GAAK6P,QACHJ,SAAU9L,KAAK8L,SACfE,SAAUhM,KAAKgM,UACd,WAAWrP,KACZH,EACAC,KAINtF,EAAQC,OAAOA,GAAQ2E,WAAW,yBAA0Bu8B,IAE3Dz4B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIuhC,GAAU,SAASxjB,EAAQhX,GAC7B8B,KAAK9B,UAAYA,EACjB8B,KAAKkV,OAASA,EAGhBwjB,GAAQx4B,SAAW,SAAS,aAO5Bw4B,EAAQv4B,UAAU3G,KAAO,KAGzBk/B,EAAQv4B,UAAUsT,MAAQ,KAG1BilB,EAAQv4B,UAAUwT,QAAU,KAG5B+kB,EAAQv4B,UAAU4B,QAAU,KAG5B22B,EAAQv4B,UAAUw4B,iBAAmB,GAarCD,EAAQv4B,UAAUy4B,OAAS,WAEvB,GAAIC,GAAO74B,KAAK9B,UAAU5F,IAAI,QAC1By5B,EAAO/xB,KAAKkV,OAAO4jB,WACvB,KAAI/G,EAAKlL,SAAT,CAIA,GAAI9c,GAAK/J,KAELxD,EAAkB,WAEpBuN,EAAG2gB,SAGDjuB,EAAkB,YAKtBo8B,GAAKxlB,MACH7Z,KAAMwG,KAAKxG,KACXia,MAAOzT,KAAKyT,MACZE,QAAS3T,KAAK2T,QACd5R,QAAS/B,KAAK+B,UACbpF,KACDH,EACAC,KAWNi8B,EAAQv4B,UAAUuqB,MAAQ,WAEtB1qB,KAAKxG,KAAO,KACZwG,KAAKyT,MAAQ,KACbzT,KAAK2T,QAAU,KACf3T,KAAK+B,QAAU,MAGnB5K,EAAQC,OAAOA,GAAQ2E,WAAW,oBAAqB28B,IAEtD74B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAI4hC,GAAW,SAAS76B,GACtB8B,KAAK9B,UAAYA,EAEjB8B,KAAK1F,KAAO4D,EAAU5F,IAAI,QAG5BygC,GAAS74B,SAAW,aAOpB64B,EAAS54B,UAAU7F,KAAO,KAc1By+B,EAAS54B,UAAU64B,aAAe,SAASpO,GAEzC,GAAIqO,GAASj5B,KAAK9B,UAAU5F,IAAI,UAC5BgC,EAAO0F,KAAK9B,UAAU5F,IAAI,QAE1BkE,EAAkB,SAASuU,GAK3BzW,EAAK5B,OAAOqY,IAGZtU,EAAkB,aAKlBsU,EAAS,GAAIkoB,GAAOrO,GACpBpwB,EAAUuW,EAAOmoB,SAMrB,OALA1+B,GAAQmC,KACNH,EACAC,GAGKjC,GAWTu+B,EAAS54B,UAAUg5B,aAAe,SAASvO,GAEzC,GAAIqO,GAASj5B,KAAK9B,UAAU5F,IAAI,UAC5BgC,EAAO0F,KAAK9B,UAAU5F,IAAI,QAE1BkE,EAAkB,SAASuU,GAK3BzW,EAAK5B,OAAOqY,IAGZtU,EAAkB,aAKlBjC,EAAUy+B,EAAOvgC,QAASoN,GAAI8kB,EAAQ9kB,IAAM8kB,GAASnwB,QAMzD,OALAD,GAAQmC,KACNH,EACAC,GAGKjC,GAUTu+B,EAAS54B,UAAUi5B,OAAS,WAExB,GAAI7+B,GAASyF,KAAK9B,UAAU5F,IAAI,UAC5B+D,EAAO2D,KAAK9B,UAAU5F,IAAI,QAE1BkE,EAAkB,WAElBjC,EAAOG,GAAG,mBAGV+B,EAAkB,YAKtBJ,GAAK+P,UAAUzP,KACbH,EACAC,IAYNs8B,EAAS54B,UAAUk5B,KAAO,SAASvgC,GAE/B,GAAIyB,GAASyF,KAAK9B,UAAU5F,IAAI,SAEhCiC,GAAOG,GAAG5B,IAGd3B,EAAQC,OAAOA,GAAQ2E,WAAW,qBAAsBg9B,IAEvDl5B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAI8F,GAAW,SAASiY,EAAQhX,EAAWlB,GACzCgD,KAAKhD,UAAYA,EACjBgD,KAAK9B,UAAYA,EACjB8B,KAAKkV,OAASA,EAEdlV,KAAKs5B,eAAiB,KACtBt5B,KAAKu5B,gBACLv5B,KAAKw5B,cACLx5B,KAAK8P,UAEL9P,KAAKy5B,iBACLz5B,KAAK05B,gBAGPz8B,GAASiD,SAAW,SAAU,YAAa,aAO3CjD,EAASkD,UAAU3G,KAAO,KAG1ByD,EAASkD,UAAUzC,KAAO,KAG1BT,EAASkD,UAAUw5B,cAAgB,EAGnC18B,EAASkD,UAAU63B,cAAgB,EAGnC/6B,EAASkD,UAAU83B,YAAc,iBAGjCh7B,EAASkD,UAAUy5B,eAAiB,KAGpC38B,EAASkD,UAAU05B,gBAAkB,KAGrC58B,EAASkD,UAAU25B,eAAiB,KAGpC78B,EAASkD,UAAU45B,cAAgB,EAGnC98B,EAASkD,UAAU65B,aAAe,KAGlC/8B,EAASkD,UAAU85B,UAAY,KAe/Bh9B,EAASkD,UAAU+5B,kBAAoB,SAASh9B,GAE5C,GAAIiU,GAAWnR,KAAKw5B,WAAWt8B,EAAOC,OAEtC,OAAIgU,IACFA,EAASgpB,YAAa,OACtBn6B,KAAKo6B,UAAYjpB,IAIfnR,KAAKo6B,WACPp6B,KAAKo6B,UAAUD,YAAa,OAC5Bn6B,KAAKo6B,UAAY,OAFnB,QAcJn9B,EAASkD,UAAUxH,OAAS,WAExB,GAAIkJ,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClC2E,EAAW+C,KAAK9B,UAAU5F,IAAI,YAC9B4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1B6Y,EAAW,GAAIlU,IACjBzD,KAAMwG,KAAKxG,KACXkE,KAAMsC,KAAKtC,OAGTqM,EAAK/J,KAELxD,EAAkB,SAAS2U,GAE3B,GAAIpP,GAAU7H,EAAK5B,IAAI,0CACvBuJ,GAAagB,QAAQd,GAErBgI,EAAG/M,UAAUq9B,QAAQlpB,GACrBpH,EAAGuwB,cAAcnpB,GAEjBpH,EAAGvQ,KAAO,KACVuQ,EAAGrM,KAAO,MAGVjB,EAAkB,YAKtB0U,GAAS+nB,UAAUv8B,KACjBH,EACAC,IAYNQ,EAASkD,UAATlD,UAA4B,SAASkU,GAEjC,GAAItP,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClC4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1ByR,EAAK/J,KAELxD,EAAkB,WAElB,GAAIuF,GAAU7H,EAAK5B,IAAI,0CACvBuJ,GAAagB,QAAQd,EAErB,IAAIqtB,GAAQrlB,EAAG/M,UAAUkC,QAAQiS,EACjCpH,GAAG/M,UAAUkzB,OAAOd,EAAO,GAE3BrlB,EAAGwwB,mBAAmBppB,IAGtB1U,EAAkB,YAKtB0U,GAASqpB,UAAU79B,KACjBH,EACAC,IAYNQ,EAASkD,UAAUs6B,uBAAyB,SAAStpB,GAEjD,GAAIupB,GAAS16B,KAAK9B,UAAU5F,IAAI,UAC5BkO,EAASxG,KAAK9B,UAAU5F,IAAI,UAE5ByR,EAAK/J,KACLxD,EAAkB,SAASwT,GAE3BjG,EAAG+vB,eAAiBtzB,EAAOc,QAAQ0I,GACnCjG,EAAG8vB,gBAAkB1oB,GAGrB1U,EAAkB,aAIlBk+B,EAAWD,EAAOE,eAAgBC,WAAY1pB,EAASrL,IAC3D60B,GAASlgC,SAASkC,KAChBH,EACAC,IAYNQ,EAASkD,UAAU26B,wBAA0B,SAAS3pB,GAElDnR,KAAK45B,eAAiBzoB,GAW1BlU,EAASkD,UAAU46B,eAAiB,SAAS5pB,GAEzC,GAAItP,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClC4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1ByR,EAAK/J,KAELxD,EAAkB,SAAS2U,GAE3B,GAAIpP,GAAU7H,EAAK5B,IACjB6Y,EAASC,SACP,sEACA,2FAEJvP,GAAagB,QAAQd,GAErBgI,EAAGuwB,cAAcnpB,IAGjB1U,EAAkB,WAGlB0U,EAASC,UAAYD,EAASC,SAGlCD,GAASC,UAAYD,EAASC,SAE9BD,EAAS6pB,UAAUr+B,KACjBH,EACAC,IAYNQ,EAASkD,UAAU86B,iBAAmB,SAASroB,GAE3C,GAAIqmB,GAASj5B,KAAK9B,UAAU5F,IAAI,UAE5ByR,EAAK/J,KACLxD,EAAkB,SAAS0W,GAE3BnJ,EAAGiwB,aAAe9mB,EAClBnJ,EAAGkwB,UAAYrnB,GAGfnW,EAAkB,aAIlBk+B,EAAW1B,EAAOiC,WAAYC,OAAQvoB,EAAK9M,IAC/C60B,GAASlgC,SAASkC,KAChBH,EACAC,IAYNQ,EAASkD,UAAUi7B,WAAa,SAASxoB,GAErC,GAAI/Q,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClC4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAC1B+iC,EAAOr7B,KAAK9B,UAAU5F,IAAI,QAE1BkE,EAAkB,WAElB,GAAIuF,GAAU7H,EAAK5B,IACjBsa,EAAKxB,SACH,sEACA,6EAEJvP,GAAagB,QAAQd,IAGrBtF,EAAkB,WAGlBmW,EAAKxB,UAAYwB,EAAKxB,SAG1BwB,GAAKxB,UAAYwB,EAAKxB,QAEtB,IAAIupB,GAAWU,EAAK3iC,QAASoN,GAAI8M,EAAK9M,IAAK8M,EAC3C+nB,GAASlgC,SAASkC,KAChBH,EACAC,IAaNQ,EAASkD,UAAUhD,OAAS,SAASgU,GAEjC,GAAI5W,GAASyF,KAAK9B,UAAU5F,IAAI,UAC5B6E,EAAUgU,EAASgpB,WAErB,KADAhpB,EAASrL,EAGXvL,GAAOG,GAAG,qBACRyC,OAAQA,KAYdF,EAASkD,UAAUm7B,gBAAkB,SAASnqB,GAE1C,GAAIlE,GAAUjN,KAAK9B,UAAU5F,IAAI,WAC7BqY,EAAM3Q,KAAK9B,UAAU5F,IAAI,OAEzByR,EAAK/J,KAELuS,EAAa,SAAS5X,GACxBoP,EAAGmL,OAAO1C,WAAW,WACnBrB,EAASoqB,QAAU5gC,KAInBb,EAAMmT,EAAU,iBAAmBkE,EAASrL,GAAK,SACjDnD,GAAYkQ,UAAWN,EAAYO,MAAO,IAC1CmB,EAAStD,EAAIoC,UAAUjZ,EAAK6I,EAChC3C,MAAKu5B,aAAapoB,EAASrL,IAAMmO,GAWrChX,EAASkD,UAAUo6B,mBAAqB,SAASppB,GAE7C,GAAIR,GAAM3Q,KAAK9B,UAAU5F,IAAI,OAEzB2b,EAASjU,KAAKu5B,aAAapoB,EAASrL,GACnCmO,WAIEjU,MAAKu5B,aAAapoB,EAASrL,IAClC6K,EAAIC,aAAaqD,KAUrBhX,EAASkD,UAAUq7B,eAAiB,WAEhC,GAAIvuB,GAAUjN,KAAK9B,UAAU5F,IAAI,WAC7BqY,EAAM3Q,KAAK9B,UAAU5F,IAAI,OAEzByR,EAAK/J,KAGLuS,EAAa,SAASpB,EAAUxW,GAClCoP,EAAGmL,OAAO1C,WAAW,WAGdrB,EAASC,UACZT,EAAIC,aAAa7G,EAAGuvB,gBAGtBniC,EAAQ+B,QAAQyB,EAAM,SAAS8X,GAC7B,GAAIG,GAAO7I,EAAG+F,OAAO2C,EAAK3M,GAC1B8M,GAAKO,UAAYV,EAAKS,aAKxBsL,EAAmB,WAIrB,MAAOzU,GAAGqwB,WAAarwB,EAAGqwB,UAAUhpB,UAGlCqN,EAAiB,WAKnB,GAJI1U,EAAGuvB,gBACL3oB,EAAIC,aAAa7G,EAAGuvB,gBAGlBvvB,EAAGqwB,UAAW,CAChB,GAAItgC,GAAMmT,EAAU,iBAAmBlD,EAAGqwB,UAAUt0B,GAAK,WACrD+M,EAAYN,EAAWvM,KAAK+D,EAAIA,EAAGqwB,WACnCz3B,GAAYkQ,UAAWA,EAAWC,MAAO,EAC7C/I,GAAGuvB,eAAiB3oB,EAAIoC,UAAUjZ,EAAK6I,IAI3C3C,MAAKua,SAAWva,KAAKkV,OAAO5V,OAC1Bkf,EACAC,IAWNxhB,EAASkD,UAAUs5B,eAAiB,WAEhC,GAAIgC,GAAmBz7B,KAAK9B,UAAU5F,IAAI,mBAG1CnB,GAAQ+B,QAAQ8G,KAAKhD,UAAWgD,KAAKs6B,cAAct0B,KAAKhG,OAGxDA,KAAKk6B,kBAAkBuB,EAAiBv+B,QAGxC8C,KAAKw7B,kBAYTv+B,EAASkD,UAAUm6B,cAAgB,SAASnpB,GAGxC,GAAIpH,GAAK/J,IACT7I,GAAQ+B,QAAQiY,EAAS6B,MAAO,SAASJ,GACvC,GAAI8oB,GAAM3xB,EAAG+F,OAAO8C,EAAK9M,KAAO,IAChC8M,GAAKO,UAAoB,OAARuoB,EACfA,EAAIvoB,UACF,EAEJpJ,EAAG+F,OAAO8C,EAAK9M,IAAM8M,GAIvB,IAAI9M,GAAK9F,KAAKo6B,WAAap6B,KAAKo6B,UAAUt0B,EAC1CqL,GAASgpB,WAAahpB,EAASrL,KAAOA,EAGtCqL,EAASoqB,QAAUpqB,EAASwqB,MAAMv2B,OAE7B+L,EAASC,SAGZpR,KAAKs7B,gBAAgBnqB,GAFrBnR,KAAKu6B,mBAAmBppB,GAK1BnR,KAAKw5B,WAAWroB,EAASrL,IAAMqL,GAWnClU,EAASkD,UAAUu5B,cAAgB,WAE/B,GAAI/oB,GAAM3Q,KAAK9B,UAAU5F,IAAI,OAEzByR,EAAK/J,KAEL47B,EAAa,WACf,IAAK,GAAI91B,KAAMiE,GAAGwvB,aAChB5oB,EAAIC,aAAa7G,EAAGwvB,aAAazzB,GAG/BiE,GAAGuvB,gBACL3oB,EAAIC,aAAa7G,EAAGuvB,gBAGtBvvB,EAAGuvB,eAAiB,KACpBvvB,EAAGwvB,gBAEHxvB,EAAG+b,YACH/b,EAAGwQ,WAGLva,MAAK8lB,UAAY9lB,KAAKkV,OAAO2mB,IAAI,WAAYD,IAIjDzkC,EAAQC,OAAOA,GAAQ2E,WAAW,qBAAsBkB,IAEvD4C,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIsG,GAAQ,SAASyX,EAAQhX,EAAWV,GACtCwC,KAAKxC,OAASA,EACdwC,KAAK9B,UAAYA,EACjB8B,KAAKkV,OAASA,EAGhBzX,GAAMyC,SAAW,SAAU,YAAa,UAOxCzC,EAAM0C,UAAU2L,SAAW,KAG3BrO,EAAM0C,UAAU6L,SAAW,KAG3BvO,EAAM0C,UAAUo4B,kBAAoB,EAGpC96B,EAAM0C,UAAUq4B,kBAAoB,EAGpC/6B,EAAM0C,UAAU27B,UAAY,KAG5Br+B,EAAM0C,UAAU47B,YAAc,KAa9Bt+B,EAAM0C,UAAUxH,OAAS,WAErB,GAAIkJ,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClCmF,EAAQuC,KAAK9B,UAAU5F,IAAI,SAC3B4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1B0jC,EAAQ,GAAIv+B,IACdqO,SAAU9L,KAAK8L,SACfE,SAAUhM,KAAKgM,WAGbjC,EAAK/J,KAELxD,EAAkB,SAASw/B,GAE3B,GAAIj6B,GAAU7H,EAAK5B,IAAI,uCACvBuJ,GAAagB,QAAQd,GAErBgI,EAAGvM,OAAO68B,QAAQ2B,GAElBjyB,EAAG+B,SAAW,KACd/B,EAAGiC,SAAW,MAGdvP,EAAkB,YAKtBu/B,GAAM9C,UAAUv8B,KACdH,EACAC,IAYNgB,EAAM0C,UAAU87B,qBAAuB,SAASD,GAE5Ch8B,KAAK+7B,YAAcC,GAWvBv+B,EAAM0C,UAAN1C,UAAyB,SAASu+B,GAE9B,GAAIn6B,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClC4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1ByR,EAAK/J,KAELxD,EAAkB,WAElB,GAAIuF,GAAU7H,EAAK5B,IAAI,uCACvBuJ,GAAagB,QAAQd,EAErB,IAAIqtB,GAAQrlB,EAAGvM,OAAO0B,QAAQ88B,EAC9BjyB,GAAGvM,OAAO0yB,OAAOd,EAAO,IAGxB3yB,EAAkB,YAKtBu/B,GAAMxB,UAAU79B,KACdH,EACAC,IAYNgB,EAAM0C,UAAU+7B,iBAAmB,SAASF,GAExCh8B,KAAK87B,UAAYE,GAWrBv+B,EAAM0C,UAAUzH,OAAS,SAASsjC,GAE9B,GAAIn6B,GAAe7B,KAAK9B,UAAU5F,IAAI,gBAClC4B,EAAO8F,KAAK9B,UAAU5F,IAAI,QAE1BkE,EAAkB,WAElB,GAAIuF,GAAU7H,EAAK5B,IAAI,0CACvBuJ,GAAagB,QAAQd,IAGrBtF,EAAkB,YAKtBu/B,GAAMhB,UAAUr+B,KACdH,EACAC,IAINtF,EAAQC,OAAOA,GAAQ2E,WAAW,kBAAmB0B,IAEpDoC,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAKA,IAAIglC,GAAU,SAASj+B,EAAW9B,GAChC4D,KAAK9B,UAAYA,EAEjB8B,KAAK5D,aAAeA,EAGtB+/B,GAAQj8B,SAAW,YAAa,gBAOhCi8B,EAAQh8B,UAAU/D,cAAe,EAajC+/B,EAAQh8B,UAAUi5B,OAAS,WAEvB,GAAI7+B,GAASyF,KAAK9B,UAAU5F,IAAI,UAC5B+D,EAAO2D,KAAK9B,UAAU5F,IAAI,QAE1BkE,EAAkB,WAElBjC,EAAOG,GAAG,kBAGV+B,EAAkB,YAKtBJ,GAAK+P,UAAUzP,KACbH,EACAC,IAYN0/B,EAAQh8B,UAAUk5B,KAAO,SAASvgC,GAE9B,GAAIyB,GAASyF,KAAK9B,UAAU5F,IAAI,SAEhCiC,GAAOG,GAAG5B,IAGd3B,EAAQC,OAAOA,GAAQ2E,WAAW,oBAAqBogC,IAEtDt8B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIilC,GAAU,SAASC,EAAWpvB,GAChC,GAAInT,GAAMmT,EAAU,gBAChBqvB,GAAkBx2B,GAAI,OACtBzN,GACF6wB,yBACE3wB,OAAQ,MACRuJ,wBAAwB,EACxBhI,IAAKmT,EAAU,wBAEjBsvB,0BACEhkC,OAAQ,MACRuJ,wBAAwB,EACxBhI,IAAKmT,EAAU,qCAEjB8b,0BACExwB,OAAQ,MACRuJ,wBAAwB,EACxBhI,IAAKmT,EAAU,kCAGftK,IAIJ,OAAO05B,GAAUviC,EAAKwiC,EAAejkC,EAASsK,GAGhDy5B,GAAQl8B,SAAW,YAAa,WAKhC/I,EAAQC,OAAOA,GAAQiL,QAAQ,WAAY+5B,IAE1Cv8B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIilC,GAAU,SAASC,EAAWpvB,GAChC,GAAInT,GAAMmT,EAAU,cAChBqvB,GAAkBx2B,GAAI,OACtBzN,GACFuiC,eACEriC,OAAQ,MACRE,SAAS,EACTqB,IAAKmT,EAAU,iCAGftK,IAGJ,OAAO05B,GAAUviC,EAAKwiC,EAAejkC,EAASsK,GAGhDy5B,GAAQl8B,SAAW,YAAa,WAKhC/I,EAAQC,OAAOA,GAAQiL,QAAQ,SAAU+5B,IAExCv8B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIilC,GAAU,SAASC,EAAWn+B,EAAW+O,GAC3C,GAAInT,GAAMmT,EAAU,cAChBqvB,GAAkBx2B,GAAI,OACtBzN,GACF6iC,WACE3iC,OAAQ,MACRE,SAAS,EACTqB,IAAKmT,EAAU,yBAGftK,IAGJ,OAAO05B,GAAUviC,EAAKwiC,EAAejkC,EAASsK,GAGhDy5B,GAAQl8B,SAAW,YAAa,YAAa,WAK7C/I,EAAQC,OAAOA,GAAQiL,QAAQ,SAAU+5B,IAExCv8B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIilC,GAAU,SAASC,EAAWpvB,GAChC,GAAInT,GAAMmT,EAAU,aAChBqvB,GAAkBx2B,GAAI,OACtBzN,GACFgxB,eACE9wB,OAAQ,MACRuJ,wBAAwB,EACxBhI,IAAKmT,EAAU,8BAGftK,IAIJ,OAAO05B,GAAUviC,EAAKwiC,EAAejkC,EAASsK,GAGhDy5B,GAAQl8B,SAAW,YAAa;AAKhC/I,EAAQC,OAAOA,GAAQiL,QAAQ,QAAS+5B,IAEvCv8B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIilC,GAAU,SAASC,EAAWpvB,GAChC,GAAInT,GAAMmT,EAAU,YAChBqvB,GAAkBx2B,GAAI,OACtBzN,KAEAsK,IAGJ,OAAO05B,GAAUviC,EAAKwiC,EAAejkC,EAASsK,GAGhDy5B,GAAQl8B,SAAW,YAAa,WAKhC/I,EAAQC,OAAOA,GAAQiL,QAAQ,OAAQ+5B,IAEtCv8B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YASA,IAAIilC,GAAU,SAASC,EAAWpvB,GAChC,GAAInT,GAAMmT,EAAU,YAChBqvB,GAAkBx2B,GAAI,OACtBzN,GACFgC,SACE9B,OAAQ,MACRuJ,wBAAwB,EACxBhI,IAAKmT,EAAU,kBAGftK,IAIJ,OAAO05B,GAAUviC,EAAKwiC,EAAejkC,EAASsK,GAGhDy5B,GAAQl8B,SAAW,YAAa,WAKhC/I,EAAQC,OAAOA,GAAQiL,QAAQ,OAAQ+5B,IAEtCv8B,eAAgB1I,SAGnB,SAAUC,EAAQD,GAChB,YAKAA,GAAQC,OAAOA,GAAQolC,OAAO,QAAQ,OAAO,SAAStiC,GACpD,GAAIsiC,GAAS,WAET,MAAOtiC,GAAK5B,IAAImkC,MAAMviC,EAAM2N,WAKhC,OAFA20B,GAAOE,WAAY,EAEZF,KAMTrlC,EAAQC,OAAOA,GAAQolC,OAAO,UAAW,WACvC,MAAO,UAASp/B,EAAOu/B,GAIrB,MAHAA,GAAWhyB,MAAMgyB,GAAY,EAAIA,EACjCv/B,EAAQuN,MAAMvN,GAAS,EAAY,IAARA,EAEpBA,EAAMw/B,QAAQD,GAAY,OAOrCxlC,EAAQC,OAAOA,GAAQolC,OAAO,OAAQ,WACpC,MAAO,UAASp/B,GAEd,MAAIA,IAAS,EACJA,EAAQ,UAGH,IAANA,EAAa,YAOzBjG,EAAQC,OAAOA,GAAQolC,OAAO,OAAQ,WACpC,MAAO,UAASp/B,GACd,MAAOA,GAAQ,cAIlByC,eAAgB1I,SAGnB,WACE,YAEAyL,OAAMi6B,UAAU,qBAEdzkC,UACE0W,OAAQ,EACR3P,OAAQ,GACR0lB,SAAU,IACV5mB,WAAY,eAGd6+B,OACE39B,OAAQqI,OACRsH,OAAQ4mB,OACR7Q,SAAU6Q,OACVz3B,WAAYuJ,QAGdu1B,UACIC,UAAW,WACT,MAAOp6B,OAAMo6B,UAAUh9B,KAAKb,SAG9B89B,WAAY,WACV,MAAOj9B,MAAKg9B,WAAah9B,KAAKg9B,UAAUE,MAI9CvhB,KAAM,WACJ,MAAK3b,MAAKb,OAKLa,KAAKg9B,UAAV,WACEtY,SAAQ1iB,MAAM,4DAA8DhC,KAAKb,YALjFulB,SAAQ1iB,MAAM,4DAUlBwB,QACEqS,MAAO,SAAShS,EAAOlJ,GACjBA,GAAQA,EAAKoqB,SAIjB/kB,KAAKg9B,UAAU/hB,OACfjb,KAAKi9B,WAAWviB,GAAG,SAAU1a,KAAKma,cAItCgjB,SAEEhjB,UAAW,WACTna,KAAKi9B,WAAWniB,IAAI,SAAU9a,KAAKma,WAEnCna,KAAKo9B,aAAex6B,MAAMmiB,OAAO/kB,KAAKk9B,KACpCj/B,WAAY+B,KAAK/B,WACjB4mB,SAAU7kB,KAAK6kB,SACf/V,OAAQ9O,KAAK8O,SAGf9O,KAAKk9B,IAAIxiB,GAAG,WAAY1a,KAAKukB,aAC7BvkB,KAAKk9B,IAAIG,QAAQ,SAAWtY,QAAQ,KAGtCR,YAAa,WACXvkB,KAAKk9B,IAAIpiB,IAAI,WAAY9a,KAAKukB,aAC9BvkB,KAAKo9B,aAAapiB","file":"../../js/app-f6833f80c4.min.js","sourcesContent":["/*!\n * efit-frontend\n * eFit Frontend\n * http://www.finanz-training.at\n * @author Armin Pfurtscheller\n * @version 1.0.0\n * Copyright 2017. MIT licensed.\n */\n/* global angular, FastClick */\n(function(global, angular){\n  'use strict';\n\n  //\n  // MODULE\n  //\n  var module = 'eFit';\n\n  //\n  // APP\n  //\n  var app = angular.module(module, [\n    'ngSanitize',\n    'ngMessages',\n    'ngResource',\n    'ui.router',\n    'eFit.views',\n    'eFit.config'\n  ]);\n\n  //\n  // CONSTANTS\n  //\n\n  // @see: config.js\n\n  //\n  // CONFIG\n  //\n  app.config([\n    '$locationProvider', '$stateProvider', '$urlRouterProvider', '$httpProvider',\n    '$templateRequestProvider', '$resourceProvider', '$qProvider', 'VIEWS_PATH',\n    function(\n      $locationProvider, $stateProvider, $urlRouterProvider, $httpProvider,\n      $templateRequestProvider, $resourceProvider, $qProvider, VIEWS_PATH) {\n\n      // -------------------------\n      // LOCATION\n      // -------------------------\n      $locationProvider.html5Mode(false);\n      $locationProvider.hashPrefix('!');\n\n      // -------------------------\n      // INTERCEPTORS\n      // -------------------------\n      $httpProvider.interceptors.push('httpInterceptor');\n\n      // -------------------------\n      // PROMISES\n      // -------------------------\n      $qProvider.errorOnUnhandledRejections(false);\n\n      // -------------------------\n      // RESOURCES\n      // -------------------------\n      $resourceProvider.defaults.actions = {\n        get:    { method: 'GET' },\n        list:   { method: 'GET', isArray:true },\n        update: { method: 'PATCH' },\n        create: { method: 'POST'},\n        delete: { method: 'DELETE'}\n      };\n\n      // -------------------------\n      // TEMPLATES\n      // -------------------------\n\n      // assign default `templateUrl` for states\n      $stateProvider.decorator('views', function(state, parent) {\n        //\n        // Assigns default template URL:\n        // ./path/to/state/[view/][/name].html\n        //\n        var newViewConfig = {}, views = parent(state);\n        angular.forEach(views, function(config, view){\n          var viewMatch = view.match(/([^@]+)\\@/); // [parentView/]view@state.name\n          var viewName = viewMatch ? '/' + viewMatch[1] : '';\n\n          var stateName = state.name.replace(/\\./g, '/');\n\n          var templateUrl = config.templateUrl || [\n            VIEWS_PATH,\n            stateName,\n            viewName,\n            '.html'\n          ].join('');\n\n          config.templateUrl = templateUrl;\n          newViewConfig[view] = config;\n        });\n\n        return newViewConfig;\n      });\n\n      // ignore JWT authorization on template requests\n      $templateRequestProvider.httpOptions({\n        skipAuthorization: true\n      });\n\n      // -------------------------\n      // STATES\n      // -------------------------\n\n      // main (i18n)\n      $stateProvider.state('main', {\n        url: '',\n        abstract: true,\n        resolve: {\n          translations: ['i18n', function(i18n){\n            return i18n.load('de', {\n              skipAuthorization: true\n            });\n          }],\n        },\n        template: '<div id=\"main\" data-ui-view=\"\"></div>'\n      });\n\n      // frontend\n      $stateProvider.state('frontend', {\n        parent: 'main',\n        url: '/',\n        resolve: {\n          current: [\n            'user', '$state', '$q',\n            function(user, $state){\n              var promise = user.load().$promise;\n              return promise.catch(function(){\n                $state.go('login.frontend');\n              });\n            }\n          ]\n        },\n        data: {\n          role: [\n            'ROLE_USER',\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        views: {\n          'navbar@frontend': {},\n          'home@frontend': {},\n          'topics@frontend': {},\n\n          'financial-knowledge@frontend':{},\n          'financial-knowledge/interest-task@frontend':{},\n          'financial-knowledge/diversification-task@frontend':{},\n\n          'consumer-behaviour@frontend':{},\n          'consumer-behaviour/bomb-task@frontend':{},\n          'consumer-behaviour/anchoring-task@frontend':{},\n          'consumer-behaviour/mental-bookkeeping-task@frontend':{},\n          'consumer-behaviour/framing-task@frontend':{},\n\n          'self-control@frontend':{},\n          'self-control/savings-target-task@frontend':{},\n          'self-control/savings-supported-task@frontend':{},\n          'self-control/self-commitment-task@frontend':{},\n          'self-control/procrastination-task@frontend':{},\n\n          'status@frontend': {},\n          'contact@frontend': {\n            controller: 'ContactController',\n            controllerAs: 'contactController'\n          },\n          'footer@frontend': {},\n          'offcanvas@': {\n            controller: 'FrontendController',\n            controllerAs: 'frontendController'\n          },\n          '@': {\n            controller: 'FrontendController',\n            controllerAs: 'frontendController'\n          }\n        }\n      });\n\n      // backend\n      $stateProvider.state('backend', {\n        parent: 'main',\n        url: '/admin',\n        data: {\n          role: [\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        resolve: {\n          isSuperAdmin: [\n            'auth', '$state', '$q',\n            function(auth, $state, $q){\n              var defer = $q.defer();\n\n              var successCallback = function() {\n                defer.resolve(true);\n              };\n              var failureCallback = function() {\n                defer.resolve(false);\n              };\n\n              auth.hasRole(\n                'ROLE_SUPER_ADMIN'\n              ).then(\n                successCallback,\n                failureCallback\n              );\n\n              return defer.promise;\n            }\n          ]\n        },\n        redirectTo: 'backend.workshops',\n        views: {\n          'main@backend': {},\n          'navbar@backend': {},\n          'footer@backend': {},\n          'offcanvas@': {\n            controller: 'BackendController',\n            controllerAs: 'backendController'\n          },\n          '@': {\n            controller: 'BackendController',\n            controllerAs: 'backendController'\n          }\n        },\n\n      });\n\n      $stateProvider.state('backend.workshops', {\n        url: '?{expand:int}',\n        data: {\n          role: [\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        resolve: {\n          workshops: ['Workshop', function(Workshop){\n            return Workshop.list().$promise;\n          }]\n        },\n        params: {\n          expand: {\n            value: null,\n            dynamic: true\n          }\n        },\n        controller: 'WorkshopController',\n        controllerAs: 'workshopController'\n      });\n\n      $stateProvider.state('backend.admins', {\n        url: '/trainer',\n        data: {\n          role: 'ROLE_SUPER_ADMIN',\n          redirects: {\n            ROLE_ADMIN: 'backend'\n          }\n        },\n        resolve: {\n          admins: ['Admin', function(Admin){\n            return Admin.list().$promise;\n          }]\n        },\n        controller: 'AdminController',\n        controllerAs: 'adminController'\n      });\n\n      // login\n      $stateProvider.state('login', {\n        url: '/login',\n        parent: 'main',\n        abstract: true,\n        redirectTo: 'login.frontend.index'\n      });\n\n      $stateProvider.state('login.frontend', {\n        url: '/app',\n        resolve: {\n          code: [\n            'CODE_STORAGE_KEY', 'storage',\n            function(CODE_STORAGE_KEY, storage){\n              var proxy = storage.getProxy();\n              return proxy.getItem(\n                CODE_STORAGE_KEY\n              );\n            }\n          ]\n        },\n        data: {\n          redirects: {\n            ROLE_USER: 'frontend'\n          }\n        },\n        redirectTo: 'login.frontend.index',\n        controller: 'LoginFrontendController',\n        controllerAs: 'loginFrontendController'\n      });\n\n      $stateProvider.state('login.frontend.index', {\n        url: ''\n      });\n\n      $stateProvider.state('login.frontend.signup', {\n        url: '/schule',\n        redirectTo: 'login.frontend.signup.step1'\n      });\n\n      $stateProvider.state('login.frontend.signup.step1', {\n        url: '/schritt-1',\n        redirectTo: function(transition){\n          var redirectTo = function(code) {\n            if (code) {\n              return 'login.frontend.signup.step2';\n            }\n          };\n\n          var $injector = transition.injector();\n          var code = $injector.getAsync('code');\n          return code.then(redirectTo);\n        }\n      });\n\n      $stateProvider.state('login.frontend.signup.step2', {\n        url: '/schritt-2',\n        resolvePolicy: { when: 'EAGER' },\n        redirectTo: function(transition){\n          var redirectTo = function(code) {\n            if (!code) {\n              return 'login.frontend.signup.step1';\n            }\n          };\n\n          var $injector = transition.injector();\n          var code = $injector.getAsync('code');\n          return code.then(redirectTo);\n        }\n      });\n\n      $stateProvider.state('login.frontend.signin', {\n        url: '/zuhause'\n      });\n\n      $stateProvider.state('login.backend', {\n        url: '/admin',\n        data: {\n          redirects: {\n            ROLE_ADMIN: 'backend',\n            ROLE_SUPER_ADMIN: 'backend'\n          }\n        },\n        controller: 'LoginBackendController',\n        controllerAs: 'loginBackendController'\n      });\n\n      $urlRouterProvider.otherwise('/');\n    }\n  ]);\n\n  //\n  // RUN\n  //\n  app.run(['$injector', function($injector) {\n      var $transitions = $injector.get('$transitions');\n      var $rootScope = $injector.get('$rootScope');\n      var appState = $injector.get('appState');\n      var $state = $injector.get('$state');\n      var auth = $injector.get('auth');\n\n      var onStart = function(transition) {\n        appState.routerBusy = true;\n\n        var state = transition.to();\n        var data = state.data || {};\n        var role = data.role || null;\n        var redirects = data.redirects || {};\n\n        // no authentication check for states\n        // without any authorization settings\n        if (role === null) {\n\n          // try to redirect authenticated users\n          // with auth roles to configured route\n          var user = auth.getUser();\n          if (user === null) {\n            return true;\n          }\n\n          var roles = user.roles || [];\n          for (role in redirects) {\n            if (roles.indexOf(role)>=0) {\n              var target = redirects[role];\n              return $state.target(target);\n            }\n          }\n\n          return true;\n        }\n\n        // assert role an array for callbacks\n        if (!angular.isArray(role)) {\n          role = [role];\n        }\n\n        var successCallback = function()\n          {\n            return true;\n          };\n\n        var failureCallback = function()\n          {\n            // redirect to login page depending on\n            // given role with unsufficient rights\n            // or possibly failed refresh process!\n            switch(role[0])\n            {\n              case 'ROLE_ADMIN':\n              case 'ROLE_SUPER_ADMIN':\n                return $state.target('login.backend');\n              default:\n                return $state.target('login.frontend');\n            }\n          };\n\n        return auth.hasRole(role).then(\n          successCallback,\n          failureCallback\n        );\n      };\n\n      var onError = function(/*transition*/) {\n        appState.routerBusy = false;\n      };\n\n      var onSuccess = function(transition) {\n        $rootScope.state = transition.to();\n        appState.routerBusy = false;\n      };\n\n      $rootScope.$watch(\n        function() {\n          return appState.isBusy();\n        },\n        function(isBusy) {\n          $rootScope.isBusy = isBusy;\n          $rootScope.httpBusy = appState.httpBusy;\n          $rootScope.routerBusy = appState.routerBusy;\n        }\n      );\n\n      $transitions.onError({}, onError);\n      $transitions.onStart({}, onStart);\n      $transitions.onSuccess({}, onSuccess);\n\n      FastClick.attach(document.body);\n    }\n  ]);\n\n  //\n  // EXPOSE\n  //\n  global.ANGULAR_MODULE = module;\n\n})(window, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  var HttpInterceptor = function($injector)\n    {\n      this.$injector = $injector;\n      this._urls = {};\n    };\n\n  /** @var {Array.<string>} $inject Dependencies to be injected by Angular. */\n  HttpInterceptor.$inject = ['$injector'];\n\n  /**\n   * Gets latest response from $http.\n   */\n  HttpInterceptor.prototype.getLastSuccessResponse = function()\n    {\n      return this._lastSuccessResponse;\n    };\n\n  /**\n   * Gets latest error from $http.\n   */\n  HttpInterceptor.prototype.getLastErrorResponse = function()\n    {\n      return this._lastErrorResponse;\n    };\n\n  /**\n   * Gets latest response from $http.\n   */\n  HttpInterceptor.prototype.getLastResponse = function()\n    {\n      return this._lastResponse;\n    };\n\n  /**\n   * Returns a hash of all requested urls.\n   */\n  HttpInterceptor.prototype.getUrls = function()\n    {\n      return this._urls;\n    };\n\n  /**\n   * Intercepts $http request's config before invocation.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.request = function(config)\n    {\n      var appState = this.$injector.get('appState');\n\n      // set app state to busy\n      appState.httpBusy = true;\n\n      // save url in internal cache\n      this._setUrl(config);\n\n      // set common headers\n      config.headers['X-Requested-With'] = 'XMLHttpRequest';\n\n      // JWT authorization\n      var successCallback = function(token) {\n        if (token) {\n          config.headers.Authorization = 'Bearer ' + token;\n        }\n\n        return config;\n      };\n\n      var failureCallback = function() {\n        return config;\n      };\n\n      if (config.skipAuthorization) {\n        return config;\n      }\n\n      var jwtToken = this._getJWTToken(config);\n      var $q = this.$injector.get('$q');\n      return $q.when(jwtToken).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Intercepts $http request error's config before invocation.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.requestError = function(rejection)\n    {\n      var appState = this.$injector.get('appState');\n      var $q = this.$injector.get('$q');\n\n      appState.httpBusy = false;\n\n      return $q.reject(rejection);\n    };\n\n  /**\n   * Intercepts $http response before forwarding.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.response = function(response)\n    {\n      var appState = this.$injector.get('appState');\n\n      this._setLastSuccessResponse(response);\n      this._setLastResponse(response);\n\n      appState.httpBusy = false;\n\n      return response;\n    };\n\n  /**\n   * Intercepts $http error response before forwarding.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.responseError = function(rejection)\n    {\n      var appState = this.$injector.get('appState');\n      var $q = this.$injector.get('$q');\n\n      this._showGlobalErrorMessage(rejection);\n      this._setLastErrorResponse(rejection);\n      this._setLastResponse(rejection);\n\n      appState.httpBusy = false;\n\n      return $q.reject(rejection);\n    };\n\n  /**\n   * Sets fully qualified url with query string for a request.\n   * This is useful to manage Angular's $cacheFactory for $http.\n   * @param {object} config\n   */\n  HttpInterceptor.prototype._setUrl = function(config)\n    {\n      var $httpParamSerializer = this.$injector.get('$httpParamSerializer');\n      var params = $httpParamSerializer(config.params);\n      var url = config.url + (\n        params ?\n          '?' + params :\n          ''\n      );\n\n      this._urls[url] = true;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastResponse = function(responseOrRejection)\n    {\n      this._lastResponse = responseOrRejection;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastErrorResponse = function(rejection)\n    {\n      this._lastErrorResponse = rejection;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastSuccessResponse = function(response)\n    {\n      this._lastSuccessResponse = response;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._showGlobalErrorMessage = function(rejection)\n  {\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n\n    var config = rejection.config || {};\n    if (config.skipGlobalErrorMessage) {\n      return;\n    }\n\n    var data = rejection.data || {};\n    if (!data.message) {\n      return;\n    }\n\n    notification.error(i18n.get(data.message));\n  };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._getJWTToken = function() {\n    var auth = this.$injector.get('auth');\n    var jwt = this.$injector.get('jwt');\n\n    // a) no token available in storage\n    var token = jwt.getToken();\n    if (!token) {\n      return null;\n    }\n\n    // b) token is still valid, check for\n    // refresh if it expires in 5 minutes\n    if (jwt.isExpired(token, 600)) {\n      var successCallback = function() {\n        return jwt.getToken();\n      };\n\n      var failureCallback = function() {\n        return null;\n      };\n\n      return auth.refresh().then(\n        successCallback,\n        failureCallback\n      );\n    }\n\n    // c) use current token\n    return jwt.getToken();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('httpInterceptor',['$injector',function($injector){\n\n      var httpInterceptor = $injector.instantiate(HttpInterceptor);\n\n      return { // important: $http service invokes this methods with global scope!\n        getUrls: function(){ return httpInterceptor.getUrls(); },\n        getLastResponse: function(){ return httpInterceptor.getLastResponse(); },\n        getLastErrorResponse: function(){ return httpInterceptor.getLastErrorResponse(); },\n        getLastSuccessResponse: function(){ return httpInterceptor.getLastSuccessResponse(); },\n        request: function(config){ return httpInterceptor.request(config); },\n        response: function(response){ return httpInterceptor.response(response); },\n        requestError: function(rejection){ return httpInterceptor.responseError(rejection); },\n        responseError: function(rejection){ return httpInterceptor.responseError(rejection); }\n      };\n    }]);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Notification = function() {\n  };\n\n  Notification.$inject = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Shows user notification in a toast message.\n   *\n   * @public\n   * @method notify\n   * @param {string} message\n   * @param {string} status One of `danger`, `warning`, `success` or `primary`.\n   * @param {object} options Additional options like `timeout` and `pos`.\n   * @return {object} Notification object\n   */\n  Notification.prototype.notify = function(message, status, options) {\n    status = status || 'default';\n    options = options || {};\n\n    options.message = message;\n    options.status = status;\n\n    return UIkit.notification(options);\n  };\n\n  /**\n   * Shows user success notification.\n   *\n   * @public\n   * @method success\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.success = function(message, options) {\n    this.notify(message, 'success', options);\n  };\n\n  /**\n   * Shows user primary notification.\n   *\n   * @public\n   * @method success\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.primary = function(message, options) {\n    this.notify(message, 'primary', options);\n  };\n\n  /**\n   * Shows user error notification.\n   *\n   * @public\n   * @method error\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.error = function(message, options) {\n    this.notify(message, 'danger', options);\n  };\n\n  /**\n   * Shows user warning notification.\n   *\n   * @public\n   * @method warning\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.warning = function(message, options) {\n    this.notify(message, 'warning', options);\n  };\n\n  /**\n   * Closes all open notifications.\n   *\n   * @public\n   * @method closeAll\n   * @return {void}\n   */\n  Notification.prototype.closeAll = function() {\n    UIkit.notification.closeAll();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('notification', Notification);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var AppState = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  AppState.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} httpBusy If $http is currently doing work. */\n  AppState.prototype.httpBusy = false;\n\n  /** @var {boolean} routerBusy If router is currently doing work. */\n  AppState.prototype.routerBusy = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Returns true if `httpBusy` or `routeBusy` is true.\n   *\n   * @public\n   * @method isBusy\n   * @return {void}\n   */\n  AppState.prototype.isBusy = function() {\n    return this.httpBusy || this.routeBusy;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('appState', AppState);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Animation = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  Animation.$inject = ['$injector'];\n\n  /**\n   * Gets correctly prefixed animation end event.\n   *\n   * @private\n   * @property animationEndEvent\n   * @return {void}\n   */\n  Animation.prototype.animationEndEvent = (function() {\n    var dummy = document.createElement('div');\n    var events = {\n      'WebkitAnimation': 'webkitAnimationEnd',\n      'MozTAnimation': 'animationend',\n      'animation': 'animationend'\n    };\n\n    for(var key in events){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return events[key];\n        }\n    }\n\n    return null;\n  })();\n\n  /**\n   * Gets correctly prefixed transition end event.\n   *\n   * @private\n   * @property transitionEndEvent\n   * @return {void}\n   */\n  Animation.prototype.transitionEndEvent = (function() {\n    var dummy = document.createElement('div');\n    var events = {\n      'transition':'transitionend',\n      'OTransition':'oTransitionEnd',\n      'MozTransition':'transitionend',\n      'WebkitTransition':'webkitTransitionEnd'\n    };\n\n    for(var key in events){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return events[key];\n        }\n    }\n\n    return null;\n  })();\n\n  /**\n   * Prepares cross-browser compatible tranlsate hash for ng-style.\n   *\n   * @public\n   * @method translate\n   * @param {number} x\n   * @param {number} y\n   * @param {number} [z]\n   * @return {object}\n   */\n  Animation.prototype.translate = function(x, y, z) {\n    var string = this.$injector.get('string');\n\n    var translate = angular.isUndefined(z) ?\n      string.sprintf('translate(%spx,%spx)', x, y) :\n      string.sprintf('translate3d(%spx,%spx,%spx)', x, y, z);\n\n    return {\n      'webkitTransform': translate,\n      'mozTransform': translate,\n      'msTransform': translate,\n      'oTransform': translate,\n      'transform': translate\n    };\n  };\n\n  /**\n   * Polyfills potentially missing `requestAnimationFrame`.\n   *\n   * @private\n   * @method requestAnimationFrame\n   * @return {void}\n   */\n  Animation.prototype.requestAnimationFrame = (function(){\n      var lastTime = 0;\n      var vendors = ['ms', 'moz', 'webkit', 'o'];\n      for(var i = 0; i < vendors.length && !window.requestAnimationFrame; i++) {\n          window.requestAnimationFrame = window[vendors[i]+'RequestAnimationFrame'];\n          window.cancelAnimationFrame = (\n            window[vendors[i]+'CancelAnimationFrame'] ||\n            window[vendors[i]+'CancelRequestAnimationFrame']\n          );\n      }\n\n      if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function(callback) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var timeout = function() { callback(currTime + timeToCall); };\n            var id = window.setTimeout(timeout, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n      }\n\n      return window.requestAnimationFrame.bind(window);\n  }());\n\n  /**\n   * Polyfills potentially missing `cancelAnimationFrame`.\n   *\n   * @private\n   * @method cancelAnimationFrame\n   * @return {void}\n   */\n  Animation.prototype.cancelAnimationFrame = (function(){\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function(id) { clearTimeout(id); };\n    }\n\n    return window.cancelAnimationFrame.bind(window);\n  })();\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('animation', Animation);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  var Random = function() {\n    this._spareRandomCache = null;\n  };\n\n  Random.$inject = [];\n\n  Random.prototype.between = function(min, max) {\n    min = typeof min !== 'undefined' ? min : 0;\n    max = typeof max !== 'undefined' ? max : 1;\n\n    var fact = (max - min + 1);\n    var rand = Math.random();\n\n    return Math.floor(rand * fact + min);\n  };\n\n  Random.prototype.gaussian = function(mean, stdDev) {\n    stdDev = typeof stdDev !== 'undefined' ? stdDev : 1;\n    mean = typeof mean !== 'undefined' ? mean : 0;\n\n    var spare = this._spareRandomCache;\n    if (this._spareRandomCache !== null) {\n      this._spareRandomCache = null;\n      return mean + stdDev * spare;\n    }\n\n    var u, v, s;\n\n    do {\n      u = 2 * Math.random() - 1;\n      v = 2 * Math.random() - 1;\n      s = u*u + v*v;\n    } while (s >= 1 || s===0);\n\n    var m = Math.sqrt(-2 * Math.log(s) / s);\n    this._spareRandomCache = v * m;\n    return mean + stdDev * u * m;\n  };\n\n  Random.prototype.pick = function(array) {\n    return array[this.between(0, array.length - 1)];\n  };\n\n  Random.prototype.push = function(array, value) {\n    var rand = this.between(0, array.length - 1);\n    array.push(array[rand]);\n    array[rand] = value;\n\n    return array.length;\n  };\n\n  Random.prototype.shuffle = function(array) {\n    for( var i=array.length-1; i>0; i-- ) {\n      var rand = this.between(0, i);\n      var temp = array[i];\n\n      array[i] = array[rand];\n      array[rand] = temp;\n    }\n\n    return array;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('random', Random);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var String = function()\n    {\n    };\n\n  String.$inject = [];\n\n  /**\n   * Replaces placeholders (= '%s') from a string with variables.\n   *\n   * @public\n   * @method sprintf\n   * @param {string} input String to replace placeholders.\n   * @param {object} variables Object holding replacements.\n   * @return {string}\n   */\n  String.prototype.sprintf = function(input,variables)\n    {\n        if (!angular.isArray(variables)) {\n          variables = [].slice.call(arguments, 1);\n        }\n\n        for (var i=0; i<variables.length; i++) {\n          input = input.replace(/%s/,variables[i]);\n        }\n\n        return input;\n    };\n\n  /**\n   * Truncates a string by given params.\n   *\n   * @public\n   * @method truncate\n   * @param {string} input String to be truncated.\n   * @param {number} [maxLength=20] Maximum number of chars.\n   * @return {string}\n   */\n  String.prototype.truncate = function(input,maxLength)\n    {\n        maxLength = maxLength || 20;\n        if (input.length <= maxLength) {\n          return input;\n        }\n\n        return input.substring(0,maxLength) + '...';\n    };\n\n  /**\n   * Trims a string.\n   *\n   * @public\n   * @method trim\n   * @param {string} input String to trim.\n   * @return {string}\n   */\n  String.prototype.trim = function(input)\n    {\n        return input.replace(/^\\s+|\\s+$/g, '');\n    };\n\n  /**\n   * Transforms a string to camel case.\n   *\n   * @public\n   * @method toCamel\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toCamel = function(input)\n    {\n        return input.replace(/([-_][a-z])/g, function(part){\n            return part.toUpperCase().replace(/[-_]/,'');\n        });\n    };\n\n  /**\n   * Transforms a string to spinal case.\n   *\n   * @public\n   * @method toSpinal\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toSpinal = function(input)\n    {\n        return input.replace(/([A-Z]|_[a-z])/g, function(part){\n            return '-' + part.toLowerCase().replace(/_/,'');\n        });\n    };\n\n  /**\n   * Transforms a string to snake case.\n   *\n   * @public\n   * @method toSnake\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toSnake = function(input)\n    {\n        return input.replace(/([A-Z]|-[a-z])/g, function(part){\n            return '_' + part.toLowerCase().replace(/-/,'');\n        });\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('string', String);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  /**\n   * @varructor\n   */\n  var Storage = function($injector) {\n    this.$injector = $injector;\n  };\n\n  Storage.MODE_COOKIES = 'COOKIES';\n  Storage.MODE_STORAGE = 'STORAGE';\n  Storage.$inject = ['$injector'];\n\n  /**\n   * Gets the current storage interface of the service.\n   * Can be one of modes `COOKIES` or `STORAGE`. If no\n   * one is given will default to local storage if it's\n   * supported, otherwise falls back to cookies.\n   *\n   * @public\n   * @method getProxy\n   * @param {String} mode\n   * @return {Object}\n   */\n  Storage.prototype.getProxy = function(mode) {\n    switch (mode) {\n      case Storage.MODE_COOKIES:\n       return this._getCookieProxy();\n\n      case Storage.MODE_STORAGE:\n       return this._getLocalStorageProxy();\n\n     default:\n      if (this.supportsLocalStorage()) {\n        return this._getLocalStorageProxy();\n      }\n\n      return this._getCookieProxy();\n    }\n  };\n\n  /**\n   * Checks if browser supports local storage.\n   *\n   * @public\n   * @method supportsLocalStorage\n   * @return {Boolean}\n   */\n  Storage.prototype.supportsLocalStorage = function() {\n    var $window = this.$injector.get('$window');\n    var storageProxy = $window.localStorage;\n    var key = '__local__storage__feature__test';\n    var val = '__local__storage__feature__test';\n\n    try {\n     storageProxy.setItem(key, val);\n     storageProxy.removeItem(key);\n    } catch (e) {\n     return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Stringifies and uri encodes a value.\n   *\n   * @private\n   * @param {Mixed} value\n   * @method _encode\n   *\n   * @return {String}\n   */\n  Storage.prototype._encode = function(value) {\n    try {\n     value = JSON.stringify(value);\n    } catch (e) {\n     value = undefined;\n    }\n\n    return encodeURIComponent(value);\n  };\n\n  /**\n   * Decodes a stringified and uri encoded value.\n   *\n   * @private\n   * @param {Mixed}\n   * @method _decodeValue\n   *\n   * @return {Mixed}\n   */\n  Storage.prototype._decode = function(value) {\n    var decoded;\n    switch (typeof value) {\n     case 'string':\n       decoded = decodeURIComponent(value);\n       try {\n         decoded = JSON.parse(decoded);\n       } catch (e) {\n         /* noop */\n       }\n       break;\n     default:\n       decoded = undefined;\n    }\n\n    if (decoded === 'undefined') {\n     decoded = undefined;\n    }\n\n    if (decoded === undefined) {\n     decoded = null;\n    }\n\n    return decoded;\n  };\n\n  /**\n   * Provides cookie storage proxy layer.\n   *\n   * @private\n   * @method _getCookieProxy\n   *\n   * @return {Object}\n   */\n  Storage.prototype._getCookieProxy = function() {\n    var documentProxy = this.$injector.get('$document');\n\n    var me = this;\n    var _getAll = function(parse) {\n     var items = {};\n\n     var cookies = documentProxy.cookie.split('; ');\n     if (cookies.length === 1 && cookies[0] === '') {\n       return items;\n     }\n\n     for (var i = 0; i < cookies.length; i++) {\n       var cookie = cookies[i].split('=');\n       if (!parse) {\n         items[cookie[0]] = cookie[1];\n         continue;\n       }\n\n       items[cookie[0]] = me._decode(cookie[1]);\n     }\n\n     return items;\n    };\n\n    var setCookie = function(key, value, expires, domain, path, secure) {\n     value = me._encode(value);\n\n     try {\n       var date = new Date(expires);\n       if (isNaN(date)) {\n         var input = expires;\n         expires = undefined;\n         throw new Error('storage.js: \"' + input + '\" cannot be converted to date string!');\n       }\n\n       expires = date.toUTCString();\n     } catch (e) {\n       /* noop */\n     }\n\n     expires = expires ? expires : false;\n\n     var cookie = key + '=' + value;\n     cookie += expires ? ';expires='+expires : '';\n     cookie += domain ? ';domain='+domain : '';\n     cookie += path ? ';path='+path : '';\n     cookie += secure ? ';secure' : '';\n\n     documentProxy.cookie = cookie;\n    };\n\n    var getCookie = function(key) {\n     var cookies = _getAll(false);\n     if (cookies.hasOwnProperty(key)) {\n       return me._decode(cookies[key]);\n     }\n\n     return null;\n    };\n\n    var getAllCookies = function() {\n     return _getAll(true);\n    };\n\n    var removeCookie = function(key) {\n     setCookie(key, '', -1);\n    };\n\n    var removeAllCookies = function() {\n     for (var key in getAllCookies()) {\n       removeCookie(key);\n     }\n    };\n\n    return {\n     getItem: getCookie,\n     getAllItems: getAllCookies,\n     setItem: setCookie,\n     removeItem: removeCookie,\n     removeAllItems: removeAllCookies\n    };\n  };\n\n  /**\n   * Provides local storage proxy layer.\n   *\n   * @private\n   * @method _getLocalStorageProxy\n   *\n   * @return {Object}\n   */\n  Storage.prototype._getLocalStorageProxy = function() {\n    var $window = this.$injector.get('$window');\n    var storageProxy = $window.localStorage;\n\n    var me = this;\n    var setItem = function(key, value) {\n     value = me._encode(value);\n     storageProxy.setItem(key, value);\n    };\n\n    var getItem = function(key) {\n     var value = storageProxy.getItem(key);\n     return me._decode(value);\n    };\n\n    var getAllItems = function() {\n     var items = {};\n\n     for (var i = 0; i < storageProxy.length; i++) {\n       var key = storageProxy.key(i);\n       items[key] = getItem(key);\n     }\n\n     return items;\n    };\n\n    var removeItem = function(key) {\n     storageProxy.removeItem(key);\n    };\n\n    var removeAllItems = function() {\n     storageProxy.clear();\n    };\n\n    return {\n     getItem: getItem,\n     getAllItems: getAllItems,\n     setItem: setItem,\n     removeItem: removeItem,\n     removeAllItems: removeAllItems\n    };\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('storage', Storage);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Auth = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  /**\n   * @property {Array.<string>} $inject\n   */\n  Auth.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends a POST request to register route and\n   * persists retrieved JWT token on success.\n   *\n   * @public\n   * @method signin\n   * @param {Object} data Data to submit.\n   * @param {string} [firewall='frontend'] firewall\n   * @param {Object} [config={}] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.signup = function(data, firewall, config)\n    {\n      var $http = this.$injector.get('$http');\n\n      firewall = firewall || 'frontend';\n      config = config || {};\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      var url = this._getSignupUrl(firewall);\n\n      var promise = $http.post(\n        url,\n        {\n          _username: data.username,\n          _password: data.password\n        },\n        angular.extend(config || {})\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Sends a POST request to login route and\n   * persists retrieved JWT token on success.\n   *\n   * @public\n   * @method signin\n   * @param {Object} data Data to submit.\n   * @param {string} [firewall='frontend'] firewall\n   * @param {Object} [config={}] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.signin = function(data, firewall, config)\n    {\n      var $http = this.$injector.get('$http');\n\n      firewall = firewall || 'frontend';\n      config = config || {};\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      var url = this._getSigninUrl(firewall);\n\n      var promise = $http.post(\n        url,\n        {\n          _username: data.username,\n          _password: data.password\n        },\n        angular.extend(config || {}, {\n          skipAuthorization: true\n        })\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Destroys JWT token representing user.\n   *\n   * @public\n   * @method logout\n   * @param {Object} [config] $http config.\n   * @return {Void}\n   */\n  Auth.prototype.signout = function(config)\n    {\n      var $http = this.$injector.get('$http');\n      var user = this.$injector.get('user');\n\n      var successCallback = function()\n        {\n          user.unload();\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      return $http.get(\n        this._getSignoutUrl(),\n        config || {}\n      ).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sends a POST request to refresh route\n   * with saved refresh token from login().\n   *\n   * @public\n   * @method refresh\n   * @param {Object} [config] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.refresh = function(config)\n    {\n      var $http = this.$injector.get('$http');\n      var jwt = this.$injector.get('jwt');\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function(/*rejection*/)\n        {\n          // invalidate possibly stored jwt\n          // token to avoid further lookups\n          // especially from router resolve\n          jwt.invalidate();\n        };\n\n      var promise = $http.post(\n        this._getRefereshUrl(),\n        {\n          /* jshint camelcase: false */\n          refresh_token: jwt.getRefreshToken()\n          /* jshint camelcase: true */\n        },\n        angular.extend(config || {}, {\n          skipGlobalErrorMessage: true,\n          skipAuthorization: true\n        })\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Returns decoded JWT token containing\n   * user information such as `username`.\n   * Note: By default expired tokens are\n   * not accepted, set parameter if you\n   * want to accept expired tokens too!\n   *\n   * @public\n   * @method getUser\n   * @param {boolean} [acceptExpired=false]\n   * @return {Object|null}\n   */\n  Auth.prototype.getUser = function(acceptExpired)\n    {\n      acceptExpired = acceptExpired || false;\n\n      var jwt = this.$injector.get('jwt');\n\n      var token = jwt.getToken();\n      if (!token) {\n        return null;\n      }\n\n      if (!acceptExpired) {\n        if (jwt.isExpired()) {\n          return null;\n        }\n      }\n\n      return jwt.decode(token);\n    };\n\n  /**\n   * Checks if user has given role provided\n   * in `roles` property encoded into JWT.\n   *\n   * @public\n   * @method hasRole\n   * @param {string|array} role\n   * @return {Promise}\n   */\n  Auth.prototype.hasRole = function(role)\n    {\n      var jwt = this.$injector.get('jwt');\n      var $q = this.$injector.get('$q');\n\n      var defer = $q.defer();\n      var promise = defer.promise;\n\n      var isArray = angular.isArray(role);\n      if (isArray && role.length === 0) {\n        defer.reject(null);\n        return promise;\n      }\n\n      if (!role) {\n        defer.reject(null);\n        return promise;\n      }\n\n      // accept expired tokens - we will\n      // use refresh() to get new token\n      // if current one is invalid now\n      var user = this.getUser(true);\n      if (user === null) {\n        defer.reject(null);\n        return promise;\n      }\n\n      // primitive method for role check\n      var resolveRole = function(user) {\n        var roles = user.roles || [];\n        if (angular.isString(role)) {\n          role = [role];\n        }\n\n        var hasRole = false;\n        for (var i=0; i<role.length; i++) {\n          if (roles.indexOf(role[i]) >= 0) {\n            hasRole = true;\n            break;\n          }\n        }\n\n        if (hasRole) {\n          defer.resolve();\n        } else {\n          defer.reject();\n        }\n      };\n\n      // immediately resolve valid tokens\n      if (!jwt.isExpired()) {\n        resolveRole(user);\n        return promise;\n      }\n\n      // try to refresh invalid tokens\n      var me = this;\n      var successCallback = function()\n        {\n          user = me.getUser();\n          resolveRole(user);\n        };\n\n      var failureCallback = function()\n        {\n          defer.reject();\n        };\n\n      this.refresh().then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Saves server response containing\n   * the `token` and `refresh_token`.\n   *\n   * @private\n   * @method _saveToken\n   * @param {object} response\n   * @return {void}\n   */\n  Auth.prototype._saveToken = function(data)\n    {\n      /* jshint camelcase: false */\n      var jwt = this.$injector.get('jwt');\n\n      jwt.setRefreshToken(data.refresh_token);\n      jwt.setToken(data.token);\n      /* jshint camelcase: true */\n    };\n\n  /**\n   * Returns endpoint to gather JWT depending on firewall.\n   *\n   * @private\n   * @method _getSigninUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSigninUrl = function(firewall){\n    var API_URL = this.$injector.get('API_URL');\n\n    switch(firewall) {\n      case 'backend':\n      case 'frontend':\n        return API_URL + '/auth/' + firewall + '/signin';\n      default:\n        throw new Error('Unknown firewall name: ' + firewall);\n    }\n  };\n\n  /**\n   * Returns endpoint to register at given firewall.\n   *\n   * @private\n   * @method _getSignupUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSignupUrl = function(firewall){\n    var API_URL = this.$injector.get('API_URL');\n\n    switch(firewall) {\n      case 'frontend':\n        return API_URL + '/auth/' + firewall + '/signup';\n      case 'backend':\n        throw new Error('Not implemented yet!');\n      default:\n        throw new Error('Unknown firewall name: ' + firewall);\n    }\n  };\n\n  /**\n   * Returns endpoint to refresh the JWT.\n   *\n   * @private\n   * @method _getRefereshUrl\n   * @return {string}\n   */\n  Auth.prototype._getRefereshUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/auth/refresh';\n  };\n\n  /**\n   * Returns endpoint to revoke the JWT.\n   *\n   * @private\n   * @method _getSignoutUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSignoutUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/signout';\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('auth', Auth);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var I18N = function($injector)\n    {\n      this.translations = {};\n      this.$injector = $injector;\n\n      this.setLocale(this._detectLocale());\n    };\n\n  I18N.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} locales Currently supported locales. */\n  I18N.prototype.locales = {\n    'de': true\n  };\n\n  /** @var {string} defaultLocale Default locale to use. */\n  I18N.prototype.defaultLocale = 'de';\n\n  /**\n   * Loads translations according to current locale if not available.\n   *\n   * @public\n   * @method load\n   * @param {locale} [locale] Two letter language code.\n   * @param {Object} [config] Additional config for $http\n   * @return {Promise|void}\n   */\n  I18N.prototype.load = function(locale, config)\n    {\n      locale = locale || this.getLocale();\n      config = config || {};\n\n      if (this.translations[locale]) {\n        return;\n      }\n\n      var $http = this.$injector.get('$http');\n      var $log = this.$injector.get('$log');\n\n      var me = this;\n      var url = this._getJSONUrl(locale);\n      var successCallback = function(response)\n        {\n          me.translations[locale] = response.data;\n        };\n\n      var failureCallback = function()\n        {\n          $log.error('Could not load translations!');\n        };\n\n      return $http.get(url, config).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets locale to given paraemter if it's a valid one.\n   * Falls back to `defaultLocale` if it's an invalid one.\n   *\n   * @public\n   * @method setLocale\n   * @param {string} locale\n   * @return {void}\n   */\n  I18N.prototype.setLocale = function(locale)\n    {\n      if (this.locales[locale]) {\n        this.locale = locale;\n        return;\n      }\n\n      this.locale = this.defaultLocale;\n    };\n\n  /**\n   * Delivers the currently used locale for translations.\n   *\n   * @public\n   * @method setLocale\n   * @param {string} locale\n   * @return {void}\n   */\n  I18N.prototype.getLocale = function()\n    {\n      return this.locale;\n    };\n\n  /**\n   * Makes a lookup within current translation dictionary.\n   *\n   * @param {string} key The i18n key.\n   * @param {string} ... Parameters to be replaced.\n   * @return {string}\n   */\n  I18N.prototype.get = function(key)\n    {\n      var string = this.$injector.get('string');\n      var params = [].slice.call(arguments,1);\n      var locale = this.getLocale();\n\n      var text;\n      try {\n        text = this.translations[locale][key];\n      } catch(e) {}\n\n      return string.sprintf(text || key, params);\n    };\n\n  /**\n   * Returns endpoint to gather JSON translations.\n   *\n   * @private\n   * @method _getTranslationsUrl\n   * @param {string} locale\n   * @return {string}\n   */\n  I18N.prototype._getJSONUrl = function(locale)\n    {\n      return 'json/' + locale + '.json';\n    };\n\n  /**\n   * @ignore\n   */\n  I18N.prototype._detectLocale = function()\n    {\n      var navigator = this.$injector.get('$window').navigator;\n      var android = /android.*\\W(\\w\\w)-(\\w\\w)\\W/i;\n      var language;\n\n      // try to find locale on android devices!\n      if( navigator && navigator.userAgent &&\n          (language = navigator.userAgent.match(android)) ) {\n          language = language[1];\n      }\n\n      // for all other browsers\n      if (!language && navigator) {\n        if( navigator.language ) {\n          language = navigator.language;\n        } else if( navigator.userLanguage ) {\n          language = navigator.userLanguage;\n        } else if( navigator.systemLanguage ) {\n          language = navigator.systemLanguage;\n        } else if( navigator.browserLanguage ) {\n          language = navigator.browserLanguage;\n        }\n      }\n\n      // now we can get iso code\n      if (language) {\n        return language.substr(0,2);\n      }\n\n      // use `defaultLocale` as fallback\n      return this.defaultLocale;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('i18n', I18N);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  /**\n  * @constructor\n  */\n  var JWT = function($injector, storage) {\n    this.$injector = $injector;\n    this.storage = storage.getProxy();\n  };\n\n  JWT.$inject = ['$injector', 'storage'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} tokenKey Token key for local storage. */\n  JWT.prototype.tokenKey = 'NAksNyshI3';\n\n  /** @var {string} refreshKey Refresh key for local storage. */\n  JWT.prototype.refreshKey = 'i08BFNG9t5';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Resets JWT token / refresh token in local storage.\n   *\n   * @public\n   * @method invalidate\n   * @return {void}\n   */\n  JWT.prototype.invalidate = function()\n    {\n      this.removeRefreshToken();\n      this.removeToken();\n    };\n\n  /**\n   * Gets JWT token from local storage.\n   *\n   * @public\n   * @method getToken\n   * @return {string|null}\n   */\n  JWT.prototype.getToken = function()\n    {\n      return this.storage.getItem(this.tokenKey);\n    };\n\n  /**\n   * Sets JWT token in local storage.\n   *\n   * @public\n   * @method setToken\n   * @param {string} token\n   * @return {void}\n   */\n  JWT.prototype.setToken = function(token)\n    {\n      this.storage.setItem(this.tokenKey,token);\n    };\n\n  /**\n   * Removes JWT token from local storage.\n   *\n   * @public\n   * @method removeToken\n   * @return {void}\n   */\n  JWT.prototype.removeToken = function()\n    {\n      this.storage.removeItem(this.tokenKey);\n    };\n\n  /**\n   * Gets JWT refresh token from local storage.\n   *\n   * @public\n   * @method getRefreshToken\n   * @return {string|null}\n   */\n  JWT.prototype.getRefreshToken = function()\n    {\n      return this.storage.getItem(this.refreshKey);\n    };\n\n  /**\n   * Sets JWT refresh token in local storage.\n   *\n   * @public\n   * @method setRefreshToken\n   * @param {string} refreshToken\n   * @return {void}\n   */\n  JWT.prototype.setRefreshToken = function(refreshToken)\n    {\n      this.storage.setItem(this.refreshKey, refreshToken);\n    };\n\n  /**\n   * Removes JWT refresh token from local storage.\n   *\n   * @public\n   * @method removeToken\n   * @return {void}\n   */\n  JWT.prototype.removeRefreshToken = function()\n    {\n      this.storage.removeItem(this.refreshKey);\n    };\n\n  /**\n   * Converts timestamp into date object.\n   *\n   * @public\n   * @method getExpirationDate\n   * @param {string} token\n   * @return {date}\n   */\n  JWT.prototype.getExpirationDate = function(token)\n    {\n      var $log = this.$injector.get('$log');\n\n      token = token || this.getToken();\n      if (!token) {\n        $log.error('No token given or available!');\n        return null;\n      }\n\n      var decoded = this.decode(token);\n      if (typeof decoded.exp==='undefined') {\n        $log.error('No `exp` property available!');\n        return null;\n      }\n\n      var date = new Date(0);\n      date.setUTCSeconds(decoded.exp);\n\n      return date;\n    };\n\n  /**\n   * Determines if given token is expired.\n   *\n   * @public\n   * @method isExpired\n   * @param {string} token\n   * @param {number} offset In seconds.\n   * @return {boolean}\n   */\n  JWT.prototype.isExpired = function(token, offset)\n    {\n      offset = offset || 0;\n      token = token || this.getToken();\n\n      var date = this.getExpirationDate(token);\n      if (date === null) {\n        return true;\n      }\n\n      var now = new Date().valueOf();\n      offset = now + offset * 1000;\n      date = date.valueOf();\n\n      return date <= offset;\n    };\n\n  /**\n   * Tries to decode a JWT token.\n   *\n   * @public\n   * @method decode\n   * @param {string} token\n   * @return {object|null}\n   */\n  JWT.prototype.decode = function(token)\n    {\n      var $log = this.$injector.get('$log');\n\n      try {\n        var parts = token.split('.');\n        if (parts.length !== 3) {\n          throw new Error('JWT must have 3 parts!');\n        }\n\n        var decoded = this._base64Decode(parts[1]);\n        if (!decoded) {\n          throw new Error('Cannot decode the token!');\n        }\n\n        return angular.fromJson(decoded);\n      } catch(e) {\n        $log.error(e);\n        return null;\n      }\n    };\n\n  /**\n   * Validates and decodes a base64 url.\n   *\n   * @private\n   * @method _base64Decode\n   * @param {string} input\n   * @return {string}\n   */\n  JWT.prototype._base64Decode = function(input)\n    {\n      var $window = this.$injector.get('$window');\n      var $log = this.$injector.get('$log');\n\n      var output = input\n        .replace(/-/g, '+')\n        .replace(/_/g, '/');\n\n      try{\n        switch (output.length % 4) {\n          case 0: {\n            break;\n          }\n\n          case 2: {\n            output += '=='; break;\n          }\n\n          case 3: {\n            output += '='; break;\n          }\n\n          default: {\n            throw new Error('Illegal base64url code!');\n          }\n        }\n      } catch(e) {\n        $log.error(e);\n        return '';\n      }\n\n      var decoded = $window.atob(output);\n      var escaped = $window.escape(decoded);\n\n      return $window.decodeURIComponent(escaped);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('jwt', JWT);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var User = function($injector) {\n    this.$injector = $injector;\n\n    this._states = [\n      $injector.get('STATE_BEGINNER'),\n      $injector.get('STATE_AMATEUR'),\n      $injector.get('STATE_ADVANCED'),\n      $injector.get('STATE_EXPERT')\n    ];\n\n    this._eventSource = null;\n    this._results = [];\n    this._payload = {};\n    this._pending = {};\n    this._tasks = {};\n  };\n\n  User.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} state Current state of user. */\n  User.prototype.state = null;\n\n  /** @var {number} group Random group of user. */\n  User.prototype.group = null;\n\n  /** @var {number} tickets Current ticket count. */\n  User.prototype.tickets = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Fetches current user through `User` resource.\n   *\n   * @public\n   * @method load\n   * @return {void}\n   */\n  User.prototype.load = function() {\n    var User = this.$injector.get('User');\n    var jwt = this.$injector.get('jwt');\n\n    var me = this;\n    var successCallback = function(user) {\n\n      // save only json payload from\n      // ng-resource's `user` object\n      me._payload = user.toJSON();\n\n      // initialize members\n      me._initTickets();\n      me._initState();\n      me._initGroup();\n\n      // gameplay setup calls\n      // only for `ROLE_USER`!\n      if (!me.isUser()) {\n        return;\n      }\n\n      // init tasks at first!\n      me._initWatches();\n      me._initTasks();\n\n      // then results & SSE!\n      me._initPending();\n      me._initResults();\n      me._initSSE();\n    };\n\n    var failureCallback = function(/*rejection*/) {\n      // invalidate possibly stored jwt\n      // token to avoid further lookups\n      // especially from router resolve\n      jwt.invalidate();\n    };\n\n    var current = User.current();\n\n    current.$promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return current;\n  };\n\n  /**\n   * Resets current user session from application.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  User.prototype.unload = function() {\n    var jwt = this.$injector.get('jwt');\n    var sse = this.$injector.get('sse');\n\n    if (this._eventSource) {\n      sse.removeSource(this._eventSource);\n    }\n\n    if (this._unwatchTickets) {\n      this._unwatchTickets();\n    }\n\n    if (this._unwatchState) {\n      this._unwatchState();\n    }\n\n    this._eventSource = null;\n    this._results = [];\n    this._payload = {};\n    this._pending = {};\n    this._tasks = {};\n\n    this.tickets = null;\n    this.state = null;\n    this.group = null;\n\n    jwt.invalidate();\n  };\n\n  /**\n   * Updates user from external scopes.\n   * This is helpful for refreshing its\n   * state without invoking a request to\n   * the server when user was embedded in\n   * another request's response.\n   *\n   * @public\n   * @method update\n   * @param {object} result\n   * @return {void}\n   *\n   */\n  User.prototype.update = function(result) {\n    this._payload = result.user;\n\n    this._addResult(result);\n    this._initTickets();\n    this._initState();\n    this._initGroup();\n  };\n\n  /**\n   * Checks if current user has role `ROLE_USER`.\n   *\n   * @public\n   * @method isUser\n   * @return {boolean}\n   */\n  User.prototype.isUser = function() {\n    return this.hasRole('ROLE_USER');\n  };\n\n  /**\n   * Checks if current user has role `ROLE_ADMIN`.\n   *\n   * @public\n   * @method isAdmin\n   * @return {boolean}\n   */\n  User.prototype.isAdmin = function() {\n    return this.hasRole('ROLE_ADMIN');\n  };\n\n  /**\n   * Checks if current user has role `ROLE_SUPER_ADMIN`.\n   *\n   * @public\n   * @method isSuperAdmin\n   * @return {boolean}\n   */\n  User.prototype.isSuperAdmin = function() {\n    return this.hasRole('ROLE_SUPER_ADMIN');\n  };\n\n  /**\n   * Checks if current user's workshop is active.\n   *\n   * @public\n   * @method isInWorkshop\n   * @return {boolean}\n   */\n  User.prototype.isInWorkshop = function() {\n    if (!this.isUser()) {\n      return true;\n    }\n\n    return this._payload.workshop.isActive;\n  };\n\n  /**\n   * Checks if current user has given role.\n   *\n   * @public\n   * @method hasRole\n   * @param {string|array} role\n   * @return {boolean}\n   */\n  User.prototype.hasRole = function(role) {\n    if (!angular.isArray(role)) {\n      role = [role];\n    }\n\n    var roles = this._payload.roles || [];\n    for (var i=0; i<role.length; i++) {\n      if (roles.indexOf(role[i])>=0) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Provides user's task hash map.\n   *\n   * @public\n   * @method getTasks\n   * @return {object}\n   */\n  User.prototype.getTasks = function() {\n    return this._tasks;\n  };\n\n  /**\n   * Gets `task` resource of user by type.\n   *\n   * @public\n   * @method getTaskByType\n   * @param {string} type\n   * @return {object|null}\n   */\n  User.prototype.getTaskByType = function(type) {\n    return this._tasks[type] || null;\n  };\n\n  /**\n   * Gets pending `result` resource of user by type.\n   *\n   * @public\n   * @method getResultByType\n   * @param {string} type\n   * @return {object|null}\n   */\n  User.prototype.getPendingByType = function(type) {\n    return this._pending[type] || null;\n  };\n\n  /**\n   * Gets `state` mapped to string representation.\n   *\n   * @public\n   * @method getGroupAsString\n   * @return {string}\n   */\n  User.prototype.getGroupAsString = function() {\n    switch(this.group) {\n      case this.$injector.get('GROUP_A'):\n        return 'GROUP_A';\n      case this.$injector.get('GROUP_B'):\n        return 'GROUP_B';\n      default:\n        return null;\n    }\n  };\n\n  /**\n   * Gets `state` mapped to string representation.\n   *\n   * @public\n   * @method getStateAsString\n   * @return {string}\n   */\n  User.prototype.getStateAsString = function() {\n    switch(this.state) {\n      case this.$injector.get('STATE_AMATEUR'):\n        return 'STATE_AMATEUR';\n      case this.$injector.get('STATE_ADVANCED'):\n        return 'STATE_ADVANCED';\n      case this.$injector.get('STATE_EXPERT'):\n        return 'STATE_EXPERT';\n      default:\n        return 'STATE_BEGINNER';\n    }\n  };\n\n  /**\n   * Initializes `state` member.\n   *\n   * @private\n   * @method _initState\n   * @return {void}\n   */\n  User.prototype._initState = function() {\n    var STATE_BEGINNER = this.$injector.get('STATE_BEGINNER');\n    this.state = this._payload.state || STATE_BEGINNER;\n  };\n\n  /**\n   * Initializes `group` member.\n   *\n   * @private\n   * @method _initGroup\n   * @return {void}\n   */\n  User.prototype._initGroup = function() {\n    this.group = this._payload.group || null;\n  };\n\n  /**\n   * Initializes `tickets` member.\n   *\n   * @private\n   * @method init\n   * @return {void}\n   */\n  User.prototype._initTickets = function() {\n    var tickets = this._payload.tickets;\n    this.tickets = tickets || [];\n  };\n\n  /**\n   * Watches `state` and `tickets` for changes to\n   * show the corresponding user notifications.\n   *\n   * @private\n   * @method _initWatches\n   * @return {void}\n   */\n  User.prototype._initWatches = function() {\n    var notification = this.$injector.get('notification');\n    var $rootScope = this.$injector.get('$rootScope');\n    var i18n = this.$injector.get('i18n');\n    var me = this;\n\n    var _watchStateExpression = function() {\n      return me.state;\n    };\n\n    var _watchStateCallback = function(newState, oldState) {\n      if (newState === oldState) {\n        return;\n      }\n\n      notification.success(\n        i18n.get(\n          'Congratulations, you have reached the state %s!',\n          i18n.get(me.getStateAsString())\n        )\n      );\n    };\n\n    var _watchTicketsExpression = function() {\n      return me.tickets;\n    };\n\n    var _watchTicketsCallback = function(newTickets, oldTickets) {\n      if (newTickets === oldTickets) {\n        return;\n      }\n\n      var oldCount = oldTickets && oldTickets.length;\n      var newCount = newTickets && newTickets.length;\n\n      var tickets = newCount - oldCount;\n      if (tickets <= 0) {\n        return;\n      }\n\n      var message = tickets === 1 ?\n        i18n.get('Congratulations, you have earned 1 new ticket!') :\n        i18n.get('Congratulations, you have earned %s new tickets!', tickets);\n\n      notification.primary(message);\n    };\n\n    this._unwatchTickets = $rootScope.$watchCollection(\n      _watchTicketsExpression,\n      _watchTicketsCallback\n    );\n\n    this._unwatchState = $rootScope.$watch(\n      _watchStateExpression,\n      _watchStateCallback\n    );\n  };\n\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @private\n   * @method _initSSE\n   * @return {Void}\n   */\n  User.prototype._initSSE = function()\n    {\n      var $rootScope = this.$injector.get('$rootScope');\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      // don't setup SSE when playing remote\n      var workshop = this._payload.workshop;\n      if (!workshop.isActive) {\n        return;\n      }\n\n      var me = this;\n\n      var _onMessage = function(data) {\n        $rootScope.$evalAsync(function(){\n          angular.forEach(data, function(item) {\n            var unix = Date.parse(item.updatedAt);\n            var task = me._tasks[item.type];\n            task.isActive = !!item.isActive;\n\n            if (!isNaN(unix)) {\n              item.updatedAt = unix;\n            }\n          });\n        });\n      };\n\n      var url = API_URL + '/sse/workshop/' + workshop.id + '/tasks';\n      var options = { onMessage: _onMessage, sleep: 1 };\n      this._eventSource = sse.addSource(url, options);\n    };\n\n  /**\n   * Caches task hash map from workshop\n   * for lookups from `getTaskByType()`.\n   *\n   * @private\n   * @method _initTasks\n   * @return {void}\n   */\n  User.prototype._initTasks = function() {\n    var workshop = this._payload.workshop;\n    if (!workshop) {\n      return;\n    }\n\n    var me = this;\n    angular.forEach(workshop.tasks,function(task) {\n      me._tasks[task.type] = task;\n    });\n  };\n\n  /**\n   * Caches pending hash map from workshop\n   * for lookups from `getPendingByType()`.\n   *\n   * @private\n   * @method _initPending\n   * @return {void}\n   */\n  User.prototype._initPending = function() {\n    var pending = this._payload.pending;\n    if (!pending) {\n      return;\n    }\n\n    var me = this;\n    angular.forEach(pending,function(result) {\n      me._pending[result.task.type] = result;\n    });\n  };\n\n  /**\n   * Caches results hash map from workshop\n   * for lookups from `getResultsByType()`.\n   *\n   * @private\n   * @method _initResults\n   * @return {void}\n   */\n  User.prototype._initResults = function() {\n    var _addResult = this._addResult.bind(this);\n    var results = this._payload.results || [];\n\n    angular.forEach(results, _addResult);\n  };\n\n  /**\n   * Adds result to collection and sets `$$result`\n   *\n   * @private\n   * @method _addResult\n   * @param {object} result\n   * @return {void}\n   */\n  User.prototype._addResult = function(result) {\n    var task = this.getTaskByType(result.task.type);\n    if (task !== null) {\n      var current = task.$$results || 0;\n      task.$$results = current + 1;\n    }\n\n    this._results.push(result);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('user', User);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Mail = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  Mail.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends a POST request to send mail.\n   *\n   * @public\n   * @method send\n   * @param {Object} data\n   * @param {Object} [config] $http config.\n   * @return {Promise}\n   */\n  Mail.prototype.send = function(data, config) {\n    var notification = this.$injector.get('notification');\n    var $http = this.$injector.get('$http');\n    var i18n = this.$injector.get('i18n');\n\n    var successCallback = function(/*response*/)\n      {\n        notification.success(\n          i18n.get(\n            'Your email has been sent!'\n          )\n        );\n      };\n\n    var failureCallback = function(/*rejection*/)\n      {\n      };\n\n    var promise = $http.post(\n      this._getPostUrl(),\n      {\n        _name: data.name,\n        _mail: data.email,\n        _subject: data.subject,\n        _message: data.message\n      },\n      config || {}\n    );\n\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Returns endpoint to send the email.\n   *\n   * @private\n   * @method _getPostUrl\n   * @return {string}\n   */\n  Mail.prototype._getPostUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/mail';\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('mail', Mail);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, EventSource */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var SSE = function($injector)\n    {\n      this.$injector = $injector;\n      this._sources = {};\n    };\n\n  SSE.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Adds a new event source to listen to.\n   *\n   * @public\n   * @method add\n   * @param string url\n   * @param string event\n   * @param function callback\n   * @return {void}\n   */\n  SSE.prototype.addSource = function(url, config) {\n    config = config || {};\n\n    config.retry = config.retry || null;\n    config.event = config.event || null;\n    config.sleep = config.sleep || null;\n    config.onError = config.onError || function(){};\n    config.onMessage = config.onMessage || function(){};\n\n    url = this._buildUrl(url, config);\n    var source = new EventSource(url);\n\n    source.onmessage = function(event) {\n      var data = angular.fromJson(event.data);\n      config.onMessage.call(this, data, event);\n    };\n\n    source.onerror = function(event) {\n      config.onError.call(this, event);\n    };\n\n    this._sources[url] = source;\n    return source;\n  };\n\n  /**\n   * Adds a new event source to listen to.\n   *\n   * @public\n   * @method removeSource\n   * @param object source\n   * @return {void}\n   */\n  SSE.prototype.removeSource = function(source) {\n    delete this._sources[source.url];\n    source.close();\n  };\n\n  /**\n   * Appends JWT token as query string to url.\n   * Adds optional config options if available.\n   *\n   * @private\n   * @method _getUrl\n   * @param string url\n   * @param object config\n   * @return {string}\n   */\n  SSE.prototype._buildUrl = function(url, config){\n    var jwt = this.$injector.get('jwt');\n    var token = jwt.getToken();\n\n    url = url + '?bearer=' + token;\n\n    if (config.event) {\n      url += '&event=' + config.event;\n    }\n\n    if (config.sleep) {\n      url += '&sleep=' + config.sleep;\n    }\n\n    if (config.retry) {\n      url += '&retry=' + config.retry;\n    }\n\n    return url;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('sse', SSE);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var CardContainer = function() {\n  };\n\n  CardContainer.$inject = ['$scope', '$element', '$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} cards Stack of registered cards. */\n  CardContainer.prototype.cards = [];\n\n  /** @var {boolean} canToggle If cards can be toggled. */\n  CardContainer.prototype.canToggle = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Adds a `card` directive to stack.\n   *\n   * @public\n   * @method click\n   * @return {Void}\n   */\n  CardContainer.prototype.add = function(card) {\n    this.cards.push(card);\n  };\n\n  /**\n   * Toggles card state if `canToggle` is true.\n   *\n   * @public\n   * @method set\n   * @return {boolean}\n   */\n  CardContainer.prototype.set = function(card) {\n    if (card.selected && !this.canToggle) {\n      return false;\n    }\n\n    // toggle current card's state\n    var selected = !!card.selected;\n    card.selected = selected ? null : true;\n\n    // reset all other card states\n    angular.forEach(this.cards, function(current) {\n      if (current.id === card.id) {\n        return;\n      }\n\n      current.selected = card.selected ? false : null;\n    });\n\n    return true;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('cardContainer', function(){\n    return {\n      scope: {\n        canToggle: '=?cardContainerCanToggle'\n      },\n      restrict: 'A',\n      controller: CardContainer,\n      bindToController: true,\n      controllerAs: 'cardContainerController'\n    };\n  });\n\n  // --------------------------------------------------\n  // Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Card = function($scope, $element, $attrs, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n\n    this.id = this.$scope.$id;\n    this.hasIcon = $transclude.isSlotFilled('icon');\n  };\n\n  Card.$inject = ['$scope', '$element', '$attrs', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} id Unique id of card. */\n  Card.prototype.id = null;\n\n  /** @var {mixed} data Passthrough data of card. */\n  Card.prototype.data = null;\n\n  /** @var {boolean} selected If card is selected. */\n  Card.prototype.selected = null;\n\n  /** @var {boolean} disabled If card is disabled. */\n  Card.prototype.disabled = null;\n\n  /** @var {boolean} hasIcon If card has `icon` slot filled. */\n  Card.prototype.hasIcon = null;\n\n  /** @var {boolean} isCheckbox If card should behave as checkbox. */\n  Card.prototype.isCheckbox = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Invokes the `cardOnClick` callback.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Card.prototype.$onInit = function() {\n    if (!this.cardContainer) {\n      return;\n    }\n\n    this.cardContainer.add(this);\n  };\n\n  /**\n   * Invokes the `cardOnClick` callback.\n   *\n   * @public\n   * @method click\n   * @return {Void}\n   */\n  Card.prototype.click = function($event) {\n    if (this.disabled) {\n      return;\n    }\n\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    if (this.cardContainer) {\n      var changed = this.cardContainer.set(this);\n      if (!changed) {\n        return;\n      }\n    }\n\n    this.onClick({\n      data: this.data,\n      selected: this.selected,\n      disabled: this.disabled\n    });\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('card', function(){\n    return {\n      scope: {\n        data: '=?cardData',\n        onClick: '&cardOnClick',\n        selected: '=?cardSelected',\n        disabled: '=?cardDisabled',\n        isCheckbox: '=?cardIsCheckbox'\n      },\n      restrict: 'A',\n      transclude: {\n        text: 'cardText',\n        title: 'cardTitle',\n        icon: '?cardIcon',\n        buttons: '?cardButtons'\n      },\n      controller: Card,\n      bindToController: true,\n      controllerAs: 'cardController',\n      require:{\n        cardContainer: '^?cardContainer',\n      },\n      templateUrl: 'views/directives/card.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, Chartist */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Chart = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._chart = null;\n  };\n\n  Chart.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} data Chart data for series. */\n  Chart.prototype.data = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Inits chart with options and data\n   * and renders it with these settings.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Chart.prototype.$onInit = function()\n    {\n      var options = this._getOptions();\n\n      var data = {\n        labels: this._getLabels(),\n        series: this._getData()\n      };\n\n      this._render(data, options);\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Chart.prototype.$onDestroy = function()\n    {\n      if (this._chart !== null) {\n        this._chart.detach();\n        this._chart = null;\n      }\n    };\n\n  /**\n   * Gets data depending on current `task`.\n   *\n   * @public\n   * @method _getData\n   * @param {array} data\n   * @return int\n   */\n  Chart.prototype._getData = function() {\n    var GROUP_A = this.$injector.get('GROUP_A');\n    var GROUP_B = this.$injector.get('GROUP_B');\n\n    var me = this;\n\n    var map = {};\n    var data = [];\n    var mapResults;\n\n    switch(me.task.type) {\n      //case me.$injector.get('TYPE_INTEREST'):\n      //case me.$injector.get('TYPE_INFLATION'):\n      //case me.$injector.get('TYPE_DIVERSIFICATION'):\n      //case me.$injector.get('TYPE_RISK'):\n      case me.$injector.get('TYPE_ANCHORING'):\n      case me.$injector.get('TYPE_MENTAL_BOOKKEEPING'): {\n        map[GROUP_A] = { choice1: 0, choice2: 0, count:0 };\n        map[GROUP_B] = { choice1: 0, choice2: 0, count:0 };\n\n        mapResults = function(result) {\n          var group = result.json.group;\n\n          switch (result.json.choice) {\n            case 1:\n              map[group].choice1++;\n              break;\n            case 2:\n              map[group].choice2++;\n              break;\n            default:\n          }\n\n          map[group].count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        var groupA = map[GROUP_A];\n        var groupB = map[GROUP_B];\n\n        // series 1\n        data.push([\n          groupA.choice1 / groupA.count,\n          groupB.choice1 / groupB.count\n        ]);\n\n        // series 2\n        data.push([\n          groupA.choice2 / groupA.count,\n          groupB.choice2 / groupB.count\n        ]);\n\n        break;\n      }\n\n      //case me.$injector.get('TYPE_FRAMING'):\n      //case me.$injector.get('TYPE_SAVINGS_TARGET'):\n      //case me.$injector.get('TYPE_SAVINGS_SUPPORTED'):\n      //case me.$injector.get('TYPE_SELF_COMMITMENT'):\n      case me.$injector.get('TYPE_PROCRASTINATION'): {\n        var SPLIT = 'SPLIT';\n        var ALL = 'ALL';\n\n        map[SPLIT] = { success: 0, failure: 0, count:0 };\n        map[ALL] = { success: 0, failure: 0, count:0 };\n\n        mapResults = function(result) {\n          var mode = result.json.mode;\n\n          if (result.json.success) {\n            map[mode].success++;\n          } else {\n            map[mode].failure++;\n          }\n\n          map[mode].count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        var split = map[SPLIT];\n        var all = map[ALL];\n\n        // series 1\n        data.push([\n          split.success / split.count,\n          all.success / all.count\n        ]);\n\n        // series 2\n        data.push([\n          split.failure / split.count,\n          all.failure / all.count\n        ]);\n\n        break;\n      }\n\n      default:\n    }\n\n    return data;\n  };\n\n  /**\n   * Gets labels depending on current `task`.\n   *\n   * @private\n   * @method _getLabels\n   * @return array\n   */\n  Chart.prototype._getLabels = function() {\n    var i18n = this.$injector.get('i18n');\n\n    switch(this.task.type) {\n      case this.$injector.get('TYPE_ANCHORING'):\n      case this.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        return [\n          i18n.get('GROUP_A'),\n          i18n.get('GROUP_B')\n        ];\n      case this.$injector.get('TYPE_PROCRASTINATION'):\n        return [\n          i18n.get('ALL'),\n          i18n.get('SPLIT')\n        ];\n      default:\n        return [];\n    }\n  };\n\n  /**\n   * Gets options depending on current `task`.\n   *\n   * @private\n   * @method _getOptions\n   * @return array\n   */\n  Chart.prototype._getOptions = function() {\n    var i18n = this.$injector.get('i18n');\n\n    switch(this.task.type) {\n      case this.$injector.get('TYPE_ANCHORING'):\n      case this.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        return {\n          seriesBarDistance: 15,\n          chartPadding: {\n            top: 50,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          axisY:{\n            labelInterpolationFnc: function(value) {\n              return (value * 100) + '%';\n            },\n            ticks: [0, 0.2, 0.4, 0.6, 0.8, 1],\n            type: Chartist.FixedScaleAxis,\n            high: 1,\n            low: 0\n          },\n          plugins: [\n            Chartist.plugins.legend({\n              legendNames: [\n                i18n.get('Choice 1'),\n                i18n.get('Choice 2')\n              ]\n            })\n          ]\n        };\n      case this.$injector.get('TYPE_PROCRASTINATION'):\n        return {\n          seriesBarDistance: 15,\n          chartPadding: {\n            top: 50,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          axisY:{\n            labelInterpolationFnc: function(value) {\n              return (value * 100) + '%';\n            },\n            ticks: [0, 0.2, 0.4, 0.6, 0.8, 1],\n            type: Chartist.FixedScaleAxis,\n            high: 1,\n            low: 0\n          },\n          plugins: [\n            Chartist.plugins.legend({\n              legendNames: [\n                i18n.get('Target reached'),\n                i18n.get('Target dismissed')\n              ]\n            })\n          ]\n        };\n\n      default:\n        return {};\n    }\n  };\n\n  /**\n   * Renders chart depending on current `task`.\n   *\n   * @private\n   * @method _render\n   * @return array\n   */\n  Chart.prototype._render = function(data, options) {\n    var $timeout = this.$injector.get('$timeout');\n\n    this.$element.addClass('ct-chart');\n    var element = this.$element.get(0);\n\n    var me = this;\n    var render = function() {\n      switch(me.task.type) {\n        case me.$injector.get('TYPE_ANCHORING'):\n        case me.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        case me.$injector.get('TYPE_PROCRASTINATION'):\n          me._chart = new Chartist.Bar(element, data, options);\n          break;\n        default:\n      }\n    };\n\n    $timeout(render, 100);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('chart', function(){\n    return {\n      scope: {\n        task: '=?chartTask',\n        results: '=?chartResults'\n      },\n      restrict: 'A',\n      controller: Chart,\n      bindToController: true,\n      controllerAs: 'chartController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Modal\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Modal = function($scope, $attrs, $element, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$transclude = $transclude;\n\n    this._element = null;\n    this._modal = null;\n    this._scope = null;\n  };\n\n  Modal.$inject = ['$scope', '$attrs', '$element', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isVisible Flag for modal visibility. */\n  Modal.prototype.isVisible = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers UIkit callbacks and watches.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Modal.prototype.$onInit = function()\n    {\n      var me = this;\n\n      // listeners\n      this._onShow = function() {\n        me.$scope.$evalAsync(me.onShow);\n      };\n\n      this._onShown = function() {\n        me.$scope.$evalAsync(me.onShown);\n      };\n\n      this._onBeforeShow = function() {\n        me.$scope.$evalAsync(me.onBeforeShow);\n      };\n\n      this._onHide = function() {\n        me.$scope.$evalAsync(me.onHide);\n      };\n\n      this._onHidden = function() {\n        me.$scope.$evalAsync(function(){\n          me.isVisible = false;\n          me.onHidden();\n        });\n      };\n\n      this._onBeforeHide = function() {\n        me.$scope.$evalAsync(me.onBeforeHide);\n      };\n\n      // watches\n      this._unwatch = this.$scope.$watch(\n        'modalController.isVisible',\n        function(isVisible) {\n          if (isVisible) {\n            me.transclude();\n            return;\n          }\n\n          me.destroy();\n        }\n      );\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Modal.prototype.$onDestroy = function()\n    {\n      this._unwatch();\n      this.destroy();\n    };\n\n  /**\n   * Transcludes contents and shows modal.\n   *\n   * @public\n   * @method render\n   * @return {Void}\n   */\n  Modal.prototype.transclude = function() {\n    var me = this;\n\n    var transclude = function(clone, scope) {\n      // save element and scope\n      me._element = clone;\n      me._scope = scope;\n\n      // register UIKit listeners\n      me._element.on('show', me._onShow);\n      me._element.on('shown', me._onShown);\n      me._element.on('beforeshow', me._onBeforeShow);\n\n      me._element.on('hide', me._onHide);\n      me._element.on('hidden', me._onHidden);\n      me._element.on('beforeHide', me._onBeforeHide);\n\n      // replace with actual element\n      me.$element.append(clone);\n\n      // create and show the modal\n      me._modal = UIkit.modal(clone);\n      me._modal.show();\n    };\n\n    this.$transclude(transclude);\n  };\n\n  /**\n   * Destructs current modal transclusion from DOM.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Modal.prototype.destroy = function() {\n    if (this._element !== null) {\n      this._element.off('show', this._onShow);\n      this._element.off('shown', this._onShown);\n      this._element.off('beforeshow', this._onBeforeShow);\n\n      this._element.off('hide', this._onHide);\n      this._element.off('hidden', this._onHidden);\n      this._element.off('beforeHide', this._onBeforeHide);\n\n      this._element.remove();\n      this._element = null;\n    }\n\n    if (this._scope !== null) {\n      this._scope.$destroy();\n      this._scope = null;\n    }\n\n    if (this._modal !== null) {\n      this._modal.hide();\n      this._modal = null;\n    }\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('modal', function(){\n    return {\n      scope: {\n        isVisible: '=?modal',\n        onShow:'&modalOnShow',\n        onHide:'&modalOnHide',\n        onShown:'&modalOnShown',\n        onHidden:'&modalOnHidden',\n        onBeforeShow:'&modalOnBeforeShow',\n        onBeforeHide:'&modalOnBeforeHide'\n      },\n      restrict: 'A',\n      controller: Modal,\n      transclude: 'element',\n      bindToController: true,\n      controllerAs: 'modalController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular, global) {\n  'use strict';\n\n  // register global event listener like described in the docs:\n  // https://developers.google.com/youtube/iframe_api_reference\n  var YOUTUBE_API_LOADED = false;\n  global.onYouTubeIframeAPIReady = function(){\n    YOUTUBE_API_LOADED = true;\n  };\n\n  // --------------------------------------------------\n  // Video\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Video = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._player = null;\n    this._element = this.$element.find('.player');\n    this._onStateChange = this._onStateChange.bind(this);\n  };\n\n  Video.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} width Width of player. */\n  Video.prototype.width = 640;\n\n  /** @var {number} height Height of player. */\n  Video.prototype.height = 360;\n\n  /** @var {string} videoId ID of the YouTube video. */\n  Video.prototype.videoId = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Waits for YOUTUBE_API_LOADED flag and initializes\n   * player afterwards including all relevant events.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Video.prototype.$onInit = function()\n    {\n      var $timeout = this.$injector.get('$timeout');\n      var init = this._init.bind(this);\n\n      var me = this;\n      var _watchAPIExpression = function() {\n        // frame should be visible to make events\n        // work with frame's postMessage() message\n        var isVisible = me._element.is(':visible');\n        var isLoaded = YOUTUBE_API_LOADED;\n\n        return (isVisible && isLoaded);\n      };\n\n      var _watchAPICallback = function(isReady) {\n        if (isReady) {\n          me._unwatchAPI();\n          $timeout(init, 100);\n        }\n      };\n\n      this._unwatchAPI = this.$scope.$watch(\n        _watchAPIExpression,\n        _watchAPICallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Video.prototype.$onDestroy = function() {\n    if (this._player) {\n      this._player.destroy();\n    }\n  };\n\n  /**\n   * Provides `padding-bottom` with correct\n   * aspect ratio for a responsive viewport.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Video.prototype.getStyle = function() {\n    return {\n      'padding-bottom': (\n        this.height /\n        this.width *\n        100\n      ) + '%',\n    };\n  };\n\n  /**\n   * Invoked by YouTube API when player's ready.\n   *\n   * @private\n   * @method _onReady\n   * @return {Void}\n   */\n  Video.prototype._init = function()\n    {\n      var element = this._element.get(0);\n\n      this._player = new YT.Player(\n        element,\n        {\n          width: this.width,\n          height: this.height,\n          videoId: this.videoId,\n          events: {\n            'onStateChange': this._onStateChange\n          }\n      });\n    };\n\n  /**\n   * Invoked by YouTube API when player's ready.\n   *\n   * @private\n   * @method _onReady\n   * @return {Void}\n   */\n  Video.prototype._onStateChange = function(event)\n    {\n      switch (event.data) {\n        case YT.PlayerState.PLAYING:\n          this.onPlaying();\n          break;\n        case YT.PlayerState.PAUSED:\n          this.onPaused();\n          break;\n        case YT.PlayerState.ENDED:\n          this.onEnded();\n          break;\n        case YT.PlayerState.CUED:\n          this.onCued();\n          break;\n        default:\n      }\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('video', function(){\n    return {\n      scope: {\n        videoId:'=videoId',\n        width:'=?videoWidth',\n        height:'=?videoHeight',\n        onCued: '&videoOnCued',\n        onEnded: '&videoOnEnded',\n        onPaused: '&videoOnPaused',\n        onPlaying: '&videoOnPlaying',\n        onBuffering: '&videoOnBuffering'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: Video,\n      bindToController: true,\n      controllerAs: 'videoController',\n      templateUrl: 'views/directives/video.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular, this);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Status\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Status = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.iconRatio = 1;\n    this.isCompact = false;\n    this.iconColor = 'currentcolor';\n  };\n\n  Status.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} tasks User's task hash map. */\n  Status.prototype.tasks = {};\n\n  /** @var {array} tickets User's ticket collection. */\n  Status.prototype.tickets = [];\n\n  /** @var {boolean} tasksVisible If task overview is visible. */\n  Status.prototype.tasksVisible = false;\n\n  /** @var {boolean} ticketsVisible If tickets overview is visible. */\n  Status.prototype.ticketsVisible = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `tasks` and `tickets` properties and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Status.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchTicketsExpression = function(){\n        return user.tickets;\n      };\n\n      var _watchTicketsCallback = function(tickets) {\n        me.tickets = tickets;\n      };\n\n      this._unwatchTickets = this.$scope.$watchCollection(\n        _watchTicketsExpression,\n        _watchTicketsCallback\n      );\n\n      var _watchTasksExpression = function(){\n        return user.getTasks();\n      };\n\n      var _watchTasksCallback = function(tasks) {\n        me.tasks = tasks;\n      };\n\n      this._unwatchTasks = this.$scope.$watch(\n        _watchTasksExpression,\n        _watchTasksCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Status.prototype.$onDestroy = function() {\n    this._unwatchTickets();\n    this._unwatchTasks();\n  };\n\n  /**\n   * Toggles `tasksVisible` property.\n   *\n   * @public\n   * @method toggleTasks\n   * @return {Void}\n   */\n  Status.prototype.toggleTasks = function()\n    {\n      this.tasksVisible = !this.tasksVisible;\n    };\n\n  /**\n   * Toggles `ticketsVisible` property.\n   *\n   * @public\n   * @method toggleTickets\n   * @return {Void}\n   */\n  Status.prototype.toggleTickets = function()\n    {\n      this.ticketsVisible = !this.ticketsVisible;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('status', function(){\n    return {\n      scope: {\n        iconRatio:'=?statusIconRatio',\n        iconColor:'=?statusIconColor',\n        isCompact:'=?statusIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: Status,\n      bindToController: true,\n      controllerAs: 'statusController',\n      templateUrl: 'views/directives/status.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Icons\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusIcons = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.ratio = 1;\n    this.color = 'currentcolor';\n  };\n\n  StatusIcons.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isBeginner If user has state `STATE_BEGINNER` or higher. */\n  StatusIcons.prototype.isBeginner = false;\n\n  /** @var {boolean} isAmateuer If user has state `STATE_AMATEUR` or higher. */\n  StatusIcons.prototype.isAmateuer = false;\n\n  /** @var {boolean} isAdvanced If user has state `STATE_ADVANCED` or higher. */\n  StatusIcons.prototype.isAdvanced = false;\n\n  /** @var {boolean} isExpert If user has state `STATE_EXPERT` or higher. */\n  StatusIcons.prototype.isExpert = false;\n\n  /** @var {boolean} isProfi If user has state `STATE_PROFI` or higher. */\n  StatusIcons.prototype.isProfi = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusIcons.prototype.$onInit = function()\n    {\n      var STATE_BEGINNER = this.$injector.get('STATE_BEGINNER');\n      var STATE_AMATEUR = this.$injector.get('STATE_AMATEUR');\n      var STATE_ADVANCED = this.$injector.get('STATE_ADVANCED');\n      var STATE_EXPERT = this.$injector.get('STATE_EXPERT');\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function(){\n        return user.state;\n      };\n\n      var _watchCallback = function(state) {\n        me.isBeginner = state >= STATE_BEGINNER;\n        me.isAmateur = state >= STATE_AMATEUR;\n        me.isAdvanced = state >= STATE_ADVANCED;\n        me.isExpert = state >= STATE_EXPERT;\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusIcons.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusIcons', function() {\n    return {\n      scope: {\n        ratio:'=?statusIconsRatio',\n        color:'=?statusIconsColor',\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusIcons,\n      bindToController: true,\n      controllerAs: 'statusIconsController',\n      templateUrl: 'views/directives/status-icons.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Label\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusLabel = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  StatusLabel.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} state String represenation of user's `state`. */\n  StatusLabel.prototype.state = null;\n\n  /** @var {boolean} isCompact If presentation is in compact format. */\n  StatusLabel.prototype.isCompact = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusLabel.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function() {\n        return user.state;\n      };\n\n      var _watchCallback = function() {\n        me.state = user.getStateAsString();\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusLabel.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusLabel', function(){\n    return {\n      scope: {\n        isCompact: '=?statusLabelIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusLabel,\n      bindToController: true,\n      controllerAs: 'statusLabelController',\n      templateUrl: 'views/directives/status-label.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Label\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusTickets = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  StatusTickets.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} tickets Current user ticket count. */\n  StatusTickets.prototype.tickets = 0;\n\n  /** @var {boolean} isCompact If presentation is in compact format. */\n  StatusTickets.prototype.isCompact = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusTickets.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function() {\n        return user.tickets;\n      };\n\n      var _watchCallback = function(tickets) {\n        me.tickets = tickets ? tickets.length : 0;\n      };\n\n      this._unwatch = this.$scope.$watchCollection(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusTickets.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusTickets', function(){\n    return {\n      scope: {\n        isCompact: '=?statusTicketsIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusTickets,\n      bindToController: true,\n      controllerAs: 'statusTicketsController',\n      templateUrl: 'views/directives/status-tickets.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Tabber\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Tabber = function($scope, $element, $attrs, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$transclude = $transclude;\n\n    this.domId = 'tabber-' + $scope.$id;\n\n    this.hasExercise = $transclude.isSlotFilled('exercise');\n  };\n\n  Tabber.$inject = ['$scope','$element','$attrs', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} hasExercise If slot `exercise` has contents. */\n  Tabber.prototype.hasExercise = false;\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('tabber', function(){\n    return {\n      scope: {\n        icon: '=?tabberIcon'\n      },\n      restrict: 'A',\n      transclude: {\n        exercise: '?tabberExercise',\n        description: 'tabberDescription'\n      },\n      controller: Tabber,\n      bindToController: true,\n      controllerAs: 'tabberController',\n      templateUrl: 'views/directives/tabber.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, interact */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Draggable\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Draggable = function($scope, $element, $attrs, $injector) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$injector = $injector;\n\n    this._body = null;\n    this._clone = null;\n    this._coordinates = {};\n    this._interactable = null;\n    this._activeClass = 'active';\n    this._itemClass = 'draggable';\n    this._disabledClass = 'disabled';\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.disabled; },\n      function(disabled) {\n        if (disabled) {\n          me.$element.addClass(me._disabledClass);\n        } else {\n          me.$element.removeClass(me._disabledClass);\n        }\n\n        me._interactable.draggable({enabled: !disabled});\n      }\n    );\n\n    this._onResize = this._onResize.bind(this);\n  };\n\n  Draggable.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} data Connected data for draggable. */\n  Draggable.prototype.data = null;\n\n  /** @type {boolean} clone If clone item should be used. */\n  Draggable.prototype.clone = false;\n\n  /** @var {boolean} disabled If draggable is disabled. */\n  Draggable.prototype.disabled = false;\n\n  /** @type {boolean} clone If clone item should be used. */\n  Draggable.prototype.restriction = 'parent';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes `interact` library on element\n   * with all available callbacks for dragging.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Draggable.prototype.$onInit = function() {\n    var $window = this.$injector.get('$window');\n\n    this._body = angular.element(document.body);\n    this.$element.addClass(this._itemClass);\n    var element = this.$element.get(0);\n\n    this._interactable = interact(element);\n\n    var me = this;\n    var options = {\n      inertia: true,\n      autoScroll: true,\n      enabled: !this.disabled,\n      onend: this._onEndItem.bind(this),\n      onmove: this._onMoveItem.bind(this),\n      onstart: this._onStartItem.bind(this),\n      snap: {\n          targets:[function(x,y,interaction) {\n            // 'startCoords' doesn't work here, so\n            // we catch initial position once from\n            // interaction element and this values\n            if (!me._origin) {\n              me._origin = {\n                x: interaction.startCoords.page.x,\n                y: interaction.startCoords.page.y\n              };\n            }\n\n            // if not dropped, move draggable\n            // smoothly back to origin point\n            if (!interaction.dropTarget) {\n              return {\n                x: me._origin.x, // instead of 0\n                y: me._origin.y  // instead of 0\n              };\n            }\n          }],\n          //offset: 'startCoords',\n          endOnly: true\n      }\n    };\n\n    if (this.clone) {\n      angular.extend(options, { manualStart: true });\n      this._interactable.on('move', this._onMove.bind(this));\n    }\n\n    this._interactable.draggable(options);\n    this._interactable.getData = this._getData.bind(this);\n\n    this._window = angular.element($window);\n    this._window.on('resize', this._resize);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Draggable.prototype.$onDestroy = function() {\n    this._window.off('resize', this._onResize);\n    this._interactable.unset();\n    this._unwatch();\n  };\n\n  /**\n   * Resets `origin` info for snapping.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Draggable.prototype._onResize = function() {\n    this._origin = null;\n  };\n\n  /**\n   * Adds `activeClass` to clone and invokes `onDragStart`.\n   *\n   * @private\n   * @method _onStartItem\n   * @return {Void}\n   */\n  Draggable.prototype._onStartItem = function(event) {\n    var target = !this.clone ?\n      angular.element(event.target) :\n      this._clone;\n\n    target.addClass(this._activeClass);\n\n    this._trigger('onDragStart', {\n      $event: event,\n      $data: this.data\n    });\n  };\n\n  /**\n   * This performs actual dragging logic with CSS.\n   * The method triggers the `onDragMove` callback.\n   *\n   * @private\n   * @method _onMoveItem\n   * @return {Void}\n   */\n  Draggable.prototype._onMoveItem = function(event) {\n    var target = !this.clone ?\n      angular.element(event.target) :\n      this._clone;\n\n    var x = (this._coordinates.x || 0) + event.dx;\n    var y = (this._coordinates.y || 0) + event.dy;\n\n    this._translate(target,x,y);\n\n    this._trigger('onDragMove', {\n      $event: event,\n      $data: this.data\n    });\n  };\n\n  /**\n   * This performs resetting work by removing clone.\n   * It invokes always the `onDragEnd` and the `onDrop`\n   * callbacks - if dropped on target element.\n   *\n   * @private\n   * @method _onEndItem\n   * @return {Void}\n   */\n  Draggable.prototype._onEndItem = function(event) {\n    var dropped = !!event.interaction.dropTarget;\n\n    if (!this.clone) {\n      var target = angular.element(event.target);\n      target.removeClass(this._activeClass);\n\n      // remove translate for snapping if\n      // animating back to origin coords!\n      if (!dropped) {\n        this._translate(target,0,0);\n      }\n\n    } else {\n      this._coordinates = {};\n      this._clone.remove();\n      this._clone = null;\n    }\n\n    this._trigger('onDragEnd', {\n      $event: event,\n      $data: this.data\n    });\n\n    if (dropped) {\n      this._trigger('onDrop', {\n        $event: event,\n        $data: this.data\n      });\n    }\n  };\n\n  /**\n   * Creates the clone and triggers manual kick-off for `interact`.\n   * This is necessary because we want:\n   *\n   * 1) being able to show clone object\n   * 2) being able to have disable control\n   *\n   * @private\n   * @method _onMove\n   * @return {Void}\n   */\n  Draggable.prototype._onMove = function(event) {\n    var interactable = event.interactable;\n    var interaction = event.interaction;\n    var element = event.currentTarget;\n\n    // we've to control `enabled` by our own as we are using the\n    // `manualStart` option to create clone - noop if `disabled`\n    if (this.disabled) {\n      return;\n    }\n\n    // create clone if user holds mouse/finger and no interaction\n    // is currently started - position absolutely at end of body!\n    if (interaction.pointerIsDown && !interaction.interacting()) {\n      this._clone = angular.element(element).clone();\n\n      var offsetY = element.clientHeight / 2;\n      var offsetX = element.clientWidth / 2;\n\n      var pageY = !!event.touches ?\n        event.touches[0].pageY :\n        event.pageY;\n      var pageX = !!event.touches ?\n        event.touches[0].pageX :\n        event.pageX;\n\n      this._clone.css({\n        left: (pageX - offsetX) + 'px',\n        top: (pageY - offsetY) + 'px',\n        position: 'absolute'\n      });\n\n      this._body.append(this._clone);\n      element = this._clone.get(0);\n    }\n\n    // invoke 'drag' interaction manually with the target/clone\n    interaction.start({ name: 'drag' }, interactable, element);\n  };\n\n  /**\n   * Retrieves the connected drag object data.\n   *\n   * @private\n   * @method _getData\n   * @return {object}\n   */\n  Draggable.prototype._getData = function() {\n    return this.data;\n  };\n\n  /**\n   * Translates DOM node to given coordinates.\n   *\n   * @private\n   * @method _translate\n   * @param object element\n   * @param number x\n   * @param number y\n   * @return {void}\n   */\n  Draggable.prototype._translate = function(element, x, y) {\n    var translate = 'translate('+x+'px,'+y+'px)';\n\n    element.css({\n      'webkitTransform': translate,\n      'mozTransform': translate,\n      'msTransform': translate,\n      'oTransform': translate,\n      'transform': translate\n    });\n\n    this._coordinates.x = x;\n    this._coordinates.y = y;\n  };\n\n  /**\n   * Primitive method for invoking callbacks.\n   *\n   * @private\n   * @method _trigger\n   * @return {void}\n   */\n  Draggable.prototype._trigger = function(method, args) {\n    this.$scope.$evalAsync(this[method].bind(this,args));\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('draggable', function(){\n    return {\n      scope: {\n        data: '=?draggableData',\n        clone: '=?draggableClone',\n        disabled: '=?draggableDisabled',\n        onDragStart: '&draggableOnDragStart',\n        onDragMove: '&draggableOnDragMove',\n        onDragEnd: '&draggableOnDragEnd',\n        onDrop: '&draggableOnDrop'\n      },\n      restrict: 'A',\n      controller: Draggable,\n      bindToController: true,\n      controllerAs: 'draggableController'\n    };\n  });\n\n  // --------------------------------------------------\n  // Dropable\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Dropable = function($scope, $element, $attrs) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n\n    this._interactable = null;\n    this._enterClass = 'enter';\n    this._activeClass = 'active';\n    this._itemClass = 'dropable';\n    this._acceptClass = 'draggable';\n    this._disabledClass = 'disabled';\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.disabled; },\n      function(disabled) {\n        if (disabled) {\n          me.$element.addClass(me._disabledClass);\n        } else {\n          me.$element.removeClass(me._disabledClass);\n        }\n      }\n    );\n  };\n\n  Dropable.$inject = ['$scope','$element','$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} disabled If draggable is disabled. */\n  Dropable.prototype.disabled = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes `interact` library on element\n   * with all available callbacks for dragging.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Dropable.prototype.$onInit = function() {\n    this._body = angular.element(document.body);\n    this.$element.addClass(this._itemClass);\n    var accept = '.' + this._acceptClass;\n    var element = this.$element.get(0);\n\n    this._interactable = interact(element)\n      .dropzone({\n        accept: accept,\n        enabled: !this.disabled,\n        ondrop: this._onDrop.bind(this),\n        ondragenter: this._onDragEnter.bind(this),\n        ondragleave: this._onDragLeave.bind(this),\n        ondropactivate: this._onDropActivate.bind(this),\n        ondropdeactivate: this._onDropDeactivate.bind(this)\n      });\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Dropable.prototype.$onDestroy = function() {\n    this._interactable.unset();\n    this._unwatch();\n  };\n\n  /**\n   * Removes the active class from element and\n   * triggers the `onDropDeactivate` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDropDeactivate = function(event) {\n    this.$element.removeClass(this._activeClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDropDeactivate', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Applies the active class from element and\n   * triggers the `onDropActivate` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDropActivate = function(event) {\n    this.$element.addClass(this._activeClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDropActivate', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Applies the enter class from element and\n   * triggers the `onDragEnter` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDragEnter = function(event) {\n    this.$element.addClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDragEnter', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Removes the enter class from element and\n   * triggers the `onDragLeave` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDragLeave = function(event) {\n    this.$element.removeClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDragLeave', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Removes the enter class from element and\n   * triggers the `onDrop` callback with data\n   * from the draggable element.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDrop = function(event) {\n    this.$element.removeClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDrop',{\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Primitive method for invoking callbacks.\n   *\n   * @private\n   * @method _trigger\n   * @return {void}\n   */\n  Dropable.prototype._trigger = function(method, args) {\n    this.$scope.$evalAsync(this[method].bind(this,args));\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('dropable', function(){\n    return {\n      scope: {\n        disabled: '=?dropableDisabled',\n        onDropDeactivate: '&dropableOnDropDeactivate',\n        onDropActivate: '&dropableOnDropActivate',\n        onDragEnter: '&dropableOnDragEnter',\n        onDragLeave: '&dropableOnDragLeave',\n        onDrop: '&dropableOnDrop'\n      },\n      restrict: 'A',\n      controller: Dropable,\n      bindToController: true,\n      controllerAs: 'droppableController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit, jQuery */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // ScrollTo\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ScrollTo = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.options = {};\n\n    this._source = null;\n    this._target = null;\n    this._scroller = null;\n    this._init = this._init.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onScrolled = this._onScrolled.bind(this);\n  };\n\n  ScrollTo.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} options Options for `scroll` service. */\n  ScrollTo.prototype.options = null;\n\n  /** @var {function} callback Callback for scroll finished. */\n  ScrollTo.prototype.callback = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Waits for rendering and invokes `_init()`.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ScrollTo.prototype.$onInit = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    // wait for being rendered\n    $timeout(this._init, 1);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ScrollTo.prototype.$onDestroy = function() {\n    this._source.off('scrolled', this._onScrolled);\n    this.$element.off('click', this._onClick);\n\n    this._scroller.$destroy(true);\n  };\n\n  /**\n   * Extracts dom element and sets up scroller.\n   *\n   * @private\n   * @method _init\n   * @return {void}\n   */\n  ScrollTo.prototype._init = function() {\n    // try to grab target from - can be either\n    // a jquery element or a string id / hash\n    if (this.element instanceof jQuery) {\n      this._target = this.element;\n    } else {\n      if (angular.isString(this.element)) {\n        if (this.element.charAt(0) !== '#') {\n          this._target = '#' + this.element;\n        }\n\n        this._target = jQuery(this._target);\n      }\n    }\n\n    if (this._target.length === 0) {\n      console.warn('scroll-to.js: Invalid target element!');\n      return;\n    }\n\n    // need to create a dummy `<a href='#hash'></a>`\n    // element to set it as source object for UIkit\n    var href = '#' + this._target.id;\n    this._source = jQuery('<a href=\"'+href+'\"></a>');\n\n    this.options = this.options || {};\n    this.options.offset = this.options.offset || 80;\n    this.options.duration = this.options.duration || 500;\n    this.options.easing = this.options.easing || 'easeOutExpo';\n\n    this.$element.on('click', this._onClick);\n    this._source.on('scrolled', this._onScrolled);\n\n    this._scroller = UIkit.scroll(this._source, this.options);\n  };\n\n  /**\n   * Invokes scrolling to target element.\n   *\n   * @private\n   * @method _onClick\n   * @return {void}\n   */\n  ScrollTo.prototype._onClick = function() {\n    this._scroller.scrollTo(this._target);\n  };\n\n  /**\n   * Tries to invoke callback after scrolling.\n   *\n   * @private\n   * @method _onScrolled\n   * @return {void}\n   */\n  ScrollTo.prototype._onScrolled = function() {\n    if (!angular.isFunction(this.callback)) {\n      return;\n    }\n\n    this.$scope.$evalAsync(this.callback);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('scrollTo', function(){\n    return {\n      scope: {\n        element: '=scrollTo',\n        options: '=?scrollToOptions',\n        callback: '=?scrollToCallback'\n      },\n      restrict: 'A',\n      controller: ScrollTo,\n      bindToController: true\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Evaluation\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Evaluation = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.user = $injector.get('user');\n    this.domId = 'evaluation-' + $scope.$id;\n  };\n\n  Evaluation.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} domId Unique dom id for scrolling. */\n  Evaluation.prototype.domId = null;\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('evaluation', function(){\n    return {\n      scope: {\n        parent: '=evaluation'\n      },\n      restrict: 'A',\n      transclude: {\n        text: 'evaluationText',\n        customButtons: '?evaluationCustomButtons',\n        defaultButtons: '?evaluationDefaultButtons'\n      },\n      controller: Evaluation,\n      bindToController: true,\n      controllerAs: 'evaluationController',\n      templateUrl: 'views/directives/evaluation.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Locked State\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var LockedState = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n\n    this.user = $injector.get('user');\n  };\n\n  LockedState.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('lockedState', function(){\n    return {\n      scope: {\n        isLocked: '=?lockedState'\n      },\n      restrict: 'A',\n      transclude: {\n        userText: '?userText',\n        adminText: '?adminTExt'\n      },\n      controller: LockedState,\n      bindToController: true,\n      controllerAs: 'lockedStateController',\n      templateUrl: 'views/directives/locked-state.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Form Field\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var FormField = function($scope, $element, $attrs, $transclude, $timeout)\n    {\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n      this.$timeout = $timeout;\n      this.$transclude = $transclude;\n\n      this._transcludeElements = [];\n      this._transcludeScopes = [];\n      this._cloneDefault = null;\n      this._cloneLabel = null;\n      this._unlisten = [];\n      this._unwatch = [];\n    };\n\n  FormField.$inject = ['$scope', '$element', '$attrs', '$transclude', '$timeout'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Dom id form element. */\n  FormField.prototype.id = '';\n\n  /** @var {string} label Label of form element. */\n  FormField.prototype.label = '';\n\n  /** @var {ngModelController} model Added `ngModel` controller. */\n  FormField.prototype.ngModel = null;\n\n  /** @var {boolean} resetEmpty If validation resets on empty model. */\n  FormField.prototype.resetEmpty = true;\n\n  /** @var {boolean} showMessages True if `ngMessages` are visible. */\n  FormField.prototype.showMessages = false;\n\n  /** @var {string} labelClass Class to append to label. */\n  FormField.prototype.labelClass = 'uk-form-label';\n\n  /** @var {string} failureClass Class to append on failure. */\n  FormField.prototype.failureClass = 'uk-form-danger';\n\n  /** @var {string} successClass Class to append on success. */\n  FormField.prototype.successClass = 'uk-form-success';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Renders custom transclusion (form element) and\n   * sets up watchers as well as clean up methods.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  FormField.prototype.$onInit = function()\n    {\n      // create dom id from `name` and $scope id\n      // controller properties are only available\n      // in $onInit() callback from Angular 1.5.x\n      this.id = 'form-field-' + this.$scope.$id;\n\n      // add watch properties\n      this._addWatches();\n\n      // transclude contents\n      this._transclude();\n    };\n\n  /**\n   * Removes transcluded elements, scope and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  FormField.prototype.$onDestroy = function()\n    {\n      angular.forEach(this._transcludeElements, function(element){\n        element.remove();\n      });\n\n      angular.forEach(this._transcludeScopes, function(scope){\n        scope.$destroy();\n      });\n\n      angular.forEach(this._unlisten, function(unlisten){\n        unlisten();\n      });\n\n      angular.forEach(this._unwatch, function(unwatch){\n        unwatch();\n      });\n    };\n\n  /**\n   * Sets model controller from transcluded form\n   * element using the `ng-model` attribute and\n   * the `form-field-model` helper component.\n   *\n   * @public\n   * @method setModel\n   * @param {NgModelController} ngModel\n   * @return {void}\n   */\n  FormField.prototype.setModel = function(ngModel)\n    {\n      this.ngModel = ngModel;\n    };\n\n  /**\n   * Updates validation depending on `ngModel.$valid`.\n   *\n   * @private\n   * @method _update\n   * @return {void}\n   */\n  FormField.prototype._update = function()\n    {\n      if (this.ngModel.$valid) {\n        this._cloneDefault.removeClass(this.failureClass);\n        this._cloneDefault.addClass(this.successClass);\n      } else {\n        this._cloneDefault.removeClass(this.successClass);\n        this._cloneDefault.addClass(this.failureClass);\n      }\n\n      this.showMessages = this.ngModel.$invalid;\n    };\n\n  /**\n   * Resets corresponding validation properties.\n   *\n   * @private\n   * @method _reset\n   * @return {boolean}\n   */\n  FormField.prototype._reset = function()\n    {\n      this._cloneDefault.removeClass(this.failureClass);\n      this._cloneDefault.removeClass(this.successClass);\n      this.ngModel.$setUntouched();\n      this.showMessages = false;\n    };\n\n  /**\n   * Adds scope watches for `isValid()` and `isInvalid()`.\n   *\n   * @private\n   * @method _addWatches\n   * @return {void}\n   */\n  FormField.prototype._addWatches = function()\n    {\n      var me = this;\n\n      // observes `ngModel` controller for changing any\n      // of its validation properties such as `$valid`\n      var unwatchModel = this.$scope.$watchCollection(\n        'formFieldController.ngModel',\n        function(newModel, oldModel)\n        {\n          // ignore initial invocation\n          if (newModel === oldModel) {\n            return;\n          }\n\n          // as long as model hasn't been\n          // touched no validation's made\n          if (!newModel.$touched) {\n              return;\n          }\n\n          // wait for async validators\n          if (newModel.$pending) {\n            return;\n          }\n\n          // if no view value is present\n          // reset all validation props!\n          if (!newModel.$viewValue) {\n            if (me.resetEmpty) {\n              me._reset();\n              return;\n            }\n          }\n\n          me._update();\n        }\n      );\n\n      this._unwatch.push(unwatchModel);\n    };\n\n  /**\n   * Transcludes `default` and `label` slot programmatically\n   * to append custom attributes and events to dom elements.\n   *\n   * @private\n   * @method _transclude\n   * @return {void}\n   */\n  FormField.prototype._transclude = function()\n    {\n      var me = this;\n\n      // adds `id` attribute to be focues by <label>\n      var transcludeDefault = function(clone, scope)\n      {\n        var domId = '#default-' + me.id;\n        var template = angular.element(domId);\n\n        clone.attr('id', me.id);\n\n        template.replaceWith(clone);\n\n        me._cloneDefault = clone;\n\n        me._transcludeScopes.push(scope);\n        me._transcludeElements.push(clone);\n      };\n\n      // adds `labelClass` and sets `for` attribute\n      // for <label> in order to auto focus element\n      var transcludeLabel = function(clone, scope)\n      {\n        var domId = '#label-' + me.id;\n        var template = angular.element(domId);\n\n        clone.attr('for', me.id);\n        clone.addClass(me.labelClass);\n\n        template.replaceWith(clone);\n\n        me._cloneLabel = clone;\n\n        me._transcludeScopes.push(scope);\n        me._transcludeElements.push(clone);\n      };\n\n      // wait for dom to be ready before transclude\n      var timeout = function()\n      {\n        me.$transclude(transcludeDefault, null, null);\n        me.$transclude(transcludeLabel, null, 'label');\n      };\n\n      this.$timeout(timeout);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('formField',function() {\n    return {\n      scope: {\n          name: '=formField',\n          resetEmpty: '=?formFieldResetEmpty',\n          labelClass: '=?formFieldLabelClass',\n          failureClass: '=?formFieldFailureClass',\n          successClass: '=?formFieldSuccessClass'\n      },\n      transclude: {\n        label: '?label',\n        messageMin: '?messageMin',\n        messageMax: '?messageMax',\n        messageUrl: '?messageUrl',\n        messageEmail: '?messageEmail',\n        messageNumber: '?messageNumber',\n        messagePattern: '?messagePattern',\n        messageRequired: '?messageRequired',\n        messageMinlength: '?messageMinlength',\n        messageMaxlength: '?messageMaxlength',\n        messagesCustom: '?messagesCustom'\n      },\n      restrict: 'A',\n      controller: FormField,\n      bindToController: true,\n      controllerAs: 'formFieldController',\n      templateUrl: 'views/directives/form-field.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Form Field Model\n  // --------------------------------------------------\n\n  /**\n   * @constructor\n   */\n  var FormFieldModel = function($scope, $attrs, $element, $log) {\n    this.$log = $log;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n  };\n\n  FormFieldModel.$inject = ['$scope', '$attrs', '$element', '$log'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} autoFocus If true element receives focus on init. */\n  FormFieldModel.prototype.autoFocus = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers `ngModel` on `formField` controller.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  FormFieldModel.prototype.$onInit = function()\n    {\n      if (!this.formField) {\n        this.$log.warn('formFieldModel: No form field controller found!');\n        return;\n      }\n\n      if (this.autoFocus) {\n        this.$element.focus();\n      }\n\n      this.formField.setModel(this.ngModel);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('formFieldModel', function(){\n    return {\n      scope: {\n        'autoFocus': '=?formFieldModelAutoFocus'\n      },\n      restrict: 'A',\n      require: {\n        'ngModel': 'ngModel',\n        'formField': '^?formField',\n      },\n      bindToController: true,\n      controller: FormFieldModel\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Asynchronous Validators\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorWorkshopExists = function($scope, $element, $attrs, $q, Workshop)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Workshop = Workshop;\n\n      this.keyLocked = 'validatorWorkshopLocked';\n    };\n\n  ValidatorWorkshopExists.$inject = ['$scope', '$element', '$attrs', '$q', 'Workshop'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorWorkshopExists` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorWorkshopExists.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorWorkshopExists = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the workshop exists. It sets implicitly `validatorWorkshopLocked`\n   * to avoid multiple server queries and sets to invalid if `isActive` is not true (= locked).\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorWorkshopExists.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var me = this;\n      var successCallback = function(workshop)\n      {\n        if (!workshop.isActive) {\n          me.ngModel.$setValidity(me.keyLocked, false);\n          defer.reject();\n          return;\n        }\n\n        me.ngModel.$setValidity(me.keyLocked, true);\n        defer.resolve();\n      };\n\n      var failureCallback = function()\n      {\n        defer.reject();\n      };\n\n      this.Workshop.validateWorkshopFrontend(\n        {\n          code: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorWorkshopExists',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorWorkshopExists\n      };\n  });\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorWorkshopUnique = function($scope, $element, $attrs, $q, Workshop)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Workshop = Workshop;\n    };\n\n  ValidatorWorkshopUnique.$inject = ['$scope', '$element', '$attrs', '$q', 'Workshop'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorWorkshopUnique` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorWorkshopUnique.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorWorkshopUnique = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the workshop exists.\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorWorkshopUnique.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var successCallback = function()\n      {\n        defer.reject();\n      };\n\n      var failureCallback = function()\n      {\n        defer.resolve();\n      };\n\n      this.Workshop.validateWorkshopBackend(\n        {\n          code: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorWorkshopUnique',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorWorkshopUnique\n      };\n  });\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorAdminUnique = function($scope, $element, $attrs, $q, Admin)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Admin = Admin;\n    };\n\n  ValidatorAdminUnique.$inject = ['$scope', '$element', '$attrs', '$q', 'Admin'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorAdminUnique` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorAdminUnique.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorAdminUnique = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the admin exists.\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorAdminUnique.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var successCallback = function()\n      {\n        defer.reject();\n      };\n\n      var failureCallback = function()\n      {\n        defer.resolve();\n      };\n\n      this.Admin.validateAdmin(\n        {\n          username: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorAdminUnique',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorAdminUnique\n      };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // InterestTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var InterestTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_INTEREST');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n  };\n\n  InterestTask.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  InterestTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  InterestTask.prototype.resolved = false;\n\n   /** @var {number} correctAnswers Count of correct answers. */\n  InterestTask.prototype.correctAnswers = 0;\n\n  /** @var {number} exercise1Answer Answer for first exercise. */\n  InterestTask.prototype.exercise1Answer = 0;\n\n  /** @var {number} exercise2Answer Answer for second exercise. */\n  InterestTask.prototype.exercise2Answer = 0;\n\n  /** @var {boolean} exercise1Correct Resolution state of first exercise. */\n  InterestTask.prototype.exercise1Correct = false;\n\n  /** @var {boolean} exercise2Correct Resolution state of second exercise. */\n  InterestTask.prototype.exercise2Correct = false;\n\n  /** @var {number} exercise1Result Correct result for first exercise. */\n  InterestTask.prototype.exercise1Result = 0;\n\n  /** @var {number} exercise2Result Correct result for second exercise. */\n  InterestTask.prototype.exercise2Result = 0;\n\n  // SETTINGS\n\n  /** @var {number} amount Amount of money. */\n  InterestTask.prototype.amount = 1000;\n\n  /** @var {number} rate Interest rate. */\n  InterestTask.prototype.rate = 0.02;\n\n  /** @var {number} years Number of years. */\n  InterestTask.prototype.years = 1;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  InterestTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  InterestTask.prototype.getPayload = function() {\n    /* jshint camelcase: false */\n    return {\n      task: this.task,\n      json: {\n        exercise1: {\n          current_result: this.exercise1Result,\n          actual_result: this.exercise1Answer,\n          is_valid: this.exercise1Correct\n        },\n        exercise2: {\n          current_result: this.exercise2Result,\n          actual_result: this.exercise2Answer,\n          is_valid: this.exercise2Correct\n        }\n      }\n    };\n    /* jshint camelcase: true */\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  InterestTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  InterestTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.exercise1Answer) {\n      return false;\n    }\n\n    if (!this.exercise2Answer) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  InterestTask.prototype.init = function() {\n    this.resolved = false;\n    this.correctAnswers = 0;\n    this.exercise1Answer = 0;\n    this.exercise2Answer = 0;\n    this.exercise1Correct = false;\n    this.exercise2Correct = false;\n    this.exercise1Result = this._calculateResult(1);\n    this.exercise2Result = this._calculateResult(1 + this.years);\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  InterestTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Updates answers, state and counters\n   * for given exercise for evaluation.\n   *\n   * @public\n   * @method update\n   * @param {number} value\n   * @param {string} exercise\n   * @return {Void}\n   */\n  InterestTask.prototype.update = function(value, exercise){\n    switch(exercise) {\n      case 'exercise1':\n        this.exercise1Answer = value;\n        break;\n      case 'exercise2':\n        this.exercise2Answer = value;\n        break;\n      default:\n    }\n\n    this.exercise1Correct = this.exercise1Answer === this.exercise1Result;\n    this.exercise2Correct = this.exercise2Answer === this.exercise2Result;\n\n    if (this.exercise1Correct && this.exercise2Correct) {\n      this.correctAnswers = 2;\n    } else if (this.exercise1Correct) {\n      this.correctAnswers = 1;\n    } else if (this.exercise2Correct) {\n      this.correctAnswers = 1;\n    } else {\n      this.correctAnswers = 0;\n    }\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  InterestTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates result for given years.\n   *\n   * @private\n   * @method _calculateResult\n   * @param {number} years\n   * @return {number}\n   */\n  InterestTask.prototype._calculateResult = function(years) {\n    return this.amount * Math.pow(1 + this.rate, years || 1);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('interestTask', function(){\n    return {\n      scope: {\n        rate: '=?interestTaskRate',\n        years: '=?interestTaskYears',\n        amount: '=?interestTaskAmount',\n        onResolve: '&interestTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: InterestTask,\n      bindToController: true,\n      controllerAs: 'interestTaskController',\n      templateUrl: 'views/directives/tasks/interest-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // InterestTask Exercise\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var InterestTaskExercise = function($scope,$element,$attrs) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n\n    this.disabled = false;\n    this.stack = [];\n    this.sum = 0;\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.sum; },\n      function(sum) {\n        if (!sum) {\n          me.sum = 0;\n          me.stack = [];\n        }\n      }\n    );\n  };\n\n  InterestTaskExercise.$inject = ['$scope','$element','$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} disabled If exercise is currently disabled. */\n  InterestTaskExercise.prototype.disabled = false;\n\n  /** @var {array} stack Stack collection all notes and coins. */\n  InterestTaskExercise.prototype.stack = [];\n\n  /** @var {number} sum Total sum of all values from `stack`. */\n  InterestTaskExercise.prototype.sum = 0;\n\n  /** @var {array} notes All selectable notes for exercise. */\n  InterestTaskExercise.prototype.notes = [500,200,100,50,20,10,5];\n\n  /** @var {array} notes All selectable coins for exercise. */\n  InterestTaskExercise.prototype.coins = [2,1,0.5,0.2,0.1,0.05,0.02,0.01];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  InterestTaskExercise.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  /**\n   * Adds value to `stack`, increases `sum`\n   * and invokes the `onUpdate` callback.\n   *\n   * @public\n   * @method onDrop\n   * @return {Void}\n   */\n  InterestTaskExercise.prototype.onDrop = function(value){\n    this.stack.push(value);\n    this.sum += value;\n\n    this.onUpdate({\n      sum: this.sum\n    });\n  };\n\n  /**\n   * Removes last item from `stack`, decreases\n   * `sum` and invokes the `onUpdate` callback.\n   *\n   * @public\n   * @method revert\n   * @return {Void}\n   */\n  InterestTaskExercise.prototype.revert = function() {\n    this.sum -= this.stack.pop();\n\n    this.onUpdate({\n      sum: this.sum\n    });\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('interestTaskExercise', function(){\n    return {\n      scope: {\n        sum: '=?interestTaskExerciseSum',\n        onUpdate: '&interestTaskExerciseOnUpdate',\n        disabled: '=?interestTaskExerciseDisabled'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: InterestTaskExercise,\n      bindToController: true,\n      controllerAs: 'interestTaskExerciseController',\n      templateUrl: 'views/directives/tasks/interest-task-exercise.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // DiversificationTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var DiversificationTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_DIVERSIFICATION');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  DiversificationTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  DiversificationTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  DiversificationTask.prototype.resolved = false;\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTask.prototype.heads = 'K';\n\n  /** @var {string} tails Current class of tails side. */\n  DiversificationTask.prototype.tails = 'Z';\n\n  /** @var {array} companies Data for companies. */\n  DiversificationTask.prototype.companies = {};\n\n  /** @var {array} tickets Data for tickets. */\n  DiversificationTask.prototype.tickets = {};\n\n  /** @var {array} sides Two values for coin. */\n  DiversificationTask.prototype.sides = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  DiversificationTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  DiversificationTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        tickets: {\n          one: this.tickets.one.company,\n          two: this.tickets.two.company\n        },\n        throws: {\n          one: this.throws.one.toss,\n          two: this.throws.two.toss\n        }\n      },\n      ticketCount: this.getTicketCount()\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  DiversificationTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  DiversificationTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.tickets.one.company) {\n      return false;\n    }\n\n    if (!this.tickets.two.company) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  DiversificationTask.prototype.init = function() {\n    var random = this.$injector.get('random');\n\n    this.sides = [\n      this.heads,\n      this.tails\n    ];\n\n    this.throws = {\n      one: {\n        id: 1,\n        toss: random.pick(this.sides)\n      },\n      two: {\n        id: 2,\n        toss: random.pick(this.sides)\n      }\n    };\n\n    this.tickets = {\n      one: {\n        id: 1,\n        company: null\n      },\n      two: {\n        id: 2,\n        company: null\n      }\n    };\n\n    this.companies = {\n      one: {\n        id: 1,\n        count: 0,\n        tickets: {},\n        name: 'Smart',\n        image: 'company-a.svg'\n      },\n      two: {\n        id: 2,\n        count: 0,\n        tickets: {},\n        name: 'Phone',\n        image: 'company-b.svg'\n      }\n    };\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  DiversificationTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Adds or removes a ticket from given company.\n   *\n   * @public\n   * @method update\n   * @param ticket\n   * @param company\n   * @param action\n   * @return {void}\n   */\n  DiversificationTask.prototype.update = function(ticket, company, action){\n    switch (action) {\n      case 'add':\n        if (!company.tickets[ticket.id]) {\n          company.tickets[ticket.id] = ticket;\n          ticket.company = company.name;\n          company.count++;\n        }\n        break;\n      case 'remove':\n        if (company.tickets[ticket.id]) {\n          delete company.tickets[ticket.id];\n          ticket.company = null;\n          company.count--;\n        }\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  DiversificationTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates total ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTotalTickets\n   * @return {number}\n   */\n  DiversificationTask.prototype.getTicketCount = function(){\n    var factorA = this.throws.one.toss === this.heads ? 2 : 1;\n    var factorB = this.throws.two.toss === this.heads ? 2 : 1;\n\n    var ticketsA = this.companies.one.count * factorA;\n    var ticketsB = this.companies.two.count * factorB;\n\n    return ticketsA + ticketsB;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('diversificationTask', function(){\n    return {\n      scope: {\n        onResolve: '&diversificationTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: DiversificationTask,\n      controllerAs: 'diversificationTaskController',\n      templateUrl: 'views/directives/tasks/diversification-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // DiversificationTask Coin\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var DiversificationTaskCoin = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._element = this.$element.find('.coin');\n  };\n\n  DiversificationTaskCoin.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} toss One of `heads` or `tails`. */\n  DiversificationTaskCoin.prototype.toss = null;\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTaskCoin.prototype.sides = [];\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTaskCoin.prototype.heads = 'K';\n\n  /** @var {string} tails Current class of tails side. */\n  DiversificationTaskCoin.prototype.tails = 'Z';\n\n  /** @var {boolean} flip Flag to invoke a new toss. */\n  DiversificationTaskCoin.prototype.flip = false;\n\n  /** @var {boolean} flip Flag to apply CSS classes. */\n  DiversificationTaskCoin.prototype.animate = false;\n\n  /** @var {string} backClass CSS class for back side. */\n  DiversificationTaskCoin.prototype.back = 'back';\n\n  /** @var {string} frontClass CSS class for front side. */\n  DiversificationTaskCoin.prototype.front = 'front';\n\n  /** @var {string} startSide Initially displayed side of coin. */\n  DiversificationTaskCoin.prototype.startSide = 'K';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype.$onInit = function() {\n    var animation = this.$injector.get('animation');\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n\n    this.sides = [\n      {\n        value: this.heads,\n        class: this.front\n      },\n      {\n        value: this.tails,\n        class: this.back\n      }\n    ];\n\n    if (this.startSide !== this.heads) {\n      this.sides[0].class = this.back;\n      this.sides[1].class = this.front;\n    }\n\n    me._toss = me._getToss();\n\n    var _timeoutCallback = function() {\n      var _iterateSides = function(side) {\n        if (side.value === me._toss.value) {\n          side.class = me.front;\n          return;\n        }\n\n        side.class = me.back;\n      };\n\n      angular.forEach(me.sides, _iterateSides);\n    };\n\n    var _watchFlipCallback = function(newFlip/*,oldFlip*/) {\n      if (newFlip) {\n        me.onStart({toss: me._toss.value});\n        $timeout(_timeoutCallback, 100);\n        me.animate = true;\n      }\n    };\n\n    var _watchFlipExpression = function() {\n      return me.flip;\n    };\n\n    var _watchTossCallback = function(newToss, oldToss) {\n      if (newToss !== oldToss) {\n        me._toss = me._getToss();\n      }\n    };\n\n    var _watchTossExpression = function() {\n      return me.toss;\n    };\n\n    var _evalAsyncCallback = function() {\n      me.onFinish({toss: me._toss.value});\n      me.animate = false;\n    };\n\n    var _animationEndCallback = function() {\n      me.$scope.$evalAsync(_evalAsyncCallback);\n    };\n\n    this.onInit({toss: me._toss.value});\n\n    if (animation.animationEndEvent) {\n      this._element.on(\n        animation.animationEndEvent,\n        _animationEndCallback\n      );\n    }\n\n    this._unwatchFlip = this.$scope.$watch(_watchFlipExpression, _watchFlipCallback);\n    this._unwatchToss = this.$scope.$watch(_watchTossExpression, _watchTossCallback);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype.$onDestroy = function() {\n    var animation = this.$injector.get('animation');\n\n    this._element.off(animation.animationEndEvent);\n    this._unwatchToss();\n    this._unwatchFlip();\n  };\n\n  /**\n   * Transforms `toss` to one side either\n   * by random or by given consumer input.\n   *\n   * @private\n   * @method _getToss\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype._getToss = function() {\n    var $filter = this.$injector.get('$filter');\n    var random = this.$injector.get('random');\n    var picked = random.pick(this.sides);\n\n    if (this.toss === null) {\n      return picked;\n    }\n\n    var filtered = $filter('filter')(\n      this.sides,\n      {\n        value: this.toss\n      }\n    );\n\n    if (filtered.length === 0) {\n      console.warn('Invalid value for `toss` - using random value!');\n      return picked;\n    }\n\n    return filtered[0];\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('diversificationTaskCoin', function(){\n    return {\n      scope: {\n        toss: '=?diversificationTaskCoinToss',\n        flip: '=?diversificationTaskCoinFlip',\n        onInit: '&diversificationTaskCoinOnInit',\n        onStart: '&diversificationTaskCoinOnStart',\n        onFinish: '&diversificationTaskCoinOnFinish',\n        startSide: '=?diversificationTaskCoinStartSide'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: DiversificationTaskCoin,\n      controllerAs: 'diversificationTaskCoinController',\n      templateUrl: 'views/directives/tasks/diversification-task-coin.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // BombTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var BombTask = function($scope, $attrs, $element, $injector) {\n    var type = $injector.get('TYPE_RISK');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n  };\n\n  BombTask.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  BombTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} started If the task has started. */\n  BombTask.prototype.started = false;\n\n  /** @var {boolean} stopped If the task has stopped. */\n  BombTask.prototype.stopped = false;\n\n  /** @var {boolean} hasBomb If bomb is in current collection. */\n  BombTask.prototype.hasBomb = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  BombTask.prototype.resolved = false;\n\n  /** @var {number} totalBoxes Total boxes of current game. */\n  BombTask.prototype.totalBoxes = 0;\n\n  /** @var {number} remainingBoxes Remaining boxes of current game. */\n  BombTask.prototype.remainingBoxes = 0;\n\n  /** @var {number} collectedBoxes Collected boxes of current game. */\n  BombTask.prototype.collectedBoxes = 0;\n\n  // SETTINGS\n\n  /** @var {number} avg Average of collected boxes from statistics. */\n  BombTask.prototype.avg = 12;\n\n  /** @var {number} rows Amount of rows for bomb task. */\n  BombTask.prototype.rows = 5;\n\n  /** @var {number} cols Amount of cols for bomb task. */\n  BombTask.prototype.cols = 5;\n\n  /** @var {number} interval Timeout for interval in seconds. */\n  BombTask.prototype.interval = 1;\n\n  /** @var {boolean} random\n   * - If `random` = false, boxes are collected row-wise one-by-one, starting in the top-left corner\n   * - If `random` = true, boxes are collected randomly (Fisher-Yates Algorithm)\n   * Note that this affects game play independently of `dynamic` property\n   */\n  BombTask.prototype.random = false;\n\n  /** @var {boolean} dynamic\n   * - If `dynamic` = true, one box per time interval is collected automatically\n   * - In case of `dynamic` = true, game play is affected by the variables `interval` and `random`\n   * - If `dynamic` = false, subjects collect as many boxes as they want by clicking or entering the respective number\n   * - In case of `dynamic` = false, game play is affected by the variables `random`\n   */\n  BombTask.prototype.dynamic = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  BombTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  BombTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        hasBomb: this.hasBomb,\n        collectedBoxes: this.collectedBoxes\n      },\n      ticketCount: this.getTicketCount()\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  BombTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  BombTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.dynamic) {\n      return this.stopped;\n    }\n\n    if (!this.collectedBoxes) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  BombTask.prototype.init = function() {\n    this._initMembers();\n    this._initMatrix();\n    this._initBomb();\n\n    if (!this.dynamic) {\n      this.start();\n    }\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  BombTask.prototype.reset = function() {\n    this.init();\n  };\n\n  /**\n   * Sets `started` flag. If `dynamic` is true,\n   * the interval will start to reveal cards.\n   *\n   * @public\n   * @method start\n   * @return {Void}\n   */\n  BombTask.prototype.start = function(index) {\n    if (this.dynamic) {\n      var $interval = this.$injector.get('$interval');\n\n      this._intIndex = index || 0;\n\n      var me = this;\n      var max = this.iterator.length;\n      this._intervalId = $interval(\n        function(){\n\n          var item = me.iterator[me._intIndex];\n          me.update(item,true);\n\n          me._intIndex++;\n          if (me._intIndex===max) {\n            me.stop();\n          }\n\n        },\n        this.interval*1000, // = from seconds\n        max - this._intIndex // = max iterations\n      );\n    }\n\n    this.started = true;\n  };\n\n  /**\n   * Sets `stopped` flag. If `dynamic` is true,\n   * the interval will be stopped in addition.\n   *\n   * @public\n   * @method start\n   * @return {Void}\n   */\n  BombTask.prototype.stop = function() {\n    if (this.dynamic && this._intervalId) {\n      var $interval = this.$injector.get('$interval');\n      $interval.cancel(this._intervalId);\n    }\n\n    this.stopped = true;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  BombTask.prototype.resolve = function() {\n    var $q = this.$injector.get('$q');\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var resolveCard = function(card) {\n      card.$$resolved = true;\n    };\n\n    var me = this;\n    var successCallback = function() {\n      angular.forEach(me.collection, resolveCard);\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  BombTask.prototype.getTicketCount = function(){\n    if (this.hasBomb) {\n      return 1;\n    }\n\n    return this.collectedBoxes + 1;\n  };\n\n  /**\n   * Callback for card click. Updates all\n   * related properties for final result.\n   *\n   * @public\n   * @method toggle\n   * @param {object} column\n   * @param {boolean} active\n   * @return {Void}\n   */\n  BombTask.prototype.toggle = function(column, active) {\n    var index = this.collection.indexOf(column);\n\n    if (active) {\n      if (index<0) {\n        this.collection.push(column);\n        this.collectedBoxes++;\n      }\n\n      column.$$active = true;\n    } else {\n      if (index>=0) {\n        this.collection.splice(index,1);\n        column.$$active = false;\n        this.collectedBoxes--;\n      }\n    }\n\n    if (this.isBomb(column)) {\n      this.hasBomb = true;\n    }\n\n    var total = this.totalBoxes;\n    var collected = this.collectedBoxes;\n    this.remainingBoxes = total - collected;\n  };\n\n  /**\n   * Provides indiviual tracking id for column.\n   *\n   * @public\n   * @method trackId\n   * @param {object} column\n   * @return {Void}\n   */\n  BombTask.prototype.trackId = function(column) {\n    return column.row + '_' + column.col;\n  };\n\n  /**\n   * Determines if column is actual bomb.\n   *\n   * @public\n   * @method isBomb\n   * @param {object} column\n   * @return {Void}\n   */\n  BombTask.prototype.isBomb = function(column) {\n    return angular.equals(this.bomb,column);\n  };\n\n  /**\n   * Initialzes internal properties.\n   *\n   * @private\n   * @method _initMembers\n   * @return {Void}\n   */\n  BombTask.prototype._initMembers = function() {\n    this.collection = [];\n\n    this.hasBomb = false;\n    this.started = false;\n    this.stopped = false;\n    this.resolved = false;\n\n    this.collectedBoxes = 0;\n    this.remainingBoxes = 0;\n    this.totalBoxes = this.rows * this.cols;\n  };\n\n  /**\n   * Calculates the actual matrix.\n   *\n   * @private\n   * @method _initMatrix\n   * @return {Void}\n   */\n  BombTask.prototype._initMatrix = function() {\n    this.matrix = [];\n    this.iterator = [];\n\n    for (var i=0; i<this.rows; i++) {\n\n      var columns = [];\n      for( var j=0; j<this.cols; j++ ) {\n        var data = {\n          row: i+1,\n          col: j+1\n        };\n\n        columns.push(data);\n\n        if (this.dynamic) {\n          if (!this.random) {\n            this.iterator.push(data);\n          } else {\n            var random = this.$injector.get('random');\n            random.push(this.iterator,data);\n          }\n        }\n      }\n\n      this.matrix.push(columns);\n    }\n  };\n\n  /**\n   * Initializes bomb's actual location.\n   *\n   * @private\n   * @method _initBomb\n   * @return {Void}\n   */\n  BombTask.prototype._initBomb = function() {\n    var random = this.$injector.get('random');\n\n    var row = random.between(0,this.rows-1);\n    var col = random.between(0,this.cols-1);\n\n    this.bomb = this.matrix[row][col];\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('bombTask',function(){\n    return {\n      scope: {\n        avg: '=?bombTaskAvg',\n        rows: '=?bombTaskRows',\n        cols: '=?bombTaskCols',\n        random: '=?bombTaskRandom',\n        dynamic: '=?bombTaskDynamic',\n        interval: '=?bombTaskInterval',\n        onResolve: '&bombTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: BombTask,\n      bindToController: true,\n      controllerAs: 'bombTaskController',\n      templateUrl: 'views/directives/tasks/bomb-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // BombTask Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var BombTaskCard = function(){\n  };\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Card's accociated model. */\n  BombTaskCard.prototype.model = null;\n\n  /** @var {string} isActive If card is active. */\n  BombTaskCard.prototype.isActive = false;\n\n  /** @var {string} isDisabled If card is disabled. */\n  BombTaskCard.prototype.isDisabled = false;\n\n  /** @var {string} isClickable If card is clickable. */\n  BombTaskCard.prototype.isClickable = true;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Toggles `isActive` if `isDisabled` and\n   * `isClickable` allow the action. Invokes\n   * `onToggle` callback for consumer.\n   *\n   * @public\n   * @method toggle\n   * @return {Void}\n   */\n  BombTaskCard.prototype.toggle = function() {\n    if (this.isDisabled || !this.isClickable) {\n      return;\n    }\n\n    this.isActive = !this.isActive;\n\n    this.onToggle({\n      model:this.model,\n      state:this.isActive\n    });\n  };\n\n  // registry\n  angular.module(module).directive('bombTaskCard', function(){\n    return {\n      scope: {\n        model:'=bombTaskCard',\n        onToggle:'&bombTaskCardOnToggle',\n        isActive:'=?bombTaskCardIsActive',\n        isDisabled:'=?bombTaskCardIsDisabled',\n        isClickable:'=?bombTaskCardIsClickable'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: BombTaskCard,\n      bindToController: true,\n      controllerAs: 'bombTaskCardController',\n      templateUrl: 'views/directives/tasks/bomb-task-card.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // AnchoringTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var AnchoringTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_ANCHORING');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n    this.group = user.getGroupAsString();\n  };\n\n  AnchoringTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  AnchoringTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  AnchoringTask.prototype.choice = null;\n\n  /** @var {string} group Current user's group assignment. */\n  AnchoringTask.prototype.group = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  AnchoringTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   * Sets up event source for listening to\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  AnchoringTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {object}\n   */\n  AnchoringTask.prototype.getPayload = function() {\n    var user = this.$injector.get('user');\n\n    return {\n      task: this.task,\n      json: {\n        group: user.group,\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  AnchoringTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  AnchoringTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  AnchoringTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  AnchoringTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  AnchoringTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  AnchoringTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('anchoringTask', function(){\n    return {\n      scope: {\n        onResolve: '&anchoringTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: AnchoringTask,\n      bindToController: true,\n      controllerAs: 'anchoringTaskController',\n      templateUrl: 'views/directives/tasks/anchoring-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // MentalBookkeepingTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var MentalBookkeepingTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_MENTAL_BOOKKEEPING');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n    this.group = user.getGroupAsString();\n  };\n\n  MentalBookkeepingTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  MentalBookkeepingTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  MentalBookkeepingTask.prototype.choice = null;\n\n  /** @var {string} group Current user's group assignment. */\n  MentalBookkeepingTask.prototype.group = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  MentalBookkeepingTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   * Sets up event source for listening to\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {object}\n   */\n  MentalBookkeepingTask.prototype.getPayload = function() {\n    var user = this.$injector.get('user');\n\n    return {\n      task: this.task,\n      json: {\n        group: user.group,\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  MentalBookkeepingTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  MentalBookkeepingTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('mentalBookkeepingTask', function(){\n    return {\n      scope: {\n        onResolve: '&mentalBookkeepingTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: MentalBookkeepingTask,\n      controllerAs: 'mentalBookkeepingTaskController',\n      templateUrl: 'views/directives/tasks/mental-bookkeeping-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // FramingTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var FramingTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_FRAMING');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  FramingTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  FramingTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  FramingTask.prototype.resolved = false;\n\n  /** @var {boolean} lotteryA If player opts in for lottery A. */\n  FramingTask.prototype.lotteryA = null;\n\n  /** @var {boolean} lotteryB If player opts in for lottery A. */\n  FramingTask.prototype.lotteryB = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  FramingTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  FramingTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        lotteryA: this.lotteryA,\n        lotteryB: this.lotteryB\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  FramingTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  FramingTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.lotteryA === null) {\n      return false;\n    }\n\n    if (this.lotteryB === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  FramingTask.prototype.init = function() {\n    this.lotteryA = null;\n    this.lotteryB = null;\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  FramingTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Updates provided lottery with given state.\n   *\n   * @public\n   * @method update\n   * @param {string} lottery\n   * @param {boolean} state\n   * @return {void}\n   */\n  FramingTask.prototype.update = function(lottery, state){\n    this[lottery] = state;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  FramingTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('framingTask', function(){\n    return {\n      scope: {\n        onResolve: '&framingTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: FramingTask,\n      bindToController: true,\n      controllerAs: 'framingTaskController',\n      templateUrl: 'views/directives/tasks/framing-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SavingsTargetTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SavingsTargetTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_SAVINGS_TARGET');\n\n    this.$attrs = $attrs;\n    this.$scope = $scope;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._flag = false;\n\n    this.user = this.$injector.get('user');\n    this.task = this.user.getTaskByType(type);\n    this.result = this.user.getPendingByType(type);\n\n    this.storage = this.$injector.get('storage').getProxy();\n    this._storageKey = '__savings__target__task__updated__at__';\n  };\n\n  SavingsTargetTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} user Alias to user service. */\n  SavingsTargetTask.prototype.user = null;\n\n  /** @var {object} task Task's resource from server. */\n  SavingsTargetTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  SavingsTargetTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {number} step Current step . */\n  SavingsTargetTask.prototype.step = 1;\n\n  /** @var {number} total Players wish for saving target. */\n  SavingsTargetTask.prototype.total = 3;\n\n  /** @var {string} wish Players wish for saving target. */\n  SavingsTargetTask.prototype.wish = null;\n\n  /** @var {number} amount Players first amount for saving target. */\n  SavingsTargetTask.prototype.amount = null;\n\n  /** @var {number} amountRepeated Players second amount for saving target. */\n  SavingsTargetTask.prototype.amountRepeated = null;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SavingsTargetTask.prototype.resolved = false;\n\n  // MISC\n\n  /** @var {object} form Form collecting user input. */\n  SavingsTargetTask.prototype.form = null;\n\n  /** @var {number} minAmount Minimum amount for `amount` input. */\n  SavingsTargetTask.prototype.minAmount = 1;\n\n  /** @var {number} maxAmount Maximum amount for `amount` input. */\n  SavingsTargetTask.prototype.maxAmount = 999;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        step: this.step,\n        wish: this.wish,\n        total: this.total,\n        amount: this.amount,\n        amountRepeated: this.amountRepeated\n      },\n      isPending: this.amountRepeated === null\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    // if result was created and\n    // we are waiting for paused\n    // state, we skip unlocking\n    // by using internal `_flag`\n    if (this.task.isActive) {\n      return this._flag;\n    }\n\n    // reset `_flag` as soon as\n    // `isActive` changed again\n    this.storage.removeItem(\n      this._storageKey\n    );\n\n    this._flag = false;\n    return true;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.form.$invalid) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.init = function() {\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // set flag only if still waiting for `isActive` change\n      var updatedAt = this.storage.getItem(this._storageKey);\n      if (angular.isNumber(updatedAt)) {\n        this._flag = updatedAt >= this.task.updatedAt;\n      }\n\n      // amount repeated cannot be desisted cause it's the\n      // condition in last step before setting `isPending`\n      this.amount = json.amount;\n      this.total = json.total;\n      this.wish = json.wish;\n      this.step = json.step;\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Increases `step` and invokes `resolve()`.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.update = function(){\n    if (this.step < this.total) {\n      this.step++;\n    }\n\n    if (!this.canResolve()) {\n      return;\n    }\n\n    var me = this;\n    var successCallback = function(){};\n    var failureCallback = function(){\n      me.step--;\n    };\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.resolve = function(){\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n    var $q = this.$injector.get('$q');\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var payload = this.getPayload();\n    var result = callback({\n      payload: payload\n    });\n\n    if (payload.isPending) {\n      this._flag = true;\n    }\n\n    var me = this;\n    var successCallback = function(result) {\n      if (result.isPending) {\n        if (me.step < me.total) {\n          var message = i18n.get('Thank you for your input!');\n          notification.success(message);\n        }\n\n        me.result = result;\n        me.storage.setItem(\n          me._storageKey,\n          me.task.updatedAt\n        );\n        return;\n      }\n\n      me.resolved = true;\n    };\n\n    var failureCallback = function() {\n      this._flag = false;\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates difference between `amount` and `amountRepeated`.\n   *\n   * @public\n   * @method getDifference\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.getDifference = function(){\n    return this.amountRepeated - this.amount;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('savingsTargetTask', function(){\n    return {\n      scope: {\n        onUpdate: '&savingsTargetTaskOnUpdate',\n        onResolve: '&savingsTargetTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: SavingsTargetTask,\n      bindToController: true,\n      controllerAs: 'savingsTargetTaskController',\n      templateUrl: 'views/directives/tasks/savings-target-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SelfCommitmentTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SelfCommitmentTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_SELF_COMMITMENT');\n\n    this.$injector = $injector;\n\n    this.user = this.$injector.get('user');\n    this.task = this.user.getTaskByType(type);\n    this.result = this.user.getPendingByType(type);\n  };\n\n  SelfCommitmentTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} user Alias to user service. */\n  SelfCommitmentTask.prototype.user = null;\n\n  /** @var {object} task Task's resource from server. */\n  SelfCommitmentTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  SelfCommitmentTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {object} watched Hash storing watched video ids. */\n  SelfCommitmentTask.prototype.videos = {\n    'ImPxD_FDpKM': false,\n    'gUYjYEGbxEY': false\n  };\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SelfCommitmentTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        videos: this.videos\n      },\n      isPending: this._isPending()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.init = function() {\n    if (this.result !== null) {\n      var json = this.result.json;\n      this.videos = json.videos;\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.update = function(id){\n    if (this.videos[id]) {\n      return;\n    }\n\n    this.videos[id] = true;\n    if (!this.canResolve()) {\n      return;\n    }\n\n    var me = this;\n    var successCallback = function(){};\n    var failureCallback = function(){\n      me.videos[id] = false;\n    };\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var payload = this.getPayload();\n    var result = callback({\n      payload: payload\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      if (result.isPending) {\n        me.result = result;\n        return;\n      }\n\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Checks if all videos has been watched.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype._isPending = function(){\n    for (var id in this.videos) {\n      if (!this.videos[id]) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('selfCommitmentTask', function(){\n    return {\n      scope: {\n        onUpdate: '&selfCommitmentTaskOnUpdate',\n        onResolve: '&selfCommitmentTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: SelfCommitmentTask,\n      controllerAs: 'selfCommitmentTaskController',\n      templateUrl: 'views/directives/tasks/self-commitment-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, moment */\n/* jshint bitwise: false */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // ProcrastinationTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_PROCRASTINATION');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n    this.result = user.getPendingByType(type);\n\n    this.domId = 'procrastination-task-' + $scope.$id;\n\n    this._intervalId = null;\n    this._onInterval = this._onInterval.bind(this);\n  };\n\n  ProcrastinationTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {string} type Task's `type` property from server. */\n  ProcrastinationTask.prototype.type = null;\n\n  /** @var {object} task Task's resource from server. */\n  ProcrastinationTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  ProcrastinationTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {string} mode One of `ALL` or `SPLIT`. */\n  ProcrastinationTask.prototype.mode = null;\n\n  /** @var {number} rounds Current game round count. */\n  ProcrastinationTask.prototype.count = 0;\n\n  /** @var {number} total Total rounds depends on `mode`. */\n  ProcrastinationTask.prototype.total = 1;\n\n  /** @var {array} rounds Results of single game rounds. */\n  ProcrastinationTask.prototype.rounds = [];\n\n  /** @var {number} openRounds Number of left rounds to play. */\n  ProcrastinationTask.prototype.openRounds = null;\n\n  /** @var {number} minCatched Minimum catched bubbles depends on `mode`. */\n  ProcrastinationTask.prototype.minCatched = null;\n\n  /** @var {number} maxEscaped Maximum escaped bubbles depends on `mode`. */\n  ProcrastinationTask.prototype.maxEscaped = null;\n\n  /** @var {number} updatedAt When last result was written. */\n  ProcrastinationTask.prototype.updatedAt = null;\n\n  /** @var {number} invalidAt When task will be unresolvable. */\n  ProcrastinationTask.prototype.invalidAt = null;\n\n  /** @var {string} state One of `IDLE`, `DECISION`, `PLAYING`. */\n  ProcrastinationTask.prototype.state = 'IDLE';\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  ProcrastinationTask.prototype.resolved = false;\n\n  // MISC\n\n  /** @var {string} domId Unique dom id for this task for scrolling purposes. */\n  ProcrastinationTask.prototype.domId = null;\n\n  /** @var {boolean} warmup If dry-run has been finished. */\n  ProcrastinationTask.prototype.hasWarmup = false;\n\n  /** @var {number} warmupMaxEscaped Maximum escaped bubbles for demo mode. */\n  ProcrastinationTask.prototype.warmupMaxEscaped = 2;\n\n  /** @var {number} warmupMinCatched Minimum catched bubbles for demo mode. */\n  ProcrastinationTask.prototype.warmupMinCatched = 20;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.$onDestroy = function() {\n    var $interval = this.$injector.get('$interval');\n\n    if (this._intervalId !== null) {\n      $interval.cancel(this._intervalId);\n    }\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        mode: this.mode,\n        state: this.state,\n        rounds: this.rounds,\n        success: this.hasSuccess()\n      },\n      isPending: this._isPending(),\n      ticketCount: this.getTicketCount()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (!this.hasWarmup) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.init = function() {\n    // check for pending result\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // 1) apply round / count\n      this.rounds = json.rounds;\n      this.count = json.rounds.length;\n\n      // 2) call setters only now\n      this.setWarmup(true);\n      this.setMode(json.mode);\n      this.setState(json.state);\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.update = function(result){\n    switch (this.state) {\n      case 'IDLE':\n        this.setState('DECISION');\n        break;\n\n      case 'DECISION':\n        this.setState('PLAYING');\n        break;\n\n      case 'PLAYING':\n        this.count = this.rounds.push(result);\n        break;\n      default:\n    }\n\n    if (!this.canResolve()) {\n      return;\n    }\n\n    this.resolve();\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.resolve = function(){\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n    var $q = this.$injector.get('$q');\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var result = callback({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      var message;\n\n      if (result.isPending) {\n        me.result = result;\n\n        switch (me.state) {\n          case 'IDLE': break;\n          case 'DECISION': break;\n          case 'PLAYING':\n            switch (me.mode) {\n              case 'ALL': break;\n              case 'SPLIT':\n                if (me.count > 0) {\n                  message = i18n.get(\n                    'Super, you have succeeded exercise %s of %s!',\n                    me.count,\n                    me.total\n                  );\n                  notification.success(message);\n                }\n                break;\n              default:\n                break;\n            }\n            break;\n          default:\n        }\n\n        return;\n      }\n\n      if (!me.hasSuccess()) {\n        message = i18n.get('Sorry, but the time has expired for this exercise and you retrieve only 1 ticket!');\n        notification.error(message);\n      } else {\n        message = i18n.get('Super, you have successfully done this exercise and retrieve 5 tickets!');\n        notification.success(message);\n      }\n\n      me.resolved = true;\n    };\n\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Sets game mode to `ALL` or `SPLIT`.\n   *\n   * @public\n   * @method setMode\n   * @param {string} mode\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setMode = function(mode){\n    switch (mode) {\n      case 'ALL':\n        this.total = 1;\n        this.maxEscaped = 15;\n        this.minCatched = 150;\n        break;\n      case 'SPLIT':\n        this.total = 3;\n        this.maxEscaped = 5;\n        this.minCatched = 50;\n        break;\n      default:\n        return;\n    }\n\n    this.mode = mode;\n    this.openRounds = this.total - this.count;\n  };\n\n  /**\n   * Sets game state to `IDLE`, `DECISION` or `PLAYING`.\n   *\n   * @public\n   * @method setState\n   * @param {string} state\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setState = function(state){\n    var $interval = this.$injector.get('$interval');\n\n    switch (state) {\n      case 'IDLE':\n        break;\n      case 'DECISION':\n        break;\n      case 'PLAYING':\n        var updatedAt = this.result.updatedAt;\n        this.updatedAt = moment.unix(updatedAt);\n        this.invalidAt = this.updatedAt.clone();\n\n        switch (this.mode) {\n          case 'ALL':\n            this.invalidAt.add(6, 'weeks');\n            break;\n          case 'SPLIT':\n            this.invalidAt.add(2, 'weeks');\n            break;\n          default:\n        }\n\n        this._intervalId = $interval(this._onInterval, 1000);\n\n        break;\n      default:\n        return;\n    }\n\n    this.state = state;\n  };\n\n  /**\n   * Sets `hasWarmup` flag after dry run.\n   *\n   * @public\n   * @method setWarmup\n   * @param {boolean} warmup\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setWarmup = function(warmup){\n    this.hasWarmup = warmup;\n  };\n\n  /**\n   * Whether or not task is actually invalid.\n   *\n   * @public\n   * @method isInvalid\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.isInvalid = function() {\n    if (this.invalidAt === null) {\n      return false;\n    }\n\n    return +this._now() > +this.invalidAt;\n  };\n\n  /**\n   * If amount of results corresponds to `total`.\n   *\n   * @public\n   * @method hasSuccess\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.hasSuccess = function() {\n    return this.rounds.length === this.total;\n  };\n\n  /**\n   * Retrieves the current played round.\n   *\n   * @public\n   * @method getCurrentRound\n   * @return {string}\n   */\n  ProcrastinationTask.prototype.getCurrentRound = function(){\n    return this.count + 1;\n  };\n\n  /**\n   * Calculates remaining time for finishing\n   * this task depending on chosen game mode.\n   *\n   * @public\n   * @method getRemainingTime\n   * @return {string}\n   */\n  ProcrastinationTask.prototype.getRemainingTime = function(){\n    var string = this.$injector.get('string');\n    var i18n = this.$injector.get('i18n');\n\n    if (this.invalidAt === null) {\n      return '';\n    }\n\n    var difference = this.invalidAt.diff(this._now());\n    var duration = moment.duration(difference);\n\n    var seconds = ~~duration.asSeconds();\n    var minutes = ~~duration.asMinutes();\n    var hours = ~~duration.asHours();\n    var days = ~~duration.asDays();\n    var value, keys;\n\n    if (days > 0) {\n      value = days;\n      keys = ['day', 'days'];\n    } else if (hours > 0) {\n      value = hours;\n      keys = ['hour', 'hours'];\n    } else if (minutes > 0) {\n      value = minutes;\n      keys = ['minute', 'minutes'];\n    } else {\n      value = seconds >= 0 ? seconds : 0;\n      keys = ['second', 'seconds'];\n    }\n\n    var key = value === 1 ?\n      keys[0] :\n      keys[1];\n\n    var unit = i18n.get(key);\n\n    return string.sprintf('%s %s', value, unit);\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  ProcrastinationTask.prototype.getTicketCount = function(){\n    if (this.hasSuccess()) {\n      return 5;\n    }\n\n    return 1;\n  };\n\n  /**\n   * Interval callback for checking invalidation.\n   *\n   * @private\n   * @method _onInterval\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype._onInterval = function() {\n    var $interval = this.$injector.get('$interval');\n    if (!this.isInvalid() || !this.canResolve()) {\n      return;\n    }\n\n    $interval.cancel(this._intervalId);\n    this.count = this.total;\n    this.resolve();\n  };\n\n  /**\n   * Whether or not task is currently pending.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype._isPending = function() {\n    return this.count < this.total;\n  };\n\n  /**\n   * Gets the current timestamp as moment.\n   *\n   * @private\n   * @method _now\n   * @return {object}\n   */\n  ProcrastinationTask.prototype._now = function() {\n    /*\n    if (!this._testInvalidation) {\n      this._testInvalidation = this.invalidAt.clone().subtract(3, 'seconds')\n    } else {\n      this._testInvalidation.add(1, 'second');\n    }\n    return this._testInvalidation;\n    */\n    return moment();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTask', function(){\n    return {\n      scope: {\n        onUpdate: '&procrastinationTaskOnUpdate',\n        onResolve: '&procrastinationTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: ProcrastinationTask,\n      bindToController: true,\n      controllerAs: 'procrastinationTaskController',\n      templateUrl: 'views/directives/tasks/procrastination-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // ProcrastinationTask Game\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTaskGame = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.bubbles = {};\n    this.viewport = {};\n    this.domId = 'viewport-' + $scope.$id;\n\n    this._nextId = 0;\n    this._tapped = 0;\n    this._rounds = 0;\n    this._retries = 0;\n    this._timeout = 100;\n    this._requestId = null;\n\n    this._loop = this._loop.bind(this);\n    this._update = this._update.bind(this);\n    this._resize = this._resize.bind(this);\n\n    this._window = angular.element(window);\n    this._viewport = this.$element.find('.viewport');\n  };\n\n  ProcrastinationTaskGame.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} catched Count of catched bubbles. */\n  ProcrastinationTaskGame.prototype.catched = 0;\n\n  /** @var {number} escaped Count of escaped bubbles. */\n  ProcrastinationTaskGame.prototype.escaped = 0;\n\n  /** @var {number} accuracy Players scoring accuracy. */\n  ProcrastinationTaskGame.prototype.accuracy = 0;\n\n  /** @var {object} bubbles Hash map keeping bubble objects. */\n  ProcrastinationTaskGame.prototype.bubbles = null;\n\n  /** @var {object} viewport Viewport holding dimensions and offsets. */\n  ProcrastinationTaskGame.prototype.viewport = null;\n\n  /** @var {boolean} state One of `IDLE`, `RUNNING`, `TIMEOUT`, `GAME_OVER` or `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.state = 'IDLE';\n\n  /** @var {boolean} expired Flag for expiring current game while its running. */\n  ProcrastinationTaskGame.prototype.expired = false;\n\n  /** @var {number} maxRounds Maximum number of rounds after `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.maxRounds = 1;\n\n  /** @var {number} maxRounds Maximum number of retries after `GAME_OVER`. */\n  ProcrastinationTaskGame.prototype.maxRetries = Number.POSITIVE_INFINITY;\n\n  /** @var {number} maxEscaped Maximum amount of escaped bubbles for `GAME_OVER`. */\n  ProcrastinationTaskGame.prototype.maxEscaped = 15;\n\n  /** @var {number} maxEscaped Maximum amount of escaped bubbles for `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.minCatched = 150;\n\n  /** @var {string} bubbleDelay Timeout until next bubble will appear on viewport. */\n  ProcrastinationTaskGame.prototype.bubbleDelay = 100;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up event listeners and animation frame.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.$onInit = function() {\n    this._window.on('resize', this._resize);\n\n    var me = this;\n    this._unwatch = this.$scope.$watch(\n      function() {\n        return me.expired;\n      },\n      function(isExpired) {\n        if (isExpired) {\n          me.expire();\n        }\n      }\n    );\n  };\n\n  /**\n   * Removes event listener and animation frame.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.$onDestroy = function() {\n    this._window.off('resize', this._resize);\n    this._unwatch();\n    this._unloop();\n  };\n\n  /**\n   * Invokes game loop and sets `RUNNING` state.\n   *\n   * @public\n   * @method start\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.start = function() {\n    // calculate viewport now that we can\n    // be sure that elements are rendered\n    this.viewport = this._getViewport();\n\n    this.state = 'RUNNING';\n    this._loop();\n  };\n\n  /**\n   * Stops and sets `GAME_OVER` state.\n   *\n   * @public\n   * @method gameOver\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.quit = function() {\n    this._unloop();\n\n    this._retries++;\n\n    this.bubbles = {};\n    this.state = 'GAME_OVER';\n\n    var result = this._getResult();\n    this.onGameOver({ result: result });\n  };\n\n  /**\n   * Stops and sets `FINISHED` state.\n   *\n   * @public\n   * @method done\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.done = function() {\n    this._unloop();\n\n    this._rounds++;\n\n    this.bubbles = {};\n    this.state = 'GAME_DONE';\n\n    var result = this._getResult();\n    this.onGameDone({ result: result });\n  };\n\n  /**\n   * Stops and sets `TIMEOUT` state.\n   *\n   * @public\n   * @method expire\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.expire = function() {\n    this._unloop();\n\n    this.bubbles = {};\n    this.state = 'TIMEOUT';\n  };\n\n  /**\n   * Resets game and sets `IDLE` state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.reset = function() {\n    this._unloop();\n\n    this._nextId = 0;\n    this._tapped = 0;\n    this._timeout = 100;\n    this._requestId = null;\n\n    this.catched = 0;\n    this.escaped = 0;\n    this.accuracy = 0;\n    this.state = 'IDLE';\n  };\n\n  /**\n   * Initializes\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.onClick = function($event) {\n    switch (this.state) {\n      case 'IDLE':\n        this.start();\n        break;\n      case 'RUNNING':\n        this._tapped++;\n\n        var target = $event.target;\n        var viewport = this._viewport.get(0);\n\n        // only update accuracy immediately if\n        // clicked on viewport, otherwise this\n        // will be done after bubble animation!\n        if (viewport.id === target.id) {\n          this._setAccuracy();\n        }\n\n        break;\n      case 'TIMEOUT':\n        // noop - disabled\n        break;\n      case 'GAME_OVER':\n        if (this.canRetry()) {\n          this.reset();\n          this.start();\n        }\n\n        break;\n      case 'GAME_DONE':\n        if (this.canRestart()) {\n          this.reset();\n          this.start();\n        }\n\n        break;\n      default:\n    }\n  };\n\n  /**\n   * True if player can retry game after `GAME_OVER`.\n   *\n   * @public\n   * @method canRetry\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.canRetry = function() {\n    return this._retries < this.maxRetries;\n  };\n\n  /**\n   * True if player can retry game after `GAME_OVER`.\n   *\n   * @public\n   * @method canRestart\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.canRestart = function() {\n    return this._rounds < this.maxRounds;\n  };\n\n  /**\n   * Adds bubble controller to internal hash.\n   *\n   * @public\n   * @method addBubble\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.addBubble = function(bubble) {\n    this.bubbles[bubble.id] = bubble;\n  };\n\n  /**\n   * Removes bubble, update counters and checks game state.\n   *\n   * @public\n   * @method removeBubble\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.removeBubble = function(bubble) {\n    // don't remove twice ($onDestroy)\n    if (!this.bubbles[bubble.id]) {\n      return;\n    }\n\n    // catched - check min count\n    if (bubble.catched) {\n      this.catched++;\n\n      // update accuracy\n      this._setAccuracy();\n\n      var min = this.minCatched;\n      if (this.catched >= min) {\n        this.done();\n      }\n    }\n\n    // escaped - check max count\n    if (bubble.escaped) {\n      this.escaped++;\n\n      var max = this.maxEscaped;\n      if (this.escaped >= max) {\n        this.quit();\n      }\n    }\n\n    delete this.bubbles[bubble.id];\n  };\n\n  /**\n   * Actual gaming loop for animation frame.\n   *\n   * @private\n   * @method _loop\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._loop = function() {\n    var animation = this.$injector.get('animation');\n\n    this._requestId = animation.requestAnimationFrame(this._loop);\n    this.$scope.$evalAsync(this._update);\n  };\n\n  /**\n   * Removes current animation frame.\n   *\n   * @public\n   * @method stop\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._unloop = function() {\n    var animation = this.$injector.get('animation');\n    animation.cancelAnimationFrame(this._requestId);\n  };\n\n  /**\n   * Animation frame callback handling creation of new\n   * bubbles being rendered and propagates `update()`.\n   *\n   * @private\n   * @method _update\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._update = function() {\n    var random = this.$injector.get('random');\n\n    this._timeout--;\n    if (this._timeout === 0 ) {\n      this._timeout = random.between(0, this.bubbleDelay) + 25;\n      this.bubbles[this._nextId++] = null;\n    }\n\n    for (var id in this.bubbles) {\n      var bubble = this.bubbles[id];\n      if (!bubble) {\n        continue;\n      }\n\n      bubble.update();\n    }\n  };\n\n  /**\n   * Sets up new `ratio` of viewport and propages `resize()`.\n   *\n   * @private\n   * @method resize\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._resize = function() {\n    this.viewport = this._getViewport();\n\n    var height = this.viewport.height;\n    var width = this.viewport.width;\n\n    this.ratio = width / height;\n\n    for (var id in this.bubbles) {\n      var bubble = this.bubbles[id];\n      if (!bubble) {\n        continue;\n      }\n\n      bubble.resize();\n    }\n  };\n\n  /**\n   * Gets result payload for game callbacks.\n   *\n   * @private\n   * @method _getResult\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._getResult = function() {\n    return {\n      catched: this.catched,\n      escaped: this.escaped,\n      accuracy: this.accuracy\n    };\n  };\n\n  /**\n   * Calculates and sets `accuracy` property.\n   *\n   * @private\n   * @method _setAccuracy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._setAccuracy = function() {\n    this.accuracy = this.catched / this._tapped;\n  };\n\n  /**\n   * Gets viewport dimensions and offsets.\n   *\n   * @private\n   * @method _getViewport\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._getViewport = function() {\n    var width = this._viewport.width();\n    var height = this._viewport.height();\n    var top = this._viewport.scrollTop();\n    var left = this._viewport.scrollLeft();\n\n    return {\n      top: top,\n      left: left,\n      width: width,\n      height: height,\n      right: left + width,\n      bottom: top + height\n    };\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTaskGame', function(){\n    return {\n      scope: {\n        expired: '=?procrastinationTaskGameExpired',\n        maxRounds: '=?procrastinationTaskGameMaxRounds',\n        maxRetries: '=?procrastinationTaskGameMaxRetries',\n        onGameDone: '&procrastinationTaskGameOnGameDone',\n        onGameOver: '&procrastinationTaskGameOnGameOver',\n        minCatched: '=?procrastinationTaskGameMinCatched',\n        maxEscaped: '=?procrastinationTaskGameMaxEscaped',\n        bubbleDelay: '=?procrastinationTaskGameBubbleDelay'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: ProcrastinationTaskGame,\n      controllerAs: 'procrastinationTaskGameController',\n      templateUrl: 'views/directives/tasks/procrastination-task-game.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // ProcrastinationTask Bubble\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTaskBubble = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.domId = 'bubble-' + $scope.$id;\n  };\n\n  ProcrastinationTaskBubble.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} themes Predefined themes for bubbles. */\n  ProcrastinationTaskBubble.prototype.themes = [\n    'theme-1',\n    'theme-2',\n    'theme-3',\n    'theme-4',\n    'theme-5'\n  ];\n\n  /**\n\n  /** @var {string} class CSS class namem for bubble. */\n  ProcrastinationTaskBubble.prototype.class = 'bubble';\n\n  /** @var {object} style Style definitions for bubble. */\n  ProcrastinationTaskBubble.prototype.style = {};\n\n  /** @var {string} theme A random theme for bubble. */\n  ProcrastinationTaskBubble.prototype.theme = null;\n\n  /** @var {number} radius Radius of bubble. */\n  ProcrastinationTaskBubble.prototype.radius = null;\n\n  /** @var {number} radius Animation speed of bubble. */\n  ProcrastinationTaskBubble.prototype.speed = null;\n\n  /** @var {number} wave Horizontal swinging intensity. */\n  ProcrastinationTaskBubble.prototype.wave = null;\n\n  /** @var {number} x Current x position of bubble. */\n  ProcrastinationTaskBubble.prototype.x = null;\n\n  /** @var {number} y Current y position of bubble. */\n  ProcrastinationTaskBubble.prototype.y = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registeres bubble with game controller after inital setup.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.$onInit = function() {\n    var random = this.$injector.get('random');\n    var game = this.gameController;\n\n    this.theme = random.pick(this.themes);\n\n    this.radius = random.between(0, 15) + 20;\n    this.speed = random.between(0, 1.25)  + 2.25;\n    this.wave = 1.5 + this.radius;\n\n    var xOffset = this.radius * 2;\n    this.y = game.viewport.height + random.between(0, 50) + 50;\n    this.x = random.between(xOffset, game.viewport.width - xOffset);\n\n    this._originalR = game.ratio;\n    this._originalX = this.x;\n\n    this.style = {\n      top: this.y,\n      left: this.x,\n      width: this.radius * 2,\n      height: this.radius * 2\n    };\n\n    this.gameController.addBubble(this);\n  };\n\n  /**\n   * Unregisteres bubble with game controller.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.$onDestroy = function() {\n    this.gameController.removeBubble(this);\n  };\n\n  /**\n   * Updates `x` and `y` coordinates and applies style.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.update = function() {\n    var sin = Math.sin(new Date().getTime() * 0.002);\n    this.x = this.wave * sin + this._originalX;\n    this.y = this.y - this.speed;\n\n    this.style.left = this.x;\n    this.style.top = this.y;\n\n    var offscreenY = -this.radius * 2;\n    if (this.y > offscreenY) {\n      return;\n    }\n\n    this.escaped = true;\n    this.gameController.removeBubble(this);\n  };\n\n  /**\n   * Updates `x` coordinate according to new ratio.\n   *\n   * @public\n   * @method resize\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.resize = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n    var timeout = function() {\n      var ratio = me.gameController.ratio;\n      var move = ratio / me._originalR;\n\n      me._originalX *= move;\n      me._resizeId = null;\n    };\n\n    if (this._resizeId) {\n      $timeout.cancel(this._resizeId);\n    }\n\n    this._resizeId = $timeout(timeout, 250);\n  };\n\n  /**\n   *\n   *\n   * @public\n   * @method onClick\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.onClick = function() {\n    var animation = this.$injector.get('animation');\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n\n    var evalAsync = function() {\n      me.gameController.removeBubble(me);\n    };\n\n    var onAnimationEnd = function() {\n      me.$scope.$evalAsync(evalAsync);\n      me.$element.off(\n        animation.animationEndEvent,\n        onAnimationEnd\n      );\n    };\n\n    if (animation.animationEndEvent) {\n      this.$element.on(\n        animation.animationEndEvent,\n        onAnimationEnd\n      );\n    } else {\n      $timeout(evalAsync, 50);\n    }\n\n    this.catched = true;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTaskBubble', function(){\n    return {\n      scope: {\n        id: '=procrastinationTaskBubble'\n      },\n      restrict: 'A',\n      transclude: true,\n      require: {\n        'gameController': '^procrastinationTaskGame'\n      },\n      bindToController: true,\n      controller: ProcrastinationTaskBubble,\n      controllerAs: 'procrastinationTaskBubbleController',\n      templateUrl: 'views/directives/tasks/procrastination-task-bubble.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var LoginFrontend = function($scope, $injector, code) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n\n    // @see: next()\n    this.code = code;\n  };\n\n  LoginFrontend.$inject = ['$scope', '$injector', 'code'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} code Workshop code for authentication. */\n  LoginFrontend.prototype.code = null;\n\n  /** @var {string} username User name for authentication. */\n  LoginFrontend.prototype.username = null;\n\n  /** @var {RegExp} codeMinLength Minimum length of password. */\n  LoginFrontend.prototype.codeMinLength = 8;\n\n  /** @var {RegExp} codePattern Regular expression for `username` property. */\n  LoginFrontend.prototype.codePattern = /^[A-Za-z0-9]+$/;\n\n  /** @var {RegExp} userpattern Regular expression for `username` property. */\n  LoginFrontend.prototype.userpattern = /^[A-Za-z][A-Za-z](?:0[1-9]|[12]\\d|3[01])(?:0[1-9]|1[012])\\d$/;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Signs a user in with personal code to gather JWT token.\n   *\n   * @public\n   * @method signin\n   * @return {Void}\n   */\n  LoginFrontend.prototype.signin = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You have successfully signed in!');\n        notification.success(message);\n        $state.go('frontend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth.signin({\n        username: this.username\n      }, 'frontend').then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Signs a user up with personal and workshop code.\n   *\n   * @public\n   * @method signup\n   * @return {Void}\n   */\n  LoginFrontend.prototype.signup = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You have successfully signed up!');\n        notification.success(message);\n        $state.go('frontend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth\n        .signup({\n          username: this.username,\n          password: this.code\n        }, 'frontend').then(\n          successCallback,\n          failureCallback\n        );\n    };\n\n  /**\n   * Persists code in storage and navigates to `step2` of signup.\n   *\n   * @public\n   * @method continue\n   * @return {Void}\n   */\n  LoginFrontend.prototype.next = function()\n    {\n      var CODE_STORAGE_KEY = this.$injector.get('CODE_STORAGE_KEY');\n      var storage = this.$injector.get('storage').getProxy();\n      var $state = this.$injector.get('$state');\n\n      storage.setItem(CODE_STORAGE_KEY, this.code);\n      $state.go('login.frontend.signup.step2', {}, {\n        // note: this is important to avoid usual\n        // redirection by refetching resolve data\n        // of `login.frontend` parent state\n        reload: true\n      });\n    };\n\n  angular.module(module).controller('LoginFrontendController', LoginFrontend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var LoginBackend = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  LoginBackend.$inject = ['$scope', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} username Username for authentication. */\n  LoginBackend.prototype.username = null;\n\n  /** @var {string} workshop Password for authentication. */\n  LoginBackend.prototype.password = null;\n\n  /** @var {RegExp} usernameMinLength Minimum length of username. */\n  LoginBackend.prototype.usernameMinLength = 5;\n\n  /** @var {RegExp} passwordMinLength Minimum length of password. */\n  LoginBackend.prototype.passwordMinLength = 8;\n\n  /** @var {RegExp} passwordMaxLength Maximum length of password. */\n  LoginBackend.prototype.passwordMaxLength = 4096;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Signs an admin in with username and password.\n   *\n   * @public\n   * @method signin\n   * @return {Void}\n   */\n  LoginBackend.prototype.signin = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You are logged in now!');\n        notification.success(message);\n        $state.go('backend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth.signin({\n        username: this.username,\n        password: this.password\n      }, 'backend').then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  angular.module(module).controller('LoginBackendController', LoginBackend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Contact = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  Contact.$inject = ['$scope','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of contact. */\n  Contact.prototype.name = null;\n\n  /** @var {string} email Email of contact. */\n  Contact.prototype.email = null;\n\n  /** @var {string} subject Subject of contact. */\n  Contact.prototype.subject = null;\n\n  /** @var {string} message Message of contact. */\n  Contact.prototype.message = null;\n\n  /** @var {string} messageMinLength Message minmimum length. */\n  Contact.prototype.messageMinLength = 25;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends an email from contact form to admins.\n   *\n   * @public\n   * @method submit\n   * @return {Void}\n   */\n  Contact.prototype.submit = function()\n    {\n      var mail = this.$injector.get('mail');\n      var form = this.$scope.contactForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var me = this;\n\n      var successCallback = function()\n      {\n        me.reset();\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      mail.send({\n        name: this.name,\n        email: this.email,\n        subject: this.subject,\n        message: this.message\n      }).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Resets all form inputs to initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  Contact.prototype.reset = function()\n    {\n      this.name = null;\n      this.email = null;\n      this.subject = null;\n      this.message = null;\n    };\n\n  angular.module(module).controller('ContactController', Contact);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Frontend = function($injector) {\n    this.$injector = $injector;\n\n    this.user = $injector.get('user');\n  };\n\n  Frontend.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} user User service object. */\n  Frontend.prototype.user = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Creates a new result resource from task payload.\n   *\n   * @public\n   * @method createResult\n   * @param {object} payload\n   * @return {Void}\n   */\n  Frontend.prototype.createResult = function(payload)\n  {\n    var Result = this.$injector.get('Result');\n    var user = this.$injector.get('user');\n\n    var successCallback = function(result)\n      {\n        // update user object from response\n        // handling comparisons for `state`,\n        // `tickets` and showing messages\n        user.update(result);\n      };\n\n    var failureCallback = function()\n      {\n        // noop\n      };\n\n    var result = new Result(payload);\n    var promise = result.$create();\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Updates a new result resource from task `result`.\n   *\n   * @public\n   * @method updateResult\n   * @param {object} result\n   * @return {Void}\n   */\n  Frontend.prototype.updateResult = function(payload)\n  {\n    var Result = this.$injector.get('Result');\n    var user = this.$injector.get('user');\n\n    var successCallback = function(result)\n      {\n        // update user object from response\n        // handling comparisons for `state`,\n        // `tickets` and showing messages\n        user.update(result);\n      };\n\n    var failureCallback = function()\n      {\n        // noop\n      };\n\n    var promise = Result.update({ id: payload.id }, payload).$promise;\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @public\n   * @method logout\n   * @return {Void}\n   */\n  Frontend.prototype.logout = function()\n    {\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n\n      var successCallback = function()\n        {\n          $state.go('login.frontend');\n        };\n\n      var failureCallback = function()\n        {\n\n        };\n\n      auth.signout().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Redirects router to state.\n   *\n   * @public\n   * @method goTo\n   * @param {string} state\n   * @return {Void}\n   */\n  Frontend.prototype.goTo = function(state)\n    {\n      var $state = this.$injector.get('$state');\n\n      $state.go(state);\n    };\n\n  angular.module(module).controller('FrontendController', Frontend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Workshop = function($scope, $injector, workshops) {\n    this.workshops = workshops;\n    this.$injector = $injector;\n    this.$scope = $scope;\n\n    this._resultsSource = null;\n    this._userSources = {};\n    this._workshops = {};\n    this._tasks = {};\n\n    this._initWorkshops();\n    this._initListener();\n  };\n\n  Workshop.$inject = ['$scope', '$injector', 'workshops'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of new workshop. */\n  Workshop.prototype.name = null;\n\n  /** @var {string} code Code of new workshop. */\n  Workshop.prototype.code = null;\n\n  /** @var {RegExp} nameMinLength Minimum length of workshop name. */\n  Workshop.prototype.nameMinLength = 8;\n\n  /** @var {RegExp} codeMinLength Minimum length of workshop code. */\n  Workshop.prototype.codeMinLength = 8;\n\n  /** @var {RegExp} userpattern Regular expression for `username` property. */\n  Workshop.prototype.codePattern = /^[A-Za-z0-9]+$/;\n\n  /** @var {object} deleteWorkshop Currently marked workshop for deletion. */\n  Workshop.prototype.deleteWorkshop = null;\n\n  /** @var {object} drawingWorkshop Currently marked workshop for drawing. */\n  Workshop.prototype.drawingWorkshop = null;\n\n  /** @var {array} drawingTickets Randomly picked tickets of drawing. */\n  Workshop.prototype.drawingTickets = null;\n\n  /** @var {array} drawingAmount Amount of chosen tickets for drawing. */\n  Workshop.prototype.drawingAmount = 2;\n\n  /** @var {array} chartResults Currently loaded results for chart. */\n  Workshop.prototype.chartResults = null;\n\n  /** @var {object} chartTask Currently selected task of results. */\n  Workshop.prototype.chartTask = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Toggles `$$expanded` flag on workshop depending on query params.\n   * https://ui-router.github.io/ng1/docs/latest/interfaces/ng1.ng1controller.html#uionparamschanged\n   *\n   * @public\n   * @method uiOnParamsChanged\n   * @param {object} params\n   * @return {void}\n   */\n  Workshop.prototype.uiOnParamsChanged = function(params)\n    {\n      var workshop = this._workshops[params.expand];\n\n      if (workshop) {\n        workshop.$$expanded = true;\n        this._expanded = workshop;\n        return;\n      }\n\n      if (this._expanded) {\n        this._expanded.$$expanded = false;\n        this._expanded = null;\n        return;\n      }\n    };\n\n  /**\n   * Creates a new workshop.\n   *\n   * @public\n   * @method create\n   * @return {void}\n   */\n  Workshop.prototype.create = function()\n    {\n      var notification = this.$injector.get('notification');\n      var Workshop = this.$injector.get('Workshop');\n      var i18n = this.$injector.get('i18n');\n\n      var workshop = new Workshop({\n        name: this.name,\n        code: this.code\n      });\n\n      var me = this;\n\n      var successCallback = function(workshop)\n        {\n          var message = i18n.get('Workshop has been created successfully!');\n          notification.success(message);\n\n          me.workshops.unshift(workshop);\n          me._initWorkshop(workshop);\n\n          me.name = null;\n          me.code = null;\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      workshop.$create().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Deletes a workshop after confirmation.\n   *\n   * @public\n   * @method delete\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.delete = function(workshop)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Workshop has been deleted successfully!');\n          notification.success(message);\n\n          var index = me.workshops.indexOf(workshop);\n          me.workshops.splice(index, 1);\n\n          me._removeUsersStream(workshop);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      workshop.$delete().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Loads task's results and invokes modal dialog.\n   *\n   * @public\n   * @method markWorkshopForDrawing\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.markWorkshopForDrawing = function(workshop)\n    {\n      var Ticket = this.$injector.get('Ticket');\n      var random = this.$injector.get('random');\n\n      var me = this;\n      var successCallback = function(tickets)\n        {\n          me.drawingTickets = random.shuffle(tickets);\n          me.drawingWorkshop = workshop;\n        };\n\n      var failureCallback = function()\n        {\n        };\n\n      var resource = Ticket.getByWorkshop({ workshopId: workshop.id });\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for deleting a workshop.\n   *\n   * @public\n   * @method markWorkshopForDeletion\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.markWorkshopForDeletion = function(workshop)\n    {\n      this.deleteWorkshop = workshop;\n    };\n\n  /**\n   * Toggles `isActive` of a workshop.\n   *\n   * @public\n   * @method toggleActive\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.toggleWorkshop = function(workshop)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function(workshop)\n        {\n          var message = i18n.get(\n            workshop.isActive ?\n              'Workshop has been unlocked successfully. Students can register now!' :\n              'Workshop has been locked successfully. Students can now only use their access from home!'\n          );\n          notification.success(message);\n\n          me._initWorkshop(workshop);\n        };\n\n      var failureCallback = function()\n        {\n          // revert the change on failed update!\n          workshop.isActive = !workshop.isActive;\n        };\n\n      workshop.isActive = !workshop.isActive;\n\n      workshop.$update().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Loads task's results and invokes modal dialog.\n   *\n   * @public\n   * @method markTaskForChart\n   * @param {object} task\n   * @return {void}\n   */\n  Workshop.prototype.markTaskForChart = function(task)\n    {\n      var Result = this.$injector.get('Result');\n\n      var me = this;\n      var successCallback = function(results)\n        {\n          me.chartResults = results;\n          me.chartTask = task;\n        };\n\n      var failureCallback = function()\n        {\n        };\n\n      var resource = Result.getByTask({ taskId: task.id });\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Toggles `isActive` of a task.\n   *\n   * @public\n   * @method toggleTask\n   * @param {object} task\n   * @return {void}\n   */\n  Workshop.prototype.toggleTask = function(task)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n      var Task = this.$injector.get('Task');\n\n      var successCallback = function(/*workshop*/)\n        {\n          var message = i18n.get(\n            task.isActive ?\n              'Task has been unlocked successfully. Students can send results now!' :\n              'Task has been locked successfully. Students cannot send results currently!'\n          );\n          notification.success(message);\n        };\n\n      var failureCallback = function()\n        {\n          // revert the change on failed update!\n          task.isActive = !task.isActive;\n        };\n\n      task.isActive = !task.isActive;\n\n      var resource = Task.update({ id: task.id}, task);\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets `expand` query parameter dependending on\n   * workshop's current `$$expanded` flag info.\n   *\n   * @public\n   * @method expand\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.expand = function(workshop)\n    {\n      var $state = this.$injector.get('$state');\n      var expand = !workshop.$$expanded ?\n        workshop.id : \n        null;\n\n      $state.go('backend.workshops', {\n        expand: expand\n      });\n    };\n\n  /**\n   * Sets up an event source for streaming user count.\n   *\n   * @private\n   * @method _addUsersStream\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._addUsersStream = function(workshop)\n    {\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      var _onMessage = function(data) {\n        me.$scope.$evalAsync(function(){\n          workshop.$$users = data;\n        });\n      };\n\n      var url = API_URL + '/sse/workshop/' + workshop.id + '/users';\n      var options = { onMessage: _onMessage, sleep: 10 };\n      var source = sse.addSource(url, options);\n      this._userSources[workshop.id] = source;\n    };\n\n  /**\n   * Removes an event source from internal stack and service.\n   *\n   * @private\n   * @method _removeUsersStream\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._removeUsersStream = function(workshop)\n    {\n      var sse = this.$injector.get('sse');\n\n      var source = this._userSources[workshop.id];\n      if (!source) {\n        return;\n      }\n\n      delete this._userSources[workshop.id];\n      sse.removeSource(source);\n    };\n\n  /**\n   * Sets up event sources for updating result counters.\n   *\n   * @private\n   * @method _streamResults\n   * @return {void}\n   */\n  Workshop.prototype._streamResults = function()\n    {\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      // --- SSE ---\n      var _onMessage = function(workshop, data) {\n        me.$scope.$evalAsync(function(){\n          // remove event source if workshop is not\n          // active at the moment === one-shot only\n          if (!workshop.isActive) {\n            sse.removeSource(me._resultsSource);\n          }\n\n          angular.forEach(data, function(item){\n            var task = me._tasks[item.id];\n            task.$$results = item.results;\n          });\n        });\n      };\n\n      var _watchExpression = function() {\n        // workshop must be opened, but we also need\n        // to watch `isActive` state to catch toggle\n        // from property to reinitialize event source\n        return me._expanded && me._expanded.isActive;\n      };\n\n      var _watchCallback = function() {\n        if (me._resultsSource) {\n          sse.removeSource(me._resultsSource);\n        }\n\n        if (me._expanded) {\n          var url = API_URL + '/sse/workshop/' + me._expanded.id + '/results';\n          var onMessage = _onMessage.bind(me, me._expanded);\n          var options = { onMessage: onMessage, sleep: 5 };\n          me._resultsSource = sse.addSource(url, options);\n        }\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Maps all workshops to hash maps, sets up streaming and query params.\n   *\n   * @private\n   * @method _initWorkshops\n   * @return {void}\n   */\n  Workshop.prototype._initWorkshops = function()\n    {\n      var $uiRouterGlobals = this.$injector.get('$uiRouterGlobals');\n\n      // create hash maps for workshops and tasks for ease lookups\n      angular.forEach(this.workshops, this._initWorkshop.bind(this));\n\n      // now make the initial call to change handler\n      this.uiOnParamsChanged($uiRouterGlobals.params);\n\n      // kick off general streaming of task results\n      this._streamResults();\n    };\n\n  /**\n   * Adds workshop and tasks to hash map and initializes\n   * streaming for workshop depending on `isActive` flag.\n   *\n   * @private\n   * @method _initWorkshop\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._initWorkshop = function(workshop)\n    {\n      // map all `tasks` to internal hash and set `$$results`\n      var me = this;\n      angular.forEach(workshop.tasks, function(task){\n        var old = me._tasks[task.id] || null;\n        task.$$results = old !== null ?\n          old.$$results\n          : 0;\n\n        me._tasks[task.id] = task;\n      });\n\n      // check `$$expanded` flag for this workshop\n      var id = this._expanded && this._expanded.id;\n      workshop.$$expanded = workshop.id === id;\n\n      // initialize `$$users` and set up streaming\n      workshop.$$users = workshop.users.length;\n\n      if (!workshop.isActive) {\n        this._removeUsersStream(workshop);\n      } else {\n        this._addUsersStream(workshop);\n      }\n\n      this._workshops[workshop.id] = workshop;\n    };\n\n  /**\n   * Removes all watches, listeners and sources\n   * as soon as controller's $scope is destroyed.\n   *\n   * @private\n   * @method _initListener\n   * @return {void}\n   */\n  Workshop.prototype._initListener = function()\n    {\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      var _onDestroy = function() {\n        for (var id in me._userSources) {\n          sse.removeSource(me._userSources[id]);\n        }\n\n        if (me._resultsSource) {\n          sse.removeSource(me._resultsSource);\n        }\n\n        me._resultsSource = null;\n        me._userSources = {};\n\n        me._unlisten();\n        me._unwatch();\n      };\n\n      this._unlisten = this.$scope.$on('$destroy', _onDestroy);\n    };\n\n\n  angular.module(module).controller('WorkshopController', Workshop);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Admin = function($scope, $injector, admins) {\n    this.admins = admins;\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  Admin.$inject = ['$scope', '$injector', 'admins'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of new workshop. */\n  Admin.prototype.username = null;\n\n  /** @var {string} code Code of new workshop. */\n  Admin.prototype.password = null;\n\n  /** @var {RegExp} usernameMinLength Minimum length of workshop name. */\n  Admin.prototype.usernameMinLength = 5;\n\n  /** @var {RegExp} passwordMinLength Minimum length of workshop code. */\n  Admin.prototype.passwordMinLength = 8;\n\n  /** @var {object} editAdmin Currently marked workshop for editing. */\n  Admin.prototype.editAdmin = null;\n\n  /** @var {object} deleteAdmin Currently marked workshop for deletion. */\n  Admin.prototype.deleteAdmin = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Creates a new admin.\n   *\n   * @public\n   * @method create\n   * @return {void}\n   */\n  Admin.prototype.create = function()\n    {\n      var notification = this.$injector.get('notification');\n      var Admin = this.$injector.get('Admin');\n      var i18n = this.$injector.get('i18n');\n\n      var admin = new Admin({\n        username: this.username,\n        password: this.password\n      });\n\n      var me = this;\n\n      var successCallback = function(admin)\n        {\n          var message = i18n.get('Admin has been created successfully!');\n          notification.success(message);\n\n          me.admins.unshift(admin);\n\n          me.username = null;\n          me.password = null;\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$create().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for deleting a admin.\n   *\n   * @public\n   * @method markAdminForDeletion\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.markAdminForDeletion = function(admin)\n    {\n      this.deleteAdmin = admin;\n    };\n\n  /**\n   * Deletes a admin after confirmation.\n   *\n   * @public\n   * @method delete\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.delete = function(admin)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Admin has been deleted successfully!');\n          notification.success(message);\n\n          var index = me.admins.indexOf(admin);\n          me.admins.splice(index, 1);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$delete().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for editing a admin.\n   *\n   * @public\n   * @method markAdminForEdit\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.markAdminForEdit = function(admin)\n    {\n      this.editAdmin = admin;\n    };\n\n  /**\n   * Updates a admin after confirmation.\n   *\n   * @public\n   * @method update\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.update = function(admin)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Password has been successfully updated!');\n          notification.success(message);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$update().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  angular.module(module).controller('AdminController', Admin);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Backend = function($injector, isSuperAdmin) {\n    this.$injector = $injector;\n\n    this.isSuperAdmin = isSuperAdmin;\n  };\n\n  Backend.$inject = ['$injector', 'isSuperAdmin'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isSuperAdmin If user is super admin. */\n  Backend.prototype.isSuperAdmin = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @public\n   * @method logout\n   * @return {Void}\n   */\n  Backend.prototype.logout = function()\n    {\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n\n      var successCallback = function()\n        {\n          $state.go('login.backend');\n        };\n\n      var failureCallback = function()\n        {\n\n        };\n\n      auth.signout().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Redirects router to state.\n   *\n   * @public\n   * @method goTo\n   * @param {string} state\n   * @return {Void}\n   */\n  Backend.prototype.goTo = function(state)\n    {\n      var $state = this.$injector.get('$state');\n\n      $state.go(state);\n    };\n\n  angular.module(module).controller('BackendController', Backend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/workshop/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      validateWorkshopBackend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/workshop/code/:code'\n      },\n      validateUsernameFrontend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/auth/validate/username/:username'\n      },\n      validateWorkshopFrontend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/auth/validate/workshop/:code'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Workshop', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/ticket/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      getByWorkshop: {\n        method: 'GET',\n        isArray: true,\n        url: API_URL + '/ticket/workshop/:workshopId'\n      }\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Ticket', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, $injector, API_URL) {\n    var url = API_URL + '/result/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      getByTask: {\n        method: 'GET',\n        isArray: true,\n        url: API_URL + '/result/task/:taskId'\n      }\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', '$injector', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Result', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/admin/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      validateAdmin: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/admin/username/:username'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Admin', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/task/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Task', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/user/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      current: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/user/current'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('User', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // i18n\n  // --------------------------------------------------\n  angular.module(module).filter('i18n',['i18n',function(i18n){\n    var filter = function()\n      {\n        return i18n.get.apply(i18n, arguments);\n      };\n\n    filter.$stateful = true;\n\n    return filter;\n  }]);\n\n  // --------------------------------------------------\n  // Percentage\n  // --------------------------------------------------\n  angular.module(module).filter('percent', function(){\n    return function(value, fraction) {\n      fraction = isNaN(fraction) ? 0 : fraction;\n      value = isNaN(value) ? 0 : value * 100;\n\n      return value.toFixed(fraction) + '%';\n    };\n  });\n\n  // --------------------------------------------------\n  // Coin\n  // --------------------------------------------------\n  angular.module(module).filter('coin', function(){\n    return function(value) {\n\n      if (value >= 1) {\n        return value + '&#8364;';\n      }\n\n      return (value*100) + '&#162;';\n    };\n  });\n\n  // --------------------------------------------------\n  // Note\n  // --------------------------------------------------\n  angular.module(module).filter('note', function(){\n    return function(value) {\n      return value + '&#8364;';\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* globals UIkit */\n(function() {\n  'use strict';\n\n  UIkit.component('off-canvas-scroll', {\n\n    defaults: {\n      offset: 0,\n      target: '',\n      duration: 1000,\n      transition: 'easeOutExpo'\n    },\n\n    props: {\n      target: String,\n      offset: Number,\n      duration: Number,\n      transition: String\n    },\n\n    computed: {\n        offcanvas: function() {\n          return UIkit.offcanvas(this.target);\n        },\n\n        $offcanvas: function() {\n          return this.offcanvas && this.offcanvas.$el;\n        }\n    },\n\n    init: function() {\n      if (!this.target) {\n        console.error('off-canvas-scroll: Required \"target\" option is not set.');\n        return;\n      }\n\n      if (!this.offcanvas) {\n        console.error('off-canvas-scroll: No offcanvas component found with id: ' + this.target);\n        return;\n      }\n    },\n\n    events: {\n      click: function(event, data) {\n        if (data && data.scroll) {\n          return;\n        }\n\n        this.offcanvas.hide();\n        this.$offcanvas.on('hidden', this._onHidden);\n      }\n    },\n\n    methods: {\n\n      _onHidden: function() {\n        this.$offcanvas.off('hidden', this._onHidden);\n\n        this._dummyScroll = UIkit.scroll(this.$el, {\n          transition: this.transition,\n          duration: this.duration,\n          offset: this.offset\n        });\n\n        this.$el.on('scrolled', this._onScrolled);\n        this.$el.trigger('click', { scroll: true });\n      },\n\n      _onScrolled: function() {\n        this.$el.off('scrolled', this._onScrolled);\n        this._dummyScroll.$destroy();\n      }\n    }\n  });\n\n})();\n"]}