{"version":3,"sources":["js/app-f4886212f5.min.js"],"names":["global","angular","module","app","config","$locationProvider","$stateProvider","$urlRouterProvider","$httpProvider","$templateRequestProvider","$resourceProvider","$qProvider","VIEWS_PATH","html5Mode","hashPrefix","interceptors","push","errorOnUnhandledRejections","defaults","actions","get","method","list","isArray","update","create","delete","decorator","state","parent","newViewConfig","views","forEach","view","viewMatch","match","viewName","stateName","name","replace","templateUrl","join","httpOptions","skipAuthorization","url","abstract","resolve","translations","i18n","load","template","current","user","$state","$q","promise","$promise","e","go","data","role","navbar@frontend","home@frontend","topics@frontend","financial-knowledge@frontend","financial-knowledge/interest-task@frontend","financial-knowledge/diversification-task@frontend","consumer-behaviour@frontend","consumer-behaviour/bomb-task@frontend","consumer-behaviour/anchoring-task@frontend","consumer-behaviour/mental-bookkeeping-task@frontend","consumer-behaviour/framing-task@frontend","self-control@frontend","self-control/savings-target-task@frontend","self-control/savings-supported-task@frontend","self-control/self-commitment-task@frontend","self-control/procrastination-task@frontend","status@frontend","contact@frontend","controller","controllerAs","footer@frontend","offcanvas@","@","isSuperAdmin","auth","defer","successCallback","failureCallback","hasRole","then","redirectTo","main@backend","navbar@backend","footer@backend","workshops","Workshop","params","expand","value","dynamic","redirects","ROLE_ADMIN","admins","Admin","code","CODE_STORAGE_KEY","storage","proxy","getProxy","getItem","ROLE_USER","transition","$injector","injector","getAsync","resolvePolicy","when","ROLE_SUPER_ADMIN","otherwise","run","$transitions","$rootScope","appState","onStart","routerBusy","to","getUser","roles","indexOf","target","onError","onSuccess","$watch","isBusy","httpBusy","FastClick","attach","document","body","ANGULAR_MODULE","window","HttpInterceptor","this","_urls","$inject","prototype","getLastSuccessResponse","_lastSuccessResponse","getLastErrorResponse","_lastErrorResponse","getLastResponse","_lastResponse","getUrls","request","_setUrl","headers","token","Authorization","jwtToken","_getJWTToken","requestError","rejection","reject","response","_setLastSuccessResponse","_setLastResponse","responseError","_showGlobalErrorMessage","_setLastErrorResponse","$httpParamSerializer","responseOrRejection","notification","skipGlobalErrorMessage","message","error","jwt","getToken","isExpired","refresh","factory","httpInterceptor","instantiate","Notification","notify","status","options","UIkit","success","primary","warning","closeAll","service","AppState","routeBusy","Animation","animationEndEvent","dummy","createElement","events","WebkitAnimation","MozTAnimation","animation","key","event","style","undefined","transitionEndEvent","OTransition","MozTransition","WebkitTransition","translate","x","y","z","string","isUndefined","sprintf","webkitTransform","mozTransform","msTransform","oTransform","transform","requestAnimationFrame","lastTime","vendors","i","length","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","Math","max","timeout","id","setTimeout","bind","clearTimeout","Random","_spareRandomCache","between","min","fact","rand","random","floor","gaussian","mean","stdDev","spare","u","v","s","m","sqrt","log","pick","array","shuffle","temp","String","input","variables","slice","call","arguments","truncate","maxLength","substring","trim","toCamel","part","toUpperCase","toSpinal","toLowerCase","toSnake","Storage","MODE_COOKIES","MODE_STORAGE","mode","_getCookieProxy","_getLocalStorageProxy","supportsLocalStorage","$window","storageProxy","localStorage","val","setItem","removeItem","_encode","JSON","stringify","encodeURIComponent","_decode","decoded","decodeURIComponent","parse","documentProxy","me","_getAll","items","cookies","cookie","split","setCookie","expires","domain","path","secure","date","isNaN","Error","toUTCString","getCookie","hasOwnProperty","getAllCookies","removeCookie","removeAllCookies","getAllItems","removeAllItems","clear","Auth","signup","firewall","$http","_saveToken","_getSignupUrl","post","_username","username","_password","password","extend","signin","_getSigninUrl","signout","unload","_getSignoutUrl","invalidate","_getRefereshUrl","refresh_token","getRefreshToken","acceptExpired","decode","resolveRole","isString","setRefreshToken","setToken","API_URL","I18N","setLocale","_detectLocale","locales","de","defaultLocale","locale","getLocale","$log","_getJSONUrl","text","language","navigator","android","userAgent","userLanguage","systemLanguage","browserLanguage","substr","JWT","tokenKey","refreshKey","removeRefreshToken","removeToken","refreshToken","getExpirationDate","exp","setUTCSeconds","offset","now","valueOf","parts","_base64Decode","fromJson","output","atob","escaped","escape","User","_states","_eventSource","_results","_payload","_pending","_tasks","group","tickets","toJSON","_initTickets","_initState","_initGroup","isUser","_initWatches","_initTasks","_initPending","_initResults","_initSSE","sse","removeSource","_unwatchTickets","_unwatchState","result","_addResult","isAdmin","isInWorkshop","workshop","isActive","getTasks","getTaskByType","type","getPendingByType","getGroupAsString","getStateAsString","STATE_BEGINNER","_watchStateExpression","_watchStateCallback","newState","oldState","_watchTicketsExpression","_watchTicketsCallback","newTickets","oldTickets","oldCount","newCount","$watchCollection","_onMessage","$evalAsync","item","unix","updatedAt","task","onMessage","sleep","addSource","tasks","pending","results","$$results","Mail","send","_getPostUrl","_name","_mail","email","_subject","subject","_message","SSE","_sources","retry","_buildUrl","source","EventSource","onmessage","onerror","close","CardContainer","cards","canToggle","add","card","set","selected","directive","scope","restrict","bindToController","Card","$scope","$element","$attrs","$transclude","$id","hasIcon","isSlotFilled","disabled","isCheckbox","$onInit","cardContainer","click","$event","stopPropagation","preventDefault","changed","onClick","transclude","title","icon","buttons","require","Chart","_chart","_getOptions","labels","_getLabels","series","_getData","_render","$onDestroy","detach","mapResults","GROUP_A","GROUP_B","map","choice1","choice2","count","json","choice","groupA","groupB","SPLIT","ALL","failure","all","seriesBarDistance","chartPadding","top","left","right","bottom","axisY","labelInterpolationFnc","ticks","Chartist","FixedScaleAxis","high","low","plugins","legend","legendNames","$timeout","addClass","element","render","Bar","Modal","_element","_modal","_scope","isVisible","_onShow","onShow","_onShown","onShown","_onBeforeShow","onBeforeShow","_onHide","onHide","_onHidden","onHidden","_onBeforeHide","onBeforeHide","_unwatch","destroy","clone","on","append","modal","show","off","remove","$destroy","hide","Status","iconRatio","isCompact","iconColor","tasksVisible","ticketsVisible","_watchTasksExpression","_watchTasksCallback","_unwatchTasks","toggleTasks","toggleTickets","StatusIcons","ratio","color","isBeginner","isAmateuer","isAdvanced","isExpert","isProfi","STATE_AMATEUR","STATE_ADVANCED","STATE_EXPERT","_watchExpression","_watchCallback","isAmateur","StatusLabel","StatusTickets","Tabber","domId","activeTab","tabDescription","hasExercise","tabExercise","tab","isDescriptionActive","isExerciseActive","exercise","description","Draggable","_body","_clone","_coordinates","_interactable","_activeClass","_itemClass","_disabledClass","removeClass","draggable","enabled","_onResize","restriction","interact","inertia","autoScroll","onend","_onEndItem","onmove","_onMoveItem","onstart","_onStartItem","snap","targets","interaction","_origin","startCoords","page","dropTarget","endOnly","manualStart","_onMove","getData","_window","_resize","unset","_trigger","$data","dx","dy","_translate","dropped","interactable","currentTarget","pointerIsDown","interacting","offsetY","clientHeight","offsetX","clientWidth","pageY","touches","pageX","css","position","start","args","onDragStart","onDragMove","onDragEnd","onDrop","Dropable","_enterClass","_acceptClass","accept","dropzone","ondrop","_onDrop","ondragenter","_onDragEnter","ondragleave","_onDragLeave","ondropactivate","_onDropActivate","ondropdeactivate","_onDropDeactivate","onDropDeactivate","onDropActivate","onDragEnter","onDragLeave","ScrollTo","_source","_target","_scroller","_init","_onClick","_onScrolled","jQuery","charAt","console","warn","href","duration","easing","scroll","scrollTo","isFunction","Evaluation","customButtons","defaultButtons","LockedState","isLocked","userText","adminText","FormField","_transcludeElements","_transcludeScopes","_cloneDefault","_cloneLabel","_unlisten","label","ngModel","resetEmpty","showMessages","labelClass","failureClass","successClass","_addWatches","_transclude","unlisten","unwatch","setModel","_update","$valid","$invalid","_reset","$setUntouched","unwatchModel","newModel","oldModel","$touched","$pending","$viewValue","transcludeDefault","attr","replaceWith","transcludeLabel","messageMin","messageMax","messageUrl","messageEmail","messageNumber","messagePattern","messageRequired","messageMinlength","messageMaxlength","messagesCustom","FormFieldModel","formField","ValidatorWorkshopExists","keyLocked","$asyncValidators","validatorWorkshopExists","validate","modelValue","$setValidity","validateWorkshopFrontend","ValidatorWorkshopUnique","validatorWorkshopUnique","validateWorkshopBackend","ValidatorAdminUnique","validatorAdminUnique","validateAdmin","InterestTask","resolved","correctAnswers","exercise1Answer","exercise2Answer","exercise1Correct","exercise2Correct","exercise1Result","exercise2Result","amount","rate","years","init","getPayload","exercise1","current_result","actual_result","is_valid","exercise2","canResolve","_calculateResult","reset","onResolve","payload","pow","InterestTaskExercise","stack","sum","notes","coins","onUpdate","revert","pop","DiversificationTask","$elemnt","initialTickets","heads","tails","companies","sides","one","company","two","throws","toss","ticketCount","getTicketCount","image","ticket","action","getTicketTotal","factorA","factorB","ticketsA","ticketsB","DiversificationTaskCoin","find","flip","animate","back","front","startSide","class","_toss","_getToss","_timeoutCallback","_iterateSides","side","_watchFlipCallback","newFlip","_watchFlipExpression","_watchTossCallback","newToss","oldToss","_watchTossExpression","_evalAsyncCallback","onFinish","_animationEndCallback","onInit","_unwatchFlip","_unwatchToss","$filter","picked","filtered","BombTask","started","stopped","hasBomb","totalBoxes","remainingBoxes","collectedBoxes","avg","rows","cols","interval","_initMembers","_initMatrix","_initBomb","index","$interval","_intIndex","iterator","_intervalId","stop","cancel","resolveCard","$$resolved","collection","toggle","column","active","$$active","splice","isBomb","total","collected","trackId","row","col","equals","bomb","matrix","columns","j","BombTaskCard","model","isDisabled","isClickable","onToggle","AnchoringTask","MentalBookkeepingTask","FramingTask","lotteryA","lotteryB","lottery","SavingsTargetTask","_flag","_storageKey","step","wish","amountRepeated","form","minAmount","maxAmount","isPending","isNumber","getDifference","SelfCommitmentTask","ProcrastinationTask","_onInterval","rounds","openRounds","minCatched","maxEscaped","invalidAt","hasWarmup","warmupMaxEscaped","warmupMinCatched","hasSuccess","_isPending","setMode","setState","moment","setWarmup","warmup","isInvalid","_now","isAfter","getCurrentRound","getRemainingTime","keys","difference","diff","seconds","asSeconds","minutes","asMinutes","hours","asHours","days","asDays","unit","ProcrastinationTaskGame","bubbles","viewport","_nextId","_tapped","_rounds","_retries","_timeout","_requestId","_loop","_viewport","catched","accuracy","expired","maxRounds","maxRetries","Number","POSITIVE_INFINITY","bubbleDelay","expire","_unloop","quit","_getResult","onGameOver","done","onGameDone","_setAccuracy","canRetry","canRestart","addBubble","bubble","removeBubble","_getViewport","height","width","resize","scrollTop","scrollLeft","ProcrastinationTaskBubble","themes","theme","radius","speed","wave","game","gameController","xOffset","_originalR","_originalX","sin","offscreenY","move","_resizeId","evalAsync","onAnimationEnd","LoginFrontend","codeMinLength","codePattern","userpattern","loginForm","next","reload","LoginBackend","usernameMinLength","passwordMinLength","passwordMaxLength","Contact","messageMinLength","submit","mail","contactForm","Frontend","createResult","Result","$create","updateResult","logout","goTo","_resultsSource","_userSources","_workshops","_initWorkshops","_initListener","nameMinLength","deleteWorkshop","drawingWorkshop","drawingTickets","drawingAmount","chartResults","chartTask","uiOnParamsChanged","$$expanded","_expanded","unshift","_initWorkshop","_removeUsersStream","$delete","markWorkshopForDrawing","Ticket","resource","getByWorkshop","workshopId","markWorkshopForDeletion","toggleWorkshop","$update","markTaskForChart","getByTask","taskId","toggleTask","Task","_addUsersStream","$$users","_streamResults","$uiRouterGlobals","old","users","_onDestroy","$on","editAdmin","deleteAdmin","admin","markAdminForDeletion","markAdminForEdit","Backend","Factory","$resource","paramDefaults","validateUsernameFrontend","filter","apply","$stateful","fraction","toFixed","component","props","computed","offcanvas","$offcanvas","$el","methods","_dummyScroll","trigger"],"mappings":"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","file":"../../js/app-f4886212f5.min.js","sourcesContent":["/*!\n * efit-frontend\n * eFit Frontend\n * http://www.finanz-training.at\n * @author Armin Pfurtscheller\n * @version 1.0.0\n * Copyright 2017. MIT licensed.\n */\n/* global angular, FastClick */\n(function(global, angular){\n  'use strict';\n\n  //\n  // MODULE\n  //\n  var module = 'eFit';\n\n  //\n  // APP\n  //\n  var app = angular.module(module, [\n    'ngSanitize',\n    'ngMessages',\n    'ngResource',\n    'ui.router',\n    'eFit.views',\n    'eFit.config'\n  ]);\n\n  //\n  // CONSTANTS\n  //\n\n  // @see: config.js\n\n  //\n  // CONFIG\n  //\n  app.config([\n    '$locationProvider', '$stateProvider', '$urlRouterProvider', '$httpProvider',\n    '$templateRequestProvider', '$resourceProvider', '$qProvider', 'VIEWS_PATH',\n    function(\n      $locationProvider, $stateProvider, $urlRouterProvider, $httpProvider,\n      $templateRequestProvider, $resourceProvider, $qProvider, VIEWS_PATH) {\n\n      // -------------------------\n      // LOCATION\n      // -------------------------\n      $locationProvider.html5Mode(false);\n      $locationProvider.hashPrefix('!');\n\n      // -------------------------\n      // INTERCEPTORS\n      // -------------------------\n      $httpProvider.interceptors.push('httpInterceptor');\n\n      // -------------------------\n      // PROMISES\n      // -------------------------\n      $qProvider.errorOnUnhandledRejections(false);\n\n      // -------------------------\n      // RESOURCES\n      // -------------------------\n      $resourceProvider.defaults.actions = {\n        get:    { method: 'GET' },\n        list:   { method: 'GET', isArray:true },\n        update: { method: 'PATCH' },\n        create: { method: 'POST'},\n        delete: { method: 'DELETE'}\n      };\n\n      // -------------------------\n      // TEMPLATES\n      // -------------------------\n\n      // assign default `templateUrl` for states\n      $stateProvider.decorator('views', function(state, parent) {\n        //\n        // Assigns default template URL:\n        // ./path/to/state/[view/][/name].html\n        //\n        var newViewConfig = {}, views = parent(state);\n        angular.forEach(views, function(config, view){\n          var viewMatch = view.match(/([^@]+)\\@/); // [parentView/]view@state.name\n          var viewName = viewMatch ? '/' + viewMatch[1] : '';\n\n          var stateName = state.name.replace(/\\./g, '/');\n\n          var templateUrl = config.templateUrl || [\n            VIEWS_PATH,\n            stateName,\n            viewName,\n            '.html'\n          ].join('');\n\n          config.templateUrl = templateUrl;\n          newViewConfig[view] = config;\n        });\n\n        return newViewConfig;\n      });\n\n      // ignore JWT authorization on template requests\n      $templateRequestProvider.httpOptions({\n        skipAuthorization: true\n      });\n\n      // -------------------------\n      // STATES\n      // -------------------------\n\n      // main (i18n)\n      $stateProvider.state('main', {\n        url: '',\n        abstract: true,\n        resolve: {\n          translations: ['i18n', function(i18n){\n            return i18n.load('de', {\n              skipAuthorization: true\n            });\n          }],\n        },\n        template: '<div id=\"main\" data-ui-view=\"\"></div>'\n      });\n\n      // frontend\n      $stateProvider.state('frontend', {\n        parent: 'main',\n        url: '/',\n        resolve: {\n          current: [\n            'user', '$state', '$q',\n            function(user, $state, $q){\n              var promise = user.load().$promise;\n              return promise.catch(function(e){\n                $state.go('login.frontend');\n              });\n            }\n          ]\n        },\n        data: {\n          role: [\n            'ROLE_USER',\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        views: {\n          'navbar@frontend': {},\n          'home@frontend': {},\n          'topics@frontend': {},\n\n          'financial-knowledge@frontend':{},\n          'financial-knowledge/interest-task@frontend':{},\n          'financial-knowledge/diversification-task@frontend':{},\n\n          'consumer-behaviour@frontend':{},\n          'consumer-behaviour/bomb-task@frontend':{},\n          'consumer-behaviour/anchoring-task@frontend':{},\n          'consumer-behaviour/mental-bookkeeping-task@frontend':{},\n          'consumer-behaviour/framing-task@frontend':{},\n\n          'self-control@frontend':{},\n          'self-control/savings-target-task@frontend':{},\n          'self-control/savings-supported-task@frontend':{},\n          'self-control/self-commitment-task@frontend':{},\n          'self-control/procrastination-task@frontend':{},\n\n          'status@frontend': {},\n          'contact@frontend': {\n            controller: 'ContactController',\n            controllerAs: 'contactController'\n          },\n          'footer@frontend': {},\n          'offcanvas@': {\n            controller: 'FrontendController',\n            controllerAs: 'frontendController'\n          },\n          '@': {\n            controller: 'FrontendController',\n            controllerAs: 'frontendController'\n          }\n        }\n      });\n\n      // backend\n      $stateProvider.state('backend', {\n        parent: 'main',\n        url: '/admin',\n        data: {\n          role: [\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        resolve: {\n          isSuperAdmin: [\n            'auth', '$state', '$q',\n            function(auth, $state, $q){\n              var defer = $q.defer();\n\n              var successCallback = function() {\n                defer.resolve(true);\n              };\n              var failureCallback = function() {\n                defer.resolve(false);\n              };\n\n              var promise = auth.hasRole(\n                'ROLE_SUPER_ADMIN'\n              ).then(\n                successCallback,\n                failureCallback\n              );\n\n              return defer.promise;\n            }\n          ]\n        },\n        redirectTo: 'backend.workshops',\n        views: {\n          'main@backend': {},\n          'navbar@backend': {},\n          'footer@backend': {},\n          'offcanvas@': {\n            controller: 'BackendController',\n            controllerAs: 'backendController'\n          },\n          '@': {\n            controller: 'BackendController',\n            controllerAs: 'backendController'\n          }\n        },\n\n      });\n\n      $stateProvider.state('backend.workshops', {\n        url: '?{expand:int}',\n        data: {\n          role: [\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        resolve: {\n          workshops: ['Workshop', function(Workshop){\n            return Workshop.list().$promise;\n          }]\n        },\n        params: {\n          expand: {\n            value: null,\n            dynamic: true\n          }\n        },\n        controller: 'WorkshopController',\n        controllerAs: 'workshopController'\n      });\n\n      $stateProvider.state('backend.admins', {\n        url: '/trainer',\n        data: {\n          role: 'ROLE_SUPER_ADMIN',\n          redirects: {\n            ROLE_ADMIN: 'backend'\n          }\n        },\n        resolve: {\n          admins: ['Admin', function(Admin){\n            return Admin.list().$promise;\n          }]\n        },\n        controller: 'AdminController',\n        controllerAs: 'adminController'\n      });\n\n      // login\n      $stateProvider.state('login', {\n        url: '/login',\n        parent: 'main',\n        abstract: true,\n        redirectTo: 'login.frontend.index'\n      });\n\n      $stateProvider.state('login.frontend', {\n        url: '/app',\n        resolve: {\n          code: [\n            'CODE_STORAGE_KEY', 'storage',\n            function(CODE_STORAGE_KEY, storage){\n              var proxy = storage.getProxy();\n              return proxy.getItem(\n                CODE_STORAGE_KEY\n              );\n            }\n          ]\n        },\n        data: {\n          redirects: {\n            ROLE_USER: 'frontend'\n          }\n        },\n        redirectTo: 'login.frontend.index',\n        controller: 'LoginFrontendController',\n        controllerAs: 'loginFrontendController'\n      });\n\n      $stateProvider.state('login.frontend.index', {\n        url: ''\n      });\n\n      $stateProvider.state('login.frontend.signup', {\n        url: '/schule',\n        redirectTo: 'login.frontend.signup.step1'\n      });\n\n      $stateProvider.state('login.frontend.signup.step1', {\n        url: '/schritt-1',\n        redirectTo: function(transition){\n          var redirectTo = function(code) {\n            if (code) {\n              return 'login.frontend.signup.step2';\n            }\n          };\n\n          var $injector = transition.injector();\n          var code = $injector.getAsync('code');\n          return code.then(redirectTo);\n        }\n      });\n\n      $stateProvider.state('login.frontend.signup.step2', {\n        url: '/schritt-2',\n        resolvePolicy: { when: 'EAGER' },\n        redirectTo: function(transition){\n          var redirectTo = function(code) {\n            if (!code) {\n              return 'login.frontend.signup.step1';\n            }\n          };\n\n          var $injector = transition.injector();\n          var code = $injector.getAsync('code');\n          return code.then(redirectTo);\n        }\n      });\n\n      $stateProvider.state('login.frontend.signin', {\n        url: '/zuhause'\n      });\n\n      $stateProvider.state('login.backend', {\n        url: '/admin',\n        data: {\n          redirects: {\n            ROLE_ADMIN: 'backend',\n            ROLE_SUPER_ADMIN: 'backend'\n          }\n        },\n        controller: 'LoginBackendController',\n        controllerAs: 'loginBackendController'\n      });\n\n      $urlRouterProvider.otherwise('/');\n    }\n  ]);\n\n  //\n  // RUN\n  //\n  app.run(['$injector', function($injector) {\n      var $transitions = $injector.get('$transitions');\n      var $rootScope = $injector.get('$rootScope');\n      var appState = $injector.get('appState');\n      var $state = $injector.get('$state');\n      var auth = $injector.get('auth');\n\n      var onStart = function(transition) {\n        appState.routerBusy = true;\n\n        var state = transition.to();\n        var data = state.data || {};\n        var role = data.role || null;\n        var redirects = data.redirects || {};\n\n        // no authentication check for states\n        // without any authorization settings\n        if (role === null) {\n\n          // try to redirect authenticated users\n          // with auth roles to configured route\n          var user = auth.getUser();\n          if (user === null) {\n            return true;\n          }\n\n          var roles = user.roles || [];\n          for (role in redirects) {\n            if (roles.indexOf(role)>=0) {\n              var target = redirects[role];\n              return $state.target(target);\n            }\n          }\n\n          return true;\n        }\n\n        // assert role an array for callbacks\n        if (!angular.isArray(role)) {\n          role = [role];\n        }\n\n        var successCallback = function()\n          {\n            return true;\n          };\n\n        var failureCallback = function()\n          {\n            // redirect to login page depending on\n            // given role with unsufficient rights\n            // or possibly failed refresh process!\n            switch(role[0])\n            {\n              case 'ROLE_ADMIN':\n              case 'ROLE_SUPER_ADMIN':\n                return $state.target('login.backend');\n              default:\n                return $state.target('login.frontend');\n            }\n          };\n\n        return auth.hasRole(role).then(\n          successCallback,\n          failureCallback\n        );\n      };\n\n      var onError = function(/*transition*/) {\n        appState.routerBusy = false;\n      };\n\n      var onSuccess = function(transition) {\n        $rootScope.state = transition.to();\n        appState.routerBusy = false;\n      };\n\n      $rootScope.$watch(\n        function() {\n          return appState.isBusy();\n        },\n        function(isBusy) {\n          $rootScope.isBusy = isBusy;\n          $rootScope.httpBusy = appState.httpBusy;\n          $rootScope.routerBusy = appState.routerBusy;\n        }\n      );\n\n      $transitions.onError({}, onError);\n      $transitions.onStart({}, onStart);\n      $transitions.onSuccess({}, onSuccess);\n\n      FastClick.attach(document.body);\n    }\n  ]);\n\n  //\n  // EXPOSE\n  //\n  global.ANGULAR_MODULE = module;\n\n})(window, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  var HttpInterceptor = function($injector)\n    {\n      this.$injector = $injector;\n      this._urls = {};\n    };\n\n  /** @var {Array.<string>} $inject Dependencies to be injected by Angular. */\n  HttpInterceptor.$inject = ['$injector'];\n\n  /**\n   * Gets latest response from $http.\n   */\n  HttpInterceptor.prototype.getLastSuccessResponse = function()\n    {\n      return this._lastSuccessResponse;\n    };\n\n  /**\n   * Gets latest error from $http.\n   */\n  HttpInterceptor.prototype.getLastErrorResponse = function()\n    {\n      return this._lastErrorResponse;\n    };\n\n  /**\n   * Gets latest response from $http.\n   */\n  HttpInterceptor.prototype.getLastResponse = function()\n    {\n      return this._lastResponse;\n    };\n\n  /**\n   * Returns a hash of all requested urls.\n   */\n  HttpInterceptor.prototype.getUrls = function()\n    {\n      return this._urls;\n    };\n\n  /**\n   * Intercepts $http request's config before invocation.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.request = function(config)\n    {\n      var appState = this.$injector.get('appState');\n\n      // set app state to busy\n      appState.httpBusy = true;\n\n      // save url in internal cache\n      this._setUrl(config);\n\n      // set common headers\n      config.headers['X-Requested-With'] = 'XMLHttpRequest';\n\n      // JWT authorization\n      var successCallback = function(token) {\n        if (token) {\n          config.headers.Authorization = 'Bearer ' + token;\n        }\n\n        return config;\n      };\n\n      var failureCallback = function() {\n        return config;\n      };\n\n      if (config.skipAuthorization) {\n        return config;\n      }\n\n      var jwtToken = this._getJWTToken(config);\n      var $q = this.$injector.get('$q');\n      return $q.when(jwtToken).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Intercepts $http request error's config before invocation.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.requestError = function(rejection)\n    {\n      var appState = this.$injector.get('appState');\n      var $q = this.$injector.get('$q');\n\n      appState.httpBusy = false;\n\n      return $q.reject(rejection);\n    };\n\n  /**\n   * Intercepts $http response before forwarding.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.response = function(response)\n    {\n      var appState = this.$injector.get('appState');\n\n      this._setLastSuccessResponse(response);\n      this._setLastResponse(response);\n\n      appState.httpBusy = false;\n\n      return response;\n    };\n\n  /**\n   * Intercepts $http error response before forwarding.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.responseError = function(rejection)\n    {\n      var appState = this.$injector.get('appState');\n      var $q = this.$injector.get('$q');\n\n      this._showGlobalErrorMessage(rejection);\n      this._setLastErrorResponse(rejection);\n      this._setLastResponse(rejection);\n\n      appState.httpBusy = false;\n\n      return $q.reject(rejection);\n    };\n\n  /**\n   * Sets fully qualified url with query string for a request.\n   * This is useful to manage Angular's $cacheFactory for $http.\n   * @param {object} config\n   */\n  HttpInterceptor.prototype._setUrl = function(config)\n    {\n      var $httpParamSerializer = this.$injector.get('$httpParamSerializer');\n      var params = $httpParamSerializer(config.params);\n      var url = config.url + (\n        params ?\n          '?' + params :\n          ''\n      );\n\n      this._urls[url] = true;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastResponse = function(responseOrRejection)\n    {\n      this._lastResponse = responseOrRejection;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastErrorResponse = function(rejection)\n    {\n      this._lastErrorResponse = rejection;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastSuccessResponse = function(response)\n    {\n      this._lastSuccessResponse = response;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._showGlobalErrorMessage = function(rejection)\n  {\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n\n    var config = rejection.config || {};\n    if (config.skipGlobalErrorMessage) {\n      return;\n    }\n\n    var data = rejection.data || {};\n    if (!data.message) {\n      return;\n    }\n\n    notification.error(i18n.get(data.message));\n  };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._getJWTToken = function() {\n    var auth = this.$injector.get('auth');\n    var jwt = this.$injector.get('jwt');\n\n    // a) no token available in storage\n    var token = jwt.getToken();\n    if (!token) {\n      return null;\n    }\n\n    // b) token is still valid, check for\n    // refresh if it expires in 5 minutes\n    if (jwt.isExpired(token, 600)) {\n      var successCallback = function() {\n        return jwt.getToken();\n      };\n\n      var failureCallback = function() {\n        return null;\n      };\n\n      return auth.refresh().then(\n        successCallback,\n        failureCallback\n      );\n    }\n\n    // c) use current token\n    return jwt.getToken();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('httpInterceptor',['$injector',function($injector){\n\n      var httpInterceptor = $injector.instantiate(HttpInterceptor);\n\n      return { // important: $http service invokes this methods with global scope!\n        getUrls: function(){ return httpInterceptor.getUrls(); },\n        getLastResponse: function(){ return httpInterceptor.getLastResponse(); },\n        getLastErrorResponse: function(){ return httpInterceptor.getLastErrorResponse(); },\n        getLastSuccessResponse: function(){ return httpInterceptor.getLastSuccessResponse(); },\n        request: function(config){ return httpInterceptor.request(config); },\n        response: function(response){ return httpInterceptor.response(response); },\n        requestError: function(rejection){ return httpInterceptor.responseError(rejection); },\n        responseError: function(rejection){ return httpInterceptor.responseError(rejection); }\n      };\n    }]);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Notification = function() {\n  };\n\n  Notification.$inject = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Shows user notification in a toast message.\n   *\n   * @public\n   * @method notify\n   * @param {string} message\n   * @param {string} status One of `danger`, `warning`, `success` or `primary`.\n   * @param {object} options Additional options like `timeout` and `pos`.\n   * @return {object} Notification object\n   */\n  Notification.prototype.notify = function(message, status, options) {\n    status = status || 'default';\n    options = options || {};\n\n    options.message = message;\n    options.status = status;\n\n    return UIkit.notification(options);\n  };\n\n  /**\n   * Shows user success notification.\n   *\n   * @public\n   * @method success\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.success = function(message, options) {\n    this.notify(message, 'success', options);\n  };\n\n  /**\n   * Shows user primary notification.\n   *\n   * @public\n   * @method success\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.primary = function(message, options) {\n    this.notify(message, 'primary', options);\n  };\n\n  /**\n   * Shows user error notification.\n   *\n   * @public\n   * @method error\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.error = function(message, options) {\n    this.notify(message, 'danger', options);\n  };\n\n  /**\n   * Shows user warning notification.\n   *\n   * @public\n   * @method warning\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.warning = function(message, options) {\n    this.notify(message, 'warning', options);\n  };\n\n  /**\n   * Closes all open notifications.\n   *\n   * @public\n   * @method closeAll\n   * @return {void}\n   */\n  Notification.prototype.closeAll = function() {\n    UIkit.notification.closeAll();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('notification', Notification);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var AppState = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  AppState.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} httpBusy If $http is currently doing work. */\n  AppState.prototype.httpBusy = false;\n\n  /** @var {boolean} routerBusy If router is currently doing work. */\n  AppState.prototype.routerBusy = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Returns true if `httpBusy` or `routeBusy` is true.\n   *\n   * @public\n   * @method isBusy\n   * @return {void}\n   */\n  AppState.prototype.isBusy = function() {\n    return this.httpBusy || this.routeBusy;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('appState', AppState);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Animation = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  Animation.$inject = ['$injector'];\n\n  /**\n   * Gets correctly prefixed animation end event.\n   *\n   * @private\n   * @property animationEndEvent\n   * @return {void}\n   */\n  Animation.prototype.animationEndEvent = (function() {\n    var dummy = document.createElement('div');\n    var events = {\n      'WebkitAnimation': 'webkitAnimationEnd',\n      'MozTAnimation': 'animationend',\n      'animation': 'animationend'\n    };\n\n    for(var key in events){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return events[key];\n        }\n    }\n\n    return null;\n  })();\n\n  /**\n   * Gets correctly prefixed transition end event.\n   *\n   * @private\n   * @property transitionEndEvent\n   * @return {void}\n   */\n  Animation.prototype.transitionEndEvent = (function() {\n    var dummy = document.createElement('div');\n    var events = {\n      'transition':'transitionend',\n      'OTransition':'oTransitionEnd',\n      'MozTransition':'transitionend',\n      'WebkitTransition':'webkitTransitionEnd'\n    };\n\n    for(var key in events){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return events[key];\n        }\n    }\n\n    return null;\n  })();\n\n  /**\n   * Prepares cross-browser compatible tranlsate hash for ng-style.\n   *\n   * @public\n   * @method translate\n   * @param {number} x\n   * @param {number} y\n   * @param {number} [z]\n   * @return {object}\n   */\n  Animation.prototype.translate = function(x, y, z) {\n    var string = this.$injector.get('string');\n\n    var translate = angular.isUndefined(z) ?\n      string.sprintf('translate(%spx,%spx)', x, y) :\n      string.sprintf('translate3d(%spx,%spx,%spx)', x, y, z);\n\n    return {\n      'webkitTransform': translate,\n      'mozTransform': translate,\n      'msTransform': translate,\n      'oTransform': translate,\n      'transform': translate\n    };\n  };\n\n  /**\n   * Polyfills potentially missing `requestAnimationFrame`.\n   *\n   * @private\n   * @method requestAnimationFrame\n   * @return {void}\n   */\n  Animation.prototype.requestAnimationFrame = (function(){\n      var lastTime = 0;\n      var vendors = ['ms', 'moz', 'webkit', 'o'];\n      for(var i = 0; i < vendors.length && !window.requestAnimationFrame; i++) {\n          window.requestAnimationFrame = window[vendors[i]+'RequestAnimationFrame'];\n          window.cancelAnimationFrame = (\n            window[vendors[i]+'CancelAnimationFrame'] ||\n            window[vendors[i]+'CancelRequestAnimationFrame']\n          );\n      }\n\n      if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function(callback) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var timeout = function() { callback(currTime + timeToCall); };\n            var id = window.setTimeout(timeout, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n      }\n\n      return window.requestAnimationFrame.bind(window);\n  }());\n\n  /**\n   * Polyfills potentially missing `cancelAnimationFrame`.\n   *\n   * @private\n   * @method cancelAnimationFrame\n   * @return {void}\n   */\n  Animation.prototype.cancelAnimationFrame = (function(){\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function(id) { clearTimeout(id); };\n    }\n\n    return window.cancelAnimationFrame.bind(window);\n  })();\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('animation', Animation);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  var Random = function() {\n    this._spareRandomCache = null;\n  };\n\n  Random.$inject = [];\n\n  Random.prototype.between = function(min, max) {\n    min = typeof min !== 'undefined' ? min : 0;\n    max = typeof max !== 'undefined' ? max : 1;\n\n    var fact = (max - min + 1);\n    var rand = Math.random();\n\n    return Math.floor(rand * fact + min);\n  };\n\n  Random.prototype.gaussian = function(mean, stdDev) {\n    stdDev = typeof stdDev !== 'undefined' ? stdDev : 1;\n    mean = typeof mean !== 'undefined' ? mean : 0;\n\n    var spare = this._spareRandomCache;\n    if (this._spareRandomCache !== null) {\n      this._spareRandomCache = null;\n      return mean + stdDev * spare;\n    }\n\n    var u, v, s;\n\n    do {\n      u = 2 * Math.random() - 1;\n      v = 2 * Math.random() - 1;\n      s = u*u + v*v;\n    } while (s >= 1 || s===0);\n\n    var m = Math.sqrt(-2 * Math.log(s) / s);\n    this._spareRandomCache = v * m;\n    return mean + stdDev * u * m;\n  };\n\n  Random.prototype.pick = function(array) {\n    return array[this.between(0, array.length - 1)];\n  };\n\n  Random.prototype.push = function(array, value) {\n    var rand = this.between(0, array.length - 1);\n    array.push(array[rand]);\n    array[rand] = value;\n\n    return array.length;\n  };\n\n  Random.prototype.shuffle = function(array) {\n    for( var i=array.length-1; i>0; i-- ) {\n      var rand = this.between(0, i);\n      var temp = array[i];\n\n      array[i] = array[rand];\n      array[rand] = temp;\n    }\n\n    return array;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('random', Random);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var String = function()\n    {\n    };\n\n  String.$inject = [];\n\n  /**\n   * Replaces placeholders (= '%s') from a string with variables.\n   *\n   * @public\n   * @method sprintf\n   * @param {string} input String to replace placeholders.\n   * @param {object} variables Object holding replacements.\n   * @return {string}\n   */\n  String.prototype.sprintf = function(input,variables)\n    {\n        if (!angular.isArray(variables)) {\n          variables = [].slice.call(arguments, 1);\n        }\n\n        for (var i=0; i<variables.length; i++) {\n          input = input.replace(/%s/,variables[i]);\n        }\n\n        return input;\n    };\n\n  /**\n   * Truncates a string by given params.\n   *\n   * @public\n   * @method truncate\n   * @param {string} input String to be truncated.\n   * @param {number} [maxLength=20] Maximum number of chars.\n   * @return {string}\n   */\n  String.prototype.truncate = function(input,maxLength)\n    {\n        maxLength = maxLength || 20;\n        if (input.length <= maxLength) {\n          return input;\n        }\n\n        return input.substring(0,maxLength) + '...';\n    };\n\n  /**\n   * Trims a string.\n   *\n   * @public\n   * @method trim\n   * @param {string} input String to trim.\n   * @return {string}\n   */\n  String.prototype.trim = function(input)\n    {\n        return input.replace(/^\\s+|\\s+$/g, '');\n    };\n\n  /**\n   * Transforms a string to camel case.\n   *\n   * @public\n   * @method toCamel\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toCamel = function(input)\n    {\n        return input.replace(/([-_][a-z])/g, function(part){\n            return part.toUpperCase().replace(/[-_]/,'');\n        });\n    };\n\n  /**\n   * Transforms a string to spinal case.\n   *\n   * @public\n   * @method toSpinal\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toSpinal = function(input)\n    {\n        return input.replace(/([A-Z]|_[a-z])/g, function(part){\n            return '-' + part.toLowerCase().replace(/_/,'');\n        });\n    };\n\n  /**\n   * Transforms a string to snake case.\n   *\n   * @public\n   * @method toSnake\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toSnake = function(input)\n    {\n        return input.replace(/([A-Z]|-[a-z])/g, function(part){\n            return '_' + part.toLowerCase().replace(/-/,'');\n        });\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('string', String);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  /**\n   * @varructor\n   */\n  var Storage = function($injector) {\n    this.$injector = $injector;\n  };\n\n  Storage.MODE_COOKIES = 'COOKIES';\n  Storage.MODE_STORAGE = 'STORAGE';\n  Storage.$inject = ['$injector'];\n\n  /**\n   * Gets the current storage interface of the service.\n   * Can be one of modes `COOKIES` or `STORAGE`. If no\n   * one is given will default to local storage if it's\n   * supported, otherwise falls back to cookies.\n   *\n   * @public\n   * @method getProxy\n   * @param {String} mode\n   * @return {Object}\n   */\n  Storage.prototype.getProxy = function(mode) {\n    switch (mode) {\n      case Storage.MODE_COOKIES:\n       return this._getCookieProxy();\n\n      case Storage.MODE_STORAGE:\n       return this._getLocalStorageProxy();\n\n     default:\n      if (this.supportsLocalStorage()) {\n        return this._getLocalStorageProxy();\n      }\n\n      return this._getCookieProxy();\n    }\n  };\n\n  /**\n   * Checks if browser supports local storage.\n   *\n   * @public\n   * @method supportsLocalStorage\n   * @return {Boolean}\n   */\n  Storage.prototype.supportsLocalStorage = function() {\n    var $window = this.$injector.get('$window');\n    var storageProxy = $window.localStorage;\n    var key = '__local__storage__feature__test';\n    var val = '__local__storage__feature__test';\n\n    try {\n     storageProxy.setItem(key, val);\n     storageProxy.removeItem(key);\n    } catch (e) {\n     return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Stringifies and uri encodes a value.\n   *\n   * @private\n   * @param {Mixed} value\n   * @method _encode\n   *\n   * @return {String}\n   */\n  Storage.prototype._encode = function(value) {\n    try {\n     value = JSON.stringify(value);\n    } catch (e) {\n     value = undefined;\n    }\n\n    return encodeURIComponent(value);\n  };\n\n  /**\n   * Decodes a stringified and uri encoded value.\n   *\n   * @private\n   * @param {Mixed}\n   * @method _decodeValue\n   *\n   * @return {Mixed}\n   */\n  Storage.prototype._decode = function(value) {\n    var decoded;\n    switch (typeof value) {\n     case 'string':\n       decoded = decodeURIComponent(value);\n       try {\n         decoded = JSON.parse(decoded);\n       } catch (e) {\n         /* noop */\n       }\n       break;\n     default:\n       decoded = undefined;\n    }\n\n    if (decoded === 'undefined') {\n     decoded = undefined;\n    }\n\n    if (decoded === undefined) {\n     decoded = null;\n    }\n\n    return decoded;\n  };\n\n  /**\n   * Provides cookie storage proxy layer.\n   *\n   * @private\n   * @method _getCookieProxy\n   *\n   * @return {Object}\n   */\n  Storage.prototype._getCookieProxy = function() {\n    var documentProxy = this.$injector.get('$document');\n\n    var me = this;\n    var _getAll = function(parse) {\n     var items = {};\n\n     var cookies = documentProxy.cookie.split('; ');\n     if (cookies.length === 1 && cookies[0] === '') {\n       return items;\n     }\n\n     for (var i = 0; i < cookies.length; i++) {\n       var cookie = cookies[i].split('=');\n       if (!parse) {\n         items[cookie[0]] = cookie[1];\n         continue;\n       }\n\n       items[cookie[0]] = me._decode(cookie[1]);\n     }\n\n     return items;\n    };\n\n    var setCookie = function(key, value, expires, domain, path, secure) {\n     value = me._encode(value);\n\n     try {\n       var date = new Date(expires);\n       if (isNaN(date)) {\n         var input = expires;\n         expires = undefined;\n         throw new Error('storage.js: \"' + input + '\" cannot be converted to date string!');\n       }\n\n       expires = date.toUTCString();\n     } catch (e) {\n       /* noop */\n     }\n\n     expires = expires ? expires : false;\n\n     var cookie = key + '=' + value;\n     cookie += expires ? ';expires='+expires : '';\n     cookie += domain ? ';domain='+domain : '';\n     cookie += path ? ';path='+path : '';\n     cookie += secure ? ';secure' : '';\n\n     documentProxy.cookie = cookie;\n    };\n\n    var getCookie = function(key) {\n     var cookies = _getAll(false);\n     if (cookies.hasOwnProperty(key)) {\n       return me._decode(cookies[key]);\n     }\n\n     return null;\n    };\n\n    var getAllCookies = function() {\n     return _getAll(true);\n    };\n\n    var removeCookie = function(key) {\n     setCookie(key, '', -1);\n    };\n\n    var removeAllCookies = function() {\n     for (var key in getAllCookies()) {\n       removeCookie(key);\n     }\n    };\n\n    return {\n     getItem: getCookie,\n     getAllItems: getAllCookies,\n     setItem: setCookie,\n     removeItem: removeCookie,\n     removeAllItems: removeAllCookies\n    };\n  };\n\n  /**\n   * Provides local storage proxy layer.\n   *\n   * @private\n   * @method _getLocalStorageProxy\n   *\n   * @return {Object}\n   */\n  Storage.prototype._getLocalStorageProxy = function() {\n    var $window = this.$injector.get('$window');\n    var storageProxy = $window.localStorage;\n\n    var me = this;\n    var setItem = function(key, value) {\n     value = me._encode(value);\n     storageProxy.setItem(key, value);\n    };\n\n    var getItem = function(key) {\n     var value = storageProxy.getItem(key);\n     return me._decode(value);\n    };\n\n    var getAllItems = function() {\n     var items = {};\n\n     for (var i = 0; i < storageProxy.length; i++) {\n       var key = storageProxy.key(i);\n       items[key] = getItem(key);\n     }\n\n     return items;\n    };\n\n    var removeItem = function(key) {\n     storageProxy.removeItem(key);\n    };\n\n    var removeAllItems = function() {\n     storageProxy.clear();\n    };\n\n    return {\n     getItem: getItem,\n     getAllItems: getAllItems,\n     setItem: setItem,\n     removeItem: removeItem,\n     removeAllItems: removeAllItems\n    };\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('storage', Storage);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Auth = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  /**\n   * @property {Array.<string>} $inject\n   */\n  Auth.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends a POST request to register route and\n   * persists retrieved JWT token on success.\n   *\n   * @public\n   * @method signin\n   * @param {Object} data Data to submit.\n   * @param {string} [firewall='frontend'] firewall\n   * @param {Object} [config={}] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.signup = function(data, firewall, config)\n    {\n      var $http = this.$injector.get('$http');\n\n      firewall = firewall || 'frontend';\n      config = config || {};\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      var url = this._getSignupUrl(firewall);\n\n      var promise = $http.post(\n        url,\n        {\n          _username: data.username,\n          _password: data.password\n        },\n        angular.extend(config || {})\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Sends a POST request to login route and\n   * persists retrieved JWT token on success.\n   *\n   * @public\n   * @method signin\n   * @param {Object} data Data to submit.\n   * @param {string} [firewall='frontend'] firewall\n   * @param {Object} [config={}] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.signin = function(data, firewall, config)\n    {\n      var $http = this.$injector.get('$http');\n\n      firewall = firewall || 'frontend';\n      config = config || {};\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      var url = this._getSigninUrl(firewall);\n\n      var promise = $http.post(\n        url,\n        {\n          _username: data.username,\n          _password: data.password\n        },\n        angular.extend(config || {}, {\n          skipAuthorization: true\n        })\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Destroys JWT token representing user.\n   *\n   * @public\n   * @method logout\n   * @param {Object} [config] $http config.\n   * @return {Void}\n   */\n  Auth.prototype.signout = function(config)\n    {\n      var $http = this.$injector.get('$http');\n      var user = this.$injector.get('user');\n      var jwt = this.$injector.get('jwt');\n\n      var successCallback = function()\n        {\n          user.unload();\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      return $http.get(\n        this._getSignoutUrl(),\n        config || {}\n      ).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sends a POST request to refresh route\n   * with saved refresh token from login().\n   *\n   * @public\n   * @method refresh\n   * @param {Object} [config] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.refresh = function(config)\n    {\n      var $http = this.$injector.get('$http');\n      var jwt = this.$injector.get('jwt');\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function(rejection)\n        {\n          // invalidate possibly stored jwt\n          // token to avoid further lookups\n          // especially from router resolve\n          jwt.invalidate();\n        };\n\n      var promise = $http.post(\n        this._getRefereshUrl(),\n        {\n          /* jshint camelcase: false */\n          refresh_token: jwt.getRefreshToken()\n          /* jshint camelcase: true */\n        },\n        angular.extend(config || {}, {\n          skipGlobalErrorMessage: true,\n          skipAuthorization: true\n        })\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Returns decoded JWT token containing\n   * user information such as `username`.\n   * Note: By default expired tokens are\n   * not accepted, set parameter if you\n   * want to accept expired tokens too!\n   *\n   * @public\n   * @method getUser\n   * @param {boolean} [acceptExpired=false]\n   * @return {Object|null}\n   */\n  Auth.prototype.getUser = function(acceptExpired)\n    {\n      acceptExpired = acceptExpired || false;\n\n      var jwt = this.$injector.get('jwt');\n\n      var token = jwt.getToken();\n      if (!token) {\n        return null;\n      }\n\n      if (!acceptExpired) {\n        if (jwt.isExpired()) {\n          return null;\n        }\n      }\n\n      return jwt.decode(token);\n    };\n\n  /**\n   * Checks if user has given role provided\n   * in `roles` property encoded into JWT.\n   *\n   * @public\n   * @method hasRole\n   * @param {string|array} role\n   * @return {Promise}\n   */\n  Auth.prototype.hasRole = function(role)\n    {\n      var jwt = this.$injector.get('jwt');\n      var $q = this.$injector.get('$q');\n\n      var defer = $q.defer();\n      var promise = defer.promise;\n\n      var isArray = angular.isArray(role);\n      if (isArray && role.length === 0) {\n        defer.reject(null);\n        return promise;\n      }\n\n      if (!role) {\n        defer.reject(null);\n        return promise;\n      }\n\n      // accept expired tokens - we will\n      // use refresh() to get new token\n      // if current one is invalid now\n      var user = this.getUser(true);\n      if (user === null) {\n        defer.reject(null);\n        return promise;\n      }\n\n      // primitive method for role check\n      var resolveRole = function(user) {\n        var roles = user.roles || [];\n        if (angular.isString(role)) {\n          role = [role];\n        }\n\n        var hasRole = false;\n        for (var i=0; i<role.length; i++) {\n          if (roles.indexOf(role[i]) >= 0) {\n            hasRole = true;\n            break;\n          }\n        }\n\n        if (hasRole) {\n          defer.resolve();\n        } else {\n          defer.reject();\n        }\n      };\n\n      // immediately resolve valid tokens\n      if (!jwt.isExpired()) {\n        resolveRole(user);\n        return promise;\n      }\n\n      // try to refresh invalid tokens\n      var me = this;\n      var successCallback = function()\n        {\n          user = me.getUser();\n          resolveRole(user);\n        };\n\n      var failureCallback = function()\n        {\n          defer.reject();\n        };\n\n      this.refresh().then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Saves server response containing\n   * the `token` and `refresh_token`.\n   *\n   * @private\n   * @method _saveToken\n   * @param {object} response\n   * @return {void}\n   */\n  Auth.prototype._saveToken = function(data)\n    {\n      /* jshint camelcase: false */\n      var jwt = this.$injector.get('jwt');\n\n      jwt.setRefreshToken(data.refresh_token);\n      jwt.setToken(data.token);\n      /* jshint camelcase: true */\n    };\n\n  /**\n   * Returns endpoint to gather JWT depending on firewall.\n   *\n   * @private\n   * @method _getSigninUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSigninUrl = function(firewall){\n    var API_URL = this.$injector.get('API_URL');\n\n    switch(firewall) {\n      case 'backend':\n      case 'frontend':\n        return API_URL + '/auth/' + firewall + '/signin';\n      default:\n        throw new Error('Unknown firewall name: ' + firewall);\n    }\n  };\n\n  /**\n   * Returns endpoint to register at given firewall.\n   *\n   * @private\n   * @method _getSignupUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSignupUrl = function(firewall){\n    var API_URL = this.$injector.get('API_URL');\n\n    switch(firewall) {\n      case 'frontend':\n        return API_URL + '/auth/' + firewall + '/signup';\n      case 'backend':\n        throw new Error('Not implemented yet!');\n      default:\n        throw new Error('Unknown firewall name: ' + firewall);\n    }\n  };\n\n  /**\n   * Returns endpoint to refresh the JWT.\n   *\n   * @private\n   * @method _getRefereshUrl\n   * @return {string}\n   */\n  Auth.prototype._getRefereshUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/auth/refresh';\n  };\n\n  /**\n   * Returns endpoint to revoke the JWT.\n   *\n   * @private\n   * @method _getSignoutUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSignoutUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/signout';\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('auth', Auth);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var I18N = function($injector)\n    {\n      this.translations = {};\n      this.$injector = $injector;\n\n      this.setLocale(this._detectLocale());\n    };\n\n  I18N.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} locales Currently supported locales. */\n  I18N.prototype.locales = {\n    'de': true\n  };\n\n  /** @var {string} defaultLocale Default locale to use. */\n  I18N.prototype.defaultLocale = 'de';\n\n  /**\n   * Loads translations according to current locale if not available.\n   *\n   * @public\n   * @method load\n   * @param {locale} [locale] Two letter language code.\n   * @param {Object} [config] Additional config for $http\n   * @return {Promise|void}\n   */\n  I18N.prototype.load = function(locale, config)\n    {\n      locale = locale || this.getLocale();\n      config = config || {};\n\n      if (this.translations[locale]) {\n        return;\n      }\n\n      var $http = this.$injector.get('$http');\n      var $log = this.$injector.get('$log');\n\n      var me = this;\n      var url = this._getJSONUrl(locale);\n      var successCallback = function(response)\n        {\n          me.translations[locale] = response.data;\n        };\n\n      var failureCallback = function()\n        {\n          $log.error('Could not load translations!');\n        };\n\n      return $http.get(url, config).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets locale to given paraemter if it's a valid one.\n   * Falls back to `defaultLocale` if it's an invalid one.\n   *\n   * @public\n   * @method setLocale\n   * @param {string} locale\n   * @return {void}\n   */\n  I18N.prototype.setLocale = function(locale)\n    {\n      if (this.locales[locale]) {\n        this.locale = locale;\n        return;\n      }\n\n      this.locale = this.defaultLocale;\n    };\n\n  /**\n   * Delivers the currently used locale for translations.\n   *\n   * @public\n   * @method setLocale\n   * @param {string} locale\n   * @return {void}\n   */\n  I18N.prototype.getLocale = function()\n    {\n      return this.locale;\n    };\n\n  /**\n   * Makes a lookup within current translation dictionary.\n   *\n   * @param {string} key The i18n key.\n   * @param {string} ... Parameters to be replaced.\n   * @return {string}\n   */\n  I18N.prototype.get = function(key)\n    {\n      var string = this.$injector.get('string');\n      var params = [].slice.call(arguments,1);\n      var locale = this.getLocale();\n\n      var text;\n      try {\n        text = this.translations[locale][key];\n      } catch(e) {}\n\n      return string.sprintf(text || key, params);\n    };\n\n  /**\n   * Returns endpoint to gather JSON translations.\n   *\n   * @private\n   * @method _getTranslationsUrl\n   * @param {string} locale\n   * @return {string}\n   */\n  I18N.prototype._getJSONUrl = function(locale)\n    {\n      return 'json/' + locale + '.json';\n    };\n\n  /**\n   * @ignore\n   */\n  I18N.prototype._detectLocale = function()\n    {\n      var navigator = this.$injector.get('$window').navigator;\n      var android = /android.*\\W(\\w\\w)-(\\w\\w)\\W/i;\n      var language;\n\n      // try to find locale on android devices!\n      if( navigator && navigator.userAgent &&\n          (language = navigator.userAgent.match(android)) ) {\n          language = language[1];\n      }\n\n      // for all other browsers\n      if (!language && navigator) {\n        if( navigator.language ) {\n          language = navigator.language;\n        } else if( navigator.userLanguage ) {\n          language = navigator.userLanguage;\n        } else if( navigator.systemLanguage ) {\n          language = navigator.systemLanguage;\n        } else if( navigator.browserLanguage ) {\n          language = navigator.browserLanguage;\n        }\n      }\n\n      // now we can get iso code\n      if (language) {\n        return language.substr(0,2);\n      }\n\n      // use `defaultLocale` as fallback\n      return this.defaultLocale;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('i18n', I18N);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  /**\n  * @constructor\n  */\n  var JWT = function($injector, storage) {\n    this.$injector = $injector;\n    this.storage = storage.getProxy();\n  };\n\n  JWT.$inject = ['$injector', 'storage'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} tokenKey Token key for local storage. */\n  JWT.prototype.tokenKey = 'NAksNyshI3';\n\n  /** @var {string} refreshKey Refresh key for local storage. */\n  JWT.prototype.refreshKey = 'i08BFNG9t5';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Resets JWT token / refresh token in local storage.\n   *\n   * @public\n   * @method invalidate\n   * @return {void}\n   */\n  JWT.prototype.invalidate = function()\n    {\n      this.removeRefreshToken();\n      this.removeToken();\n    };\n\n  /**\n   * Gets JWT token from local storage.\n   *\n   * @public\n   * @method getToken\n   * @return {string|null}\n   */\n  JWT.prototype.getToken = function()\n    {\n      return this.storage.getItem(this.tokenKey);\n    };\n\n  /**\n   * Sets JWT token in local storage.\n   *\n   * @public\n   * @method setToken\n   * @param {string} token\n   * @return {void}\n   */\n  JWT.prototype.setToken = function(token)\n    {\n      this.storage.setItem(this.tokenKey,token);\n    };\n\n  /**\n   * Removes JWT token from local storage.\n   *\n   * @public\n   * @method removeToken\n   * @return {void}\n   */\n  JWT.prototype.removeToken = function()\n    {\n      this.storage.removeItem(this.tokenKey);\n    };\n\n  /**\n   * Gets JWT refresh token from local storage.\n   *\n   * @public\n   * @method getRefreshToken\n   * @return {string|null}\n   */\n  JWT.prototype.getRefreshToken = function()\n    {\n      return this.storage.getItem(this.refreshKey);\n    };\n\n  /**\n   * Sets JWT refresh token in local storage.\n   *\n   * @public\n   * @method setRefreshToken\n   * @param {string} refreshToken\n   * @return {void}\n   */\n  JWT.prototype.setRefreshToken = function(refreshToken)\n    {\n      this.storage.setItem(this.refreshKey, refreshToken);\n    };\n\n  /**\n   * Removes JWT refresh token from local storage.\n   *\n   * @public\n   * @method removeToken\n   * @return {void}\n   */\n  JWT.prototype.removeRefreshToken = function()\n    {\n      this.storage.removeItem(this.refreshKey);\n    };\n\n  /**\n   * Converts timestamp into date object.\n   *\n   * @public\n   * @method getExpirationDate\n   * @param {string} token\n   * @return {date}\n   */\n  JWT.prototype.getExpirationDate = function(token)\n    {\n      var $log = this.$injector.get('$log');\n\n      token = token || this.getToken();\n      if (!token) {\n        $log.error('No token given or available!');\n        return null;\n      }\n\n      var decoded = this.decode(token);\n      if (typeof decoded.exp==='undefined') {\n        $log.error('No `exp` property available!');\n        return null;\n      }\n\n      var date = new Date(0);\n      date.setUTCSeconds(decoded.exp);\n\n      return date;\n    };\n\n  /**\n   * Determines if given token is expired.\n   *\n   * @public\n   * @method isExpired\n   * @param {string} token\n   * @param {number} offset In seconds.\n   * @return {boolean}\n   */\n  JWT.prototype.isExpired = function(token, offset)\n    {\n      offset = offset || 0;\n      token = token || this.getToken();\n\n      var date = this.getExpirationDate(token);\n      if (date === null) {\n        return true;\n      }\n\n      var now = new Date().valueOf();\n      offset = now + offset * 1000;\n      date = date.valueOf();\n\n      return date <= offset;\n    };\n\n  /**\n   * Tries to decode a JWT token.\n   *\n   * @public\n   * @method decode\n   * @param {string} token\n   * @return {object|null}\n   */\n  JWT.prototype.decode = function(token)\n    {\n      var $log = this.$injector.get('$log');\n\n      try {\n        var parts = token.split('.');\n        if (parts.length !== 3) {\n          throw new Error('JWT must have 3 parts!');\n        }\n\n        var decoded = this._base64Decode(parts[1]);\n        if (!decoded) {\n          throw new Error('Cannot decode the token!');\n        }\n\n        return angular.fromJson(decoded);\n      } catch(e) {\n        $log.error(e);\n        return null;\n      }\n    };\n\n  /**\n   * Validates and decodes a base64 url.\n   *\n   * @private\n   * @method _base64Decode\n   * @param {string} input\n   * @return {string}\n   */\n  JWT.prototype._base64Decode = function(input)\n    {\n      var $window = this.$injector.get('$window');\n      var $log = this.$injector.get('$log');\n\n      var output = input\n        .replace(/-/g, '+')\n        .replace(/_/g, '/');\n\n      try{\n        switch (output.length % 4) {\n          case 0: {\n            break;\n          }\n\n          case 2: {\n            output += '=='; break;\n          }\n\n          case 3: {\n            output += '='; break;\n          }\n\n          default: {\n            throw new Error('Illegal base64url code!');\n          }\n        }\n      } catch(e) {\n        $log.error(e);\n        return '';\n      }\n\n      var decoded = $window.atob(output);\n      var escaped = $window.escape(decoded);\n\n      return $window.decodeURIComponent(escaped);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('jwt', JWT);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var User = function($injector) {\n    this.$injector = $injector;\n\n    this._states = [\n      $injector.get('STATE_BEGINNER'),\n      $injector.get('STATE_AMATEUR'),\n      $injector.get('STATE_ADVANCED'),\n      $injector.get('STATE_EXPERT')\n    ];\n\n    this._eventSource = null;\n    this._results = [];\n    this._payload = {};\n    this._pending = {};\n    this._tasks = {};\n  };\n\n  User.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} state Current state of user. */\n  User.prototype.state = null;\n\n  /** @var {number} group Random group of user. */\n  User.prototype.group = null;\n\n  /** @var {number} tickets Current ticket count. */\n  User.prototype.tickets = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Fetches current user through `User` resource.\n   *\n   * @public\n   * @method load\n   * @return {void}\n   */\n  User.prototype.load = function() {\n    var User = this.$injector.get('User');\n    var jwt = this.$injector.get('jwt');\n\n    var me = this;\n    var successCallback = function(user) {\n\n      // save only json payload from\n      // ng-resource's `user` object\n      me._payload = user.toJSON();\n\n      // initialize members\n      me._initTickets();\n      me._initState();\n      me._initGroup();\n\n      // gameplay setup calls\n      // only for `ROLE_USER`!\n      if (!me.isUser()) {\n        return;\n      }\n\n      // init tasks at first!\n      me._initWatches();\n      me._initTasks();\n\n      // then results & SSE!\n      me._initPending();\n      me._initResults();\n      me._initSSE();\n    };\n\n    var failureCallback = function(rejection) {\n      // invalidate possibly stored jwt\n      // token to avoid further lookups\n      // especially from router resolve\n      jwt.invalidate();\n    };\n\n    var current = User.current();\n\n    current.$promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return current;\n  };\n\n  /**\n   * Resets current user session from application.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  User.prototype.unload = function() {\n    var jwt = this.$injector.get('jwt');\n    var sse = this.$injector.get('sse');\n\n    if (this._eventSource) {\n      sse.removeSource(this._eventSource);\n    }\n\n    if (this._unwatchTickets) {\n      this._unwatchTickets();\n    }\n\n    if (this._unwatchState) {\n      this._unwatchState();\n    }\n\n    this._eventSource = null;\n    this._results = [];\n    this._payload = {};\n    this._pending = {};\n    this._tasks = {};\n\n    this.tickets = null;\n    this.state = null;\n    this.group = null;\n\n    jwt.invalidate();\n  };\n\n  /**\n   * Updates user from external scopes.\n   * This is helpful for refreshing its\n   * state without invoking a request to\n   * the server when user was embedded in\n   * another request's response.\n   *\n   * @public\n   * @method update\n   * @param {object} result\n   * @return {void}\n   *\n   */\n  User.prototype.update = function(result) {\n    this._payload = result.user;\n\n    this._addResult(result);\n    this._initTickets();\n    this._initState();\n    this._initGroup();\n  };\n\n  /**\n   * Checks if current user has role `ROLE_USER`.\n   *\n   * @public\n   * @method isUser\n   * @return {boolean}\n   */\n  User.prototype.isUser = function() {\n    return this.hasRole('ROLE_USER');\n  };\n\n  /**\n   * Checks if current user has role `ROLE_ADMIN`.\n   *\n   * @public\n   * @method isAdmin\n   * @return {boolean}\n   */\n  User.prototype.isAdmin = function() {\n    return this.hasRole('ROLE_ADMIN');\n  };\n\n  /**\n   * Checks if current user has role `ROLE_SUPER_ADMIN`.\n   *\n   * @public\n   * @method isSuperAdmin\n   * @return {boolean}\n   */\n  User.prototype.isSuperAdmin = function() {\n    return this.hasRole('ROLE_SUPER_ADMIN');\n  };\n\n  /**\n   * Checks if current user's workshop is active.\n   *\n   * @public\n   * @method isInWorkshop\n   * @return {boolean}\n   */\n  User.prototype.isInWorkshop = function() {\n    if (!this.isUser()) {\n      return true;\n    }\n\n    return this._payload.workshop.isActive;\n  };\n\n  /**\n   * Checks if current user has given role.\n   *\n   * @public\n   * @method hasRole\n   * @param {string|array} role\n   * @return {boolean}\n   */\n  User.prototype.hasRole = function(role) {\n    if (!angular.isArray(role)) {\n      role = [role];\n    }\n\n    var roles = this._payload.roles || [];\n    for (var i=0; i<role.length; i++) {\n      if (roles.indexOf(role[i])>=0) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Provides user's task hash map.\n   *\n   * @public\n   * @method getTasks\n   * @return {object}\n   */\n  User.prototype.getTasks = function() {\n    return this._tasks;\n  };\n\n  /**\n   * Gets `task` resource of user by type.\n   *\n   * @public\n   * @method getTaskByType\n   * @param {string} type\n   * @return {object|null}\n   */\n  User.prototype.getTaskByType = function(type) {\n    return this._tasks[type] || null;\n  };\n\n  /**\n   * Gets pending `result` resource of user by type.\n   *\n   * @public\n   * @method getResultByType\n   * @param {string} type\n   * @return {object|null}\n   */\n  User.prototype.getPendingByType = function(type) {\n    return this._pending[type] || null;\n  };\n\n  /**\n   * Gets `state` mapped to string representation.\n   *\n   * @public\n   * @method getGroupAsString\n   * @return {string}\n   */\n  User.prototype.getGroupAsString = function() {\n    switch(this.group) {\n      case this.$injector.get('GROUP_A'):\n        return 'GROUP_A';\n      case this.$injector.get('GROUP_B'):\n        return 'GROUP_B';\n      default:\n        return null;\n    }\n  };\n\n  /**\n   * Gets `state` mapped to string representation.\n   *\n   * @public\n   * @method getStateAsString\n   * @return {string}\n   */\n  User.prototype.getStateAsString = function() {\n    switch(this.state) {\n      case this.$injector.get('STATE_AMATEUR'):\n        return 'STATE_AMATEUR';\n      case this.$injector.get('STATE_ADVANCED'):\n        return 'STATE_ADVANCED';\n      case this.$injector.get('STATE_EXPERT'):\n        return 'STATE_EXPERT';\n      default:\n        return 'STATE_BEGINNER';\n    }\n  };\n\n  /**\n   * Initializes `state` member.\n   *\n   * @private\n   * @method _initState\n   * @return {void}\n   */\n  User.prototype._initState = function() {\n    var STATE_BEGINNER = this.$injector.get('STATE_BEGINNER');\n    this.state = this._payload.state || STATE_BEGINNER;\n  };\n\n  /**\n   * Initializes `group` member.\n   *\n   * @private\n   * @method _initGroup\n   * @return {void}\n   */\n  User.prototype._initGroup = function() {\n    this.group = this._payload.group || null;\n  };\n\n  /**\n   * Initializes `tickets` member.\n   *\n   * @private\n   * @method init\n   * @return {void}\n   */\n  User.prototype._initTickets = function() {\n    var tickets = this._payload.tickets;\n    this.tickets = tickets || [];\n  };\n\n  /**\n   * Watches `state` and `tickets` for changes to\n   * show the corresponding user notifications.\n   *\n   * @private\n   * @method _initWatches\n   * @return {void}\n   */\n  User.prototype._initWatches = function() {\n    var notification = this.$injector.get('notification');\n    var $rootScope = this.$injector.get('$rootScope');\n    var i18n = this.$injector.get('i18n');\n    var me = this;\n\n    var _watchStateExpression = function() {\n      return me.state;\n    };\n\n    var _watchStateCallback = function(newState, oldState) {\n      if (newState === oldState) {\n        return;\n      }\n\n      notification.success(\n        i18n.get(\n          'Congratulations, you have reached the state %s!',\n          i18n.get(me.getStateAsString())\n        )\n      );\n    };\n\n    var _watchTicketsExpression = function() {\n      return me.tickets;\n    };\n\n    var _watchTicketsCallback = function(newTickets, oldTickets) {\n      if (newTickets === oldTickets) {\n        return;\n      }\n\n      var oldCount = oldTickets && oldTickets.length;\n      var newCount = newTickets && newTickets.length;\n\n      var tickets = newCount - oldCount;\n      if (tickets <= 0) {\n        return;\n      }\n\n      var message = tickets === 1 ?\n        i18n.get('Congratulations, you have earned 1 new ticket!') :\n        i18n.get('Congratulations, you have earned %s new tickets!', tickets);\n\n      notification.primary(message);\n    };\n\n    this._unwatchTickets = $rootScope.$watchCollection(\n      _watchTicketsExpression,\n      _watchTicketsCallback\n    );\n\n    this._unwatchState = $rootScope.$watch(\n      _watchStateExpression,\n      _watchStateCallback\n    );\n  };\n\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @private\n   * @method _initSSE\n   * @return {Void}\n   */\n  User.prototype._initSSE = function()\n    {\n      var $rootScope = this.$injector.get('$rootScope');\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      // don't setup SSE when playing remote\n      var workshop = this._payload.workshop;\n      if (!workshop.isActive) {\n        return;\n      }\n\n      var me = this;\n\n      var _onMessage = function(data) {\n        $rootScope.$evalAsync(function(){\n          angular.forEach(data, function(item) {\n            var unix = Date.parse(item.updatedAt);\n            var task = me._tasks[item.type];\n            task.isActive = !!item.isActive;\n\n            if (!isNaN(unix)) {\n              item.updatedAt = unix;\n            }\n          });\n        });\n      };\n\n      var url = API_URL + '/sse/workshop/' + workshop.id + '/tasks';\n      var options = { onMessage: _onMessage, sleep: 1 };\n      this._eventSource = sse.addSource(url, options);\n    };\n\n  /**\n   * Caches task hash map from workshop\n   * for lookups from `getTaskByType()`.\n   *\n   * @private\n   * @method _initTasks\n   * @return {void}\n   */\n  User.prototype._initTasks = function() {\n    var workshop = this._payload.workshop;\n    if (!workshop) {\n      return;\n    }\n\n    var me = this;\n    angular.forEach(workshop.tasks,function(task) {\n      me._tasks[task.type] = task;\n    });\n  };\n\n  /**\n   * Caches pending hash map from workshop\n   * for lookups from `getPendingByType()`.\n   *\n   * @private\n   * @method _initPending\n   * @return {void}\n   */\n  User.prototype._initPending = function() {\n    var pending = this._payload.pending;\n    if (!pending) {\n      return;\n    }\n\n    var me = this;\n    angular.forEach(pending,function(result) {\n      me._pending[result.task.type] = result;\n    });\n  };\n\n  /**\n   * Caches results hash map from workshop\n   * for lookups from `getResultsByType()`.\n   *\n   * @private\n   * @method _initResults\n   * @return {void}\n   */\n  User.prototype._initResults = function() {\n    var _addResult = this._addResult.bind(this);\n    var results = this._payload.results || [];\n\n    angular.forEach(results, _addResult);\n  };\n\n  /**\n   * Adds result to collection and sets `$$result`\n   *\n   * @private\n   * @method _addResult\n   * @param {object} result\n   * @return {void}\n   */\n  User.prototype._addResult = function(result) {\n    var task = this.getTaskByType(result.task.type);\n    if (task !== null) {\n      var current = task.$$results || 0;\n      task.$$results = current + 1;\n    }\n\n    this._results.push(result);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('user', User);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Mail = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  Mail.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends a POST request to send mail.\n   *\n   * @public\n   * @method send\n   * @param {Object} data\n   * @param {Object} [config] $http config.\n   * @return {Promise}\n   */\n  Mail.prototype.send = function(data, config) {\n    var notification = this.$injector.get('notification');\n    var $http = this.$injector.get('$http');\n    var i18n = this.$injector.get('i18n');\n\n    var successCallback = function(/*response*/)\n      {\n        notification.success(\n          i18n.get(\n            'Your email has been sent!'\n          )\n        );\n      };\n\n    var failureCallback = function(/*rejection*/)\n      {\n      };\n\n    var promise = $http.post(\n      this._getPostUrl(),\n      {\n        _name: data.name,\n        _mail: data.email,\n        _subject: data.subject,\n        _message: data.message\n      },\n      config || {}\n    );\n\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Returns endpoint to send the email.\n   *\n   * @private\n   * @method _getPostUrl\n   * @return {string}\n   */\n  Mail.prototype._getPostUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/mail';\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('mail', Mail);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, EventSource */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var SSE = function($injector)\n    {\n      this.$injector = $injector;\n      this._sources = {};\n    };\n\n  SSE.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Adds a new event source to listen to.\n   *\n   * @public\n   * @method add\n   * @param string url\n   * @param string event\n   * @param function callback\n   * @return {void}\n   */\n  SSE.prototype.addSource = function(url, config) {\n    config = config || {};\n\n    config.retry = config.retry || null;\n    config.event = config.event || null;\n    config.sleep = config.sleep || null;\n    config.onError = config.onError || function(){};\n    config.onMessage = config.onMessage || function(){};\n\n    url = this._buildUrl(url, config);\n    var source = new EventSource(url);\n\n    source.onmessage = function(event) {\n      var data = angular.fromJson(event.data);\n      config.onMessage.call(this, data, event);\n    };\n\n    source.onerror = function(event) {\n      config.onError.call(this, event);\n    };\n\n    this._sources[url] = source;\n    return source;\n  };\n\n  /**\n   * Adds a new event source to listen to.\n   *\n   * @public\n   * @method removeSource\n   * @param object source\n   * @return {void}\n   */\n  SSE.prototype.removeSource = function(source) {\n    delete this._sources[source.url];\n    source.close();\n  };\n\n  /**\n   * Appends JWT token as query string to url.\n   * Adds optional config options if available.\n   *\n   * @private\n   * @method _getUrl\n   * @param string url\n   * @param object config\n   * @return {string}\n   */\n  SSE.prototype._buildUrl = function(url, config){\n    var jwt = this.$injector.get('jwt');\n    var token = jwt.getToken();\n\n    url = url + '?bearer=' + token;\n\n    if (config.event) {\n      url += '&event=' + config.event;\n    }\n\n    if (config.sleep) {\n      url += '&sleep=' + config.sleep;\n    }\n\n    if (config.retry) {\n      url += '&retry=' + config.retry;\n    }\n\n    return url;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('sse', SSE);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var CardContainer = function() {\n  };\n\n  CardContainer.$inject = ['$scope', '$element', '$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} cards Stack of registered cards. */\n  CardContainer.prototype.cards = [];\n\n  /** @var {boolean} canToggle If cards can be toggled. */\n  CardContainer.prototype.canToggle = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Adds a `card` directive to stack.\n   *\n   * @public\n   * @method click\n   * @return {Void}\n   */\n  CardContainer.prototype.add = function(card) {\n    this.cards.push(card);\n  };\n\n  /**\n   * Toggles card state if `canToggle` is true.\n   *\n   * @public\n   * @method set\n   * @return {boolean}\n   */\n  CardContainer.prototype.set = function(card) {\n    if (card.selected && !this.canToggle) {\n      return false;\n    }\n\n    // toggle current card's state\n    var selected = !!card.selected;\n    card.selected = selected ? null : true;\n\n    // reset all other card states\n    angular.forEach(this.cards, function(current) {\n      if (current.id === card.id) {\n        return;\n      }\n\n      current.selected = card.selected ? false : null;\n    });\n\n    return true;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('cardContainer', function(){\n    return {\n      scope: {\n        canToggle: '=?cardContainerCanToggle'\n      },\n      restrict: 'A',\n      controller: CardContainer,\n      bindToController: true,\n      controllerAs: 'cardContainerController'\n    };\n  });\n\n  // --------------------------------------------------\n  // Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Card = function($scope, $element, $attrs, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n\n    this.id = this.$scope.$id;\n    this.hasIcon = $transclude.isSlotFilled('icon');\n  };\n\n  Card.$inject = ['$scope', '$element', '$attrs', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} id Unique id of card. */\n  Card.prototype.id = null;\n\n  /** @var {mixed} data Passthrough data of card. */\n  Card.prototype.data = null;\n\n  /** @var {boolean} selected If card is selected. */\n  Card.prototype.selected = null;\n\n  /** @var {boolean} disabled If card is disabled. */\n  Card.prototype.disabled = null;\n\n  /** @var {boolean} hasIcon If card has `icon` slot filled. */\n  Card.prototype.hasIcon = null;\n\n  /** @var {boolean} isCheckbox If card should behave as checkbox. */\n  Card.prototype.isCheckbox = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Invokes the `cardOnClick` callback.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Card.prototype.$onInit = function() {\n    if (!this.cardContainer) {\n      return;\n    }\n\n    this.cardContainer.add(this);\n  };\n\n  /**\n   * Invokes the `cardOnClick` callback.\n   *\n   * @public\n   * @method click\n   * @return {Void}\n   */\n  Card.prototype.click = function($event) {\n    if (this.disabled) {\n      return;\n    }\n\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    if (this.cardContainer) {\n      var changed = this.cardContainer.set(this);\n      if (!changed) {\n        return;\n      }\n    }\n\n    this.onClick({\n      data: this.data,\n      selected: this.selected,\n      disabled: this.disabled\n    });\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('card', function(){\n    return {\n      scope: {\n        data: '=?cardData',\n        onClick: '&cardOnClick',\n        selected: '=?cardSelected',\n        disabled: '=?cardDisabled',\n        isCheckbox: '=?cardIsCheckbox'\n      },\n      restrict: 'A',\n      transclude: {\n        text: 'cardText',\n        title: 'cardTitle',\n        icon: '?cardIcon',\n        buttons: '?cardButtons'\n      },\n      controller: Card,\n      bindToController: true,\n      controllerAs: 'cardController',\n      require:{\n        cardContainer: '^?cardContainer',\n      },\n      templateUrl: 'views/directives/card.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, Chartist */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Chart = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._chart = null;\n  };\n\n  Chart.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} data Chart data for series. */\n  Chart.prototype.data = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Inits chart with options and data\n   * and renders it with these settings.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Chart.prototype.$onInit = function()\n    {\n      var options = this._getOptions();\n\n      var data = {\n        labels: this._getLabels(),\n        series: this._getData()\n      };\n\n      this._render(data, options);\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Chart.prototype.$onDestroy = function()\n    {\n      if (this._chart !== null) {\n        this._chart.detach();\n        this._chart = null;\n      }\n    };\n\n  /**\n   * Gets data depending on current `task`.\n   *\n   * @public\n   * @method _getData\n   * @param {array} data\n   * @return int\n   */\n  Chart.prototype._getData = function() {\n    var GROUP_A = this.$injector.get('GROUP_A');\n    var GROUP_B = this.$injector.get('GROUP_B');\n\n    var me = this;\n\n    var map = {};\n    var data = [];\n    var mapResults;\n\n    switch(me.task.type) {\n      //case me.$injector.get('TYPE_INTEREST'):\n      //case me.$injector.get('TYPE_INFLATION'):\n      //case me.$injector.get('TYPE_DIVERSIFICATION'):\n      //case me.$injector.get('TYPE_RISK'):\n      case me.$injector.get('TYPE_ANCHORING'):\n      case me.$injector.get('TYPE_MENTAL_BOOKKEEPING'): {\n        map[GROUP_A] = { choice1: 0, choice2: 0, count:0 };\n        map[GROUP_B] = { choice1: 0, choice2: 0, count:0 };\n\n        mapResults = function(result) {\n          var group = result.json.group;\n\n          switch (result.json.choice) {\n            case 1:\n              map[group].choice1++;\n              break;\n            case 2:\n              map[group].choice2++;\n              break;\n            default:\n          }\n\n          map[group].count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        var groupA = map[GROUP_A];\n        var groupB = map[GROUP_B];\n\n        // series 1\n        data.push([\n          groupA.choice1 / groupA.count,\n          groupB.choice1 / groupB.count\n        ]);\n\n        // series 2\n        data.push([\n          groupA.choice2 / groupA.count,\n          groupB.choice2 / groupB.count\n        ]);\n\n        break;\n      }\n\n      //case me.$injector.get('TYPE_FRAMING'):\n      //case me.$injector.get('TYPE_SAVINGS_TARGET'):\n      //case me.$injector.get('TYPE_SAVINGS_SUPPORTED'):\n      //case me.$injector.get('TYPE_SELF_COMMITMENT'):\n      case me.$injector.get('TYPE_PROCRASTINATION'): {\n        var SPLIT = 'SPLIT';\n        var ALL = 'ALL';\n\n        map[SPLIT] = { success: 0, failure: 0, count:0 };\n        map[ALL] = { success: 0, failure: 0, count:0 };\n\n        mapResults = function(result) {\n          var mode = result.json.mode;\n\n          if (result.json.success) {\n            map[mode].success++;\n          } else {\n            map[mode].failure++;\n          }\n\n          map[mode].count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        var split = map[SPLIT];\n        var all = map[ALL];\n\n        // series 1\n        data.push([\n          split.success / split.count,\n          all.success / all.count\n        ]);\n\n        // series 2\n        data.push([\n          split.failure / split.count,\n          all.failure / all.count\n        ]);\n\n        break;\n      }\n\n      default:\n    }\n\n    return data;\n  };\n\n  /**\n   * Gets labels depending on current `task`.\n   *\n   * @private\n   * @method _getLabels\n   * @return array\n   */\n  Chart.prototype._getLabels = function() {\n    var i18n = this.$injector.get('i18n');\n\n    switch(this.task.type) {\n      case this.$injector.get('TYPE_ANCHORING'):\n      case this.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        return [\n          i18n.get('GROUP_A'),\n          i18n.get('GROUP_B')\n        ];\n      case this.$injector.get('TYPE_PROCRASTINATION'):\n        return [\n          i18n.get('ALL'),\n          i18n.get('SPLIT')\n        ];\n      default:\n        return [];\n    }\n  };\n\n  /**\n   * Gets options depending on current `task`.\n   *\n   * @private\n   * @method _getOptions\n   * @return array\n   */\n  Chart.prototype._getOptions = function() {\n    var i18n = this.$injector.get('i18n');\n\n    switch(this.task.type) {\n      case this.$injector.get('TYPE_ANCHORING'):\n      case this.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        return {\n          seriesBarDistance: 15,\n          chartPadding: {\n            top: 50,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          axisY:{\n            labelInterpolationFnc: function(value) {\n              return (value * 100) + '%';\n            },\n            ticks: [0, 0.2, 0.4, 0.6, 0.8, 1],\n            type: Chartist.FixedScaleAxis,\n            high: 1,\n            low: 0\n          },\n          plugins: [\n            Chartist.plugins.legend({\n              legendNames: [\n                i18n.get('Choice 1'),\n                i18n.get('Choice 2')\n              ]\n            })\n          ]\n        };\n      case this.$injector.get('TYPE_PROCRASTINATION'):\n        return {\n          seriesBarDistance: 15,\n          chartPadding: {\n            top: 50,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          axisY:{\n            labelInterpolationFnc: function(value) {\n              return (value * 100) + '%';\n            },\n            ticks: [0, 0.2, 0.4, 0.6, 0.8, 1],\n            type: Chartist.FixedScaleAxis,\n            high: 1,\n            low: 0\n          },\n          plugins: [\n            Chartist.plugins.legend({\n              legendNames: [\n                i18n.get('Target reached'),\n                i18n.get('Target dismissed')\n              ]\n            })\n          ]\n        };\n\n      default:\n        return {};\n    }\n  };\n\n  /**\n   * Renders chart depending on current `task`.\n   *\n   * @private\n   * @method _render\n   * @return array\n   */\n  Chart.prototype._render = function(data, options) {\n    var $timeout = this.$injector.get('$timeout');\n\n    this.$element.addClass('ct-chart');\n    var element = this.$element.get(0);\n\n    var me = this;\n    var render = function() {\n      switch(me.task.type) {\n        case me.$injector.get('TYPE_ANCHORING'):\n        case me.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        case me.$injector.get('TYPE_PROCRASTINATION'):\n          me._chart = new Chartist.Bar(element, data, options);\n          break;\n        default:\n      }\n    };\n\n    $timeout(render, 100);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('chart', function(){\n    return {\n      scope: {\n        task: '=?chartTask',\n        results: '=?chartResults'\n      },\n      restrict: 'A',\n      controller: Chart,\n      bindToController: true,\n      controllerAs: 'chartController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Modal\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Modal = function($scope, $attrs, $element, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$transclude = $transclude;\n\n    this._element = null;\n    this._modal = null;\n    this._scope = null;\n  };\n\n  Modal.$inject = ['$scope', '$attrs', '$element', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isVisible Flag for modal visibility. */\n  Modal.prototype.isVisible = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers UIkit callbacks and watches.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Modal.prototype.$onInit = function()\n    {\n      var me = this;\n\n      // listeners\n      this._onShow = function() {\n        me.$scope.$evalAsync(me.onShow);\n      };\n\n      this._onShown = function() {\n        me.$scope.$evalAsync(me.onShown);\n      };\n\n      this._onBeforeShow = function() {\n        me.$scope.$evalAsync(me.onBeforeShow);\n      };\n\n      this._onHide = function() {\n        me.$scope.$evalAsync(me.onHide);\n      };\n\n      this._onHidden = function() {\n        me.$scope.$evalAsync(function(){\n          me.isVisible = false;\n          me.onHidden();\n        });\n      };\n\n      this._onBeforeHide = function() {\n        me.$scope.$evalAsync(me.onBeforeHide);\n      };\n\n      // watches\n      this._unwatch = this.$scope.$watch(\n        'modalController.isVisible',\n        function(isVisible) {\n          if (isVisible) {\n            me.transclude();\n            return;\n          }\n\n          me.destroy();\n        }\n      );\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Modal.prototype.$onDestroy = function()\n    {\n      this._unwatch();\n      this.destroy();\n    };\n\n  /**\n   * Transcludes contents and shows modal.\n   *\n   * @public\n   * @method render\n   * @return {Void}\n   */\n  Modal.prototype.transclude = function() {\n    var me = this;\n\n    var transclude = function(clone, scope) {\n      // save element and scope\n      me._element = clone;\n      me._scope = scope;\n\n      // register UIKit listeners\n      me._element.on('show', me._onShow);\n      me._element.on('shown', me._onShown);\n      me._element.on('beforeshow', me._onBeforeShow);\n\n      me._element.on('hide', me._onHide);\n      me._element.on('hidden', me._onHidden);\n      me._element.on('beforeHide', me._onBeforeHide);\n\n      // replace with actual element\n      me.$element.append(clone);\n\n      // create and show the modal\n      me._modal = UIkit.modal(clone);\n      me._modal.show();\n    };\n\n    this.$transclude(transclude);\n  };\n\n  /**\n   * Destructs current modal transclusion from DOM.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Modal.prototype.destroy = function() {\n    if (this._element !== null) {\n      this._element.off('show', this._onShow);\n      this._element.off('shown', this._onShown);\n      this._element.off('beforeshow', this._onBeforeShow);\n\n      this._element.off('hide', this._onHide);\n      this._element.off('hidden', this._onHidden);\n      this._element.off('beforeHide', this._onBeforeHide);\n\n      this._element.remove();\n      this._element = null;\n    }\n\n    if (this._scope !== null) {\n      this._scope.$destroy();\n      this._scope = null;\n    }\n\n    if (this._modal !== null) {\n      this._modal.hide();\n      this._modal = null;\n    }\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('modal', function(){\n    return {\n      scope: {\n        isVisible: '=?modal',\n        onShow:'&modalOnShow',\n        onHide:'&modalOnHide',\n        onShown:'&modalOnShown',\n        onHidden:'&modalOnHidden',\n        onBeforeShow:'&modalOnBeforeShow',\n        onBeforeHide:'&modalOnBeforeHide'\n      },\n      restrict: 'A',\n      controller: Modal,\n      transclude: 'element',\n      bindToController: true,\n      controllerAs: 'modalController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Status\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Status = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.iconRatio = 1;\n    this.isCompact = false;\n    this.iconColor = 'currentcolor';\n  };\n\n  Status.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} tasks User's task hash map. */\n  Status.prototype.tasks = {};\n\n  /** @var {array} tickets User's ticket collection. */\n  Status.prototype.tickets = [];\n\n  /** @var {boolean} tasksVisible If task overview is visible. */\n  Status.prototype.tasksVisible = false;\n\n  /** @var {boolean} ticketsVisible If tickets overview is visible. */\n  Status.prototype.ticketsVisible = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `tasks` and `tickets` properties and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Status.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchTicketsExpression = function(){\n        return user.tickets;\n      };\n\n      var _watchTicketsCallback = function(tickets) {\n        me.tickets = tickets;\n      };\n\n      this._unwatchTickets = this.$scope.$watchCollection(\n        _watchTicketsExpression,\n        _watchTicketsCallback\n      );\n\n      var _watchTasksExpression = function(){\n        return user.getTasks();\n      };\n\n      var _watchTasksCallback = function(tasks) {\n        me.tasks = tasks;\n      };\n\n      this._unwatchTasks = this.$scope.$watch(\n        _watchTasksExpression,\n        _watchTasksCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Status.prototype.$onDestroy = function() {\n    this._unwatchTickets();\n    this._unwatchTasks();\n  };\n\n  /**\n   * Toggles `tasksVisible` property.\n   *\n   * @public\n   * @method toggleTasks\n   * @return {Void}\n   */\n  Status.prototype.toggleTasks = function()\n    {\n      this.tasksVisible = !this.tasksVisible;\n    };\n\n  /**\n   * Toggles `ticketsVisible` property.\n   *\n   * @public\n   * @method toggleTickets\n   * @return {Void}\n   */\n  Status.prototype.toggleTickets = function()\n    {\n      this.ticketsVisible = !this.ticketsVisible;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('status', function(){\n    return {\n      scope: {\n        iconRatio:'=?statusIconRatio',\n        iconColor:'=?statusIconColor',\n        isCompact:'=?statusIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: Status,\n      bindToController: true,\n      controllerAs: 'statusController',\n      templateUrl: 'views/directives/status.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Icons\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusIcons = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.ratio = 1;\n    this.color = 'currentcolor';\n  };\n\n  StatusIcons.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isBeginner If user has state `STATE_BEGINNER` or higher. */\n  StatusIcons.prototype.isBeginner = false;\n\n  /** @var {boolean} isAmateuer If user has state `STATE_AMATEUR` or higher. */\n  StatusIcons.prototype.isAmateuer = false;\n\n  /** @var {boolean} isAdvanced If user has state `STATE_ADVANCED` or higher. */\n  StatusIcons.prototype.isAdvanced = false;\n\n  /** @var {boolean} isExpert If user has state `STATE_EXPERT` or higher. */\n  StatusIcons.prototype.isExpert = false;\n\n  /** @var {boolean} isProfi If user has state `STATE_PROFI` or higher. */\n  StatusIcons.prototype.isProfi = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusIcons.prototype.$onInit = function()\n    {\n      var STATE_BEGINNER = this.$injector.get('STATE_BEGINNER');\n      var STATE_AMATEUR = this.$injector.get('STATE_AMATEUR');\n      var STATE_ADVANCED = this.$injector.get('STATE_ADVANCED');\n      var STATE_EXPERT = this.$injector.get('STATE_EXPERT');\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function(){\n        return user.state;\n      };\n\n      var _watchCallback = function(state) {\n        me.isBeginner = state >= STATE_BEGINNER;\n        me.isAmateur = state >= STATE_AMATEUR;\n        me.isAdvanced = state >= STATE_ADVANCED;\n        me.isExpert = state >= STATE_EXPERT;\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusIcons.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusIcons', function() {\n    return {\n      scope: {\n        ratio:'=?statusIconsRatio',\n        color:'=?statusIconsColor',\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusIcons,\n      bindToController: true,\n      controllerAs: 'statusIconsController',\n      templateUrl: 'views/directives/status-icons.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Label\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusLabel = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  StatusLabel.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} state String represenation of user's `state`. */\n  StatusLabel.prototype.state = null;\n\n  /** @var {boolean} isCompact If presentation is in compact format. */\n  StatusLabel.prototype.isCompact = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusLabel.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function() {\n        return user.state;\n      };\n\n      var _watchCallback = function() {\n        me.state = user.getStateAsString();\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusLabel.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusLabel', function(){\n    return {\n      scope: {\n        isCompact: '=?statusLabelIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusLabel,\n      bindToController: true,\n      controllerAs: 'statusLabelController',\n      templateUrl: 'views/directives/status-label.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Label\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusTickets = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  StatusTickets.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} tickets Current user ticket count. */\n  StatusTickets.prototype.tickets = 0;\n\n  /** @var {boolean} isCompact If presentation is in compact format. */\n  StatusTickets.prototype.isCompact = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusTickets.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function() {\n        return user.tickets;\n      };\n\n      var _watchCallback = function(tickets) {\n        me.tickets = tickets ? tickets.length : 0;\n      };\n\n      this._unwatch = this.$scope.$watchCollection(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusTickets.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusTickets', function(){\n    return {\n      scope: {\n        isCompact: '=?statusTicketsIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusTickets,\n      bindToController: true,\n      controllerAs: 'statusTicketsController',\n      templateUrl: 'views/directives/status-tickets.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Tabber\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Tabber = function($scope, $element, $attrs, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$transclude = $transclude;\n\n    this.domId = 'tabber-' + $scope.$id;\n    this.activeTab = this.tabDescription;\n    this.hasExercise = $transclude.isSlotFilled('exercise');\n  };\n\n  Tabber.$inject = ['$scope','$element','$attrs', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} activeTab Reference to current active tab. */\n  Tabber.prototype.activeTab = null;\n\n  /** @var {array} hasExercise If slot `exercise` has contents. */\n  Tabber.prototype.hasExercise = false;\n\n  /** @var {string} tabExercise Id of `exercise` tab. */\n  Tabber.prototype.tabExercise = 'exercise';\n\n  /** @var {string} tabDescription Id of `description` tab. */\n  Tabber.prototype.tabDescription = 'description';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up event listeners and animation frame.\n   *\n   * @public\n   * @method onClick\n   * @return {void}\n   */\n  Tabber.prototype.onClick = function(tab) {\n    this.activeTab = tab;\n  };\n\n  /**\n   * Sets up event listeners and animation frame.\n   *\n   * @public\n   * @method onClick\n   * @return {void}\n   */\n  Tabber.prototype.isDescriptionActive = function() {\n    return this.activeTab === this.tabDescription;\n  };\n\n  /**\n   * Sets up event listeners and animation frame.\n   *\n   * @public\n   * @method onClick\n   * @return {void}\n   */\n  Tabber.prototype.isExerciseActive = function() {\n    return this.activeTab === this.tabExercise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('tabber', function(){\n    return {\n      scope: {\n        icon: '=?tabberIcon'\n      },\n      restrict: 'A',\n      transclude: {\n        exercise: '?tabberExercise',\n        description: 'tabberDescription'\n      },\n      controller: Tabber,\n      bindToController: true,\n      controllerAs: 'tabberController',\n      templateUrl: 'views/directives/tabber.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, interact */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Draggable\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Draggable = function($scope, $element, $attrs, $injector) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$injector = $injector;\n\n    this._body = null;\n    this._clone = null;\n    this._coordinates = {};\n    this._interactable = null;\n    this._activeClass = 'active';\n    this._itemClass = 'draggable';\n    this._disabledClass = 'disabled';\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.disabled; },\n      function(disabled) {\n        if (disabled) {\n          me.$element.addClass(me._disabledClass);\n        } else {\n          me.$element.removeClass(me._disabledClass);\n        }\n\n        me._interactable.draggable({enabled: !disabled});\n      }\n    );\n\n    this._onResize = this._onResize.bind(this);\n  };\n\n  Draggable.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} data Connected data for draggable. */\n  Draggable.prototype.data = null;\n\n  /** @type {boolean} clone If clone item should be used. */\n  Draggable.prototype.clone = false;\n\n  /** @var {boolean} disabled If draggable is disabled. */\n  Draggable.prototype.disabled = false;\n\n  /** @type {boolean} clone If clone item should be used. */\n  Draggable.prototype.restriction = 'parent';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes `interact` library on element\n   * with all available callbacks for dragging.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Draggable.prototype.$onInit = function() {\n    var $window = this.$injector.get('$window');\n\n    this._body = angular.element(document.body);\n    this.$element.addClass(this._itemClass);\n    var element = this.$element.get(0);\n\n    this._interactable = interact(element);\n\n    var me = this;\n    var options = {\n      inertia: true,\n      autoScroll: true,\n      enabled: !this.disabled,\n      onend: this._onEndItem.bind(this),\n      onmove: this._onMoveItem.bind(this),\n      onstart: this._onStartItem.bind(this),\n      snap: {\n          targets:[function(x,y,interaction) {\n            // 'startCoords' doesn't work here, so\n            // we catch initial position once from\n            // interaction element and this values\n            if (!me._origin) {\n              me._origin = {\n                x: interaction.startCoords.page.x,\n                y: interaction.startCoords.page.y\n              };\n            }\n\n            // if not dropped, move draggable\n            // smoothly back to origin point\n            if (!interaction.dropTarget) {\n              return {\n                x: me._origin.x, // instead of 0\n                y: me._origin.y  // instead of 0\n              };\n            }\n          }],\n          //offset: 'startCoords',\n          endOnly: true\n      }\n    };\n\n    if (this.clone) {\n      angular.extend(options, { manualStart: true });\n      this._interactable.on('move', this._onMove.bind(this));\n    }\n\n    this._interactable.draggable(options);\n    this._interactable.getData = this._getData.bind(this);\n\n    this._window = angular.element($window);\n    this._window.on('resize', this._resize);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Draggable.prototype.$onDestroy = function() {\n    this._window.off('resize', this._onResize);\n    this._interactable.unset();\n    this._unwatch();\n  };\n\n  /**\n   * Resets `origin` info for snapping.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Draggable.prototype._onResize = function() {\n    this._origin = null;\n  };\n\n  /**\n   * Adds `activeClass` to clone and invokes `onDragStart`.\n   *\n   * @private\n   * @method _onStartItem\n   * @return {Void}\n   */\n  Draggable.prototype._onStartItem = function(event) {\n    var target = !this.clone ?\n      angular.element(event.target) :\n      this._clone;\n\n    target.addClass(this._activeClass);\n\n    this._trigger('onDragStart', {\n      $event: event,\n      $data: this.data\n    });\n  };\n\n  /**\n   * This performs actual dragging logic with CSS.\n   * The method triggers the `onDragMove` callback.\n   *\n   * @private\n   * @method _onMoveItem\n   * @return {Void}\n   */\n  Draggable.prototype._onMoveItem = function(event) {\n    var target = !this.clone ?\n      angular.element(event.target) :\n      this._clone;\n\n    var x = (this._coordinates.x || 0) + event.dx;\n    var y = (this._coordinates.y || 0) + event.dy;\n\n    this._translate(target,x,y);\n\n    this._trigger('onDragMove', {\n      $event: event,\n      $data: this.data\n    });\n  };\n\n  /**\n   * This performs resetting work by removing clone.\n   * It invokes always the `onDragEnd` and the `onDrop`\n   * callbacks - if dropped on target element.\n   *\n   * @private\n   * @method _onEndItem\n   * @return {Void}\n   */\n  Draggable.prototype._onEndItem = function(event) {\n    var dropped = !!event.interaction.dropTarget;\n\n    if (!this.clone) {\n      var target = angular.element(event.target);\n      target.removeClass(this._activeClass);\n\n      // remove translate for snapping if\n      // animating back to origin coords!\n      if (!dropped) {\n        this._translate(target,0,0);\n      }\n\n    } else {\n      this._coordinates = {};\n      this._clone.remove();\n      this._clone = null;\n    }\n\n    this._trigger('onDragEnd', {\n      $event: event,\n      $data: this.data\n    });\n\n    if (dropped) {\n      this._trigger('onDrop', {\n        $event: event,\n        $data: this.data\n      });\n    }\n  };\n\n  /**\n   * Creates the clone and triggers manual kick-off for `interact`.\n   * This is necessary because we want:\n   *\n   * 1) being able to show clone object\n   * 2) being able to have disable control\n   *\n   * @private\n   * @method _onMove\n   * @return {Void}\n   */\n  Draggable.prototype._onMove = function(event) {\n    var interactable = event.interactable;\n    var interaction = event.interaction;\n    var element = event.currentTarget;\n\n    // we've to control `enabled` by our own as we are using the\n    // `manualStart` option to create clone - noop if `disabled`\n    if (this.disabled) {\n      return;\n    }\n\n    // create clone if user holds mouse/finger and no interaction\n    // is currently started - position absolutely at end of body!\n    if (interaction.pointerIsDown && !interaction.interacting()) {\n      this._clone = angular.element(element).clone();\n\n      var offsetY = element.clientHeight / 2;\n      var offsetX = element.clientWidth / 2;\n\n      var pageY = !!event.touches ?\n        event.touches[0].pageY :\n        event.pageY;\n      var pageX = !!event.touches ?\n        event.touches[0].pageX :\n        event.pageX;\n\n      this._clone.css({\n        left: (pageX - offsetX) + 'px',\n        top: (pageY - offsetY) + 'px',\n        position: 'absolute'\n      });\n\n      this._body.append(this._clone);\n      element = this._clone.get(0);\n    }\n\n    // invoke 'drag' interaction manually with the target/clone\n    interaction.start({ name: 'drag' }, interactable, element);\n  };\n\n  /**\n   * Retrieves the connected drag object data.\n   *\n   * @private\n   * @method _getData\n   * @return {object}\n   */\n  Draggable.prototype._getData = function() {\n    return this.data;\n  };\n\n  /**\n   * Translates DOM node to given coordinates.\n   *\n   * @private\n   * @method _translate\n   * @param object element\n   * @param number x\n   * @param number y\n   * @return {void}\n   */\n  Draggable.prototype._translate = function(element, x, y) {\n    var translate = 'translate('+x+'px,'+y+'px)';\n\n    element.css({\n      'webkitTransform': translate,\n      'mozTransform': translate,\n      'msTransform': translate,\n      'oTransform': translate,\n      'transform': translate\n    });\n\n    this._coordinates.x = x;\n    this._coordinates.y = y;\n  };\n\n  /**\n   * Primitive method for invoking callbacks.\n   *\n   * @private\n   * @method _trigger\n   * @return {void}\n   */\n  Draggable.prototype._trigger = function(method, args) {\n    this.$scope.$evalAsync(this[method].bind(this,args));\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('draggable', function(){\n    return {\n      scope: {\n        data: '=?draggableData',\n        clone: '=?draggableClone',\n        disabled: '=?draggableDisabled',\n        onDragStart: '&draggableOnDragStart',\n        onDragMove: '&draggableOnDragMove',\n        onDragEnd: '&draggableOnDragEnd',\n        onDrop: '&draggableOnDrop'\n      },\n      restrict: 'A',\n      controller: Draggable,\n      bindToController: true,\n      controllerAs: 'draggableController'\n    };\n  });\n\n  // --------------------------------------------------\n  // Dropable\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Dropable = function($scope, $element, $attrs) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n\n    this._interactable = null;\n    this._enterClass = 'enter';\n    this._activeClass = 'active';\n    this._itemClass = 'dropable';\n    this._acceptClass = 'draggable';\n    this._disabledClass = 'disabled';\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.disabled; },\n      function(disabled) {\n        if (disabled) {\n          me.$element.addClass(me._disabledClass);\n        } else {\n          me.$element.removeClass(me._disabledClass);\n        }\n      }\n    );\n  };\n\n  Dropable.$inject = ['$scope','$element','$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} disabled If draggable is disabled. */\n  Dropable.prototype.disabled = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes `interact` library on element\n   * with all available callbacks for dragging.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Dropable.prototype.$onInit = function() {\n    this._body = angular.element(document.body);\n    this.$element.addClass(this._itemClass);\n    var accept = '.' + this._acceptClass;\n    var element = this.$element.get(0);\n\n    this._interactable = interact(element)\n      .dropzone({\n        accept: accept,\n        enabled: !this.disabled,\n        ondrop: this._onDrop.bind(this),\n        ondragenter: this._onDragEnter.bind(this),\n        ondragleave: this._onDragLeave.bind(this),\n        ondropactivate: this._onDropActivate.bind(this),\n        ondropdeactivate: this._onDropDeactivate.bind(this)\n      });\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Dropable.prototype.$onDestroy = function() {\n    this._interactable.unset();\n    this._unwatch();\n  };\n\n  /**\n   * Removes the active class from element and\n   * triggers the `onDropDeactivate` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDropDeactivate = function(event) {\n    this.$element.removeClass(this._activeClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDropDeactivate', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Applies the active class from element and\n   * triggers the `onDropActivate` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDropActivate = function(event) {\n    this.$element.addClass(this._activeClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDropActivate', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Applies the enter class from element and\n   * triggers the `onDragEnter` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDragEnter = function(event) {\n    this.$element.addClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDragEnter', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Removes the enter class from element and\n   * triggers the `onDragLeave` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDragLeave = function(event) {\n    this.$element.removeClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDragLeave', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Removes the enter class from element and\n   * triggers the `onDrop` callback with data\n   * from the draggable element.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDrop = function(event) {\n    this.$element.removeClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDrop',{\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Primitive method for invoking callbacks.\n   *\n   * @private\n   * @method _trigger\n   * @return {void}\n   */\n  Dropable.prototype._trigger = function(method, args) {\n    this.$scope.$evalAsync(this[method].bind(this,args));\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('dropable', function(){\n    return {\n      scope: {\n        disabled: '=?dropableDisabled',\n        onDropDeactivate: '&dropableOnDropDeactivate',\n        onDropActivate: '&dropableOnDropActivate',\n        onDragEnter: '&dropableOnDragEnter',\n        onDragLeave: '&dropableOnDragLeave',\n        onDrop: '&dropableOnDrop'\n      },\n      restrict: 'A',\n      controller: Dropable,\n      bindToController: true,\n      controllerAs: 'droppableController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit, jQuery */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // ScrollTo\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ScrollTo = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.options = {};\n\n    this._source = null;\n    this._target = null;\n    this._scroller = null;\n    this._init = this._init.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onScrolled = this._onScrolled.bind(this);\n  };\n\n  ScrollTo.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} options Options for `scroll` service. */\n  ScrollTo.prototype.options = null;\n\n  /** @var {function} callback Callback for scroll finished. */\n  ScrollTo.prototype.callback = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Waits for rendering and invokes `_init()`.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ScrollTo.prototype.$onInit = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    // wait for being rendered\n    $timeout(this._init, 1);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ScrollTo.prototype.$onDestroy = function() {\n    this._source.off('scrolled', this._onScrolled);\n    this.$element.off('click', this._onClick);\n\n    this._scroller.$destroy(true);\n  };\n\n  /**\n   * Extracts dom element and sets up scroller.\n   *\n   * @private\n   * @method _init\n   * @return {void}\n   */\n  ScrollTo.prototype._init = function() {\n    // try to grab target from - can be either\n    // a jquery element or a string id / hash\n    if (this.element instanceof jQuery) {\n      this._target = this.element;\n    } else {\n      if (angular.isString(this.element)) {\n        if (this.element.charAt(0) !== '#') {\n          this._target = '#' + this.element;\n        }\n\n        this._target = jQuery(this._target);\n      }\n    }\n\n    if (this._target.length === 0) {\n      console.warn('scroll-to.js: Invalid target element!');\n      return;\n    }\n\n    // need to create a dummy `<a href='#hash'></a>`\n    // element to set it as source object for UIkit\n    var href = '#' + this._target.id;\n    this._source = jQuery('<a href=\"'+href+'\"></a>');\n\n    this.options = this.options || {};\n    this.options.offset = this.options.offset || 80;\n    this.options.duration = this.options.duration || 500;\n    this.options.easing = this.options.easing || 'easeOutExpo';\n\n    this.$element.on('click', this._onClick);\n    this._source.on('scrolled', this._onScrolled);\n\n    this._scroller = UIkit.scroll(this._source, this.options);\n  };\n\n  /**\n   * Invokes scrolling to target element.\n   *\n   * @private\n   * @method _onClick\n   * @return {void}\n   */\n  ScrollTo.prototype._onClick = function() {\n    this._scroller.scrollTo(this._target);\n  };\n\n  /**\n   * Tries to invoke callback after scrolling.\n   *\n   * @private\n   * @method _onScrolled\n   * @return {void}\n   */\n  ScrollTo.prototype._onScrolled = function() {\n    if (!angular.isFunction(this.callback)) {\n      return;\n    }\n\n    this.$scope.$evalAsync(this.callback);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('scrollTo', function(){\n    return {\n      scope: {\n        element: '=scrollTo',\n        options: '=?scrollToOptions',\n        callback: '=?scrollToCallback'\n      },\n      restrict: 'A',\n      controller: ScrollTo,\n      bindToController: true\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Evaluation\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Evaluation = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.user = $injector.get('user');\n    this.domId = 'evaluation-' + $scope.$id;\n  };\n\n  Evaluation.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} domId Unique dom id for scrolling. */\n  Evaluation.prototype.domId = null;\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('evaluation', function(){\n    return {\n      scope: {\n        parent: '=evaluation'\n      },\n      restrict: 'A',\n      transclude: {\n        text: 'evaluationText',\n        customButtons: '?evaluationCustomButtons',\n        defaultButtons: '?evaluationDefaultButtons'\n      },\n      controller: Evaluation,\n      bindToController: true,\n      controllerAs: 'evaluationController',\n      templateUrl: 'views/directives/evaluation.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Locked State\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var LockedState = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n\n    this.user = $injector.get('user');\n  };\n\n  LockedState.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('lockedState', function(){\n    return {\n      scope: {\n        isLocked: '=?lockedState'\n      },\n      restrict: 'A',\n      transclude: {\n        userText: '?userText',\n        adminText: '?adminTExt'\n      },\n      controller: LockedState,\n      bindToController: true,\n      controllerAs: 'lockedStateController',\n      templateUrl: 'views/directives/locked-state.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Form Field\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var FormField = function($scope, $element, $attrs, $transclude, $timeout)\n    {\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n      this.$timeout = $timeout;\n      this.$transclude = $transclude;\n\n      this._transcludeElements = [];\n      this._transcludeScopes = [];\n      this._cloneDefault = null;\n      this._cloneLabel = null;\n      this._unlisten = [];\n      this._unwatch = [];\n    };\n\n  FormField.$inject = ['$scope', '$element', '$attrs', '$transclude', '$timeout'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Dom id form element. */\n  FormField.prototype.id = '';\n\n  /** @var {string} label Label of form element. */\n  FormField.prototype.label = '';\n\n  /** @var {ngModelController} model Added `ngModel` controller. */\n  FormField.prototype.ngModel = null;\n\n  /** @var {boolean} resetEmpty If validation resets on empty model. */\n  FormField.prototype.resetEmpty = true;\n\n  /** @var {boolean} showMessages True if `ngMessages` are visible. */\n  FormField.prototype.showMessages = false;\n\n  /** @var {string} labelClass Class to append to label. */\n  FormField.prototype.labelClass = 'uk-form-label';\n\n  /** @var {string} failureClass Class to append on failure. */\n  FormField.prototype.failureClass = 'uk-form-danger';\n\n  /** @var {string} successClass Class to append on success. */\n  FormField.prototype.successClass = 'uk-form-success';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Renders custom transclusion (form element) and\n   * sets up watchers as well as clean up methods.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  FormField.prototype.$onInit = function()\n    {\n      // create dom id from `name` and $scope id\n      // controller properties are only available\n      // in $onInit() callback from Angular 1.5.x\n      this.id = 'form-field-' + this.$scope.$id;\n\n      // add watch properties\n      this._addWatches();\n\n      // transclude contents\n      this._transclude();\n    };\n\n  /**\n   * Removes transcluded elements, scope and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  FormField.prototype.$onDestroy = function()\n    {\n      angular.forEach(this._transcludeElements, function(element){\n        element.remove();\n      });\n\n      angular.forEach(this._transcludeScopes, function(scope){\n        scope.$destroy();\n      });\n\n      angular.forEach(this._unlisten, function(unlisten){\n        unlisten();\n      });\n\n      angular.forEach(this._unwatch, function(unwatch){\n        unwatch();\n      });\n    };\n\n  /**\n   * Sets model controller from transcluded form\n   * element using the `ng-model` attribute and\n   * the `form-field-model` helper component.\n   *\n   * @public\n   * @method setModel\n   * @param {NgModelController} ngModel\n   * @return {void}\n   */\n  FormField.prototype.setModel = function(ngModel)\n    {\n      this.ngModel = ngModel;\n    };\n\n  /**\n   * Updates validation depending on `ngModel.$valid`.\n   *\n   * @private\n   * @method _update\n   * @return {void}\n   */\n  FormField.prototype._update = function()\n    {\n      if (this.ngModel.$valid) {\n        this._cloneDefault.removeClass(this.failureClass);\n        this._cloneDefault.addClass(this.successClass);\n      } else {\n        this._cloneDefault.removeClass(this.successClass);\n        this._cloneDefault.addClass(this.failureClass);\n      }\n\n      this.showMessages = this.ngModel.$invalid;\n    };\n\n  /**\n   * Resets corresponding validation properties.\n   *\n   * @private\n   * @method _reset\n   * @return {boolean}\n   */\n  FormField.prototype._reset = function()\n    {\n      this._cloneDefault.removeClass(this.failureClass);\n      this._cloneDefault.removeClass(this.successClass);\n      this.ngModel.$setUntouched();\n      this.showMessages = false;\n    };\n\n  /**\n   * Adds scope watches for `isValid()` and `isInvalid()`.\n   *\n   * @private\n   * @method _addWatches\n   * @return {void}\n   */\n  FormField.prototype._addWatches = function()\n    {\n      var me = this;\n\n      // observes `ngModel` controller for changing any\n      // of its validation properties such as `$valid`\n      var unwatchModel = this.$scope.$watchCollection(\n        'formFieldController.ngModel',\n        function(newModel, oldModel)\n        {\n          // ignore initial invocation\n          if (newModel === oldModel) {\n            return;\n          }\n\n          // as long as model hasn't been\n          // touched no validation's made\n          if (!newModel.$touched) {\n              return;\n          }\n\n          // wait for async validators\n          if (newModel.$pending) {\n            return;\n          }\n\n          // if no view value is present\n          // reset all validation props!\n          if (!newModel.$viewValue) {\n            if (me.resetEmpty) {\n              me._reset();\n              return;\n            }\n          }\n\n          me._update();\n        }\n      );\n\n      this._unwatch.push(unwatchModel);\n    };\n\n  /**\n   * Transcludes `default` and `label` slot programmatically\n   * to append custom attributes and events to dom elements.\n   *\n   * @private\n   * @method _transclude\n   * @return {void}\n   */\n  FormField.prototype._transclude = function()\n    {\n      var me = this;\n\n      // adds `id` attribute to be focues by <label>\n      var transcludeDefault = function(clone, scope)\n      {\n        var domId = '#default-' + me.id;\n        var template = angular.element(domId);\n\n        clone.attr('id', me.id);\n\n        template.replaceWith(clone);\n\n        me._cloneDefault = clone;\n\n        me._transcludeScopes.push(scope);\n        me._transcludeElements.push(clone);\n      };\n\n      // adds `labelClass` and sets `for` attribute\n      // for <label> in order to auto focus element\n      var transcludeLabel = function(clone, scope)\n      {\n        var domId = '#label-' + me.id;\n        var template = angular.element(domId);\n\n        clone.attr('for', me.id);\n        clone.addClass(me.labelClass);\n\n        template.replaceWith(clone);\n\n        me._cloneLabel = clone;\n\n        me._transcludeScopes.push(scope);\n        me._transcludeElements.push(clone);\n      };\n\n      // wait for dom to be ready before transclude\n      var timeout = function()\n      {\n        me.$transclude(transcludeDefault, null, null);\n        me.$transclude(transcludeLabel, null, 'label');\n      };\n\n      this.$timeout(timeout);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('formField',function() {\n    return {\n      scope: {\n          name: '=formField',\n          resetEmpty: '=?formFieldResetEmpty',\n          labelClass: '=?formFieldLabelClass',\n          failureClass: '=?formFieldFailureClass',\n          successClass: '=?formFieldSuccessClass'\n      },\n      transclude: {\n        label: '?label',\n        messageMin: '?messageMin',\n        messageMax: '?messageMax',\n        messageUrl: '?messageUrl',\n        messageEmail: '?messageEmail',\n        messageNumber: '?messageNumber',\n        messagePattern: '?messagePattern',\n        messageRequired: '?messageRequired',\n        messageMinlength: '?messageMinlength',\n        messageMaxlength: '?messageMaxlength',\n        messagesCustom: '?messagesCustom'\n      },\n      restrict: 'A',\n      controller: FormField,\n      bindToController: true,\n      controllerAs: 'formFieldController',\n      templateUrl: 'views/directives/form-field.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Form Field Model\n  // --------------------------------------------------\n\n  /**\n   * @constructor\n   */\n  var FormFieldModel = function($scope, $attrs, $element, $log) {\n    this.$log = $log;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n  };\n\n  FormFieldModel.$inject = ['$scope', '$attrs', '$element', '$log'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers `ngModel` on `formField` controller.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  FormFieldModel.prototype.$onInit = function()\n    {\n      if (!this.formField) {\n        this.$log.warn('formFieldModel: No form field controller found!');\n        return;\n      }\n\n      this.formField.setModel(this.ngModel);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('formFieldModel', function(){\n    return {\n      restrict: 'A',\n      require: {\n        'ngModel': 'ngModel',\n        'formField': '^?formField'\n      },\n      bindToController: true,\n      controller: FormFieldModel\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Asynchronous Validators\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorWorkshopExists = function($scope, $element, $attrs, $q, Workshop)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Workshop = Workshop;\n\n      this.keyLocked = 'validatorWorkshopLocked';\n    };\n\n  ValidatorWorkshopExists.$inject = ['$scope', '$element', '$attrs', '$q', 'Workshop'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorWorkshopExists` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorWorkshopExists.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorWorkshopExists = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the workshop exists. It sets implicitly `validatorWorkshopLocked`\n   * to avoid multiple server queries and sets to invalid if `isActive` is not true (= locked).\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorWorkshopExists.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var me = this;\n      var successCallback = function(workshop)\n      {\n        if (!workshop.isActive) {\n          me.ngModel.$setValidity(me.keyLocked, false);\n          defer.reject();\n          return;\n        }\n\n        me.ngModel.$setValidity(me.keyLocked, true);\n        defer.resolve();\n      };\n\n      var failureCallback = function()\n      {\n        defer.reject();\n      };\n\n      this.Workshop.validateWorkshopFrontend(\n        {\n          code: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorWorkshopExists',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorWorkshopExists\n      };\n  });\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorWorkshopUnique = function($scope, $element, $attrs, $q, Workshop)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Workshop = Workshop;\n    };\n\n  ValidatorWorkshopUnique.$inject = ['$scope', '$element', '$attrs', '$q', 'Workshop'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorWorkshopUnique` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorWorkshopUnique.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorWorkshopUnique = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the workshop exists.\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorWorkshopUnique.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var successCallback = function()\n      {\n        defer.reject();\n      };\n\n      var failureCallback = function()\n      {\n        defer.resolve();\n      };\n\n      this.Workshop.validateWorkshopBackend(\n        {\n          code: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorWorkshopUnique',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorWorkshopUnique\n      };\n  });\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorAdminUnique = function($scope, $element, $attrs, $q, Admin)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Admin = Admin;\n    };\n\n  ValidatorAdminUnique.$inject = ['$scope', '$element', '$attrs', '$q', 'Admin'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorAdminUnique` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorAdminUnique.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorAdminUnique = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the admin exists.\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorAdminUnique.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var successCallback = function()\n      {\n        defer.reject();\n      };\n\n      var failureCallback = function()\n      {\n        defer.resolve();\n      };\n\n      this.Admin.validateAdmin(\n        {\n          username: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorAdminUnique',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorAdminUnique\n      };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // InterestTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var InterestTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_INTEREST');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n  };\n\n  InterestTask.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  InterestTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  InterestTask.prototype.resolved = false;\n\n   /** @var {number} correctAnswers Count of correct answers. */\n  InterestTask.prototype.correctAnswers = 0;\n\n  /** @var {number} exercise1Answer Answer for first exercise. */\n  InterestTask.prototype.exercise1Answer = 0;\n\n  /** @var {number} exercise2Answer Answer for second exercise. */\n  InterestTask.prototype.exercise2Answer = 0;\n\n  /** @var {boolean} exercise1Correct Resolution state of first exercise. */\n  InterestTask.prototype.exercise1Correct = false;\n\n  /** @var {boolean} exercise2Correct Resolution state of second exercise. */\n  InterestTask.prototype.exercise2Correct = false;\n\n  /** @var {number} exercise1Result Correct result for first exercise. */\n  InterestTask.prototype.exercise1Result = 0;\n\n  /** @var {number} exercise2Result Correct result for second exercise. */\n  InterestTask.prototype.exercise2Result = 0;\n\n  // SETTINGS\n\n  /** @var {number} amount Amount of money. */\n  InterestTask.prototype.amount = 1000;\n\n  /** @var {number} rate Interest rate. */\n  InterestTask.prototype.rate = 0.02;\n\n  /** @var {number} years Number of years. */\n  InterestTask.prototype.years = 1;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  InterestTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  InterestTask.prototype.getPayload = function() {\n    /* jshint camelcase: false */\n    return {\n      task: this.task,\n      json: {\n        exercise1: {\n          current_result: this.exercise1Result,\n          actual_result: this.exercise1Answer,\n          is_valid: this.exercise1Correct\n        },\n        exercise2: {\n          current_result: this.exercise2Result,\n          actual_result: this.exercise2Answer,\n          is_valid: this.exercise2Correct\n        }\n      }\n    };\n    /* jshint camelcase: true */\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  InterestTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  InterestTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.exercise1Answer) {\n      return false;\n    }\n\n    if (!this.exercise2Answer) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  InterestTask.prototype.init = function() {\n    this.resolved = false;\n    this.correctAnswers = 0;\n    this.exercise1Answer = 0;\n    this.exercise2Answer = 0;\n    this.exercise1Correct = false;\n    this.exercise2Correct = false;\n    this.exercise1Result = this._calculateResult(1);\n    this.exercise2Result = this._calculateResult(1 + this.years);\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  InterestTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Updates answers, state and counters\n   * for given exercise for evaluation.\n   *\n   * @public\n   * @method update\n   * @param {number} value\n   * @param {string} exercise\n   * @return {Void}\n   */\n  InterestTask.prototype.update = function(value, exercise){\n    switch(exercise) {\n      case 'exercise1':\n        this.exercise1Answer = value;\n        break;\n      case 'exercise2':\n        this.exercise2Answer = value;\n        break;\n      default:\n    }\n\n    this.exercise1Correct = this.exercise1Answer === this.exercise1Result;\n    this.exercise2Correct = this.exercise2Answer === this.exercise2Result;\n\n    if (this.exercise1Correct && this.exercise2Correct) {\n      this.correctAnswers = 2;\n    } else if (this.exercise1Correct) {\n      this.correctAnswers = 1;\n    } else if (this.exercise2Correct) {\n      this.correctAnswers = 1;\n    } else {\n      this.correctAnswers = 0;\n    }\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  InterestTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates result for given years.\n   *\n   * @private\n   * @method _calculateResult\n   * @param {number} years\n   * @return {number}\n   */\n  InterestTask.prototype._calculateResult = function(years) {\n    return this.amount * Math.pow(1 + this.rate, years || 1);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('interestTask', function(){\n    return {\n      scope: {\n        rate: '=?interestTaskRate',\n        years: '=?interestTaskYears',\n        amount: '=?interestTaskAmount',\n        onResolve: '&interestTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: InterestTask,\n      bindToController: true,\n      controllerAs: 'interestTaskController',\n      templateUrl: 'views/directives/tasks/interest-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // InterestTask Exercise\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var InterestTaskExercise = function($scope,$element,$attrs) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n\n    this.disabled = false;\n    this.stack = [];\n    this.sum = 0;\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.sum; },\n      function(sum) {\n        if (!sum) {\n          me.sum = 0;\n          me.stack = [];\n        }\n      }\n    );\n  };\n\n  InterestTaskExercise.$inject = ['$scope','$element','$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} disabled If exercise is currently disabled. */\n  InterestTaskExercise.prototype.disabled = false;\n\n  /** @var {array} stack Stack collection all notes and coins. */\n  InterestTaskExercise.prototype.stack = [];\n\n  /** @var {number} sum Total sum of all values from `stack`. */\n  InterestTaskExercise.prototype.sum = 0;\n\n  /** @var {array} notes All selectable notes for exercise. */\n  InterestTaskExercise.prototype.notes = [500,200,100,50,20,10,5];\n\n  /** @var {array} notes All selectable coins for exercise. */\n  InterestTaskExercise.prototype.coins = [2,1,0.5,0.2,0.1,0.05,0.02,0.01];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  InterestTaskExercise.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  /**\n   * Adds value to `stack`, increases `sum`\n   * and invokes the `onUpdate` callback.\n   *\n   * @public\n   * @method onDrop\n   * @return {Void}\n   */\n  InterestTaskExercise.prototype.onDrop = function(value){\n    this.stack.push(value);\n    this.sum += value;\n\n    this.onUpdate({\n      sum: this.sum\n    });\n  };\n\n  /**\n   * Removes last item from `stack`, decreases\n   * `sum` and invokes the `onUpdate` callback.\n   *\n   * @public\n   * @method revert\n   * @return {Void}\n   */\n  InterestTaskExercise.prototype.revert = function() {\n    this.sum -= this.stack.pop();\n\n    this.onUpdate({\n      sum: this.sum\n    });\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('interestTaskExercise', function(){\n    return {\n      scope: {\n        sum: '=?interestTaskExerciseSum',\n        onUpdate: '&interestTaskExerciseOnUpdate',\n        disabled: '=?interestTaskExerciseDisabled'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: InterestTaskExercise,\n      bindToController: true,\n      controllerAs: 'interestTaskExerciseController',\n      templateUrl: 'views/directives/tasks/interest-task-exercise.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // DiversificationTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var DiversificationTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_DIVERSIFICATION');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  DiversificationTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  DiversificationTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  DiversificationTask.prototype.resolved = false;\n\n  /** @var {number} initialTickets Amount of base tickets. */\n  DiversificationTask.prototype.initialTickets = 2;\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTask.prototype.heads = 'K';\n\n  /** @var {string} tails Current class of tails side. */\n  DiversificationTask.prototype.tails = 'Z';\n\n  /** @var {array} companies Data for companies. */\n  DiversificationTask.prototype.companies = {};\n\n  /** @var {array} tickets Data for tickets. */\n  DiversificationTask.prototype.tickets = {};\n\n  /** @var {array} sides Two values for coin. */\n  DiversificationTask.prototype.sides = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  DiversificationTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  DiversificationTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        tickets: {\n          one: this.tickets.one.company,\n          two: this.tickets.two.company\n        },\n        throws: {\n          one: this.throws.one.toss,\n          two: this.throws.two.toss\n        }\n      },\n      ticketCount: this.getTicketCount()\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  DiversificationTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  DiversificationTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.tickets.one.company) {\n      return false;\n    }\n\n    if (!this.tickets.two.company) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  DiversificationTask.prototype.init = function() {\n    var random = this.$injector.get('random');\n\n    this.sides = [\n      this.heads,\n      this.tails\n    ];\n\n    this.throws = {\n      one: {\n        id: 1,\n        toss: random.pick(this.sides)\n      },\n      two: {\n        id: 2,\n        toss: random.pick(this.sides)\n      }\n    };\n\n    this.tickets = {\n      one: {\n        id: 1,\n        company: null\n      },\n      two: {\n        id: 2,\n        company: null\n      }\n    };\n\n    this.companies = {\n      one: {\n        id: 1,\n        count: 0,\n        tickets: {},\n        name: 'Smart',\n        image: 'company-a.svg'\n      },\n      two: {\n        id: 2,\n        count: 0,\n        tickets: {},\n        name: 'Phone',\n        image: 'company-b.svg'\n      }\n    };\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  DiversificationTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Adds or removes a ticket from given company.\n   *\n   * @public\n   * @method update\n   * @param ticket\n   * @param company\n   * @param action\n   * @return {void}\n   */\n  DiversificationTask.prototype.update = function(ticket, company, action){\n    switch (action) {\n      case 'add':\n        if (!company.tickets[ticket.id]) {\n          company.tickets[ticket.id] = ticket;\n          ticket.company = company.name;\n          company.count++;\n        }\n        break;\n      case 'remove':\n        if (company.tickets[ticket.id]) {\n          delete company.tickets[ticket.id];\n          ticket.company = null;\n          company.count--;\n        }\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  DiversificationTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates total ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTotalTickets\n   * @return {number}\n   */\n  DiversificationTask.prototype.getTicketTotal = function(){\n    var factorA = this.throws.one.toss === this.heads ? 2 : 1;\n    var factorB = this.throws.two.toss === this.heads ? 2 : 1;\n\n    var ticketsA = this.companies.one.count * factorA;\n    var ticketsB = this.companies.two.count * factorB;\n\n    return ticketsA + ticketsB;\n  };\n\n  /**\n   * Calculates won ticket amount (only newly added ones).\n   *\n   * @public\n   * @method getTotalTickets\n   * @return {number}\n   */\n  DiversificationTask.prototype.getTicketCount = function(){\n    var newTickets = this.getTicketTotal();\n    var oldTickets = this.initialTickets;\n\n    return newTickets - oldTickets;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('diversificationTask', function(){\n    return {\n      scope: {\n        onResolve: '&diversificationTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: DiversificationTask,\n      controllerAs: 'diversificationTaskController',\n      templateUrl: 'views/directives/tasks/diversification-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // DiversificationTask Coin\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var DiversificationTaskCoin = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._element = this.$element.find('.coin');\n  };\n\n  DiversificationTaskCoin.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} toss One of `heads` or `tails`. */\n  DiversificationTaskCoin.prototype.toss = null;\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTaskCoin.prototype.sides = [];\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTaskCoin.prototype.heads = 'K';\n\n  /** @var {string} tails Current class of tails side. */\n  DiversificationTaskCoin.prototype.tails = 'Z';\n\n  /** @var {boolean} flip Flag to invoke a new toss. */\n  DiversificationTaskCoin.prototype.flip = false;\n\n  /** @var {boolean} flip Flag to apply CSS classes. */\n  DiversificationTaskCoin.prototype.animate = false;\n\n  /** @var {string} backClass CSS class for back side. */\n  DiversificationTaskCoin.prototype.back = 'back';\n\n  /** @var {string} frontClass CSS class for front side. */\n  DiversificationTaskCoin.prototype.front = 'front';\n\n  /** @var {string} startSide Initially displayed side of coin. */\n  DiversificationTaskCoin.prototype.startSide = 'K';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype.$onInit = function() {\n    var animation = this.$injector.get('animation');\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n\n    this.sides = [\n      {\n        value: this.heads,\n        class: this.front\n      },\n      {\n        value: this.tails,\n        class: this.back\n      }\n    ];\n\n    if (this.startSide !== this.heads) {\n      this.sides[0].class = this.back;\n      this.sides[1].class = this.front;\n    }\n\n    me._toss = me._getToss();\n\n    var _timeoutCallback = function() {\n      var _iterateSides = function(side) {\n        if (side.value === me._toss.value) {\n          side.class = me.front;\n          return;\n        }\n\n        side.class = me.back;\n      };\n\n      angular.forEach(me.sides, _iterateSides);\n    };\n\n    var _watchFlipCallback = function(newFlip/*,oldFlip*/) {\n      if (newFlip) {\n        me.onStart({toss: me._toss.value});\n        $timeout(_timeoutCallback, 100);\n        me.animate = true;\n      }\n    };\n\n    var _watchFlipExpression = function() {\n      return me.flip;\n    };\n\n    var _watchTossCallback = function(newToss, oldToss) {\n      if (newToss !== oldToss) {\n        me._toss = me._getToss();\n      }\n    };\n\n    var _watchTossExpression = function() {\n      return me.toss;\n    };\n\n    var _evalAsyncCallback = function() {\n      me.onFinish({toss: me._toss.value});\n      me.animate = false;\n    };\n\n    var _animationEndCallback = function() {\n      me.$scope.$evalAsync(_evalAsyncCallback);\n    };\n\n    this.onInit({toss: me._toss.value});\n\n    if (animation.animationEndEvent) {\n      this._element.on(\n        animation.animationEndEvent,\n        _animationEndCallback\n      );\n    }\n\n    this._unwatchFlip = this.$scope.$watch(_watchFlipExpression, _watchFlipCallback);\n    this._unwatchToss = this.$scope.$watch(_watchTossExpression, _watchTossCallback);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype.$onDestroy = function() {\n    var animation = this.$injector.get('animation');\n\n    this._element.off(animation.animationEndEvent);\n    this._unwatchToss();\n    this._unwatchFlip();\n  };\n\n  /**\n   * Transforms `toss` to one side either\n   * by random or by given consumer input.\n   *\n   * @private\n   * @method _getToss\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype._getToss = function() {\n    var $filter = this.$injector.get('$filter');\n    var random = this.$injector.get('random');\n    var picked = random.pick(this.sides);\n\n    if (this.toss === null) {\n      return picked;\n    }\n\n    var filtered = $filter('filter')(\n      this.sides,\n      {\n        value: this.toss\n      }\n    );\n\n    if (filtered.length === 0) {\n      console.warn('Invalid value for `toss` - using random value!');\n      return picked;\n    }\n\n    return filtered[0];\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('diversificationTaskCoin', function(){\n    return {\n      scope: {\n        toss: '=?diversificationTaskCoinToss',\n        flip: '=?diversificationTaskCoinFlip',\n        onInit: '&diversificationTaskCoinOnInit',\n        onStart: '&diversificationTaskCoinOnStart',\n        onFinish: '&diversificationTaskCoinOnFinish',\n        startSide: '=?diversificationTaskCoinStartSide'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: DiversificationTaskCoin,\n      controllerAs: 'diversificationTaskCoinController',\n      templateUrl: 'views/directives/tasks/diversification-task-coin.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // BombTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var BombTask = function($scope, $attrs, $element, $injector) {\n    var type = $injector.get('TYPE_RISK');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n  };\n\n  BombTask.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  BombTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} started If the task has started. */\n  BombTask.prototype.started = false;\n\n  /** @var {boolean} stopped If the task has stopped. */\n  BombTask.prototype.stopped = false;\n\n  /** @var {boolean} hasBomb If bomb is in current collection. */\n  BombTask.prototype.hasBomb = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  BombTask.prototype.resolved = false;\n\n  /** @var {number} totalBoxes Total boxes of current game. */\n  BombTask.prototype.totalBoxes = 0;\n\n  /** @var {number} remainingBoxes Remaining boxes of current game. */\n  BombTask.prototype.remainingBoxes = 0;\n\n  /** @var {number} collectedBoxes Collected boxes of current game. */\n  BombTask.prototype.collectedBoxes = 0;\n\n  // SETTINGS\n\n  /** @var {number} avg Average of collected boxes from statistics. */\n  BombTask.prototype.avg = 12;\n\n  /** @var {number} rows Amount of rows for bomb task. */\n  BombTask.prototype.rows = 5;\n\n  /** @var {number} cols Amount of cols for bomb task. */\n  BombTask.prototype.cols = 5;\n\n  /** @var {number} interval Timeout for interval in seconds. */\n  BombTask.prototype.interval = 1;\n\n  /** @var {boolean} random\n   * - If `random` = false, boxes are collected row-wise one-by-one, starting in the top-left corner\n   * - If `random` = true, boxes are collected randomly (Fisher-Yates Algorithm)\n   * Note that this affects game play independently of `dynamic` property\n   */\n  BombTask.prototype.random = false;\n\n  /** @var {boolean} dynamic\n   * - If `dynamic` = true, one box per time interval is collected automatically\n   * - In case of `dynamic` = true, game play is affected by the variables `interval` and `random`\n   * - If `dynamic` = false, subjects collect as many boxes as they want by clicking or entering the respective number\n   * - In case of `dynamic` = false, game play is affected by the variables `random`\n   */\n  BombTask.prototype.dynamic = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  BombTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  BombTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        hasBomb: this.hasBomb,\n        collectedBoxes: this.collectedBoxes\n      },\n      ticketCount: this.getTicketCount()\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  BombTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  BombTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.dynamic) {\n      return this.stopped;\n    }\n\n    if (!this.collectedBoxes) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  BombTask.prototype.init = function() {\n    this._initMembers();\n    this._initMatrix();\n    this._initBomb();\n\n    if (!this.dynamic) {\n      this.start();\n    }\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  BombTask.prototype.reset = function() {\n    this.init();\n  };\n\n  /**\n   * Sets `started` flag. If `dynamic` is true,\n   * the interval will start to reveal cards.\n   *\n   * @public\n   * @method start\n   * @return {Void}\n   */\n  BombTask.prototype.start = function(index) {\n    if (this.dynamic) {\n      var $interval = this.$injector.get('$interval');\n\n      this._intIndex = index || 0;\n\n      var me = this;\n      var max = this.iterator.length;\n      this._intervalId = $interval(\n        function(){\n\n          var item = me.iterator[me._intIndex];\n          me.update(item,true);\n\n          me._intIndex++;\n          if (me._intIndex===max) {\n            me.stop();\n          }\n\n        },\n        this.interval*1000, // = from seconds\n        max - this._intIndex // = max iterations\n      );\n    }\n\n    this.started = true;\n  };\n\n  /**\n   * Sets `stopped` flag. If `dynamic` is true,\n   * the interval will be stopped in addition.\n   *\n   * @public\n   * @method start\n   * @return {Void}\n   */\n  BombTask.prototype.stop = function() {\n    if (this.dynamic && this._intervalId) {\n      var $interval = this.$injector.get('$interval');\n      $interval.cancel(this._intervalId);\n    }\n\n    this.stopped = true;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  BombTask.prototype.resolve = function() {\n    var $q = this.$injector.get('$q');\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var resolveCard = function(card) {\n      card.$$resolved = true;\n    };\n\n    var me = this;\n    var successCallback = function() {\n      angular.forEach(me.collection, resolveCard);\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  BombTask.prototype.getTicketCount = function(){\n    if (this.hasBomb) {\n      return 1;\n    }\n\n    return this.collectedBoxes + 1;\n  };\n\n  /**\n   * Callback for card click. Updates all\n   * related properties for final result.\n   *\n   * @public\n   * @method toggle\n   * @param {object} column\n   * @param {boolean} active\n   * @return {Void}\n   */\n  BombTask.prototype.toggle = function(column, active) {\n    var index = this.collection.indexOf(column);\n\n    if (active) {\n      if (index<0) {\n        this.collection.push(column);\n        this.collectedBoxes++;\n      }\n\n      column.$$active = true;\n    } else {\n      if (index>=0) {\n        this.collection.splice(index,1);\n        column.$$active = false;\n        this.collectedBoxes--;\n      }\n    }\n\n    if (this.isBomb(column)) {\n      this.hasBomb = true;\n    }\n\n    var total = this.totalBoxes;\n    var collected = this.collectedBoxes;\n    this.remainingBoxes = total - collected;\n  };\n\n  /**\n   * Provides indiviual tracking id for column.\n   *\n   * @public\n   * @method trackId\n   * @param {object} column\n   * @return {Void}\n   */\n  BombTask.prototype.trackId = function(column) {\n    return column.row + '_' + column.col;\n  };\n\n  /**\n   * Determines if column is actual bomb.\n   *\n   * @public\n   * @method isBomb\n   * @param {object} column\n   * @return {Void}\n   */\n  BombTask.prototype.isBomb = function(column) {\n    return angular.equals(this.bomb,column);\n  };\n\n  /**\n   * Initialzes internal properties.\n   *\n   * @private\n   * @method _initMembers\n   * @return {Void}\n   */\n  BombTask.prototype._initMembers = function() {\n    this.collection = [];\n\n    this.hasBomb = false;\n    this.started = false;\n    this.stopped = false;\n    this.resolved = false;\n\n    this.collectedBoxes = 0;\n    this.remainingBoxes = 0;\n    this.totalBoxes = this.rows * this.cols;\n  };\n\n  /**\n   * Calculates the actual matrix.\n   *\n   * @private\n   * @method _initMatrix\n   * @return {Void}\n   */\n  BombTask.prototype._initMatrix = function() {\n    this.matrix = [];\n    this.iterator = [];\n\n    for (var i=0; i<this.rows; i++) {\n\n      var columns = [];\n      for( var j=0; j<this.cols; j++ ) {\n        var data = {\n          row: i+1,\n          col: j+1\n        };\n\n        columns.push(data);\n\n        if (this.dynamic) {\n          if (!this.random) {\n            this.iterator.push(data);\n          } else {\n            var random = this.$injector.get('random');\n            random.push(this.iterator,data);\n          }\n        }\n      }\n\n      this.matrix.push(columns);\n    }\n  };\n\n  /**\n   * Initializes bomb's actual location.\n   *\n   * @private\n   * @method _initBomb\n   * @return {Void}\n   */\n  BombTask.prototype._initBomb = function() {\n    var random = this.$injector.get('random');\n\n    var row = random.between(0,this.rows-1);\n    var col = random.between(0,this.cols-1);\n\n    this.bomb = this.matrix[row][col];\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('bombTask',function(){\n    return {\n      scope: {\n        avg: '=?bombTaskAvg',\n        rows: '=?bombTaskRows',\n        cols: '=?bombTaskCols',\n        random: '=?bombTaskRandom',\n        dynamic: '=?bombTaskDynamic',\n        interval: '=?bombTaskInterval',\n        onResolve: '&bombTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: BombTask,\n      bindToController: true,\n      controllerAs: 'bombTaskController',\n      templateUrl: 'views/directives/tasks/bomb-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // BombTask Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var BombTaskCard = function(){\n  };\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Card's accociated model. */\n  BombTaskCard.prototype.model = null;\n\n  /** @var {string} isActive If card is active. */\n  BombTaskCard.prototype.isActive = false;\n\n  /** @var {string} isDisabled If card is disabled. */\n  BombTaskCard.prototype.isDisabled = false;\n\n  /** @var {string} isClickable If card is clickable. */\n  BombTaskCard.prototype.isClickable = true;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Toggles `isActive` if `isDisabled` and\n   * `isClickable` allow the action. Invokes\n   * `onToggle` callback for consumer.\n   *\n   * @public\n   * @method toggle\n   * @return {Void}\n   */\n  BombTaskCard.prototype.toggle = function() {\n    if (this.isDisabled || !this.isClickable) {\n      return;\n    }\n\n    this.isActive = !this.isActive;\n\n    this.onToggle({\n      model:this.model,\n      state:this.isActive\n    });\n  };\n\n  // registry\n  angular.module(module).directive('bombTaskCard', function(){\n    return {\n      scope: {\n        model:'=bombTaskCard',\n        onToggle:'&bombTaskCardOnToggle',\n        isActive:'=?bombTaskCardIsActive',\n        isDisabled:'=?bombTaskCardIsDisabled',\n        isClickable:'=?bombTaskCardIsClickable'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: BombTaskCard,\n      bindToController: true,\n      controllerAs: 'bombTaskCardController',\n      templateUrl: 'views/directives/tasks/bomb-task-card.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // AnchoringTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var AnchoringTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_ANCHORING');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n    this.group = user.getGroupAsString();\n  };\n\n  AnchoringTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  AnchoringTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  AnchoringTask.prototype.choice = null;\n\n  /** @var {string} group Current user's group assignment. */\n  AnchoringTask.prototype.group = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  AnchoringTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   * Sets up event source for listening to\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  AnchoringTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {object}\n   */\n  AnchoringTask.prototype.getPayload = function() {\n    var user = this.$injector.get('user');\n\n    return {\n      task: this.task,\n      json: {\n        group: user.group,\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  AnchoringTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  AnchoringTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  AnchoringTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  AnchoringTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  AnchoringTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  AnchoringTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('anchoringTask', function(){\n    return {\n      scope: {\n        onResolve: '&anchoringTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: AnchoringTask,\n      bindToController: true,\n      controllerAs: 'anchoringTaskController',\n      templateUrl: 'views/directives/tasks/anchoring-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // MentalBookkeepingTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var MentalBookkeepingTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_MENTAL_BOOKKEEPING');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n    this.group = user.getGroupAsString();\n  };\n\n  MentalBookkeepingTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  MentalBookkeepingTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  MentalBookkeepingTask.prototype.choice = null;\n\n  /** @var {string} group Current user's group assignment. */\n  MentalBookkeepingTask.prototype.group = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  MentalBookkeepingTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   * Sets up event source for listening to\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {object}\n   */\n  MentalBookkeepingTask.prototype.getPayload = function() {\n    var user = this.$injector.get('user');\n\n    return {\n      task: this.task,\n      json: {\n        group: user.group,\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  MentalBookkeepingTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  MentalBookkeepingTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('mentalBookkeepingTask', function(){\n    return {\n      scope: {\n        onResolve: '&mentalBookkeepingTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: MentalBookkeepingTask,\n      controllerAs: 'mentalBookkeepingTaskController',\n      templateUrl: 'views/directives/tasks/mental-bookkeeping-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // FramingTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var FramingTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_FRAMING');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  FramingTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  FramingTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  FramingTask.prototype.resolved = false;\n\n  /** @var {boolean} lotteryA If player opts in for lottery A. */\n  FramingTask.prototype.lotteryA = null;\n\n  /** @var {boolean} lotteryB If player opts in for lottery A. */\n  FramingTask.prototype.lotteryB = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  FramingTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  FramingTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        lotteryA: this.lotteryA,\n        lotteryB: this.lotteryB\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  FramingTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  FramingTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.lotteryA === null) {\n      return false;\n    }\n\n    if (this.lotteryB === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  FramingTask.prototype.init = function() {\n    this.lotteryA = null;\n    this.lotteryB = null;\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  FramingTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Updates provided lottery with given state.\n   *\n   * @public\n   * @method update\n   * @param {string} lottery\n   * @param {boolean} state\n   * @return {void}\n   */\n  FramingTask.prototype.update = function(lottery, state){\n    this[lottery] = state;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  FramingTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('framingTask', function(){\n    return {\n      scope: {\n        onResolve: '&framingTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: FramingTask,\n      bindToController: true,\n      controllerAs: 'framingTaskController',\n      templateUrl: 'views/directives/tasks/framing-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SavingsTargetTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SavingsTargetTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_SAVINGS_TARGET');\n\n    this.$attrs = $attrs;\n    this.$scope = $scope;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._flag = false;\n\n    this.user = this.$injector.get('user');\n    this.task = this.user.getTaskByType(type);\n    this.result = this.user.getPendingByType(type);\n\n    this.storage = this.$injector.get('storage').getProxy();\n    this._storageKey = '__savings__target__task__updated__at__';\n  };\n\n  SavingsTargetTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} user Alias to user service. */\n  SavingsTargetTask.prototype.user = null;\n\n  /** @var {object} task Task's resource from server. */\n  SavingsTargetTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  SavingsTargetTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {number} step Current step . */\n  SavingsTargetTask.prototype.step = 1;\n\n  /** @var {number} total Players wish for saving target. */\n  SavingsTargetTask.prototype.total = 3;\n\n  /** @var {string} wish Players wish for saving target. */\n  SavingsTargetTask.prototype.wish = null;\n\n  /** @var {number} amount Players first amount for saving target. */\n  SavingsTargetTask.prototype.amount = null;\n\n  /** @var {number} amountRepeated Players second amount for saving target. */\n  SavingsTargetTask.prototype.amountRepeated = null;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SavingsTargetTask.prototype.resolved = false;\n\n  // MISC\n\n  /** @var {object} form Form collecting user input. */\n  SavingsTargetTask.prototype.form = null;\n\n  /** @var {number} minAmount Minimum amount for `amount` input. */\n  SavingsTargetTask.prototype.minAmount = 1;\n\n  /** @var {number} maxAmount Maximum amount for `amount` input. */\n  SavingsTargetTask.prototype.maxAmount = 999;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        step: this.step,\n        wish: this.wish,\n        total: this.total,\n        amount: this.amount,\n        amountRepeated: this.amountRepeated\n      },\n      isPending: this.amountRepeated === null\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    // if result was created and\n    // we are waiting for paused\n    // state, we skip unlocking\n    // by using internal `_flag`\n    if (this.task.isActive) {\n      return this._flag;\n    }\n\n    // reset `_flag` as soon as\n    // `isActive` changed again\n    this.storage.removeItem(\n      this._storageKey\n    );\n\n    this._flag = false;\n    return true;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.form.$invalid) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.init = function() {\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // set flag only if still waiting for `isActive` change\n      var updatedAt = this.storage.getItem(this._storageKey);\n      if (angular.isNumber(updatedAt)) {\n        this._flag = updatedAt >= this.task.updatedAt;\n      }\n\n      // amount repeated cannot be desisted cause it's the\n      // condition in last step before setting `isPending`\n      this.amount = json.amount;\n      this.total = json.total;\n      this.wish = json.wish;\n      this.step = json.step;\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Increases `step` and invokes `resolve()`.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.update = function(){\n    if (this.step < this.total) {\n      this.step++;\n    }\n\n    if (!this.canResolve()) {\n      return;\n    }\n\n    var me = this;\n    var successCallback = function(){};\n    var failureCallback = function(){\n      me.step--;\n    };\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.resolve = function(){\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n    var $q = this.$injector.get('$q');\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var payload = this.getPayload();\n    var result = callback({\n      payload: payload\n    });\n\n    if (payload.isPending) {\n      this._flag = true;\n    }\n\n    var me = this;\n    var successCallback = function(result) {\n      if (result.isPending) {\n        if (me.step < me.total) {\n          var message = i18n.get('Thank you for your input!');\n          notification.success(message);\n        }\n\n        me.result = result;\n        me.storage.setItem(\n          me._storageKey,\n          me.task.updatedAt\n        );\n        return;\n      }\n\n      me.resolved = true;\n    };\n\n    var failureCallback = function() {\n      this._flag = false;\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates difference between `amount` and `amountRepeated`.\n   *\n   * @public\n   * @method getDifference\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.getDifference = function(){\n    return this.amountRepeated - this.amount;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('savingsTargetTask', function(){\n    return {\n      scope: {\n        onUpdate: '&savingsTargetTaskOnUpdate',\n        onResolve: '&savingsTargetTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: SavingsTargetTask,\n      bindToController: true,\n      controllerAs: 'savingsTargetTaskController',\n      templateUrl: 'views/directives/tasks/savings-target-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SelfCommitmentTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SelfCommitmentTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_SELF_COMMITMENT');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  SelfCommitmentTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  SelfCommitmentTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SelfCommitmentTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {}\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.update = function(){\n    this.resolve();\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('selfCommitmentTask', function(){\n    return {\n      scope: {\n        onResolve: '&selfCommitmentTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: SelfCommitmentTask,\n      controllerAs: 'selfCommitmentTaskController',\n      templateUrl: 'views/directives/tasks/self-commitment-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, moment */\n/* jshint bitwise: false */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // ProcrastinationTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_PROCRASTINATION');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n    this.result = user.getPendingByType(type);\n\n    this.domId = 'procrastination-task-' + $scope.$id;\n\n    this._intervalId = null;\n    this._onInterval = this._onInterval.bind(this);\n  };\n\n  ProcrastinationTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {string} type Task's `type` property from server. */\n  ProcrastinationTask.prototype.type = null;\n\n  /** @var {object} task Task's resource from server. */\n  ProcrastinationTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  ProcrastinationTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {string} mode One of `ALL` or `SPLIT`. */\n  ProcrastinationTask.prototype.mode = null;\n\n  /** @var {number} rounds Current game round count. */\n  ProcrastinationTask.prototype.count = 0;\n\n  /** @var {number} total Total rounds depends on `mode`. */\n  ProcrastinationTask.prototype.total = 1;\n\n  /** @var {array} rounds Results of single game rounds. */\n  ProcrastinationTask.prototype.rounds = [];\n\n  /** @var {number} openRounds Number of left rounds to play. */\n  ProcrastinationTask.prototype.openRounds = null;\n\n  /** @var {number} minCatched Minimum catched bubbles depends on `mode`. */\n  ProcrastinationTask.prototype.minCatched = null;\n\n  /** @var {number} maxEscaped Maximum escaped bubbles depends on `mode`. */\n  ProcrastinationTask.prototype.maxEscaped = null;\n\n  /** @var {number} updatedAt When last result was written. */\n  ProcrastinationTask.prototype.updatedAt = null;\n\n  /** @var {number} invalidAt When task will be unresolvable. */\n  ProcrastinationTask.prototype.invalidAt = null;\n\n  /** @var {string} state One of `IDLE`, `DECISION`, `PLAYING`. */\n  ProcrastinationTask.prototype.state = 'IDLE';\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  ProcrastinationTask.prototype.resolved = false;\n\n  // MISC\n\n  /** @var {string} domId Unique dom id for this task for scrolling purposes. */\n  ProcrastinationTask.prototype.domId = null;\n\n  /** @var {boolean} warmup If dry-run has been finished. */\n  ProcrastinationTask.prototype.hasWarmup = false;\n\n  /** @var {number} warmupMaxEscaped Maximum escaped bubbles for demo mode. */\n  ProcrastinationTask.prototype.warmupMaxEscaped = 2;\n\n  /** @var {number} warmupMinCatched Minimum catched bubbles for demo mode. */\n  ProcrastinationTask.prototype.warmupMinCatched = 20;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.$onDestroy = function() {\n    var $interval = this.$injector.get('$interval');\n\n    if (this._intervalId !== null) {\n      $interval.cancel(this._intervalId);\n    }\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        mode: this.mode,\n        state: this.state,\n        rounds: this.rounds,\n        success: this.hasSuccess()\n      },\n      isPending: this._isPending(),\n      ticketCount: this.getTicketCount()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.hasWarmup) {\n\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.init = function() {\n    // check for pending result\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // 1) apply round / count\n      this.rounds = json.rounds;\n      this.count = json.rounds.length;\n\n      // 2) call setters only now\n      this.setMode(json.mode);\n      this.setState(json.state);\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.update = function(result){\n    switch (this.state) {\n      case 'IDLE':\n        this.setState('DECISION');\n        break;\n\n      case 'DECISION':\n        this.setState('PLAYING');\n        break;\n\n      case 'PLAYING':\n        this.count = this.rounds.push(result);\n        break;\n      default:\n    }\n\n    if (!this.canResolve()) {\n      return;\n    }\n\n    this.resolve();\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.resolve = function(){\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n    var $q = this.$injector.get('$q');\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var result = callback({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      var message;\n\n      if (result.isPending) {\n        me.result = result;\n\n        switch (me.state) {\n          case 'IDLE': break;\n          case 'DECISION': break;\n          case 'PLAYING':\n            switch (me.mode) {\n              case 'ALL': break;\n              case 'SPLIT':\n                if (me.count > 0) {\n                  message = i18n.get(\n                    'Super, you have succeeded exercise %s of %s!',\n                    me.count,\n                    me.total\n                  );\n                  notification.success(message);\n                }\n                break;\n              default:\n                break;\n            }\n            break;\n          default:\n        }\n\n        return;\n      }\n\n      if (!me.hasSuccess()) {\n        message = i18n.get('Sorry, but the time has expired for this exercise and you retrieve only 1 ticket!');\n        notification.error(message);\n      } else {\n        message = i18n.get('Super, you have successfully done this exercise and retrieve 5 tickets!');\n        notification.success(message);\n      }\n\n      me.resolved = true;\n    };\n\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Sets game mode to `ALL` or `SPLIT`.\n   *\n   * @public\n   * @method setMode\n   * @param {string} mode\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setMode = function(mode){\n    switch (mode) {\n      case 'ALL':\n        this.total = 1;\n        this.maxEscaped = 15;\n        this.minCatched = 150;\n        break;\n      case 'SPLIT':\n        this.total = 3;\n        this.maxEscaped = 5;\n        this.minCatched = 50;\n        break;\n      default:\n        return;\n    }\n\n    this.mode = mode;\n    this.openRounds = this.total - this.count;\n  };\n\n  /**\n   * Sets game state to `IDLE`, `DECISION` or `PLAYING`.\n   *\n   * @public\n   * @method setState\n   * @param {string} state\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setState = function(state){\n    var $interval = this.$injector.get('$interval');\n\n    switch (state) {\n      case 'IDLE':\n        break;\n      case 'DECISION':\n        break;\n      case 'PLAYING':\n        var updatedAt = this.result.updatedAt;\n        this.updatedAt = moment.unix(updatedAt);\n        this.invalidAt = this.updatedAt.clone();\n\n        switch (this.mode) {\n          case 'ALL':\n            this.invalidAt.add(6, 'weeks');\n            break;\n          case 'SPLIT':\n            this.invalidAt.add(2, 'weeks');\n            break;\n          default:\n        }\n\n        this._intervalId = $interval(this._onInterval, 1000);\n\n        break;\n      default:\n        return;\n    }\n\n    this.state = state;\n  };\n\n  /**\n   * Sets `hasWarmup` flag after dry run.\n   *\n   * @public\n   * @method setWarmup\n   * @param {boolean} warmup\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setWarmup = function(warmup){\n    this.hasWarmup = warmup;\n  };\n\n  /**\n   * Whether or not task is actually invalid.\n   *\n   * @public\n   * @method isInvalid\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.isInvalid = function() {\n    if (this.invalidAt === null) {\n      return false;\n    }\n\n    return this._now().isAfter(this.invalidAt);\n  };\n\n  /**\n   * If amount of results corresponds to `total`.\n   *\n   * @public\n   * @method hasSuccess\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.hasSuccess = function() {\n    return this.rounds.length === this.total;\n  };\n\n  /**\n   * Retrieves the current played round.\n   *\n   * @public\n   * @method getCurrentRound\n   * @return {string}\n   */\n  ProcrastinationTask.prototype.getCurrentRound = function(){\n    return this.count + 1;\n  };\n\n  /**\n   * Calculates remaining time for finishing\n   * this task depending on chosen game mode.\n   *\n   * @public\n   * @method getRemainingTime\n   * @return {string}\n   */\n  ProcrastinationTask.prototype.getRemainingTime = function(){\n    var string = this.$injector.get('string');\n    var i18n = this.$injector.get('i18n');\n\n    if (this.invalidAt === null) {\n      return '';\n    }\n\n    var difference = this.invalidAt.diff(this._now());\n    var duration = moment.duration(difference);\n\n    var seconds = ~~duration.asSeconds();\n    var minutes = ~~duration.asMinutes();\n    var hours = ~~duration.asHours();\n    var days = ~~duration.asDays();\n    var value, keys;\n\n    if (days > 0) {\n      value = days;\n      keys = ['day', 'days'];\n    } else if (hours > 0) {\n      value = hours;\n      keys = ['hour', 'hours'];\n    } else if (minutes > 0) {\n      value = minutes;\n      keys = ['minute', 'minutes'];\n    } else {\n      value = seconds >= 0 ? seconds : 0;\n      keys = ['second', 'seconds'];\n    }\n\n    var key = value === 1 ?\n      keys[0] :\n      keys[1];\n\n    var unit = i18n.get(key);\n\n    return string.sprintf('%s %s', value, unit);\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  ProcrastinationTask.prototype.getTicketCount = function(){\n    if (this.hasSuccess()) {\n      return 5;\n    }\n\n    return 1;\n  };\n\n  /**\n   * Interval callback for checking invalidation.\n   *\n   * @private\n   * @method _onInterval\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype._onInterval = function() {\n    var $interval = this.$injector.get('$interval');\n    if (!this.isInvalid() || !this.canResolve()) {\n      return;\n    }\n\n    $interval.cancel(this._intervalId);\n    this.count = this.total;\n    this.resolve();\n  };\n\n  /**\n   * Whether or not task is currently pending.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype._isPending = function() {\n    return this.count < this.total;\n  };\n\n  /**\n   * Gets the current timestamp as moment.\n   *\n   * @private\n   * @method _now\n   * @return {object}\n   */\n  ProcrastinationTask.prototype._now = function() {\n    /*\n    if (!this._testInvalidation) {\n      this._testInvalidation = this.invalidAt.clone().subtract(3, 'seconds')\n    } else {\n      this._testInvalidation.add(1, 'second');\n    }\n    return this._testInvalidation;\n    */\n    return moment();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTask', function(){\n    return {\n      scope: {\n        onUpdate: '&procrastinationTaskOnUpdate',\n        onResolve: '&procrastinationTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: ProcrastinationTask,\n      bindToController: true,\n      controllerAs: 'procrastinationTaskController',\n      templateUrl: 'views/directives/tasks/procrastination-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // ProcrastinationTask Game\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTaskGame = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.bubbles = {};\n    this.viewport = {};\n    this.domId = 'viewport-' + $scope.$id;\n\n    this._nextId = 0;\n    this._tapped = 0;\n    this._rounds = 0;\n    this._retries = 0;\n    this._timeout = 100;\n    this._requestId = null;\n\n    this._loop = this._loop.bind(this);\n    this._update = this._update.bind(this);\n    this._resize = this._resize.bind(this);\n\n    this._window = angular.element(window);\n    this._viewport = this.$element.find('.viewport');\n  };\n\n  ProcrastinationTaskGame.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} catched Count of catched bubbles. */\n  ProcrastinationTaskGame.prototype.catched = 0;\n\n  /** @var {number} escaped Count of escaped bubbles. */\n  ProcrastinationTaskGame.prototype.escaped = 0;\n\n  /** @var {number} accuracy Players scoring accuracy. */\n  ProcrastinationTaskGame.prototype.accuracy = 0;\n\n  /** @var {object} bubbles Hash map keeping bubble objects. */\n  ProcrastinationTaskGame.prototype.bubbles = null;\n\n  /** @var {object} viewport Viewport holding dimensions and offsets. */\n  ProcrastinationTaskGame.prototype.viewport = null;\n\n  /** @var {boolean} state One of `IDLE`, `RUNNING`, `TIMEOUT`, `GAME_OVER` or `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.state = 'IDLE';\n\n  /** @var {boolean} expired Flag for expiring current game while its running. */\n  ProcrastinationTaskGame.prototype.expired = false;\n\n  /** @var {number} maxRounds Maximum number of rounds after `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.maxRounds = 1;\n\n  /** @var {number} maxRounds Maximum number of retries after `GAME_OVER`. */\n  ProcrastinationTaskGame.prototype.maxRetries = Number.POSITIVE_INFINITY;\n\n  /** @var {number} maxEscaped Maximum amount of escaped bubbles for `GAME_OVER`. */\n  ProcrastinationTaskGame.prototype.maxEscaped = 15;\n\n  /** @var {number} maxEscaped Maximum amount of escaped bubbles for `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.minCatched = 150;\n\n  /** @var {string} bubbleDelay Timeout until next bubble will appear on viewport. */\n  ProcrastinationTaskGame.prototype.bubbleDelay = 100;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up event listeners and animation frame.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.$onInit = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    this._window.on('resize', this._resize);\n    $timeout(this._resize, 1); // render\n\n    var me = this;\n    this._unwatch = this.$scope.$watch(\n      function() {\n        return me.expired;\n      },\n      function(isExpired) {\n        if (isExpired) {\n          me.expire();\n        }\n      }\n    );\n  };\n\n  /**\n   * Removes event listener and animation frame.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.$onDestroy = function() {\n    this._window.off('resize', this._resize);\n    this._unwatch();\n    this._unloop();\n  };\n\n  /**\n   * Invokes game loop and sets `RUNNING` state.\n   *\n   * @public\n   * @method start\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.start = function() {\n    this._loop();\n    this.state = 'RUNNING';\n  };\n\n  /**\n   * Stops and sets `GAME_OVER` state.\n   *\n   * @public\n   * @method gameOver\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.quit = function() {\n    this._unloop();\n\n    this._retries++;\n\n    this.bubbles = {};\n    this.state = 'GAME_OVER';\n\n    var result = this._getResult();\n    this.onGameOver({ result: result });\n  };\n\n  /**\n   * Stops and sets `FINISHED` state.\n   *\n   * @public\n   * @method done\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.done = function() {\n    this._unloop();\n\n    this._rounds++;\n\n    this.bubbles = {};\n    this.state = 'GAME_DONE';\n\n    var result = this._getResult();\n    this.onGameDone({ result: result });\n  };\n\n  /**\n   * Stops and sets `TIMEOUT` state.\n   *\n   * @public\n   * @method expire\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.expire = function() {\n    this._unloop();\n\n    this.bubbles = {};\n    this.state = 'TIMEOUT';\n  };\n\n  /**\n   * Resets game and sets `IDLE` state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.reset = function() {\n    this._unloop();\n\n    this._nextId = 0;\n    this._tapped = 0;\n    this._timeout = 100;\n    this._requestId = null;\n\n    this.catched = 0;\n    this.escaped = 0;\n    this.accuracy = 0;\n    this.state = 'IDLE';\n  };\n\n  /**\n   * Initializes\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.onClick = function($event) {\n    switch (this.state) {\n      case 'IDLE':\n        this.start();\n        break;\n      case 'RUNNING':\n        this._tapped++;\n\n        var target = $event.target;\n        var viewport = this._viewport.get(0);\n\n        // only update accuracy immediately if\n        // clicked on viewport, otherwise this\n        // will be done after bubble animation!\n        if (viewport.id === target.id) {\n          this._setAccuracy();\n        }\n\n        break;\n      case 'TIMEOUT':\n        // noop - disabled\n        break;\n      case 'GAME_OVER':\n        if (this.canRetry()) {\n          this.reset();\n          this.start();\n        }\n\n        break;\n      case 'GAME_DONE':\n        if (this.canRestart()) {\n          this.reset();\n          this.start();\n        }\n\n        break;\n      default:\n    }\n  };\n\n  /**\n   * True if player can retry game after `GAME_OVER`.\n   *\n   * @public\n   * @method canRetry\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.canRetry = function() {\n    return this._retries < this.maxRetries;\n  };\n\n  /**\n   * True if player can retry game after `GAME_OVER`.\n   *\n   * @public\n   * @method canRestart\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.canRestart = function() {\n    return this._rounds < this.maxRounds;\n  };\n\n  /**\n   * Adds bubble controller to internal hash.\n   *\n   * @public\n   * @method addBubble\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.addBubble = function(bubble) {\n    this.bubbles[bubble.id] = bubble;\n  };\n\n  /**\n   * Removes bubble, update counters and checks game state.\n   *\n   * @public\n   * @method removeBubble\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.removeBubble = function(bubble) {\n    // don't remove twice ($onDestroy)\n    if (!this.bubbles[bubble.id]) {\n      return;\n    }\n\n    // catched - check min count\n    if (bubble.catched) {\n      this.catched++;\n\n      // update accuracy\n      this._setAccuracy();\n\n      var min = this.minCatched;\n      if (this.catched >= min) {\n        this.done();\n      }\n    }\n\n    // escaped - check max count\n    if (bubble.escaped) {\n      this.escaped++;\n\n      var max = this.maxEscaped;\n      if (this.escaped >= max) {\n        this.quit();\n      }\n    }\n\n    delete this.bubbles[bubble.id];\n  };\n\n  /**\n   * Actual gaming loop for animation frame.\n   *\n   * @private\n   * @method _loop\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._loop = function() {\n    var animation = this.$injector.get('animation');\n\n    this._requestId = animation.requestAnimationFrame(this._loop);\n    this.$scope.$evalAsync(this._update);\n  };\n\n  /**\n   * Removes current animation frame.\n   *\n   * @public\n   * @method stop\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._unloop = function() {\n    var animation = this.$injector.get('animation');\n    animation.cancelAnimationFrame(this._requestId);\n  };\n\n  /**\n   * Animation frame callback handling creation of new\n   * bubbles being rendered and propagates `update()`.\n   *\n   * @private\n   * @method _update\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._update = function() {\n    var random = this.$injector.get('random');\n\n    this._timeout--;\n    if (this._timeout === 0 ) {\n      this._timeout = random.between(0, this.bubbleDelay) + 25;\n      this.bubbles[this._nextId++] = null;\n    }\n\n    for (var id in this.bubbles) {\n      var bubble = this.bubbles[id];\n      if (!bubble) {\n        continue;\n      }\n\n      bubble.update();\n    }\n  };\n\n  /**\n   * Sets up new `ratio` of viewport and propages `resize()`.\n   *\n   * @private\n   * @method resize\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._resize = function() {\n    this.viewport = this._getViewport();\n\n    var height = this.viewport.height;\n    var width = this.viewport.width;\n\n    this.ratio = width / height;\n\n    for (var id in this.bubbles) {\n      var bubble = this.bubbles[id];\n      if (!bubble) {\n        continue;\n      }\n\n      bubble.resize();\n    }\n  };\n\n  /**\n   * Gets result payload for game callbacks.\n   *\n   * @private\n   * @method _getResult\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._getResult = function() {\n    return {\n      catched: this.catched,\n      escaped: this.escaped,\n      accuracy: this.accuracy\n    };\n  };\n\n  /**\n   * Calculates and sets `accuracy` property.\n   *\n   * @private\n   * @method _setAccuracy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._setAccuracy = function() {\n    this.accuracy = this.catched / this._tapped;\n  };\n\n  /**\n   * Gets viewport dimensions and offsets.\n   *\n   * @private\n   * @method _getViewport\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._getViewport = function() {\n    var width = this._viewport.width();\n    var height = this._viewport.height();\n    var top = this._viewport.scrollTop();\n    var left = this._viewport.scrollLeft();\n\n    return {\n      top: top,\n      left: left,\n      width: width,\n      height: height,\n      right: left + width,\n      bottom: top + height\n    };\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTaskGame', function(){\n    return {\n      scope: {\n        expired: '=?procrastinationTaskGameExpired',\n        maxRounds: '=?procrastinationTaskGameMaxRounds',\n        maxRetries: '=?procrastinationTaskGameMaxRetries',\n        onGameDone: '&procrastinationTaskGameOnGameDone',\n        onGameOver: '&procrastinationTaskGameOnGameOver',\n        minCatched: '=?procrastinationTaskGameMinCatched',\n        maxEscaped: '=?procrastinationTaskGameMaxEscaped',\n        bubbleDelay: '=?procrastinationTaskGameBubbleDelay'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: ProcrastinationTaskGame,\n      controllerAs: 'procrastinationTaskGameController',\n      templateUrl: 'views/directives/tasks/procrastination-task-game.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // ProcrastinationTask Bubble\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTaskBubble = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.domId = 'bubble-' + $scope.$id;\n  };\n\n  ProcrastinationTaskBubble.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} themes Predefined themes for bubbles. */\n  ProcrastinationTaskBubble.prototype.themes = [\n    'theme-1',\n    'theme-2',\n    'theme-3',\n    'theme-4',\n    'theme-5'\n  ];\n\n  /**\n\n  /** @var {string} class CSS class namem for bubble. */\n  ProcrastinationTaskBubble.prototype.class = 'bubble';\n\n  /** @var {object} style Style definitions for bubble. */\n  ProcrastinationTaskBubble.prototype.style = {};\n\n  /** @var {string} theme A random theme for bubble. */\n  ProcrastinationTaskBubble.prototype.theme = null;\n\n  /** @var {number} radius Radius of bubble. */\n  ProcrastinationTaskBubble.prototype.radius = null;\n\n  /** @var {number} radius Animation speed of bubble. */\n  ProcrastinationTaskBubble.prototype.speed = null;\n\n  /** @var {number} wave Horizontal swinging intensity. */\n  ProcrastinationTaskBubble.prototype.wave = null;\n\n  /** @var {number} x Current x position of bubble. */\n  ProcrastinationTaskBubble.prototype.x = null;\n\n  /** @var {number} y Current y position of bubble. */\n  ProcrastinationTaskBubble.prototype.y = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registeres bubble with game controller after inital setup.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.$onInit = function() {\n    var random = this.$injector.get('random');\n    var game = this.gameController;\n\n    this.theme = random.pick(this.themes);\n\n    this.radius = random.between(0, 15) + 20;\n    this.speed = random.between(0, 1)  + 2;\n    this.wave = 1.5 + this.radius;\n\n    var xOffset = this.radius * 2;\n    this.y = game.viewport.height + random.between(0, 50) + 50;\n    this.x = random.between(xOffset, game.viewport.width - xOffset);\n\n    this._originalR = game.ratio;\n    this._originalX = this.x;\n\n    this.style = {\n      top: this.y,\n      left: this.x,\n      width: this.radius * 2,\n      height: this.radius * 2\n    };\n\n    this.gameController.addBubble(this);\n  };\n\n  /**\n   * Unregisteres bubble with game controller.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.$onDestroy = function() {\n    this.gameController.removeBubble(this);\n  };\n\n  /**\n   * Updates `x` and `y` coordinates and applies style.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.update = function() {\n    var sin = Math.sin(new Date().getTime() * 0.002);\n    this.x = this.wave * sin + this._originalX;\n    this.y = this.y - this.speed;\n\n    this.style.left = this.x;\n    this.style.top = this.y;\n\n    var offscreenY = -this.radius * 2;\n    if (this.y > offscreenY) {\n      return;\n    }\n\n    this.escaped = true;\n    this.gameController.removeBubble(this);\n  };\n\n  /**\n   * Updates `x` coordinate according to new ratio.\n   *\n   * @public\n   * @method resize\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.resize = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n    var timeout = function() {\n      var ratio = me.gameController.ratio;\n      var move = ratio / me._originalR;\n\n      me._originalX *= move;\n      me._resizeId = null;\n    };\n\n    if (this._resizeId) {\n      $timeout.cancel(this._resizeId);\n    }\n\n    this._resizeId = $timeout(timeout, 250);\n  };\n\n  /**\n   *\n   *\n   * @public\n   * @method onClick\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.onClick = function() {\n    var animation = this.$injector.get('animation');\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n\n    var evalAsync = function() {\n      me.gameController.removeBubble(me);\n    };\n\n    var onAnimationEnd = function() {\n      me.$scope.$evalAsync(evalAsync);\n      me.$element.off(\n        animation.animationEndEvent,\n        onAnimationEnd\n      );\n    };\n\n    if (animation.animationEndEvent) {\n      this.$element.on(\n        animation.animationEndEvent,\n        onAnimationEnd\n      );\n    } else {\n      $timeout(evalAsync, 50);\n    }\n\n    this.catched = true;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTaskBubble', function(){\n    return {\n      scope: {\n        id: '=procrastinationTaskBubble'\n      },\n      restrict: 'A',\n      transclude: true,\n      require: {\n        'gameController': '^procrastinationTaskGame'\n      },\n      bindToController: true,\n      controller: ProcrastinationTaskBubble,\n      controllerAs: 'procrastinationTaskBubbleController',\n      templateUrl: 'views/directives/tasks/procrastination-task-bubble.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var LoginFrontend = function($scope, $injector, code) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n\n    // @see: next()\n    this.code = code;\n  };\n\n  LoginFrontend.$inject = ['$scope', '$injector', 'code'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} code Workshop code for authentication. */\n  LoginFrontend.prototype.code = null;\n\n  /** @var {string} username User name for authentication. */\n  LoginFrontend.prototype.username = null;\n\n  /** @var {RegExp} codeMinLength Minimum length of password. */\n  LoginFrontend.prototype.codeMinLength = 8;\n\n  /** @var {RegExp} codePattern Regular expression for `username` property. */\n  LoginFrontend.prototype.codePattern = /^[A-Za-z0-9]+$/;\n\n  /** @var {RegExp} userpattern Regular expression for `username` property. */\n  LoginFrontend.prototype.userpattern = /^[A-Za-z][A-Za-z](?:0[1-9]|[12]\\d|3[01])(?:0[1-9]|1[012])\\d$/;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Signs a user in with personal code to gather JWT token.\n   *\n   * @public\n   * @method signin\n   * @return {Void}\n   */\n  LoginFrontend.prototype.signin = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You have successfully signed in!');\n        notification.success(message);\n        $state.go('frontend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth.signin({\n        username: this.username\n      }, 'frontend').then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Signs a user up with personal and workshop code.\n   *\n   * @public\n   * @method signup\n   * @return {Void}\n   */\n  LoginFrontend.prototype.signup = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You have successfully signed up!');\n        notification.success(message);\n        $state.go('frontend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth\n        .signup({\n          username: this.username,\n          password: this.code\n        }, 'frontend').then(\n          successCallback,\n          failureCallback\n        );\n    };\n\n  /**\n   * Persists code in storage and navigates to `step2` of signup.\n   *\n   * @public\n   * @method continue\n   * @return {Void}\n   */\n  LoginFrontend.prototype.next = function()\n    {\n      var CODE_STORAGE_KEY = this.$injector.get('CODE_STORAGE_KEY');\n      var storage = this.$injector.get('storage').getProxy();\n      var $state = this.$injector.get('$state');\n\n      storage.setItem(CODE_STORAGE_KEY, this.code);\n      $state.go('login.frontend.signup.step2', {}, {\n        // note: this is important to avoid usual\n        // redirection by refetching resolve data\n        // of `login.frontend` parent state\n        reload: true\n      });\n    };\n\n  angular.module(module).controller('LoginFrontendController', LoginFrontend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var LoginBackend = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  LoginBackend.$inject = ['$scope', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} username Username for authentication. */\n  LoginBackend.prototype.username = null;\n\n  /** @var {string} workshop Password for authentication. */\n  LoginBackend.prototype.password = null;\n\n  /** @var {RegExp} usernameMinLength Minimum length of username. */\n  LoginBackend.prototype.usernameMinLength = 5;\n\n  /** @var {RegExp} passwordMinLength Minimum length of password. */\n  LoginBackend.prototype.passwordMinLength = 8;\n\n  /** @var {RegExp} passwordMaxLength Maximum length of password. */\n  LoginBackend.prototype.passwordMaxLength = 4096;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Signs an admin in with username and password.\n   *\n   * @public\n   * @method signin\n   * @return {Void}\n   */\n  LoginBackend.prototype.signin = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You are logged in now!');\n        notification.success(message);\n        $state.go('backend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth.signin({\n        username: this.username,\n        password: this.password\n      }, 'backend').then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  angular.module(module).controller('LoginBackendController', LoginBackend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Contact = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  Contact.$inject = ['$scope','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of contact. */\n  Contact.prototype.name = null;\n\n  /** @var {string} email Email of contact. */\n  Contact.prototype.email = null;\n\n  /** @var {string} subject Subject of contact. */\n  Contact.prototype.subject = null;\n\n  /** @var {string} message Message of contact. */\n  Contact.prototype.message = null;\n\n  /** @var {string} messageMinLength Message minmimum length. */\n  Contact.prototype.messageMinLength = 25;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends an email from contact form to admins.\n   *\n   * @public\n   * @method submit\n   * @return {Void}\n   */\n  Contact.prototype.submit = function()\n    {\n      var mail = this.$injector.get('mail');\n      var form = this.$scope.contactForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var me = this;\n\n      var successCallback = function()\n      {\n        me.reset();\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      mail.send({\n        name: this.name,\n        email: this.email,\n        subject: this.subject,\n        message: this.message\n      }).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Resets all form inputs to initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  Contact.prototype.reset = function()\n    {\n      this.name = null;\n      this.email = null;\n      this.subject = null;\n      this.message = null;\n    };\n\n  angular.module(module).controller('ContactController', Contact);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Frontend = function($injector) {\n    this.$injector = $injector;\n\n    this.user = $injector.get('user');\n  };\n\n  Frontend.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} user User service object. */\n  Frontend.prototype.user = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Creates a new result resource from task payload.\n   *\n   * @public\n   * @method createResult\n   * @param {object} payload\n   * @return {Void}\n   */\n  Frontend.prototype.createResult = function(payload)\n  {\n    var Result = this.$injector.get('Result');\n    var user = this.$injector.get('user');\n\n    var successCallback = function(result)\n      {\n        // update user object from response\n        // handling comparisons for `state`,\n        // `tickets` and showing messages\n        user.update(result);\n      };\n\n    var failureCallback = function()\n      {\n        // noop\n      };\n\n    var result = new Result(payload);\n    var promise = result.$create();\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Updates a new result resource from task `result`.\n   *\n   * @public\n   * @method updateResult\n   * @param {object} result\n   * @return {Void}\n   */\n  Frontend.prototype.updateResult = function(payload)\n  {\n    var Result = this.$injector.get('Result');\n    var user = this.$injector.get('user');\n\n    var successCallback = function(result)\n      {\n        // update user object from response\n        // handling comparisons for `state`,\n        // `tickets` and showing messages\n        user.update(result);\n      };\n\n    var failureCallback = function()\n      {\n        // noop\n      };\n\n    var promise = Result.update({ id: payload.id }, payload).$promise;\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @public\n   * @method logout\n   * @return {Void}\n   */\n  Frontend.prototype.logout = function()\n    {\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n\n      var successCallback = function()\n        {\n          $state.go('login.frontend');\n        };\n\n      var failureCallback = function()\n        {\n\n        };\n\n      auth.signout().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Redirects router to state.\n   *\n   * @public\n   * @method goTo\n   * @param {string} state\n   * @return {Void}\n   */\n  Frontend.prototype.goTo = function(state)\n    {\n      var $state = this.$injector.get('$state');\n\n      $state.go(state);\n    };\n\n  angular.module(module).controller('FrontendController', Frontend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Workshop = function($scope, $injector, workshops) {\n    this.workshops = workshops;\n    this.$injector = $injector;\n    this.$scope = $scope;\n\n    this._resultsSource = null;\n    this._userSources = {};\n    this._workshops = {};\n    this._tasks = {};\n\n    this._initWorkshops();\n    this._initListener();\n  };\n\n  Workshop.$inject = ['$scope', '$injector', 'workshops'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of new workshop. */\n  Workshop.prototype.name = null;\n\n  /** @var {string} code Code of new workshop. */\n  Workshop.prototype.code = null;\n\n  /** @var {RegExp} nameMinLength Minimum length of workshop name. */\n  Workshop.prototype.nameMinLength = 8;\n\n  /** @var {RegExp} codeMinLength Minimum length of workshop code. */\n  Workshop.prototype.codeMinLength = 8;\n\n  /** @var {RegExp} userpattern Regular expression for `username` property. */\n  Workshop.prototype.codePattern = /^[A-Za-z0-9]+$/;\n\n  /** @var {object} deleteWorkshop Currently marked workshop for deletion. */\n  Workshop.prototype.deleteWorkshop = null;\n\n  /** @var {object} drawingWorkshop Currently marked workshop for drawing. */\n  Workshop.prototype.drawingWorkshop = null;\n\n  /** @var {array} drawingTickets Randomly picked tickets of drawing. */\n  Workshop.prototype.drawingTickets = null;\n\n  /** @var {array} drawingAmount Amount of chosen tickets for drawing. */\n  Workshop.prototype.drawingAmount = 2;\n\n  /** @var {array} chartResults Currently loaded results for chart. */\n  Workshop.prototype.chartResults = null;\n\n  /** @var {object} chartTask Currently selected task of results. */\n  Workshop.prototype.chartTask = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Toggles `$$expanded` flag on workshop depending on query params.\n   * https://ui-router.github.io/ng1/docs/latest/interfaces/ng1.ng1controller.html#uionparamschanged\n   *\n   * @public\n   * @method uiOnParamsChanged\n   * @param {object} params\n   * @return {void}\n   */\n  Workshop.prototype.uiOnParamsChanged = function(params)\n    {\n      var workshop = this._workshops[params.expand];\n\n      if (workshop) {\n        workshop.$$expanded = true;\n        this._expanded = workshop;\n        return;\n      }\n\n      if (this._expanded) {\n        this._expanded.$$expanded = false;\n        this._expanded = null;\n        return;\n      }\n    };\n\n  /**\n   * Creates a new workshop.\n   *\n   * @public\n   * @method create\n   * @return {void}\n   */\n  Workshop.prototype.create = function()\n    {\n      var notification = this.$injector.get('notification');\n      var Workshop = this.$injector.get('Workshop');\n      var i18n = this.$injector.get('i18n');\n\n      var workshop = new Workshop({\n        name: this.name,\n        code: this.code\n      });\n\n      var me = this;\n\n      var successCallback = function(workshop)\n        {\n          var message = i18n.get('Workshop has been created successfully!');\n          notification.success(message);\n\n          me.workshops.unshift(workshop);\n          me._initWorkshop(workshop);\n\n          me.name = null;\n          me.code = null;\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      workshop.$create().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Deletes a workshop after confirmation.\n   *\n   * @public\n   * @method delete\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.delete = function(workshop)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Workshop has been deleted successfully!');\n          notification.success(message);\n\n          var index = me.workshops.indexOf(workshop);\n          me.workshops.splice(index, 1);\n\n          me._removeUsersStream(workshop);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      workshop.$delete().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Loads task's results and invokes modal dialog.\n   *\n   * @public\n   * @method markWorkshopForDrawing\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.markWorkshopForDrawing = function(workshop)\n    {\n      var Ticket = this.$injector.get('Ticket');\n      var random = this.$injector.get('random');\n\n      var me = this;\n      var successCallback = function(tickets)\n        {\n          me.drawingTickets = random.shuffle(tickets);\n          me.drawingWorkshop = workshop;\n        };\n\n      var failureCallback = function()\n        {\n        };\n\n      var resource = Ticket.getByWorkshop({ workshopId: workshop.id });\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for deleting a workshop.\n   *\n   * @public\n   * @method markWorkshopForDeletion\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.markWorkshopForDeletion = function(workshop)\n    {\n      this.deleteWorkshop = workshop;\n    };\n\n  /**\n   * Toggles `isActive` of a workshop.\n   *\n   * @public\n   * @method toggleActive\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.toggleWorkshop = function(workshop)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function(workshop)\n        {\n          var message = i18n.get(\n            workshop.isActive ?\n              'Workshop has been unlocked successfully. Students can register now!' :\n              'Workshop has been locked successfully. Students can now only use their access from home!'\n          );\n          notification.success(message);\n\n          me._initWorkshop(workshop);\n        };\n\n      var failureCallback = function()\n        {\n          // revert the change on failed update!\n          workshop.isActive = !workshop.isActive;\n        };\n\n      workshop.isActive = !workshop.isActive;\n\n      workshop.$update().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Loads task's results and invokes modal dialog.\n   *\n   * @public\n   * @method markTaskForChart\n   * @param {object} task\n   * @return {void}\n   */\n  Workshop.prototype.markTaskForChart = function(task)\n    {\n      var Result = this.$injector.get('Result');\n\n      var me = this;\n      var successCallback = function(results)\n        {\n          me.chartResults = results;\n          me.chartTask = task;\n        };\n\n      var failureCallback = function()\n        {\n        };\n\n      var resource = Result.getByTask({ taskId: task.id });\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Toggles `isActive` of a task.\n   *\n   * @public\n   * @method toggleTask\n   * @param {object} task\n   * @return {void}\n   */\n  Workshop.prototype.toggleTask = function(task)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n      var Task = this.$injector.get('Task');\n\n      var successCallback = function(/*workshop*/)\n        {\n          var message = i18n.get(\n            task.isActive ?\n              'Task has been unlocked successfully. Students can send results now!' :\n              'Task has been locked successfully. Students cannot send results currently!'\n          );\n          notification.success(message);\n        };\n\n      var failureCallback = function()\n        {\n          // revert the change on failed update!\n          task.isActive = !task.isActive;\n        };\n\n      task.isActive = !task.isActive;\n\n      var resource = Task.update({ id: task.id}, task);\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets `expand` query parameter dependending on\n   * workshop's current `$$expanded` flag info.\n   *\n   * @public\n   * @method expand\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.expand = function(workshop)\n    {\n      var $state = this.$injector.get('$state');\n      var expand = !workshop.$$expanded ?\n        workshop.id : \n        null;\n\n      $state.go('backend.workshops', {\n        expand: expand\n      });\n    };\n\n  /**\n   * Sets up an event source for streaming user count.\n   *\n   * @private\n   * @method _addUsersStream\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._addUsersStream = function(workshop)\n    {\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      var _onMessage = function(data) {\n        me.$scope.$evalAsync(function(){\n          workshop.$$users = data;\n        });\n      };\n\n      var url = API_URL + '/sse/workshop/' + workshop.id + '/users';\n      var options = { onMessage: _onMessage, sleep: 10 };\n      var source = sse.addSource(url, options);\n      this._userSources[workshop.id] = source;\n    };\n\n  /**\n   * Removes an event source from internal stack and service.\n   *\n   * @private\n   * @method _removeUsersStream\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._removeUsersStream = function(workshop)\n    {\n      var sse = this.$injector.get('sse');\n\n      var source = this._userSources[workshop.id];\n      if (!source) {\n        return;\n      }\n\n      delete this._userSources[workshop.id];\n      sse.removeSource(source);\n    };\n\n  /**\n   * Sets up event sources for updating result counters.\n   *\n   * @private\n   * @method _streamResults\n   * @return {void}\n   */\n  Workshop.prototype._streamResults = function()\n    {\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      // --- SSE ---\n      var _onMessage = function(workshop, data) {\n        me.$scope.$evalAsync(function(){\n          // remove event source if workshop is not\n          // active at the moment === one-shot only\n          if (!workshop.isActive) {\n            sse.removeSource(me._resultsSource);\n          }\n\n          angular.forEach(data, function(item){\n            var task = me._tasks[item.id];\n            task.$$results = item.results;\n          });\n        });\n      };\n\n      var _watchExpression = function() {\n        // workshop must be opened, but we also need\n        // to watch `isActive` state to catch toggle\n        // from property to reinitialize event source\n        return me._expanded && me._expanded.isActive;\n      };\n\n      var _watchCallback = function() {\n        if (me._resultsSource) {\n          sse.removeSource(me._resultsSource);\n        }\n\n        if (me._expanded) {\n          var url = API_URL + '/sse/workshop/' + me._expanded.id + '/results';\n          var onMessage = _onMessage.bind(me, me._expanded);\n          var options = { onMessage: onMessage, sleep: 5 };\n          me._resultsSource = sse.addSource(url, options);\n        }\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Maps all workshops to hash maps, sets up streaming and query params.\n   *\n   * @private\n   * @method _initWorkshops\n   * @return {void}\n   */\n  Workshop.prototype._initWorkshops = function()\n    {\n      var $uiRouterGlobals = this.$injector.get('$uiRouterGlobals');\n\n      // create hash maps for workshops and tasks for ease lookups\n      angular.forEach(this.workshops, this._initWorkshop.bind(this));\n\n      // now make the initial call to change handler\n      this.uiOnParamsChanged($uiRouterGlobals.params);\n\n      // kick off general streaming of task results\n      this._streamResults();\n    };\n\n  /**\n   * Adds workshop and tasks to hash map and initializes\n   * streaming for workshop depending on `isActive` flag.\n   *\n   * @private\n   * @method _initWorkshop\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._initWorkshop = function(workshop)\n    {\n      // map all `tasks` to internal hash and set `$$results`\n      var me = this;\n      angular.forEach(workshop.tasks, function(task){\n        var old = me._tasks[task.id] || null;\n        task.$$results = old !== null ?\n          old.$$results\n          : 0;\n\n        me._tasks[task.id] = task;\n      });\n\n      // check `$$expanded` flag for this workshop\n      var id = this._expanded && this._expanded.id;\n      workshop.$$expanded = workshop.id === id;\n\n      // initialize `$$users` and set up streaming\n      workshop.$$users = workshop.users.length;\n\n      if (!workshop.isActive) {\n        this._removeUsersStream(workshop);\n      } else {\n        this._addUsersStream(workshop);\n      }\n\n      this._workshops[workshop.id] = workshop;\n    };\n\n  /**\n   * Removes all watches, listeners and sources\n   * as soon as controller's $scope is destroyed.\n   *\n   * @private\n   * @method _initListener\n   * @return {void}\n   */\n  Workshop.prototype._initListener = function()\n    {\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      var _onDestroy = function() {\n        for (var id in me._userSources) {\n          sse.removeSource(me._userSources[id]);\n        }\n\n        if (me._resultsSource) {\n          sse.removeSource(me._resultsSource);\n        }\n\n        me._resultsSource = null;\n        me._userSources = {};\n\n        me._unlisten();\n        me._unwatch();\n      };\n\n      this._unlisten = this.$scope.$on('$destroy', _onDestroy);\n    };\n\n\n  angular.module(module).controller('WorkshopController', Workshop);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Admin = function($scope, $injector, admins) {\n    this.admins = admins;\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  Admin.$inject = ['$scope', '$injector', 'admins'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of new workshop. */\n  Admin.prototype.username = null;\n\n  /** @var {string} code Code of new workshop. */\n  Admin.prototype.password = null;\n\n  /** @var {RegExp} usernameMinLength Minimum length of workshop name. */\n  Admin.prototype.usernameMinLength = 5;\n\n  /** @var {RegExp} passwordMinLength Minimum length of workshop code. */\n  Admin.prototype.passwordMinLength = 8;\n\n  /** @var {object} editAdmin Currently marked workshop for editing. */\n  Admin.prototype.editAdmin = null;\n\n  /** @var {object} deleteAdmin Currently marked workshop for deletion. */\n  Admin.prototype.deleteAdmin = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Creates a new admin.\n   *\n   * @public\n   * @method create\n   * @return {void}\n   */\n  Admin.prototype.create = function()\n    {\n      var notification = this.$injector.get('notification');\n      var Admin = this.$injector.get('Admin');\n      var i18n = this.$injector.get('i18n');\n\n      var admin = new Admin({\n        username: this.username,\n        password: this.password\n      });\n\n      var me = this;\n\n      var successCallback = function(admin)\n        {\n          var message = i18n.get('Admin has been created successfully!');\n          notification.success(message);\n\n          me.admins.unshift(admin);\n\n          me.username = null;\n          me.password = null;\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$create().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for deleting a admin.\n   *\n   * @public\n   * @method markAdminForDeletion\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.markAdminForDeletion = function(admin)\n    {\n      this.deleteAdmin = admin;\n    };\n\n  /**\n   * Deletes a admin after confirmation.\n   *\n   * @public\n   * @method delete\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.delete = function(admin)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Admin has been deleted successfully!');\n          notification.success(message);\n\n          var index = me.admins.indexOf(admin);\n          me.admins.splice(index, 1);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$delete().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for editing a admin.\n   *\n   * @public\n   * @method markAdminForEdit\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.markAdminForEdit = function(admin)\n    {\n      this.editAdmin = admin;\n    };\n\n  /**\n   * Updates a admin after confirmation.\n   *\n   * @public\n   * @method update\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.update = function(admin)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Password has been successfully updated!');\n          notification.success(message);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$update().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  angular.module(module).controller('AdminController', Admin);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Backend = function($injector, isSuperAdmin) {\n    this.$injector = $injector;\n\n    this.isSuperAdmin = isSuperAdmin;\n  };\n\n  Backend.$inject = ['$injector', 'isSuperAdmin'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isSuperAdmin If user is super admin. */\n  Backend.prototype.isSuperAdmin = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @public\n   * @method logout\n   * @return {Void}\n   */\n  Backend.prototype.logout = function()\n    {\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n\n      var successCallback = function()\n        {\n          $state.go('login.backend');\n        };\n\n      var failureCallback = function()\n        {\n\n        };\n\n      auth.signout().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Redirects router to state.\n   *\n   * @public\n   * @method goTo\n   * @param {string} state\n   * @return {Void}\n   */\n  Backend.prototype.goTo = function(state)\n    {\n      var $state = this.$injector.get('$state');\n\n      $state.go(state);\n    };\n\n  angular.module(module).controller('BackendController', Backend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/workshop/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      validateWorkshopBackend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/workshop/code/:code'\n      },\n      validateUsernameFrontend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/auth/validate/username/:username'\n      },\n      validateWorkshopFrontend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/auth/validate/workshop/:code'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Workshop', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/ticket/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      getByWorkshop: {\n        method: 'GET',\n        isArray: true,\n        url: API_URL + '/ticket/workshop/:workshopId'\n      }\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Ticket', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, $injector, API_URL) {\n    var url = API_URL + '/result/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      getByTask: {\n        method: 'GET',\n        isArray: true,\n        url: API_URL + '/result/task/:taskId'\n      }\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', '$injector', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Result', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/admin/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      validateAdmin: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/admin/username/:username'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Admin', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/task/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Task', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/user/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      current: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/user/current'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('User', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // i18n\n  // --------------------------------------------------\n  angular.module(module).filter('i18n',['i18n',function(i18n){\n    var filter = function()\n      {\n        return i18n.get.apply(i18n, arguments);\n      };\n\n    filter.$stateful = true;\n\n    return filter;\n  }]);\n\n  // --------------------------------------------------\n  // Percentage\n  // --------------------------------------------------\n  angular.module(module).filter('percent', function(){\n    return function(value, fraction) {\n      fraction = isNaN(fraction) ? 0 : fraction;\n      value = isNaN(value) ? 0 : value * 100;\n\n      return value.toFixed(fraction) + '%';\n    };\n  });\n\n  // --------------------------------------------------\n  // Coin\n  // --------------------------------------------------\n  angular.module(module).filter('coin', function(){\n    return function(value) {\n\n      if (value >= 1) {\n        return value + '&#8364;';\n      }\n\n      return (value*100) + '&#162;';\n    };\n  });\n\n  // --------------------------------------------------\n  // Note\n  // --------------------------------------------------\n  angular.module(module).filter('note', function(){\n    return function(value) {\n      return value + '&#8364;';\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* globals UIkit */\n(function() {\n  'use strict';\n\n  UIkit.component('off-canvas-scroll', {\n\n    defaults: {\n      offset: 0,\n      target: '',\n      duration: 1000,\n      transition: 'easeOutExpo'\n    },\n\n    props: {\n      target: String,\n      offset: Number,\n      duration: Number,\n      transition: String\n    },\n\n    computed: {\n        offcanvas: function() {\n          return UIkit.offcanvas(this.target);\n        },\n\n        $offcanvas: function() {\n          return this.offcanvas && this.offcanvas.$el;\n        }\n    },\n\n    init: function() {\n      if (!this.target) {\n        console.error('off-canvas-scroll: Required \"target\" option is not set.');\n        return;\n      }\n\n      if (!this.offcanvas) {\n        console.error('off-canvas-scroll: No offcanvas component found with id: ' + this.target);\n        return;\n      }\n    },\n\n    events: {\n      click: function(event, data) {\n        if (data && data.scroll) {\n          return;\n        }\n\n        this.offcanvas.hide();\n        this.$offcanvas.on('hidden', this._onHidden);\n      }\n    },\n\n    methods: {\n\n      _onHidden: function() {\n        this.$offcanvas.off('hidden', this._onHidden);\n\n        this._dummyScroll = UIkit.scroll(this.$el, {\n          transition: this.transition,\n          duration: this.duration,\n          offset: this.offset\n        });\n\n        this.$el.on('scrolled', this._onScrolled);\n        this.$el.trigger('click', { scroll: true });\n      },\n\n      _onScrolled: function() {\n        this.$el.off('scrolled', this._onScrolled);\n        this._dummyScroll.$destroy();\n      }\n    }\n  });\n\n})();\n"]}