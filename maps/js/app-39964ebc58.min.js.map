{"version":3,"sources":["js/app-39964ebc58.min.js"],"names":["global","angular","module","app","config","$locationProvider","$stateProvider","$urlRouterProvider","$httpProvider","$templateRequestProvider","$resourceProvider","$qProvider","VIEWS_PATH","html5Mode","hashPrefix","interceptors","push","errorOnUnhandledRejections","defaults","actions","get","method","list","isArray","update","create","delete","decorator","state","parent","newViewConfig","views","forEach","view","viewMatch","match","viewName","stateName","name","replace","templateUrl","join","httpOptions","skipAuthorization","url","abstract","resolve","translations","i18n","load","template","current","user","$state","promise","$promise","go","data","role","navbar@frontend","home@frontend","topics@frontend","financial-knowledge@frontend","financial-knowledge/interest-task@frontend","financial-knowledge/diversification-task@frontend","consumer-behaviour@frontend","consumer-behaviour/bomb-task@frontend","consumer-behaviour/anchoring-task@frontend","consumer-behaviour/mental-bookkeeping-task@frontend","consumer-behaviour/framing-task@frontend","self-control@frontend","self-control/savings-target-task@frontend","self-control/savings-supported-task@frontend","self-control/self-commitment-task@frontend","self-control/procrastination-task@frontend","status@frontend","contact@frontend","controller","controllerAs","footer@frontend","offcanvas@","@","isSuperAdmin","auth","$q","defer","successCallback","failureCallback","hasRole","then","redirectTo","main@backend","navbar@backend","footer@backend","workshops","Workshop","params","expand","value","dynamic","redirects","ROLE_ADMIN","admins","Admin","code","CODE_STORAGE_KEY","storage","proxy","getProxy","getItem","ROLE_USER","transition","$injector","injector","getAsync","resolvePolicy","when","ROLE_SUPER_ADMIN","otherwise","run","$transitions","$rootScope","appState","onStart","routerBusy","to","getUser","roles","indexOf","target","onError","onSuccess","$watch","isBusy","httpBusy","ANGULAR_MODULE","window","HttpInterceptor","this","_urls","$inject","prototype","getLastSuccessResponse","_lastSuccessResponse","getLastErrorResponse","_lastErrorResponse","getLastResponse","_lastResponse","getUrls","request","_setUrl","headers","token","Authorization","jwtToken","_getJWTToken","requestError","rejection","reject","response","_setLastSuccessResponse","_setLastResponse","responseError","_showGlobalErrorMessage","_setLastErrorResponse","$httpParamSerializer","responseOrRejection","notification","skipGlobalErrorMessage","message","error","jwt","getToken","isExpired","refresh","factory","httpInterceptor","instantiate","Notification","notify","status","options","UIkit","success","primary","warning","closeAll","service","AppState","routeBusy","Animation","animationEndEvent","dummy","document","createElement","events","WebkitAnimation","MozTAnimation","animation","key","event","style","undefined","transitionEndEvent","OTransition","MozTransition","WebkitTransition","translate","x","y","z","string","isUndefined","sprintf","webkitTransform","mozTransform","msTransform","oTransform","transform","requestAnimationFrame","lastTime","vendors","i","length","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","Math","max","timeout","id","setTimeout","bind","clearTimeout","Random","_spareRandomCache","between","min","fact","rand","random","floor","gaussian","mean","stdDev","spare","u","v","s","m","sqrt","log","pick","array","shuffle","temp","String","input","variables","slice","call","arguments","truncate","maxLength","substring","trim","toCamel","part","toUpperCase","toSpinal","toLowerCase","toSnake","Storage","MODE_COOKIES","MODE_STORAGE","mode","_getCookieProxy","_getLocalStorageProxy","supportsLocalStorage","$window","storageProxy","localStorage","val","setItem","removeItem","e","_encode","JSON","stringify","encodeURIComponent","_decode","decoded","decodeURIComponent","parse","documentProxy","me","_getAll","items","cookies","cookie","split","setCookie","expires","domain","path","secure","date","isNaN","Error","toUTCString","getCookie","hasOwnProperty","getAllCookies","removeCookie","removeAllCookies","getAllItems","removeAllItems","clear","Auth","signup","firewall","$http","_saveToken","_getSignupUrl","post","_username","username","_password","password","extend","signin","_getSigninUrl","signout","unload","_getSignoutUrl","invalidate","_getRefereshUrl","refresh_token","getRefreshToken","acceptExpired","decode","resolveRole","isString","setRefreshToken","setToken","API_URL","I18N","setLocale","_detectLocale","locales","de","defaultLocale","locale","getLocale","$log","_getJSONUrl","text","language","navigator","android","userAgent","userLanguage","systemLanguage","browserLanguage","substr","JWT","tokenKey","refreshKey","removeRefreshToken","removeToken","refreshToken","getExpirationDate","exp","setUTCSeconds","offset","now","valueOf","parts","_base64Decode","fromJson","output","atob","escaped","escape","User","_states","_eventSource","_results","_payload","_pending","_tasks","group","tickets","toJSON","_initTickets","_initState","_initGroup","isUser","_initWatches","_initTasks","_initPending","_initResults","_initSSE","sse","removeSource","_unwatchTickets","_unwatchState","result","_addResult","isAdmin","isInWorkshop","workshop","isActive","getTasks","getTaskByType","type","getPendingByType","getGroupAsString","getStateAsString","STATE_BEGINNER","_watchStateExpression","_watchStateCallback","newState","oldState","_watchTicketsExpression","_watchTicketsCallback","newTickets","oldTickets","oldCount","newCount","$watchCollection","_onMessage","$evalAsync","item","unix","updatedAt","task","onMessage","sleep","addSource","tasks","pending","results","$$results","Mail","send","_getPostUrl","_name","_mail","email","_subject","subject","_message","SSE","_sources","retry","_buildUrl","source","EventSource","onmessage","onerror","close","CardContainer","cards","canToggle","add","card","set","selected","directive","scope","restrict","bindToController","Card","$scope","$element","$attrs","$transclude","$id","hasIcon","isSlotFilled","disabled","isCheckbox","$onInit","cardContainer","click","$event","stopPropagation","preventDefault","changed","onClick","transclude","title","icon","buttons","require","Chart","_chart","_getOptions","labels","_getLabels","series","_getData","_render","$onDestroy","detach","mapResults","GROUP_A","GROUP_B","map","choice1","choice2","count","json","choice","groupA","groupB","SPLIT","ALL","failure","all","seriesBarDistance","chartPadding","top","left","right","bottom","axisY","labelInterpolationFnc","ticks","Chartist","FixedScaleAxis","high","low","plugins","legend","legendNames","$timeout","addClass","element","render","Bar","Modal","_element","_modal","_scope","isVisible","_onShow","onShow","_onShown","onShown","_onBeforeShow","onBeforeShow","_onHide","onHide","_onHidden","onHidden","_onBeforeHide","onBeforeHide","_unwatch","destroy","clone","on","append","modal","show","off","remove","$destroy","hide","Video","_player","find","_onReady","_onStateChange","width","height","videoId","_watchAPIExpression","YOUTUBE_API_LOADED","_watchAPICallback","isReady","_unwatchAPI","getStyle","padding-bottom","YT","Player","onStateChange","PlayerState","PLAYING","onPlaying","PAUSED","onPaused","ENDED","onEnded","CUED","onCued","onBuffering","Status","iconRatio","isCompact","iconColor","tasksVisible","ticketsVisible","_watchTasksExpression","_watchTasksCallback","_unwatchTasks","toggleTasks","toggleTickets","StatusIcons","ratio","color","isBeginner","isAmateuer","isAdvanced","isExpert","isProfi","STATE_AMATEUR","STATE_ADVANCED","STATE_EXPERT","_watchExpression","_watchCallback","isAmateur","StatusLabel","StatusTickets","Tabber","domId","hasExercise","activeTab","setActive","tab","exercise","description","Draggable","_body","_clone","_coordinates","_interactable","_activeClass","_itemClass","_disabledClass","removeClass","draggable","enabled","_onResize","restriction","body","interact","inertia","autoScroll","onend","_onEndItem","onmove","_onMoveItem","onstart","_onStartItem","snap","targets","interaction","_origin","startCoords","page","dropTarget","endOnly","manualStart","_onMove","getData","_window","_resize","unset","_trigger","$data","dx","dy","_translate","dropped","interactable","currentTarget","pointerIsDown","interacting","offsetY","clientHeight","offsetX","clientWidth","pageY","touches","pageX","css","position","start","args","onDragStart","onDragMove","onDragEnd","onDrop","Dropable","_enterClass","_acceptClass","accept","dropzone","ondrop","_onDrop","ondragenter","_onDragEnter","ondragleave","_onDragLeave","ondropactivate","_onDropActivate","ondropdeactivate","_onDropDeactivate","onDropDeactivate","onDropActivate","onDragEnter","onDragLeave","Accordion","_accordion","_collapsibles","_init","_onCollapsibleClicked","_unlistenCollapsible","addCollapsible","collapsible","$on","accordion","evt","sender","iterate","index","senderId","itemId","open","toggle","Collapsible","$broadcast","content","ScrollTo","_source","_target","_scroller","_onClick","_onScrolled","delay","jQuery","charAt","console","warn","href","easing","isNumber","duration","scroll","onDelay","scrollTo","isFunction","Evaluation","customButtons","defaultButtons","LockedState","isLocked","userText","adminText","FormField","_transcludeElements","_transcludeScopes","_cloneDefault","_cloneLabel","_unlisten","label","ngModel","resetEmpty","showMessages","labelClass","failureClass","successClass","_addWatches","_transclude","unlisten","unwatch","setModel","_update","$valid","$invalid","_reset","$setUntouched","unwatchModel","newModel","oldModel","$touched","$pending","$viewValue","transcludeDefault","attr","replaceWith","transcludeLabel","messageMin","messageMax","messageUrl","messageEmail","messageNumber","messagePattern","messageRequired","messageMinlength","messageMaxlength","messagesCustom","FormFieldModel","autoFocus","formField","focus","ValidatorWorkshopExists","keyLocked","$asyncValidators","validatorWorkshopExists","validate","modelValue","$setValidity","validateWorkshopFrontend","ValidatorWorkshopUnique","validatorWorkshopUnique","validateWorkshopBackend","ValidatorAdminUnique","validatorAdminUnique","validateAdmin","InterestTask","resolved","currentExercise","correctAnswers","exercise1Answer","exercise2Answer","exercise1Correct","exercise2Correct","exercise1Result","exercise2Result","amount","rate","years","init","getPayload","payload","exercise1","currentResult","actualResult","isValid","exercise2","isPending","_isPending","canResolve","_calculateResult","_setCorrectAnswers","reset","onResolve","onUpdate","setResult","pow","InterestTaskExercise","stack","sum","notes","coins","revert","pop","DiversificationTask","$elemnt","heads","tails","companies","sides","one","company","two","throws","toss","ticketCount","getTicketCount","image","ticket","action","factorA","factorB","ticketsA","ticketsB","DiversificationTaskCoin","flip","animate","back","front","startSide","startValue","class","_toss","_getToss","_timeoutCallback","_iterateSides","side","_watchFlipCallback","newFlip","_watchFlipExpression","_watchTossCallback","newToss","oldToss","_watchTossExpression","_evalAsyncCallback","onFinish","_animationEndCallback","onInit","_unwatchFlip","_unwatchToss","$filter","picked","filtered","BombTask","started","stopped","hasBomb","totalBoxes","remainingBoxes","collectedBoxes","avg","rows","cols","interval","_initMembers","_initMatrix","_initBomb","$interval","_intIndex","iterator","_intervalId","stop","cancel","resolveCard","$$resolved","collection","column","active","$$active","splice","isBomb","total","collected","trackId","row","col","equals","bomb","matrix","columns","j","BombTaskCard","model","isDisabled","isClickable","onToggle","AnchoringTask","MentalBookkeepingTask","FramingTask","lotteryA","lotteryB","lottery","SavingsTargetTask","_flag","_storageKey","step","wish","amountRepeated","form","minAmount","maxAmount","getDifference","SelfCommitmentTask","videos","ImPxD_FDpKM","gUYjYEGbxEY","canWatch","ProcrastinationTask","_onInterval","rounds","openRounds","minCatched","maxEscaped","invalidAt","hasWarmup","warmupMaxEscaped","warmupMinCatched","hasSuccess","setWarmup","setMode","setState","moment","warmup","isInvalid","_now","getCurrentRound","getRemainingTime","keys","difference","diff","seconds","asSeconds","minutes","asMinutes","hours","asHours","days","asDays","unit","ProcrastinationTaskGame","bubbles","viewport","_nextId","_tapped","_rounds","_retries","_timeout","_requestId","_loop","_viewport","catched","accuracy","expired","maxRounds","maxRetries","Number","POSITIVE_INFINITY","bubbleDelay","expire","_unloop","_getViewport","quit","_getResult","onGameOver","done","onGameDone","_setAccuracy","canRetry","canRestart","addBubble","bubble","removeBubble","resize","scrollTop","scrollLeft","ProcrastinationTaskBubble","themes","theme","radius","speed","wave","game","gameController","xOffset","_originalR","_originalX","sin","offscreenY","move","_resizeId","evalAsync","onAnimationEnd","LoginFrontend","codeMinLength","codePattern","userpattern","loginForm","next","reload","LoginBackend","usernameMinLength","passwordMinLength","passwordMaxLength","Contact","messageMinLength","submit","mail","contactForm","Frontend","createResult","Result","$create","updateResult","logout","goTo","_resultsSource","_userSources","_workshops","_initWorkshops","_initListener","nameMinLength","deleteWorkshop","drawingWorkshop","drawingTickets","drawingAmount","chartResults","chartTask","uiOnParamsChanged","_expanded","$$expanded","unshift","_initWorkshop","_removeUsersStream","$delete","markWorkshopForDrawing","Ticket","resource","getByWorkshop","workshopId","markWorkshopForDeletion","toggleWorkshop","$update","markTaskForChart","getByTask","taskId","toggleTask","Task","_addUsersStream","$$users","_streamResults","$uiRouterGlobals","old","users","_onDestroy","editAdmin","deleteAdmin","admin","markAdminForDeletion","markAdminForEdit","Backend","Factory","$resource","paramDefaults","validateUsernameFrontend","filter","apply","$stateful","fraction","toFixed","component","props","computed","offcanvas","$offcanvas","$el","methods","_dummyScroll","trigger"],"mappings":"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","file":"../../js/app-39964ebc58.min.js","sourcesContent":["/*!\n * efit-frontend\n * eFit Frontend\n * http://www.finanz-training.at\n * @author Armin Pfurtscheller\n * @version 1.0.0\n * Copyright 2017. MIT licensed.\n */\n/* global angular, FastClick */\n(function(global, angular){\n  'use strict';\n\n  //\n  // MODULE\n  //\n  var module = 'eFit';\n\n  //\n  // APP\n  //\n  var app = angular.module(module, [\n    'ngSanitize',\n    'ngMessages',\n    'ngResource',\n    'ui.router',\n    'eFit.views',\n    'eFit.config'\n  ]);\n\n  //\n  // CONSTANTS\n  //\n\n  // @see: config.js\n\n  //\n  // CONFIG\n  //\n  app.config([\n    '$locationProvider', '$stateProvider', '$urlRouterProvider', '$httpProvider',\n    '$templateRequestProvider', '$resourceProvider', '$qProvider', 'VIEWS_PATH',\n    function(\n      $locationProvider, $stateProvider, $urlRouterProvider, $httpProvider,\n      $templateRequestProvider, $resourceProvider, $qProvider, VIEWS_PATH) {\n\n      // -------------------------\n      // LOCATION\n      // -------------------------\n      $locationProvider.html5Mode(false);\n      $locationProvider.hashPrefix('!');\n\n      // -------------------------\n      // INTERCEPTORS\n      // -------------------------\n      $httpProvider.interceptors.push('httpInterceptor');\n\n      // -------------------------\n      // PROMISES\n      // -------------------------\n      $qProvider.errorOnUnhandledRejections(false);\n\n      // -------------------------\n      // RESOURCES\n      // -------------------------\n      $resourceProvider.defaults.actions = {\n        get:    { method: 'GET' },\n        list:   { method: 'GET', isArray:true },\n        update: { method: 'PATCH' },\n        create: { method: 'POST'},\n        delete: { method: 'DELETE'}\n      };\n\n      // -------------------------\n      // TEMPLATES\n      // -------------------------\n\n      // assign default `templateUrl` for states\n      $stateProvider.decorator('views', function(state, parent) {\n        //\n        // Assigns default template URL:\n        // ./path/to/state/[view/][/name].html\n        //\n        var newViewConfig = {}, views = parent(state);\n        angular.forEach(views, function(config, view){\n          var viewMatch = view.match(/([^@]+)\\@/); // [parentView/]view@state.name\n          var viewName = viewMatch ? '/' + viewMatch[1] : '';\n\n          var stateName = state.name.replace(/\\./g, '/');\n\n          var templateUrl = config.templateUrl || [\n            VIEWS_PATH,\n            stateName,\n            viewName,\n            '.html'\n          ].join('');\n\n          config.templateUrl = templateUrl;\n          newViewConfig[view] = config;\n        });\n\n        return newViewConfig;\n      });\n\n      // ignore JWT authorization on template requests\n      $templateRequestProvider.httpOptions({\n        skipAuthorization: true\n      });\n\n      // -------------------------\n      // STATES\n      // -------------------------\n\n      // main (i18n)\n      $stateProvider.state('main', {\n        url: '',\n        abstract: true,\n        resolve: {\n          translations: ['i18n', function(i18n){\n            return i18n.load('de', {\n              skipAuthorization: true\n            });\n          }],\n        },\n        template: '<div id=\"main\" data-ui-view=\"\"></div>'\n      });\n\n      // frontend\n      $stateProvider.state('frontend', {\n        parent: 'main',\n        url: '/',\n        resolve: {\n          current: [\n            'user', '$state', '$q',\n            function(user, $state){\n              var promise = user.load().$promise;\n              return promise.catch(function(){\n                $state.go('login.frontend');\n              });\n            }\n          ]\n        },\n        data: {\n          role: [\n            'ROLE_USER',\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        views: {\n          'navbar@frontend': {},\n          'home@frontend': {},\n          'topics@frontend': {},\n\n          'financial-knowledge@frontend':{},\n          'financial-knowledge/interest-task@frontend':{},\n          'financial-knowledge/diversification-task@frontend':{},\n\n          'consumer-behaviour@frontend':{},\n          'consumer-behaviour/bomb-task@frontend':{},\n          'consumer-behaviour/anchoring-task@frontend':{},\n          'consumer-behaviour/mental-bookkeeping-task@frontend':{},\n          'consumer-behaviour/framing-task@frontend':{},\n\n          'self-control@frontend':{},\n          'self-control/savings-target-task@frontend':{},\n          'self-control/savings-supported-task@frontend':{},\n          'self-control/self-commitment-task@frontend':{},\n          'self-control/procrastination-task@frontend':{},\n\n          'status@frontend': {},\n          'contact@frontend': {\n            controller: 'ContactController',\n            controllerAs: 'contactController'\n          },\n          'footer@frontend': {},\n          'offcanvas@': {\n            controller: 'FrontendController',\n            controllerAs: 'frontendController'\n          },\n          '@': {\n            controller: 'FrontendController',\n            controllerAs: 'frontendController'\n          }\n        }\n      });\n\n      // backend\n      $stateProvider.state('backend', {\n        parent: 'main',\n        url: '/admin',\n        data: {\n          role: [\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        resolve: {\n          isSuperAdmin: [\n            'auth', '$state', '$q',\n            function(auth, $state, $q){\n              var defer = $q.defer();\n\n              var successCallback = function() {\n                defer.resolve(true);\n              };\n              var failureCallback = function() {\n                defer.resolve(false);\n              };\n\n              auth.hasRole(\n                'ROLE_SUPER_ADMIN'\n              ).then(\n                successCallback,\n                failureCallback\n              );\n\n              return defer.promise;\n            }\n          ]\n        },\n        redirectTo: 'backend.workshops',\n        views: {\n          'main@backend': {},\n          'navbar@backend': {},\n          'footer@backend': {},\n          'offcanvas@': {\n            controller: 'BackendController',\n            controllerAs: 'backendController'\n          },\n          '@': {\n            controller: 'BackendController',\n            controllerAs: 'backendController'\n          }\n        },\n\n      });\n\n      $stateProvider.state('backend.workshops', {\n        url: '?{expand:int}',\n        data: {\n          role: [\n            'ROLE_ADMIN',\n            'ROLE_SUPER_ADMIN'\n          ]\n        },\n        resolve: {\n          workshops: ['Workshop', function(Workshop){\n            return Workshop.list().$promise;\n          }]\n        },\n        params: {\n          expand: {\n            value: null,\n            dynamic: true\n          }\n        },\n        controller: 'WorkshopController',\n        controllerAs: 'workshopController'\n      });\n\n      $stateProvider.state('backend.admins', {\n        url: '/trainer',\n        data: {\n          role: 'ROLE_SUPER_ADMIN',\n          redirects: {\n            ROLE_ADMIN: 'backend'\n          }\n        },\n        resolve: {\n          admins: ['Admin', function(Admin){\n            return Admin.list().$promise;\n          }]\n        },\n        controller: 'AdminController',\n        controllerAs: 'adminController'\n      });\n\n      // login\n      $stateProvider.state('login', {\n        url: '/login',\n        parent: 'main',\n        abstract: true,\n        redirectTo: 'login.frontend.index'\n      });\n\n      $stateProvider.state('login.frontend', {\n        url: '/app',\n        resolve: {\n          code: [\n            'CODE_STORAGE_KEY', 'storage',\n            function(CODE_STORAGE_KEY, storage){\n              var proxy = storage.getProxy();\n              return proxy.getItem(\n                CODE_STORAGE_KEY\n              );\n            }\n          ]\n        },\n        data: {\n          redirects: {\n            ROLE_USER: 'frontend'\n          }\n        },\n        redirectTo: 'login.frontend.index',\n        controller: 'LoginFrontendController',\n        controllerAs: 'loginFrontendController'\n      });\n\n      $stateProvider.state('login.frontend.index', {\n        url: ''\n      });\n\n      $stateProvider.state('login.frontend.signup', {\n        url: '/schule',\n        redirectTo: 'login.frontend.signup.step1'\n      });\n\n      $stateProvider.state('login.frontend.signup.step1', {\n        url: '/schritt-1',\n        redirectTo: function(transition){\n          var redirectTo = function(code) {\n            if (code) {\n              return 'login.frontend.signup.step2';\n            }\n          };\n\n          var $injector = transition.injector();\n          var code = $injector.getAsync('code');\n          return code.then(redirectTo);\n        }\n      });\n\n      $stateProvider.state('login.frontend.signup.step2', {\n        url: '/schritt-2',\n        resolvePolicy: { when: 'EAGER' },\n        redirectTo: function(transition){\n          var redirectTo = function(code) {\n            if (!code) {\n              return 'login.frontend.signup.step1';\n            }\n          };\n\n          var $injector = transition.injector();\n          var code = $injector.getAsync('code');\n          return code.then(redirectTo);\n        }\n      });\n\n      $stateProvider.state('login.frontend.signin', {\n        url: '/zuhause'\n      });\n\n      $stateProvider.state('login.backend', {\n        url: '/admin',\n        data: {\n          redirects: {\n            ROLE_ADMIN: 'backend',\n            ROLE_SUPER_ADMIN: 'backend'\n          }\n        },\n        controller: 'LoginBackendController',\n        controllerAs: 'loginBackendController'\n      });\n\n      $urlRouterProvider.otherwise('/');\n    }\n  ]);\n\n  //\n  // RUN\n  //\n  app.run(['$injector', function($injector) {\n      var $transitions = $injector.get('$transitions');\n      var $rootScope = $injector.get('$rootScope');\n      var appState = $injector.get('appState');\n      var $state = $injector.get('$state');\n      var auth = $injector.get('auth');\n\n      var onStart = function(transition) {\n        appState.routerBusy = true;\n\n        var state = transition.to();\n        var data = state.data || {};\n        var role = data.role || null;\n        var redirects = data.redirects || {};\n\n        // no authentication check for states\n        // without any authorization settings\n        if (role === null) {\n\n          // try to redirect authenticated users\n          // with auth roles to configured route\n          var user = auth.getUser();\n          if (user === null) {\n            return true;\n          }\n\n          var roles = user.roles || [];\n          for (role in redirects) {\n            if (roles.indexOf(role)>=0) {\n              var target = redirects[role];\n              return $state.target(target);\n            }\n          }\n\n          return true;\n        }\n\n        // assert role an array for callbacks\n        if (!angular.isArray(role)) {\n          role = [role];\n        }\n\n        var successCallback = function()\n          {\n            return true;\n          };\n\n        var failureCallback = function()\n          {\n            // redirect to login page depending on\n            // given role with unsufficient rights\n            // or possibly failed refresh process!\n            switch(role[0])\n            {\n              case 'ROLE_ADMIN':\n              case 'ROLE_SUPER_ADMIN':\n                return $state.target('login.backend');\n              default:\n                return $state.target('login.frontend');\n            }\n          };\n\n        return auth.hasRole(role).then(\n          successCallback,\n          failureCallback\n        );\n      };\n\n      var onError = function(/*transition*/) {\n        appState.routerBusy = false;\n      };\n\n      var onSuccess = function(transition) {\n        $rootScope.state = transition.to();\n        appState.routerBusy = false;\n      };\n\n      $rootScope.$watch(\n        function() {\n          return appState.isBusy();\n        },\n        function(isBusy) {\n          $rootScope.isBusy = isBusy;\n          $rootScope.httpBusy = appState.httpBusy;\n          $rootScope.routerBusy = appState.routerBusy;\n        }\n      );\n\n      $transitions.onError({}, onError);\n      $transitions.onStart({}, onStart);\n      $transitions.onSuccess({}, onSuccess);\n    }\n  ]);\n\n  //\n  // EXPOSE\n  //\n  global.ANGULAR_MODULE = module;\n\n})(window, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  var HttpInterceptor = function($injector)\n    {\n      this.$injector = $injector;\n      this._urls = {};\n    };\n\n  /** @var {Array.<string>} $inject Dependencies to be injected by Angular. */\n  HttpInterceptor.$inject = ['$injector'];\n\n  /**\n   * Gets latest response from $http.\n   */\n  HttpInterceptor.prototype.getLastSuccessResponse = function()\n    {\n      return this._lastSuccessResponse;\n    };\n\n  /**\n   * Gets latest error from $http.\n   */\n  HttpInterceptor.prototype.getLastErrorResponse = function()\n    {\n      return this._lastErrorResponse;\n    };\n\n  /**\n   * Gets latest response from $http.\n   */\n  HttpInterceptor.prototype.getLastResponse = function()\n    {\n      return this._lastResponse;\n    };\n\n  /**\n   * Returns a hash of all requested urls.\n   */\n  HttpInterceptor.prototype.getUrls = function()\n    {\n      return this._urls;\n    };\n\n  /**\n   * Intercepts $http request's config before invocation.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.request = function(config)\n    {\n      var appState = this.$injector.get('appState');\n\n      // set app state to busy\n      appState.httpBusy = true;\n\n      // save url in internal cache\n      this._setUrl(config);\n\n      // set common headers\n      config.headers['X-Requested-With'] = 'XMLHttpRequest';\n\n      // JWT authorization\n      var successCallback = function(token) {\n        if (token) {\n          config.headers.Authorization = 'Bearer ' + token;\n        }\n\n        return config;\n      };\n\n      var failureCallback = function() {\n        return config;\n      };\n\n      if (config.skipAuthorization) {\n        return config;\n      }\n\n      var jwtToken = this._getJWTToken(config);\n      var $q = this.$injector.get('$q');\n      return $q.when(jwtToken).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Intercepts $http request error's config before invocation.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.requestError = function(rejection)\n    {\n      var appState = this.$injector.get('appState');\n      var $q = this.$injector.get('$q');\n\n      appState.httpBusy = false;\n\n      return $q.reject(rejection);\n    };\n\n  /**\n   * Intercepts $http response before forwarding.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.response = function(response)\n    {\n      var appState = this.$injector.get('appState');\n\n      this._setLastSuccessResponse(response);\n      this._setLastResponse(response);\n\n      appState.httpBusy = false;\n\n      return response;\n    };\n\n  /**\n   * Intercepts $http error response before forwarding.\n   * @param {object} config\n   * @return {object} config\n   */\n  HttpInterceptor.prototype.responseError = function(rejection)\n    {\n      var appState = this.$injector.get('appState');\n      var $q = this.$injector.get('$q');\n\n      this._showGlobalErrorMessage(rejection);\n      this._setLastErrorResponse(rejection);\n      this._setLastResponse(rejection);\n\n      appState.httpBusy = false;\n\n      return $q.reject(rejection);\n    };\n\n  /**\n   * Sets fully qualified url with query string for a request.\n   * This is useful to manage Angular's $cacheFactory for $http.\n   * @param {object} config\n   */\n  HttpInterceptor.prototype._setUrl = function(config)\n    {\n      var $httpParamSerializer = this.$injector.get('$httpParamSerializer');\n      var params = $httpParamSerializer(config.params);\n      var url = config.url + (\n        params ?\n          '?' + params :\n          ''\n      );\n\n      this._urls[url] = true;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastResponse = function(responseOrRejection)\n    {\n      this._lastResponse = responseOrRejection;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastErrorResponse = function(rejection)\n    {\n      this._lastErrorResponse = rejection;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._setLastSuccessResponse = function(response)\n    {\n      this._lastSuccessResponse = response;\n    };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._showGlobalErrorMessage = function(rejection)\n  {\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n\n    var config = rejection.config || {};\n    if (config.skipGlobalErrorMessage) {\n      return;\n    }\n\n    var data = rejection.data || {};\n    if (!data.message) {\n      return;\n    }\n\n    notification.error(i18n.get(data.message));\n  };\n\n  /**\n   * @ignore\n   */\n  HttpInterceptor.prototype._getJWTToken = function() {\n    var auth = this.$injector.get('auth');\n    var jwt = this.$injector.get('jwt');\n\n    // a) no token available in storage\n    var token = jwt.getToken();\n    if (!token) {\n      return null;\n    }\n\n    // b) token is still valid, check for\n    // refresh if it expires in 5 minutes\n    if (jwt.isExpired(token, 600)) {\n      var successCallback = function() {\n        return jwt.getToken();\n      };\n\n      var failureCallback = function() {\n        return null;\n      };\n\n      return auth.refresh().then(\n        successCallback,\n        failureCallback\n      );\n    }\n\n    // c) use current token\n    return jwt.getToken();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('httpInterceptor',['$injector',function($injector){\n\n      var httpInterceptor = $injector.instantiate(HttpInterceptor);\n\n      return { // important: $http service invokes this methods with global scope!\n        getUrls: function(){ return httpInterceptor.getUrls(); },\n        getLastResponse: function(){ return httpInterceptor.getLastResponse(); },\n        getLastErrorResponse: function(){ return httpInterceptor.getLastErrorResponse(); },\n        getLastSuccessResponse: function(){ return httpInterceptor.getLastSuccessResponse(); },\n        request: function(config){ return httpInterceptor.request(config); },\n        response: function(response){ return httpInterceptor.response(response); },\n        requestError: function(rejection){ return httpInterceptor.responseError(rejection); },\n        responseError: function(rejection){ return httpInterceptor.responseError(rejection); }\n      };\n    }]);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Notification = function() {\n  };\n\n  Notification.$inject = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Shows user notification in a toast message.\n   *\n   * @public\n   * @method notify\n   * @param {string} message\n   * @param {string} status One of `danger`, `warning`, `success` or `primary`.\n   * @param {object} options Additional options like `timeout` and `pos`.\n   * @return {object} Notification object\n   */\n  Notification.prototype.notify = function(message, status, options) {\n    status = status || 'default';\n    options = options || {};\n\n    options.message = message;\n    options.status = status;\n\n    return UIkit.notification(options);\n  };\n\n  /**\n   * Shows user success notification.\n   *\n   * @public\n   * @method success\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.success = function(message, options) {\n    this.notify(message, 'success', options);\n  };\n\n  /**\n   * Shows user primary notification.\n   *\n   * @public\n   * @method success\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.primary = function(message, options) {\n    this.notify(message, 'primary', options);\n  };\n\n  /**\n   * Shows user error notification.\n   *\n   * @public\n   * @method error\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.error = function(message, options) {\n    this.notify(message, 'danger', options);\n  };\n\n  /**\n   * Shows user warning notification.\n   *\n   * @public\n   * @method warning\n   * @param {string} message\n   * @return {void}\n   */\n  Notification.prototype.warning = function(message, options) {\n    this.notify(message, 'warning', options);\n  };\n\n  /**\n   * Closes all open notifications.\n   *\n   * @public\n   * @method closeAll\n   * @return {void}\n   */\n  Notification.prototype.closeAll = function() {\n    UIkit.notification.closeAll();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('notification', Notification);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var AppState = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  AppState.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} httpBusy If $http is currently doing work. */\n  AppState.prototype.httpBusy = false;\n\n  /** @var {boolean} routerBusy If router is currently doing work. */\n  AppState.prototype.routerBusy = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Returns true if `httpBusy` or `routeBusy` is true.\n   *\n   * @public\n   * @method isBusy\n   * @return {void}\n   */\n  AppState.prototype.isBusy = function() {\n    return this.httpBusy || this.routeBusy;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('appState', AppState);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Animation = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  Animation.$inject = ['$injector'];\n\n  /**\n   * Gets correctly prefixed animation end event.\n   *\n   * @private\n   * @property animationEndEvent\n   * @return {void}\n   */\n  Animation.prototype.animationEndEvent = (function() {\n    var dummy = document.createElement('div');\n    var events = {\n      'WebkitAnimation': 'webkitAnimationEnd',\n      'MozTAnimation': 'animationend',\n      'animation': 'animationend'\n    };\n\n    for(var key in events){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return events[key];\n        }\n    }\n\n    return null;\n  })();\n\n  /**\n   * Gets correctly prefixed transition end event.\n   *\n   * @private\n   * @property transitionEndEvent\n   * @return {void}\n   */\n  Animation.prototype.transitionEndEvent = (function() {\n    var dummy = document.createElement('div');\n    var events = {\n      'transition':'transitionend',\n      'OTransition':'oTransitionEnd',\n      'MozTransition':'transitionend',\n      'WebkitTransition':'webkitTransitionEnd'\n    };\n\n    for(var key in events){\n        var event = dummy.style[key];\n        if( event !== undefined ){\n          return events[key];\n        }\n    }\n\n    return null;\n  })();\n\n  /**\n   * Prepares cross-browser compatible tranlsate hash for ng-style.\n   *\n   * @public\n   * @method translate\n   * @param {number} x\n   * @param {number} y\n   * @param {number} [z]\n   * @return {object}\n   */\n  Animation.prototype.translate = function(x, y, z) {\n    var string = this.$injector.get('string');\n\n    var translate = angular.isUndefined(z) ?\n      string.sprintf('translate(%spx,%spx)', x, y) :\n      string.sprintf('translate3d(%spx,%spx,%spx)', x, y, z);\n\n    return {\n      'webkitTransform': translate,\n      'mozTransform': translate,\n      'msTransform': translate,\n      'oTransform': translate,\n      'transform': translate\n    };\n  };\n\n  /**\n   * Polyfills potentially missing `requestAnimationFrame`.\n   *\n   * @private\n   * @method requestAnimationFrame\n   * @return {void}\n   */\n  Animation.prototype.requestAnimationFrame = (function(){\n      var lastTime = 0;\n      var vendors = ['ms', 'moz', 'webkit', 'o'];\n      for(var i = 0; i < vendors.length && !window.requestAnimationFrame; i++) {\n          window.requestAnimationFrame = window[vendors[i]+'RequestAnimationFrame'];\n          window.cancelAnimationFrame = (\n            window[vendors[i]+'CancelAnimationFrame'] ||\n            window[vendors[i]+'CancelRequestAnimationFrame']\n          );\n      }\n\n      if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function(callback) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var timeout = function() { callback(currTime + timeToCall); };\n            var id = window.setTimeout(timeout, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n      }\n\n      return window.requestAnimationFrame.bind(window);\n  }());\n\n  /**\n   * Polyfills potentially missing `cancelAnimationFrame`.\n   *\n   * @private\n   * @method cancelAnimationFrame\n   * @return {void}\n   */\n  Animation.prototype.cancelAnimationFrame = (function(){\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function(id) { clearTimeout(id); };\n    }\n\n    return window.cancelAnimationFrame.bind(window);\n  })();\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('animation', Animation);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  var Random = function() {\n    this._spareRandomCache = null;\n  };\n\n  Random.$inject = [];\n\n  Random.prototype.between = function(min, max) {\n    min = typeof min !== 'undefined' ? min : 0;\n    max = typeof max !== 'undefined' ? max : 1;\n\n    var fact = (max - min + 1);\n    var rand = Math.random();\n\n    return Math.floor(rand * fact + min);\n  };\n\n  Random.prototype.gaussian = function(mean, stdDev) {\n    stdDev = typeof stdDev !== 'undefined' ? stdDev : 1;\n    mean = typeof mean !== 'undefined' ? mean : 0;\n\n    var spare = this._spareRandomCache;\n    if (this._spareRandomCache !== null) {\n      this._spareRandomCache = null;\n      return mean + stdDev * spare;\n    }\n\n    var u, v, s;\n\n    do {\n      u = 2 * Math.random() - 1;\n      v = 2 * Math.random() - 1;\n      s = u*u + v*v;\n    } while (s >= 1 || s===0);\n\n    var m = Math.sqrt(-2 * Math.log(s) / s);\n    this._spareRandomCache = v * m;\n    return mean + stdDev * u * m;\n  };\n\n  Random.prototype.pick = function(array) {\n    return array[this.between(0, array.length - 1)];\n  };\n\n  Random.prototype.push = function(array, value) {\n    var rand = this.between(0, array.length - 1);\n    array.push(array[rand]);\n    array[rand] = value;\n\n    return array.length;\n  };\n\n  Random.prototype.shuffle = function(array) {\n    for( var i=array.length-1; i>0; i-- ) {\n      var rand = this.between(0, i);\n      var temp = array[i];\n\n      array[i] = array[rand];\n      array[rand] = temp;\n    }\n\n    return array;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('random', Random);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var String = function()\n    {\n    };\n\n  String.$inject = [];\n\n  /**\n   * Replaces placeholders (= '%s') from a string with variables.\n   *\n   * @public\n   * @method sprintf\n   * @param {string} input String to replace placeholders.\n   * @param {object} variables Object holding replacements.\n   * @return {string}\n   */\n  String.prototype.sprintf = function(input,variables)\n    {\n        if (!angular.isArray(variables)) {\n          variables = [].slice.call(arguments, 1);\n        }\n\n        for (var i=0; i<variables.length; i++) {\n          input = input.replace(/%s/,variables[i]);\n        }\n\n        return input;\n    };\n\n  /**\n   * Truncates a string by given params.\n   *\n   * @public\n   * @method truncate\n   * @param {string} input String to be truncated.\n   * @param {number} [maxLength=20] Maximum number of chars.\n   * @return {string}\n   */\n  String.prototype.truncate = function(input,maxLength)\n    {\n        maxLength = maxLength || 20;\n        if (input.length <= maxLength) {\n          return input;\n        }\n\n        return input.substring(0,maxLength) + '...';\n    };\n\n  /**\n   * Trims a string.\n   *\n   * @public\n   * @method trim\n   * @param {string} input String to trim.\n   * @return {string}\n   */\n  String.prototype.trim = function(input)\n    {\n        return input.replace(/^\\s+|\\s+$/g, '');\n    };\n\n  /**\n   * Transforms a string to camel case.\n   *\n   * @public\n   * @method toCamel\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toCamel = function(input)\n    {\n        return input.replace(/([-_][a-z])/g, function(part){\n            return part.toUpperCase().replace(/[-_]/,'');\n        });\n    };\n\n  /**\n   * Transforms a string to spinal case.\n   *\n   * @public\n   * @method toSpinal\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toSpinal = function(input)\n    {\n        return input.replace(/([A-Z]|_[a-z])/g, function(part){\n            return '-' + part.toLowerCase().replace(/_/,'');\n        });\n    };\n\n  /**\n   * Transforms a string to snake case.\n   *\n   * @public\n   * @method toSnake\n   * @param {string} input String to convert.\n   * @return {string}\n   */\n  String.prototype.toSnake = function(input)\n    {\n        return input.replace(/([A-Z]|-[a-z])/g, function(part){\n            return '_' + part.toLowerCase().replace(/-/,'');\n        });\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('string', String);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  /**\n   * @varructor\n   */\n  var Storage = function($injector) {\n    this.$injector = $injector;\n  };\n\n  Storage.MODE_COOKIES = 'COOKIES';\n  Storage.MODE_STORAGE = 'STORAGE';\n  Storage.$inject = ['$injector'];\n\n  /**\n   * Gets the current storage interface of the service.\n   * Can be one of modes `COOKIES` or `STORAGE`. If no\n   * one is given will default to local storage if it's\n   * supported, otherwise falls back to cookies.\n   *\n   * @public\n   * @method getProxy\n   * @param {String} mode\n   * @return {Object}\n   */\n  Storage.prototype.getProxy = function(mode) {\n    switch (mode) {\n      case Storage.MODE_COOKIES:\n       return this._getCookieProxy();\n\n      case Storage.MODE_STORAGE:\n       return this._getLocalStorageProxy();\n\n     default:\n      if (this.supportsLocalStorage()) {\n        return this._getLocalStorageProxy();\n      }\n\n      return this._getCookieProxy();\n    }\n  };\n\n  /**\n   * Checks if browser supports local storage.\n   *\n   * @public\n   * @method supportsLocalStorage\n   * @return {Boolean}\n   */\n  Storage.prototype.supportsLocalStorage = function() {\n    var $window = this.$injector.get('$window');\n    var storageProxy = $window.localStorage;\n    var key = '__local__storage__feature__test';\n    var val = '__local__storage__feature__test';\n\n    try {\n     storageProxy.setItem(key, val);\n     storageProxy.removeItem(key);\n    } catch (e) {\n     return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Stringifies and uri encodes a value.\n   *\n   * @private\n   * @param {Mixed} value\n   * @method _encode\n   *\n   * @return {String}\n   */\n  Storage.prototype._encode = function(value) {\n    try {\n     value = JSON.stringify(value);\n    } catch (e) {\n     value = undefined;\n    }\n\n    return encodeURIComponent(value);\n  };\n\n  /**\n   * Decodes a stringified and uri encoded value.\n   *\n   * @private\n   * @param {Mixed}\n   * @method _decodeValue\n   *\n   * @return {Mixed}\n   */\n  Storage.prototype._decode = function(value) {\n    var decoded;\n    switch (typeof value) {\n     case 'string':\n       decoded = decodeURIComponent(value);\n       try {\n         decoded = JSON.parse(decoded);\n       } catch (e) {\n         /* noop */\n       }\n       break;\n     default:\n       decoded = undefined;\n    }\n\n    if (decoded === 'undefined') {\n     decoded = undefined;\n    }\n\n    if (decoded === undefined) {\n     decoded = null;\n    }\n\n    return decoded;\n  };\n\n  /**\n   * Provides cookie storage proxy layer.\n   *\n   * @private\n   * @method _getCookieProxy\n   *\n   * @return {Object}\n   */\n  Storage.prototype._getCookieProxy = function() {\n    var documentProxy = this.$injector.get('$document');\n\n    var me = this;\n    var _getAll = function(parse) {\n     var items = {};\n\n     var cookies = documentProxy.cookie.split('; ');\n     if (cookies.length === 1 && cookies[0] === '') {\n       return items;\n     }\n\n     for (var i = 0; i < cookies.length; i++) {\n       var cookie = cookies[i].split('=');\n       if (!parse) {\n         items[cookie[0]] = cookie[1];\n         continue;\n       }\n\n       items[cookie[0]] = me._decode(cookie[1]);\n     }\n\n     return items;\n    };\n\n    var setCookie = function(key, value, expires, domain, path, secure) {\n     value = me._encode(value);\n\n     try {\n       var date = new Date(expires);\n       if (isNaN(date)) {\n         var input = expires;\n         expires = undefined;\n         throw new Error('storage.js: \"' + input + '\" cannot be converted to date string!');\n       }\n\n       expires = date.toUTCString();\n     } catch (e) {\n       /* noop */\n     }\n\n     expires = expires ? expires : false;\n\n     var cookie = key + '=' + value;\n     cookie += expires ? ';expires='+expires : '';\n     cookie += domain ? ';domain='+domain : '';\n     cookie += path ? ';path='+path : '';\n     cookie += secure ? ';secure' : '';\n\n     documentProxy.cookie = cookie;\n    };\n\n    var getCookie = function(key) {\n     var cookies = _getAll(false);\n     if (cookies.hasOwnProperty(key)) {\n       return me._decode(cookies[key]);\n     }\n\n     return null;\n    };\n\n    var getAllCookies = function() {\n     return _getAll(true);\n    };\n\n    var removeCookie = function(key) {\n     setCookie(key, '', -1);\n    };\n\n    var removeAllCookies = function() {\n     for (var key in getAllCookies()) {\n       removeCookie(key);\n     }\n    };\n\n    return {\n     getItem: getCookie,\n     getAllItems: getAllCookies,\n     setItem: setCookie,\n     removeItem: removeCookie,\n     removeAllItems: removeAllCookies\n    };\n  };\n\n  /**\n   * Provides local storage proxy layer.\n   *\n   * @private\n   * @method _getLocalStorageProxy\n   *\n   * @return {Object}\n   */\n  Storage.prototype._getLocalStorageProxy = function() {\n    var $window = this.$injector.get('$window');\n    var storageProxy = $window.localStorage;\n\n    var me = this;\n    var setItem = function(key, value) {\n     value = me._encode(value);\n     storageProxy.setItem(key, value);\n    };\n\n    var getItem = function(key) {\n     var value = storageProxy.getItem(key);\n     return me._decode(value);\n    };\n\n    var getAllItems = function() {\n     var items = {};\n\n     for (var i = 0; i < storageProxy.length; i++) {\n       var key = storageProxy.key(i);\n       items[key] = getItem(key);\n     }\n\n     return items;\n    };\n\n    var removeItem = function(key) {\n     storageProxy.removeItem(key);\n    };\n\n    var removeAllItems = function() {\n     storageProxy.clear();\n    };\n\n    return {\n     getItem: getItem,\n     getAllItems: getAllItems,\n     setItem: setItem,\n     removeItem: removeItem,\n     removeAllItems: removeAllItems\n    };\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('storage', Storage);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Auth = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  /**\n   * @property {Array.<string>} $inject\n   */\n  Auth.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends a POST request to register route and\n   * persists retrieved JWT token on success.\n   *\n   * @public\n   * @method signin\n   * @param {Object} data Data to submit.\n   * @param {string} [firewall='frontend'] firewall\n   * @param {Object} [config={}] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.signup = function(data, firewall, config)\n    {\n      var $http = this.$injector.get('$http');\n\n      firewall = firewall || 'frontend';\n      config = config || {};\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      var url = this._getSignupUrl(firewall);\n\n      var promise = $http.post(\n        url,\n        {\n          _username: data.username,\n          _password: data.password\n        },\n        angular.extend(config || {})\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Sends a POST request to login route and\n   * persists retrieved JWT token on success.\n   *\n   * @public\n   * @method signin\n   * @param {Object} data Data to submit.\n   * @param {string} [firewall='frontend'] firewall\n   * @param {Object} [config={}] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.signin = function(data, firewall, config)\n    {\n      var $http = this.$injector.get('$http');\n\n      firewall = firewall || 'frontend';\n      config = config || {};\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      var url = this._getSigninUrl(firewall);\n\n      var promise = $http.post(\n        url,\n        {\n          _username: data.username,\n          _password: data.password\n        },\n        angular.extend(config || {}, {\n          skipAuthorization: true\n        })\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Destroys JWT token representing user.\n   *\n   * @public\n   * @method logout\n   * @param {Object} [config] $http config.\n   * @return {Void}\n   */\n  Auth.prototype.signout = function(config)\n    {\n      var $http = this.$injector.get('$http');\n      var user = this.$injector.get('user');\n\n      var successCallback = function()\n        {\n          user.unload();\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      return $http.get(\n        this._getSignoutUrl(),\n        config || {}\n      ).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sends a POST request to refresh route\n   * with saved refresh token from login().\n   *\n   * @public\n   * @method refresh\n   * @param {Object} [config] $http config.\n   * @return {Promise}\n   */\n  Auth.prototype.refresh = function(config)\n    {\n      var $http = this.$injector.get('$http');\n      var jwt = this.$injector.get('jwt');\n\n      var me = this;\n      var successCallback = function(response)\n        {\n          me._saveToken(response.data);\n        };\n\n      var failureCallback = function(/*rejection*/)\n        {\n          // invalidate possibly stored jwt\n          // token to avoid further lookups\n          // especially from router resolve\n          jwt.invalidate();\n        };\n\n      var promise = $http.post(\n        this._getRefereshUrl(),\n        {\n          /* jshint camelcase: false */\n          refresh_token: jwt.getRefreshToken()\n          /* jshint camelcase: true */\n        },\n        angular.extend(config || {}, {\n          skipGlobalErrorMessage: true,\n          skipAuthorization: true\n        })\n      );\n\n      promise.then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Returns decoded JWT token containing\n   * user information such as `username`.\n   * Note: By default expired tokens are\n   * not accepted, set parameter if you\n   * want to accept expired tokens too!\n   *\n   * @public\n   * @method getUser\n   * @param {boolean} [acceptExpired=false]\n   * @return {Object|null}\n   */\n  Auth.prototype.getUser = function(acceptExpired)\n    {\n      acceptExpired = acceptExpired || false;\n\n      var jwt = this.$injector.get('jwt');\n\n      var token = jwt.getToken();\n      if (!token) {\n        return null;\n      }\n\n      if (!acceptExpired) {\n        if (jwt.isExpired()) {\n          return null;\n        }\n      }\n\n      return jwt.decode(token);\n    };\n\n  /**\n   * Checks if user has given role provided\n   * in `roles` property encoded into JWT.\n   *\n   * @public\n   * @method hasRole\n   * @param {string|array} role\n   * @return {Promise}\n   */\n  Auth.prototype.hasRole = function(role)\n    {\n      var jwt = this.$injector.get('jwt');\n      var $q = this.$injector.get('$q');\n\n      var defer = $q.defer();\n      var promise = defer.promise;\n\n      var isArray = angular.isArray(role);\n      if (isArray && role.length === 0) {\n        defer.reject(null);\n        return promise;\n      }\n\n      if (!role) {\n        defer.reject(null);\n        return promise;\n      }\n\n      // accept expired tokens - we will\n      // use refresh() to get new token\n      // if current one is invalid now\n      var user = this.getUser(true);\n      if (user === null) {\n        defer.reject(null);\n        return promise;\n      }\n\n      // primitive method for role check\n      var resolveRole = function(user) {\n        var roles = user.roles || [];\n        if (angular.isString(role)) {\n          role = [role];\n        }\n\n        var hasRole = false;\n        for (var i=0; i<role.length; i++) {\n          if (roles.indexOf(role[i]) >= 0) {\n            hasRole = true;\n            break;\n          }\n        }\n\n        if (hasRole) {\n          defer.resolve();\n        } else {\n          defer.reject();\n        }\n      };\n\n      // immediately resolve valid tokens\n      if (!jwt.isExpired()) {\n        resolveRole(user);\n        return promise;\n      }\n\n      // try to refresh invalid tokens\n      var me = this;\n      var successCallback = function()\n        {\n          user = me.getUser();\n          resolveRole(user);\n        };\n\n      var failureCallback = function()\n        {\n          defer.reject();\n        };\n\n      this.refresh().then(\n        successCallback,\n        failureCallback\n      );\n\n      return promise;\n    };\n\n  /**\n   * Saves server response containing\n   * the `token` and `refresh_token`.\n   *\n   * @private\n   * @method _saveToken\n   * @param {object} response\n   * @return {void}\n   */\n  Auth.prototype._saveToken = function(data)\n    {\n      /* jshint camelcase: false */\n      var jwt = this.$injector.get('jwt');\n\n      jwt.setRefreshToken(data.refresh_token);\n      jwt.setToken(data.token);\n      /* jshint camelcase: true */\n    };\n\n  /**\n   * Returns endpoint to gather JWT depending on firewall.\n   *\n   * @private\n   * @method _getSigninUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSigninUrl = function(firewall){\n    var API_URL = this.$injector.get('API_URL');\n\n    switch(firewall) {\n      case 'backend':\n      case 'frontend':\n        return API_URL + '/auth/' + firewall + '/signin';\n      default:\n        throw new Error('Unknown firewall name: ' + firewall);\n    }\n  };\n\n  /**\n   * Returns endpoint to register at given firewall.\n   *\n   * @private\n   * @method _getSignupUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSignupUrl = function(firewall){\n    var API_URL = this.$injector.get('API_URL');\n\n    switch(firewall) {\n      case 'frontend':\n        return API_URL + '/auth/' + firewall + '/signup';\n      case 'backend':\n        throw new Error('Not implemented yet!');\n      default:\n        throw new Error('Unknown firewall name: ' + firewall);\n    }\n  };\n\n  /**\n   * Returns endpoint to refresh the JWT.\n   *\n   * @private\n   * @method _getRefereshUrl\n   * @return {string}\n   */\n  Auth.prototype._getRefereshUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/auth/refresh';\n  };\n\n  /**\n   * Returns endpoint to revoke the JWT.\n   *\n   * @private\n   * @method _getSignoutUrl\n   * @param {string} firewall\n   * @return {string}\n   */\n  Auth.prototype._getSignoutUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/signout';\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('auth', Auth);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var I18N = function($injector)\n    {\n      this.translations = {};\n      this.$injector = $injector;\n\n      this.setLocale(this._detectLocale());\n    };\n\n  I18N.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} locales Currently supported locales. */\n  I18N.prototype.locales = {\n    'de': true\n  };\n\n  /** @var {string} defaultLocale Default locale to use. */\n  I18N.prototype.defaultLocale = 'de';\n\n  /**\n   * Loads translations according to current locale if not available.\n   *\n   * @public\n   * @method load\n   * @param {locale} [locale] Two letter language code.\n   * @param {Object} [config] Additional config for $http\n   * @return {Promise|void}\n   */\n  I18N.prototype.load = function(locale, config)\n    {\n      locale = locale || this.getLocale();\n      config = config || {};\n\n      if (this.translations[locale]) {\n        return;\n      }\n\n      var $http = this.$injector.get('$http');\n      var $log = this.$injector.get('$log');\n\n      var me = this;\n      var url = this._getJSONUrl(locale);\n      var successCallback = function(response)\n        {\n          me.translations[locale] = response.data;\n        };\n\n      var failureCallback = function()\n        {\n          $log.error('Could not load translations!');\n        };\n\n      return $http.get(url, config).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets locale to given paraemter if it's a valid one.\n   * Falls back to `defaultLocale` if it's an invalid one.\n   *\n   * @public\n   * @method setLocale\n   * @param {string} locale\n   * @return {void}\n   */\n  I18N.prototype.setLocale = function(locale)\n    {\n      if (this.locales[locale]) {\n        this.locale = locale;\n        return;\n      }\n\n      this.locale = this.defaultLocale;\n    };\n\n  /**\n   * Delivers the currently used locale for translations.\n   *\n   * @public\n   * @method setLocale\n   * @param {string} locale\n   * @return {void}\n   */\n  I18N.prototype.getLocale = function()\n    {\n      return this.locale;\n    };\n\n  /**\n   * Makes a lookup within current translation dictionary.\n   *\n   * @param {string} key The i18n key.\n   * @param {string} ... Parameters to be replaced.\n   * @return {string}\n   */\n  I18N.prototype.get = function(key)\n    {\n      var string = this.$injector.get('string');\n      var params = [].slice.call(arguments,1);\n      var locale = this.getLocale();\n\n      var text;\n      try {\n        text = this.translations[locale][key];\n      } catch(e) {}\n\n      return string.sprintf(text || key, params);\n    };\n\n  /**\n   * Returns endpoint to gather JSON translations.\n   *\n   * @private\n   * @method _getTranslationsUrl\n   * @param {string} locale\n   * @return {string}\n   */\n  I18N.prototype._getJSONUrl = function(locale)\n    {\n      return 'json/' + locale + '.json';\n    };\n\n  /**\n   * @ignore\n   */\n  I18N.prototype._detectLocale = function()\n    {\n      var navigator = this.$injector.get('$window').navigator;\n      var android = /android.*\\W(\\w\\w)-(\\w\\w)\\W/i;\n      var language;\n\n      // try to find locale on android devices!\n      if( navigator && navigator.userAgent &&\n          (language = navigator.userAgent.match(android)) ) {\n          language = language[1];\n      }\n\n      // for all other browsers\n      if (!language && navigator) {\n        if( navigator.language ) {\n          language = navigator.language;\n        } else if( navigator.userLanguage ) {\n          language = navigator.userLanguage;\n        } else if( navigator.systemLanguage ) {\n          language = navigator.systemLanguage;\n        } else if( navigator.browserLanguage ) {\n          language = navigator.browserLanguage;\n        }\n      }\n\n      // now we can get iso code\n      if (language) {\n        return language.substr(0,2);\n      }\n\n      // use `defaultLocale` as fallback\n      return this.defaultLocale;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('i18n', I18N);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  /**\n  * @constructor\n  */\n  var JWT = function($injector, storage) {\n    this.$injector = $injector;\n    this.storage = storage.getProxy();\n  };\n\n  JWT.$inject = ['$injector', 'storage'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} tokenKey Token key for local storage. */\n  JWT.prototype.tokenKey = 'NAksNyshI3';\n\n  /** @var {string} refreshKey Refresh key for local storage. */\n  JWT.prototype.refreshKey = 'i08BFNG9t5';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Resets JWT token / refresh token in local storage.\n   *\n   * @public\n   * @method invalidate\n   * @return {void}\n   */\n  JWT.prototype.invalidate = function()\n    {\n      this.removeRefreshToken();\n      this.removeToken();\n    };\n\n  /**\n   * Gets JWT token from local storage.\n   *\n   * @public\n   * @method getToken\n   * @return {string|null}\n   */\n  JWT.prototype.getToken = function()\n    {\n      return this.storage.getItem(this.tokenKey);\n    };\n\n  /**\n   * Sets JWT token in local storage.\n   *\n   * @public\n   * @method setToken\n   * @param {string} token\n   * @return {void}\n   */\n  JWT.prototype.setToken = function(token)\n    {\n      this.storage.setItem(this.tokenKey,token);\n    };\n\n  /**\n   * Removes JWT token from local storage.\n   *\n   * @public\n   * @method removeToken\n   * @return {void}\n   */\n  JWT.prototype.removeToken = function()\n    {\n      this.storage.removeItem(this.tokenKey);\n    };\n\n  /**\n   * Gets JWT refresh token from local storage.\n   *\n   * @public\n   * @method getRefreshToken\n   * @return {string|null}\n   */\n  JWT.prototype.getRefreshToken = function()\n    {\n      return this.storage.getItem(this.refreshKey);\n    };\n\n  /**\n   * Sets JWT refresh token in local storage.\n   *\n   * @public\n   * @method setRefreshToken\n   * @param {string} refreshToken\n   * @return {void}\n   */\n  JWT.prototype.setRefreshToken = function(refreshToken)\n    {\n      this.storage.setItem(this.refreshKey, refreshToken);\n    };\n\n  /**\n   * Removes JWT refresh token from local storage.\n   *\n   * @public\n   * @method removeToken\n   * @return {void}\n   */\n  JWT.prototype.removeRefreshToken = function()\n    {\n      this.storage.removeItem(this.refreshKey);\n    };\n\n  /**\n   * Converts timestamp into date object.\n   *\n   * @public\n   * @method getExpirationDate\n   * @param {string} token\n   * @return {date}\n   */\n  JWT.prototype.getExpirationDate = function(token)\n    {\n      var $log = this.$injector.get('$log');\n\n      token = token || this.getToken();\n      if (!token) {\n        $log.error('No token given or available!');\n        return null;\n      }\n\n      var decoded = this.decode(token);\n      if (typeof decoded.exp==='undefined') {\n        $log.error('No `exp` property available!');\n        return null;\n      }\n\n      var date = new Date(0);\n      date.setUTCSeconds(decoded.exp);\n\n      return date;\n    };\n\n  /**\n   * Determines if given token is expired.\n   *\n   * @public\n   * @method isExpired\n   * @param {string} token\n   * @param {number} offset In seconds.\n   * @return {boolean}\n   */\n  JWT.prototype.isExpired = function(token, offset)\n    {\n      offset = offset || 0;\n      token = token || this.getToken();\n\n      var date = this.getExpirationDate(token);\n      if (date === null) {\n        return true;\n      }\n\n      var now = new Date().valueOf();\n      offset = now + offset * 1000;\n      date = date.valueOf();\n\n      return date <= offset;\n    };\n\n  /**\n   * Tries to decode a JWT token.\n   *\n   * @public\n   * @method decode\n   * @param {string} token\n   * @return {object|null}\n   */\n  JWT.prototype.decode = function(token)\n    {\n      var $log = this.$injector.get('$log');\n\n      try {\n        var parts = token.split('.');\n        if (parts.length !== 3) {\n          throw new Error('JWT must have 3 parts!');\n        }\n\n        var decoded = this._base64Decode(parts[1]);\n        if (!decoded) {\n          throw new Error('Cannot decode the token!');\n        }\n\n        return angular.fromJson(decoded);\n      } catch(e) {\n        $log.error(e);\n        return null;\n      }\n    };\n\n  /**\n   * Validates and decodes a base64 url.\n   *\n   * @private\n   * @method _base64Decode\n   * @param {string} input\n   * @return {string}\n   */\n  JWT.prototype._base64Decode = function(input)\n    {\n      var $window = this.$injector.get('$window');\n      var $log = this.$injector.get('$log');\n\n      var output = input\n        .replace(/-/g, '+')\n        .replace(/_/g, '/');\n\n      try{\n        switch (output.length % 4) {\n          case 0: {\n            break;\n          }\n\n          case 2: {\n            output += '=='; break;\n          }\n\n          case 3: {\n            output += '='; break;\n          }\n\n          default: {\n            throw new Error('Illegal base64url code!');\n          }\n        }\n      } catch(e) {\n        $log.error(e);\n        return '';\n      }\n\n      var decoded = $window.atob(output);\n      var escaped = $window.escape(decoded);\n\n      return $window.decodeURIComponent(escaped);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('jwt', JWT);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var User = function($injector) {\n    this.$injector = $injector;\n\n    this._states = [\n      $injector.get('STATE_BEGINNER'),\n      $injector.get('STATE_AMATEUR'),\n      $injector.get('STATE_ADVANCED'),\n      $injector.get('STATE_EXPERT')\n    ];\n\n    this._eventSource = null;\n    this._results = [];\n    this._payload = {};\n    this._pending = {};\n    this._tasks = {};\n  };\n\n  User.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} state Current state of user. */\n  User.prototype.state = null;\n\n  /** @var {number} group Random group of user. */\n  User.prototype.group = null;\n\n  /** @var {number} tickets Current ticket count. */\n  User.prototype.tickets = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Fetches current user through `User` resource.\n   *\n   * @public\n   * @method load\n   * @return {void}\n   */\n  User.prototype.load = function() {\n    var User = this.$injector.get('User');\n    var jwt = this.$injector.get('jwt');\n\n    var me = this;\n    var successCallback = function(user) {\n\n      // save only json payload from\n      // ng-resource's `user` object\n      me._payload = user.toJSON();\n\n      // initialize members\n      me._initTickets();\n      me._initState();\n      me._initGroup();\n\n      // gameplay setup calls\n      // only for `ROLE_USER`!\n      if (!me.isUser()) {\n        return;\n      }\n\n      // init tasks at first!\n      me._initWatches();\n      me._initTasks();\n\n      // then results & SSE!\n      me._initPending();\n      me._initResults();\n      me._initSSE();\n    };\n\n    var failureCallback = function(/*rejection*/) {\n      // invalidate possibly stored jwt\n      // token to avoid further lookups\n      // especially from router resolve\n      jwt.invalidate();\n    };\n\n    var current = User.current();\n\n    current.$promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return current;\n  };\n\n  /**\n   * Resets current user session from application.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  User.prototype.unload = function() {\n    var jwt = this.$injector.get('jwt');\n    var sse = this.$injector.get('sse');\n\n    if (this._eventSource) {\n      sse.removeSource(this._eventSource);\n    }\n\n    if (this._unwatchTickets) {\n      this._unwatchTickets();\n    }\n\n    if (this._unwatchState) {\n      this._unwatchState();\n    }\n\n    this._eventSource = null;\n    this._results = [];\n    this._payload = {};\n    this._pending = {};\n    this._tasks = {};\n\n    this.tickets = null;\n    this.state = null;\n    this.group = null;\n\n    jwt.invalidate();\n  };\n\n  /**\n   * Updates user from external scopes.\n   * This is helpful for refreshing its\n   * state without invoking a request to\n   * the server when user was embedded in\n   * another request's response.\n   *\n   * @public\n   * @method update\n   * @param {object} result\n   * @return {void}\n   *\n   */\n  User.prototype.update = function(result) {\n    this._payload = result.user;\n\n    this._addResult(result);\n    this._initTickets();\n    this._initState();\n    this._initGroup();\n  };\n\n  /**\n   * Checks if current user has role `ROLE_USER`.\n   *\n   * @public\n   * @method isUser\n   * @return {boolean}\n   */\n  User.prototype.isUser = function() {\n    return this.hasRole('ROLE_USER');\n  };\n\n  /**\n   * Checks if current user has role `ROLE_ADMIN`.\n   *\n   * @public\n   * @method isAdmin\n   * @return {boolean}\n   */\n  User.prototype.isAdmin = function() {\n    return this.hasRole('ROLE_ADMIN');\n  };\n\n  /**\n   * Checks if current user has role `ROLE_SUPER_ADMIN`.\n   *\n   * @public\n   * @method isSuperAdmin\n   * @return {boolean}\n   */\n  User.prototype.isSuperAdmin = function() {\n    return this.hasRole('ROLE_SUPER_ADMIN');\n  };\n\n  /**\n   * Checks if current user's workshop is active.\n   *\n   * @public\n   * @method isInWorkshop\n   * @return {boolean}\n   */\n  User.prototype.isInWorkshop = function() {\n    if (!this.isUser()) {\n      return true;\n    }\n\n    return this._payload.workshop.isActive;\n  };\n\n  /**\n   * Checks if current user has given role.\n   *\n   * @public\n   * @method hasRole\n   * @param {string|array} role\n   * @return {boolean}\n   */\n  User.prototype.hasRole = function(role) {\n    if (!angular.isArray(role)) {\n      role = [role];\n    }\n\n    var roles = this._payload.roles || [];\n    for (var i=0; i<role.length; i++) {\n      if (roles.indexOf(role[i])>=0) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Provides user's task hash map.\n   *\n   * @public\n   * @method getTasks\n   * @return {object}\n   */\n  User.prototype.getTasks = function() {\n    return this._tasks;\n  };\n\n  /**\n   * Gets `task` resource of user by type.\n   *\n   * @public\n   * @method getTaskByType\n   * @param {string} type\n   * @return {object|null}\n   */\n  User.prototype.getTaskByType = function(type) {\n    return this._tasks[type] || null;\n  };\n\n  /**\n   * Gets pending `result` resource of user by type.\n   *\n   * @public\n   * @method getResultByType\n   * @param {string} type\n   * @return {object|null}\n   */\n  User.prototype.getPendingByType = function(type) {\n    return this._pending[type] || null;\n  };\n\n  /**\n   * Gets `state` mapped to string representation.\n   *\n   * @public\n   * @method getGroupAsString\n   * @return {string}\n   */\n  User.prototype.getGroupAsString = function() {\n    switch(this.group) {\n      case this.$injector.get('GROUP_A'):\n        return 'GROUP_A';\n      case this.$injector.get('GROUP_B'):\n        return 'GROUP_B';\n      default:\n        return null;\n    }\n  };\n\n  /**\n   * Gets `state` mapped to string representation.\n   *\n   * @public\n   * @method getStateAsString\n   * @return {string}\n   */\n  User.prototype.getStateAsString = function() {\n    switch(this.state) {\n      case this.$injector.get('STATE_AMATEUR'):\n        return 'STATE_AMATEUR';\n      case this.$injector.get('STATE_ADVANCED'):\n        return 'STATE_ADVANCED';\n      case this.$injector.get('STATE_EXPERT'):\n        return 'STATE_EXPERT';\n      default:\n        return 'STATE_BEGINNER';\n    }\n  };\n\n  /**\n   * Initializes `state` member.\n   *\n   * @private\n   * @method _initState\n   * @return {void}\n   */\n  User.prototype._initState = function() {\n    var STATE_BEGINNER = this.$injector.get('STATE_BEGINNER');\n    this.state = this._payload.state || STATE_BEGINNER;\n  };\n\n  /**\n   * Initializes `group` member.\n   *\n   * @private\n   * @method _initGroup\n   * @return {void}\n   */\n  User.prototype._initGroup = function() {\n    this.group = this._payload.group || null;\n  };\n\n  /**\n   * Initializes `tickets` member.\n   *\n   * @private\n   * @method init\n   * @return {void}\n   */\n  User.prototype._initTickets = function() {\n    var tickets = this._payload.tickets;\n    this.tickets = tickets || [];\n  };\n\n  /**\n   * Watches `state` and `tickets` for changes to\n   * show the corresponding user notifications.\n   *\n   * @private\n   * @method _initWatches\n   * @return {void}\n   */\n  User.prototype._initWatches = function() {\n    var notification = this.$injector.get('notification');\n    var $rootScope = this.$injector.get('$rootScope');\n    var i18n = this.$injector.get('i18n');\n    var me = this;\n\n    var _watchStateExpression = function() {\n      return me.state;\n    };\n\n    var _watchStateCallback = function(newState, oldState) {\n      if (newState === oldState) {\n        return;\n      }\n\n      notification.success(\n        i18n.get(\n          'Congratulations, you have reached the state %s!',\n          i18n.get(me.getStateAsString())\n        )\n      );\n    };\n\n    var _watchTicketsExpression = function() {\n      return me.tickets;\n    };\n\n    var _watchTicketsCallback = function(newTickets, oldTickets) {\n      if (newTickets === oldTickets) {\n        return;\n      }\n\n      var oldCount = oldTickets && oldTickets.length;\n      var newCount = newTickets && newTickets.length;\n\n      var tickets = newCount - oldCount;\n      if (tickets <= 0) {\n        return;\n      }\n\n      var message = tickets === 1 ?\n        i18n.get('Congratulations, you have earned 1 new ticket!') :\n        i18n.get('Congratulations, you have earned %s new tickets!', tickets);\n\n      notification.primary(message);\n    };\n\n    this._unwatchTickets = $rootScope.$watchCollection(\n      _watchTicketsExpression,\n      _watchTicketsCallback\n    );\n\n    this._unwatchState = $rootScope.$watch(\n      _watchStateExpression,\n      _watchStateCallback\n    );\n  };\n\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @private\n   * @method _initSSE\n   * @return {Void}\n   */\n  User.prototype._initSSE = function()\n    {\n      var $rootScope = this.$injector.get('$rootScope');\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      // don't setup SSE when playing remote\n      var workshop = this._payload.workshop;\n      if (!workshop.isActive) {\n        return;\n      }\n\n      var me = this;\n\n      var _onMessage = function(data) {\n        $rootScope.$evalAsync(function(){\n          angular.forEach(data, function(item) {\n            var unix = Date.parse(item.updatedAt);\n            var task = me._tasks[item.type];\n            task.isActive = !!item.isActive;\n\n            if (!isNaN(unix)) {\n              item.updatedAt = unix;\n            }\n          });\n        });\n      };\n\n      var url = API_URL + '/sse/workshop/' + workshop.id + '/tasks';\n      var options = { onMessage: _onMessage, sleep: 1 };\n      this._eventSource = sse.addSource(url, options);\n    };\n\n  /**\n   * Caches task hash map from workshop\n   * for lookups from `getTaskByType()`.\n   *\n   * @private\n   * @method _initTasks\n   * @return {void}\n   */\n  User.prototype._initTasks = function() {\n    var workshop = this._payload.workshop;\n    if (!workshop) {\n      return;\n    }\n\n    var me = this;\n    angular.forEach(workshop.tasks,function(task) {\n      me._tasks[task.type] = task;\n    });\n  };\n\n  /**\n   * Caches pending hash map from workshop\n   * for lookups from `getPendingByType()`.\n   *\n   * @private\n   * @method _initPending\n   * @return {void}\n   */\n  User.prototype._initPending = function() {\n    var pending = this._payload.pending;\n    if (!pending) {\n      return;\n    }\n\n    var me = this;\n    angular.forEach(pending,function(result) {\n      me._pending[result.task.type] = result;\n    });\n  };\n\n  /**\n   * Caches results hash map from workshop\n   * for lookups from `getResultsByType()`.\n   *\n   * @private\n   * @method _initResults\n   * @return {void}\n   */\n  User.prototype._initResults = function() {\n    var _addResult = this._addResult.bind(this);\n    var results = this._payload.results || [];\n\n    angular.forEach(results, _addResult);\n  };\n\n  /**\n   * Adds result to collection and sets `$$result`\n   *\n   * @private\n   * @method _addResult\n   * @param {object} result\n   * @return {void}\n   */\n  User.prototype._addResult = function(result) {\n    var task = this.getTaskByType(result.task.type);\n    if (task !== null) {\n      var current = task.$$results || 0;\n      task.$$results = current + 1;\n    }\n\n    this._results.push(result);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('user', User);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var Mail = function($injector)\n    {\n      this.$injector = $injector;\n    };\n\n  Mail.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends a POST request to send mail.\n   *\n   * @public\n   * @method send\n   * @param {Object} data\n   * @param {Object} [config] $http config.\n   * @return {Promise}\n   */\n  Mail.prototype.send = function(data, config) {\n    var notification = this.$injector.get('notification');\n    var $http = this.$injector.get('$http');\n    var i18n = this.$injector.get('i18n');\n\n    var successCallback = function(/*response*/)\n      {\n        notification.success(\n          i18n.get(\n            'Your email has been sent!'\n          )\n        );\n      };\n\n    var failureCallback = function(/*rejection*/)\n      {\n      };\n\n    var promise = $http.post(\n      this._getPostUrl(),\n      {\n        _name: data.name,\n        _mail: data.email,\n        _subject: data.subject,\n        _message: data.message\n      },\n      config || {}\n    );\n\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Returns endpoint to send the email.\n   *\n   * @private\n   * @method _getPostUrl\n   * @return {string}\n   */\n  Mail.prototype._getPostUrl = function(){\n    var API_URL = this.$injector.get('API_URL');\n\n    return API_URL + '/mail';\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('mail', Mail);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, EventSource */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // SERVICE\n  //\n\n  /**\n   * @constructor\n   */\n  var SSE = function($injector)\n    {\n      this.$injector = $injector;\n      this._sources = {};\n    };\n\n  SSE.$inject = ['$injector'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Adds a new event source to listen to.\n   *\n   * @public\n   * @method add\n   * @param string url\n   * @param string event\n   * @param function callback\n   * @return {void}\n   */\n  SSE.prototype.addSource = function(url, config) {\n    config = config || {};\n\n    config.retry = config.retry || null;\n    config.event = config.event || null;\n    config.sleep = config.sleep || null;\n    config.onError = config.onError || function(){};\n    config.onMessage = config.onMessage || function(){};\n\n    url = this._buildUrl(url, config);\n    var source = new EventSource(url);\n\n    source.onmessage = function(event) {\n      var data = angular.fromJson(event.data);\n      config.onMessage.call(this, data, event);\n    };\n\n    source.onerror = function(event) {\n      config.onError.call(this, event);\n    };\n\n    this._sources[url] = source;\n    return source;\n  };\n\n  /**\n   * Adds a new event source to listen to.\n   *\n   * @public\n   * @method removeSource\n   * @param object source\n   * @return {void}\n   */\n  SSE.prototype.removeSource = function(source) {\n    delete this._sources[source.url];\n    source.close();\n  };\n\n  /**\n   * Appends JWT token as query string to url.\n   * Adds optional config options if available.\n   *\n   * @private\n   * @method _getUrl\n   * @param string url\n   * @param object config\n   * @return {string}\n   */\n  SSE.prototype._buildUrl = function(url, config){\n    var jwt = this.$injector.get('jwt');\n    var token = jwt.getToken();\n\n    url = url + '?bearer=' + token;\n\n    if (config.event) {\n      url += '&event=' + config.event;\n    }\n\n    if (config.sleep) {\n      url += '&sleep=' + config.sleep;\n    }\n\n    if (config.retry) {\n      url += '&retry=' + config.retry;\n    }\n\n    return url;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).service('sse', SSE);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var CardContainer = function() {\n  };\n\n  CardContainer.$inject = ['$scope', '$element', '$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} cards Stack of registered cards. */\n  CardContainer.prototype.cards = [];\n\n  /** @var {boolean} canToggle If cards can be toggled. */\n  CardContainer.prototype.canToggle = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Adds a `card` directive to stack.\n   *\n   * @public\n   * @method click\n   * @return {Void}\n   */\n  CardContainer.prototype.add = function(card) {\n    this.cards.push(card);\n  };\n\n  /**\n   * Toggles card state if `canToggle` is true.\n   *\n   * @public\n   * @method set\n   * @return {boolean}\n   */\n  CardContainer.prototype.set = function(card) {\n    if (card.selected && !this.canToggle) {\n      return false;\n    }\n\n    // toggle current card's state\n    var selected = !!card.selected;\n    card.selected = selected ? null : true;\n\n    // reset all other card states\n    angular.forEach(this.cards, function(current) {\n      if (current.id === card.id) {\n        return;\n      }\n\n      current.selected = card.selected ? false : null;\n    });\n\n    return true;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('cardContainer', function(){\n    return {\n      scope: {\n        canToggle: '=?cardContainerCanToggle'\n      },\n      restrict: 'A',\n      controller: CardContainer,\n      bindToController: true,\n      controllerAs: 'cardContainerController'\n    };\n  });\n\n  // --------------------------------------------------\n  // Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Card = function($scope, $element, $attrs, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n\n    this.id = this.$scope.$id;\n    this.hasIcon = $transclude.isSlotFilled('icon');\n  };\n\n  Card.$inject = ['$scope', '$element', '$attrs', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} id Unique id of card. */\n  Card.prototype.id = null;\n\n  /** @var {mixed} data Passthrough data of card. */\n  Card.prototype.data = null;\n\n  /** @var {boolean} selected If card is selected. */\n  Card.prototype.selected = null;\n\n  /** @var {boolean} disabled If card is disabled. */\n  Card.prototype.disabled = null;\n\n  /** @var {boolean} hasIcon If card has `icon` slot filled. */\n  Card.prototype.hasIcon = null;\n\n  /** @var {boolean} isCheckbox If card should behave as checkbox. */\n  Card.prototype.isCheckbox = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Invokes the `cardOnClick` callback.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Card.prototype.$onInit = function() {\n    if (!this.cardContainer) {\n      return;\n    }\n\n    this.cardContainer.add(this);\n  };\n\n  /**\n   * Invokes the `cardOnClick` callback.\n   *\n   * @public\n   * @method click\n   * @return {Void}\n   */\n  Card.prototype.click = function($event) {\n    if (this.disabled) {\n      return;\n    }\n\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    if (this.cardContainer) {\n      var changed = this.cardContainer.set(this);\n      if (!changed) {\n        return;\n      }\n    }\n\n    this.onClick({\n      data: this.data,\n      selected: this.selected,\n      disabled: this.disabled\n    });\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('card', function(){\n    return {\n      scope: {\n        data: '=?cardData',\n        onClick: '&cardOnClick',\n        selected: '=?cardSelected',\n        disabled: '=?cardDisabled',\n        isCheckbox: '=?cardIsCheckbox'\n      },\n      restrict: 'A',\n      transclude: {\n        text: 'cardText',\n        title: 'cardTitle',\n        icon: '?cardIcon',\n        buttons: '?cardButtons'\n      },\n      controller: Card,\n      bindToController: true,\n      controllerAs: 'cardController',\n      require:{\n        cardContainer: '^?cardContainer',\n      },\n      templateUrl: 'views/directives/card.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, Chartist */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Chart = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._chart = null;\n  };\n\n  Chart.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} data Chart data for series. */\n  Chart.prototype.data = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Inits chart with options and data\n   * and renders it with these settings.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Chart.prototype.$onInit = function()\n    {\n      var options = this._getOptions();\n\n      var data = {\n        labels: this._getLabels(),\n        series: this._getData()\n      };\n\n      this._render(data, options);\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Chart.prototype.$onDestroy = function()\n    {\n      if (this._chart !== null) {\n        this._chart.detach();\n        this._chart = null;\n      }\n    };\n\n  /**\n   * Gets data depending on current `task`.\n   *\n   * @public\n   * @method _getData\n   * @param {array} data\n   * @return int\n   */\n  Chart.prototype._getData = function() {\n    var GROUP_A = this.$injector.get('GROUP_A');\n    var GROUP_B = this.$injector.get('GROUP_B');\n\n    var me = this;\n\n    var map = {};\n    var data = [];\n    var mapResults;\n\n    switch(me.task.type) {\n      //case me.$injector.get('TYPE_INTEREST'):\n      //case me.$injector.get('TYPE_INFLATION'):\n      //case me.$injector.get('TYPE_DIVERSIFICATION'):\n      //case me.$injector.get('TYPE_RISK'):\n      case me.$injector.get('TYPE_ANCHORING'):\n      case me.$injector.get('TYPE_MENTAL_BOOKKEEPING'): {\n        map[GROUP_A] = { choice1: 0, choice2: 0, count:0 };\n        map[GROUP_B] = { choice1: 0, choice2: 0, count:0 };\n\n        mapResults = function(result) {\n          var group = result.json.group;\n\n          switch (result.json.choice) {\n            case 1:\n              map[group].choice1++;\n              break;\n            case 2:\n              map[group].choice2++;\n              break;\n            default:\n          }\n\n          map[group].count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        var groupA = map[GROUP_A];\n        var groupB = map[GROUP_B];\n\n        // series 1\n        data.push([\n          groupA.choice1 / groupA.count,\n          groupB.choice1 / groupB.count\n        ]);\n\n        // series 2\n        data.push([\n          groupA.choice2 / groupA.count,\n          groupB.choice2 / groupB.count\n        ]);\n\n        break;\n      }\n\n      //case me.$injector.get('TYPE_FRAMING'):\n      //case me.$injector.get('TYPE_SAVINGS_TARGET'):\n      //case me.$injector.get('TYPE_SAVINGS_SUPPORTED'):\n      //case me.$injector.get('TYPE_SELF_COMMITMENT'):\n      case me.$injector.get('TYPE_PROCRASTINATION'): {\n        var SPLIT = 'SPLIT';\n        var ALL = 'ALL';\n\n        map[SPLIT] = { success: 0, failure: 0, count:0 };\n        map[ALL] = { success: 0, failure: 0, count:0 };\n\n        mapResults = function(result) {\n          var mode = result.json.mode;\n\n          if (result.json.success) {\n            map[mode].success++;\n          } else {\n            map[mode].failure++;\n          }\n\n          map[mode].count++;\n        };\n\n        angular.forEach(this.results, mapResults);\n\n        var split = map[SPLIT];\n        var all = map[ALL];\n\n        // series 1\n        data.push([\n          split.success / split.count,\n          all.success / all.count\n        ]);\n\n        // series 2\n        data.push([\n          split.failure / split.count,\n          all.failure / all.count\n        ]);\n\n        break;\n      }\n\n      default:\n    }\n\n    return data;\n  };\n\n  /**\n   * Gets labels depending on current `task`.\n   *\n   * @private\n   * @method _getLabels\n   * @return array\n   */\n  Chart.prototype._getLabels = function() {\n    var i18n = this.$injector.get('i18n');\n\n    switch(this.task.type) {\n      case this.$injector.get('TYPE_ANCHORING'):\n        return [\n          i18n.get('WITH_ANCHOR'),\n          i18n.get('WITHOUT_ANCHOR')\n        ];\n      case this.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        return [\n          i18n.get('MONEY_LOST'),\n          i18n.get('TICKET_LOST')\n        ];\n      case this.$injector.get('TYPE_PROCRASTINATION'):\n        return [\n          i18n.get('ALL'),\n          i18n.get('SPLIT')\n        ];\n      default:\n        return [];\n    }\n  };\n\n  /**\n   * Gets options depending on current `task`.\n   *\n   * @private\n   * @method _getOptions\n   * @return array\n   */\n  Chart.prototype._getOptions = function() {\n    var i18n = this.$injector.get('i18n');\n\n    switch(this.task.type) {\n      case this.$injector.get('TYPE_ANCHORING'):\n      case this.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        return {\n          seriesBarDistance: 40,\n          chartPadding: {\n            top: 50,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          axisY:{\n            labelInterpolationFnc: function(value) {\n              return (value * 100) + '%';\n            },\n            ticks: [0, 0.2, 0.4, 0.6, 0.8, 1],\n            type: Chartist.FixedScaleAxis,\n            high: 1,\n            low: 0\n          },\n          plugins: [\n            Chartist.plugins.legend({\n              legendNames: [\n                i18n.get('BUYING'),\n                i18n.get('NOT_BUYING')\n              ]\n            })\n          ]\n        };\n      case this.$injector.get('TYPE_PROCRASTINATION'):\n        return {\n          seriesBarDistance: 40,\n          chartPadding: {\n            top: 50,\n            left: 0,\n            right: 0,\n            bottom: 0\n          },\n          axisY:{\n            labelInterpolationFnc: function(value) {\n              return (value * 100) + '%';\n            },\n            ticks: [0, 0.2, 0.4, 0.6, 0.8, 1],\n            type: Chartist.FixedScaleAxis,\n            high: 1,\n            low: 0\n          },\n          plugins: [\n            Chartist.plugins.legend({\n              legendNames: [\n                i18n.get('Target reached'),\n                i18n.get('Target dismissed')\n              ]\n            })\n          ]\n        };\n\n      default:\n        return {};\n    }\n  };\n\n  /**\n   * Renders chart depending on current `task`.\n   *\n   * @private\n   * @method _render\n   * @return array\n   */\n  Chart.prototype._render = function(data, options) {\n    var $timeout = this.$injector.get('$timeout');\n\n    this.$element.addClass('ct-chart');\n    var element = this.$element.get(0);\n\n    var me = this;\n    var render = function() {\n      switch(me.task.type) {\n        case me.$injector.get('TYPE_ANCHORING'):\n        case me.$injector.get('TYPE_MENTAL_BOOKKEEPING'):\n        case me.$injector.get('TYPE_PROCRASTINATION'):\n          me._chart = new Chartist.Bar(element, data, options);\n          break;\n        default:\n      }\n    };\n\n    $timeout(render, 100);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('chart', function(){\n    return {\n      scope: {\n        task: '=?chartTask',\n        results: '=?chartResults'\n      },\n      restrict: 'A',\n      controller: Chart,\n      bindToController: true,\n      controllerAs: 'chartController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Modal\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Modal = function($scope, $attrs, $element, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$transclude = $transclude;\n\n    this._element = null;\n    this._modal = null;\n    this._scope = null;\n  };\n\n  Modal.$inject = ['$scope', '$attrs', '$element', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isVisible Flag for modal visibility. */\n  Modal.prototype.isVisible = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers UIkit callbacks and watches.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Modal.prototype.$onInit = function()\n    {\n      var me = this;\n\n      // listeners\n      this._onShow = function() {\n        me.$scope.$evalAsync(me.onShow);\n      };\n\n      this._onShown = function() {\n        me.$scope.$evalAsync(me.onShown);\n      };\n\n      this._onBeforeShow = function() {\n        me.$scope.$evalAsync(me.onBeforeShow);\n      };\n\n      this._onHide = function() {\n        me.$scope.$evalAsync(me.onHide);\n      };\n\n      this._onHidden = function() {\n        me.$scope.$evalAsync(function(){\n          me.isVisible = false;\n          me.onHidden();\n        });\n      };\n\n      this._onBeforeHide = function() {\n        me.$scope.$evalAsync(me.onBeforeHide);\n      };\n\n      // watches\n      this._unwatch = this.$scope.$watch(\n        'modalController.isVisible',\n        function(isVisible) {\n          if (isVisible) {\n            me.transclude();\n            return;\n          }\n\n          me.destroy();\n        }\n      );\n    };\n\n  /**\n   * Cleans up everything on destruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Modal.prototype.$onDestroy = function()\n    {\n      this._unwatch();\n      this.destroy();\n    };\n\n  /**\n   * Transcludes contents and shows modal.\n   *\n   * @public\n   * @method render\n   * @return {Void}\n   */\n  Modal.prototype.transclude = function() {\n    var me = this;\n\n    var transclude = function(clone, scope) {\n      // save element and scope\n      me._element = clone;\n      me._scope = scope;\n\n      // register UIKit listeners\n      me._element.on('show', me._onShow);\n      me._element.on('shown', me._onShown);\n      me._element.on('beforeshow', me._onBeforeShow);\n\n      me._element.on('hide', me._onHide);\n      me._element.on('hidden', me._onHidden);\n      me._element.on('beforeHide', me._onBeforeHide);\n\n      // replace with actual element\n      me.$element.append(clone);\n\n      // create and show the modal\n      me._modal = UIkit.modal(clone);\n      me._modal.show();\n    };\n\n    this.$transclude(transclude);\n  };\n\n  /**\n   * Destructs current modal transclusion from DOM.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Modal.prototype.destroy = function() {\n    if (this._element !== null) {\n      this._element.off('show', this._onShow);\n      this._element.off('shown', this._onShown);\n      this._element.off('beforeshow', this._onBeforeShow);\n\n      this._element.off('hide', this._onHide);\n      this._element.off('hidden', this._onHidden);\n      this._element.off('beforeHide', this._onBeforeHide);\n\n      this._element.remove();\n      this._element = null;\n    }\n\n    if (this._scope !== null) {\n      this._scope.$destroy();\n      this._scope = null;\n    }\n\n    if (this._modal !== null) {\n      this._modal.hide();\n      this._modal = null;\n    }\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('modal', function(){\n    return {\n      scope: {\n        isVisible: '=?modal',\n        onShow:'&modalOnShow',\n        onHide:'&modalOnHide',\n        onShown:'&modalOnShown',\n        onHidden:'&modalOnHidden',\n        onBeforeShow:'&modalOnBeforeShow',\n        onBeforeHide:'&modalOnBeforeHide'\n      },\n      restrict: 'A',\n      controller: Modal,\n      transclude: 'element',\n      bindToController: true,\n      controllerAs: 'modalController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular, global) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Video\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Video = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._player = null;\n    this._element = this.$element.find('.player');\n\n    this._onReady = this._onReady.bind(this);\n    this._onStateChange = this._onStateChange.bind(this);\n  };\n\n  Video.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} width Width of player. */\n  Video.prototype.width = 640;\n\n  /** @var {number} height Height of player. */\n  Video.prototype.height = 360;\n\n  /** @var {string} videoId ID of the YouTube video. */\n  Video.prototype.videoId = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Waits for YOUTUBE_API_LOADED flag and initializes\n   * player afterwards including all relevant events.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Video.prototype.$onInit = function()\n    {\n      var $window = this.$injector.get('$window');\n\n      var me = this;\n      var _watchAPIExpression = function() {\n        return $window.YOUTUBE_API_LOADED;\n      };\n\n      var _watchAPICallback = function(isReady) {\n        if (isReady) {\n          me._unwatchAPI();\n          me._onReady();\n        }\n      };\n\n      this._unwatchAPI = this.$scope.$watch(\n        _watchAPIExpression,\n        _watchAPICallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Video.prototype.$onDestroy = function() {\n    if (this._player) {\n      this._player.destroy();\n    }\n  };\n\n  /**\n   * Provides `padding-bottom` with correct\n   * aspect ratio for a responsive viewport.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Video.prototype.getStyle = function() {\n    return {\n      'padding-bottom': (\n        this.height /\n        this.width *\n        100\n      ) + '%',\n    };\n  };\n\n  /**\n   * Invoked by YouTube API when player's ready.\n   *\n   * @private\n   * @method _onReady\n   * @return {Void}\n   */\n  Video.prototype._onReady = function()\n    {\n      var element = this._element.get(0);\n\n      this._player = new YT.Player(\n        element,\n        {\n          width: this.width,\n          height: this.height,\n          videoId: this.videoId,\n          events: {\n            'onStateChange': this._onStateChange\n          }\n      });\n    };\n\n  /**\n   * Invoked by YouTube API when player's ready.\n   *\n   * @private\n   * @method _onReady\n   * @return {Void}\n   */\n  Video.prototype._onStateChange = function(event)\n    {\n      switch (event.data) {\n        case YT.PlayerState.PLAYING:\n          this.onPlaying();\n          break;\n        case YT.PlayerState.PAUSED:\n          this.onPaused();\n          break;\n        case YT.PlayerState.ENDED:\n          this.onEnded();\n          break;\n        case YT.PlayerState.CUED:\n          this.onCued();\n          break;\n        default:\n      }\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('video', function(){\n    return {\n      scope: {\n        videoId:'=videoId',\n        width:'=?videoWidth',\n        height:'=?videoHeight',\n        onCued: '&videoOnCued',\n        onEnded: '&videoOnEnded',\n        onPaused: '&videoOnPaused',\n        onPlaying: '&videoOnPlaying',\n        onBuffering: '&videoOnBuffering'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: Video,\n      bindToController: true,\n      controllerAs: 'videoController',\n      templateUrl: 'views/directives/video.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular, this);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Status\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Status = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.iconRatio = 1;\n    this.isCompact = false;\n    this.iconColor = 'currentcolor';\n  };\n\n  Status.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} tasks User's task hash map. */\n  Status.prototype.tasks = {};\n\n  /** @var {array} tickets User's ticket collection. */\n  Status.prototype.tickets = [];\n\n  /** @var {boolean} tasksVisible If task overview is visible. */\n  Status.prototype.tasksVisible = false;\n\n  /** @var {boolean} ticketsVisible If tickets overview is visible. */\n  Status.prototype.ticketsVisible = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `tasks` and `tickets` properties and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Status.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchTicketsExpression = function(){\n        return user.tickets;\n      };\n\n      var _watchTicketsCallback = function(tickets) {\n        me.tickets = tickets;\n      };\n\n      this._unwatchTickets = this.$scope.$watchCollection(\n        _watchTicketsExpression,\n        _watchTicketsCallback\n      );\n\n      var _watchTasksExpression = function(){\n        return user.getTasks();\n      };\n\n      var _watchTasksCallback = function(tasks) {\n        me.tasks = tasks;\n      };\n\n      this._unwatchTasks = this.$scope.$watch(\n        _watchTasksExpression,\n        _watchTasksCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Status.prototype.$onDestroy = function() {\n    this._unwatchTickets();\n    this._unwatchTasks();\n  };\n\n  /**\n   * Toggles `tasksVisible` property.\n   *\n   * @public\n   * @method toggleTasks\n   * @return {Void}\n   */\n  Status.prototype.toggleTasks = function()\n    {\n      this.tasksVisible = !this.tasksVisible;\n    };\n\n  /**\n   * Toggles `ticketsVisible` property.\n   *\n   * @public\n   * @method toggleTickets\n   * @return {Void}\n   */\n  Status.prototype.toggleTickets = function()\n    {\n      this.ticketsVisible = !this.ticketsVisible;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('status', function(){\n    return {\n      scope: {\n        iconRatio:'=?statusIconRatio',\n        iconColor:'=?statusIconColor',\n        isCompact:'=?statusIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: Status,\n      bindToController: true,\n      controllerAs: 'statusController',\n      templateUrl: 'views/directives/status.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Icons\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusIcons = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.ratio = 1;\n    this.color = 'currentcolor';\n  };\n\n  StatusIcons.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isBeginner If user has state `STATE_BEGINNER` or higher. */\n  StatusIcons.prototype.isBeginner = false;\n\n  /** @var {boolean} isAmateuer If user has state `STATE_AMATEUR` or higher. */\n  StatusIcons.prototype.isAmateuer = false;\n\n  /** @var {boolean} isAdvanced If user has state `STATE_ADVANCED` or higher. */\n  StatusIcons.prototype.isAdvanced = false;\n\n  /** @var {boolean} isExpert If user has state `STATE_EXPERT` or higher. */\n  StatusIcons.prototype.isExpert = false;\n\n  /** @var {boolean} isProfi If user has state `STATE_PROFI` or higher. */\n  StatusIcons.prototype.isProfi = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusIcons.prototype.$onInit = function()\n    {\n      var STATE_BEGINNER = this.$injector.get('STATE_BEGINNER');\n      var STATE_AMATEUR = this.$injector.get('STATE_AMATEUR');\n      var STATE_ADVANCED = this.$injector.get('STATE_ADVANCED');\n      var STATE_EXPERT = this.$injector.get('STATE_EXPERT');\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function(){\n        return user.state;\n      };\n\n      var _watchCallback = function(state) {\n        me.isBeginner = state >= STATE_BEGINNER;\n        me.isAmateur = state >= STATE_AMATEUR;\n        me.isAdvanced = state >= STATE_ADVANCED;\n        me.isExpert = state >= STATE_EXPERT;\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusIcons.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusIcons', function() {\n    return {\n      scope: {\n        ratio:'=?statusIconsRatio',\n        color:'=?statusIconsColor',\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusIcons,\n      bindToController: true,\n      controllerAs: 'statusIconsController',\n      templateUrl: 'views/directives/status-icons.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Label\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusLabel = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  StatusLabel.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} state String represenation of user's `state`. */\n  StatusLabel.prototype.state = null;\n\n  /** @var {boolean} isCompact If presentation is in compact format. */\n  StatusLabel.prototype.isCompact = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusLabel.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function() {\n        return user.state;\n      };\n\n      var _watchCallback = function() {\n        me.state = user.getStateAsString();\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusLabel.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusLabel', function(){\n    return {\n      scope: {\n        isCompact: '=?statusLabelIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusLabel,\n      bindToController: true,\n      controllerAs: 'statusLabelController',\n      templateUrl: 'views/directives/status-label.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Status Label\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var StatusTickets = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  StatusTickets.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} tickets Current user ticket count. */\n  StatusTickets.prototype.tickets = 0;\n\n  /** @var {boolean} isCompact If presentation is in compact format. */\n  StatusTickets.prototype.isCompact = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Watches user's `state` property and maps them for view.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  StatusTickets.prototype.$onInit = function()\n    {\n      var user = this.$injector.get('user');\n\n      var me = this;\n\n      var _watchExpression = function() {\n        return user.tickets;\n      };\n\n      var _watchCallback = function(tickets) {\n        me.tickets = tickets ? tickets.length : 0;\n      };\n\n      this._unwatch = this.$scope.$watchCollection(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  StatusTickets.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('statusTickets', function(){\n    return {\n      scope: {\n        isCompact: '=?statusTicketsIsCompact'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: StatusTickets,\n      bindToController: true,\n      controllerAs: 'statusTicketsController',\n      templateUrl: 'views/directives/status-tickets.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Tabber\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Tabber = function($scope, $element, $attrs, $transclude) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$transclude = $transclude;\n\n    this.domId = 'tabber-' + $scope.$id;\n\n    this.hasExercise = $transclude.isSlotFilled('exercise');\n  };\n\n  Tabber.$inject = ['$scope','$element','$attrs', '$transclude'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} hasExercise If slot `exercise` has contents. */\n  Tabber.prototype.hasExercise = false;\n\n  /** @var {string} activeTab Currently activated tab by name. */\n  Tabber.prototype.activeTab = 'DESCRIPTION';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets `activeTab` property by name.\n   *\n   * @public\n   * @method setActive\n   * @param {string} tab\n   * @return {Void}\n   */\n  Tabber.prototype.setActive = function(tab) {\n    switch (tab) {\n      case 'DESCRIPTION':\n      case 'EXERCISE':\n        this.activeTab = tab;\n      default:\n    }\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('tabber', function(){\n    return {\n      scope: {\n        icon: '=?tabberIcon',\n        activeTab: '=?tabberActiveTab'\n      },\n      restrict: 'A',\n      transclude: {\n        exercise: '?tabberExercise',\n        description: 'tabberDescription'\n      },\n      controller: Tabber,\n      bindToController: true,\n      controllerAs: 'tabberController',\n      templateUrl: 'views/directives/tabber.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, interact */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Draggable\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Draggable = function($scope, $element, $attrs, $injector) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$injector = $injector;\n\n    this._body = null;\n    this._clone = null;\n    this._coordinates = {};\n    this._interactable = null;\n    this._activeClass = 'active';\n    this._itemClass = 'draggable';\n    this._disabledClass = 'disabled';\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.disabled; },\n      function(disabled) {\n        if (disabled) {\n          me.$element.addClass(me._disabledClass);\n        } else {\n          me.$element.removeClass(me._disabledClass);\n        }\n\n        me._interactable.draggable({enabled: !disabled});\n      }\n    );\n\n    this._onResize = this._onResize.bind(this);\n  };\n\n  Draggable.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} data Connected data for draggable. */\n  Draggable.prototype.data = null;\n\n  /** @type {boolean} clone If clone item should be used. */\n  Draggable.prototype.clone = false;\n\n  /** @var {boolean} disabled If draggable is disabled. */\n  Draggable.prototype.disabled = false;\n\n  /** @type {boolean} clone If clone item should be used. */\n  Draggable.prototype.restriction = 'parent';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes `interact` library on element\n   * with all available callbacks for dragging.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Draggable.prototype.$onInit = function() {\n    var $window = this.$injector.get('$window');\n\n    this._body = angular.element(document.body);\n    this.$element.addClass(this._itemClass);\n    var element = this.$element.get(0);\n\n    this._interactable = interact(element);\n\n    var me = this;\n    var options = {\n      inertia: true,\n      autoScroll: true,\n      enabled: !this.disabled,\n      onend: this._onEndItem.bind(this),\n      onmove: this._onMoveItem.bind(this),\n      onstart: this._onStartItem.bind(this),\n      snap: {\n          targets:[function(x,y,interaction) {\n            // 'startCoords' doesn't work here, so\n            // we catch initial position once from\n            // interaction element and this values\n            if (!me._origin) {\n              me._origin = {\n                x: interaction.startCoords.page.x,\n                y: interaction.startCoords.page.y\n              };\n            }\n\n            // if not dropped, move draggable\n            // smoothly back to origin point\n            if (!interaction.dropTarget) {\n              return {\n                x: me._origin.x, // instead of 0\n                y: me._origin.y  // instead of 0\n              };\n            }\n          }],\n          //offset: 'startCoords',\n          endOnly: true\n      }\n    };\n\n    if (this.clone) {\n      angular.extend(options, { manualStart: true });\n      this._interactable.on('move', this._onMove.bind(this));\n    }\n\n    this._interactable.draggable(options);\n    this._interactable.getData = this._getData.bind(this);\n\n    this._window = angular.element($window);\n    this._window.on('resize', this._resize);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Draggable.prototype.$onDestroy = function() {\n    this._window.off('resize', this._onResize);\n    this._interactable.unset();\n    this._unwatch();\n  };\n\n  /**\n   * Resets `origin` info for snapping.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Draggable.prototype._onResize = function() {\n    this._origin = null;\n  };\n\n  /**\n   * Adds `activeClass` to clone and invokes `onDragStart`.\n   *\n   * @private\n   * @method _onStartItem\n   * @return {Void}\n   */\n  Draggable.prototype._onStartItem = function(event) {\n    var target = !this.clone ?\n      angular.element(event.target) :\n      this._clone;\n\n    target.addClass(this._activeClass);\n\n    this._trigger('onDragStart', {\n      $event: event,\n      $data: this.data\n    });\n  };\n\n  /**\n   * This performs actual dragging logic with CSS.\n   * The method triggers the `onDragMove` callback.\n   *\n   * @private\n   * @method _onMoveItem\n   * @return {Void}\n   */\n  Draggable.prototype._onMoveItem = function(event) {\n    var target = !this.clone ?\n      angular.element(event.target) :\n      this._clone;\n\n    var x = (this._coordinates.x || 0) + event.dx;\n    var y = (this._coordinates.y || 0) + event.dy;\n\n    this._translate(target,x,y);\n\n    this._trigger('onDragMove', {\n      $event: event,\n      $data: this.data\n    });\n  };\n\n  /**\n   * This performs resetting work by removing clone.\n   * It invokes always the `onDragEnd` and the `onDrop`\n   * callbacks - if dropped on target element.\n   *\n   * @private\n   * @method _onEndItem\n   * @return {Void}\n   */\n  Draggable.prototype._onEndItem = function(event) {\n    var dropped = !!event.interaction.dropTarget;\n\n    if (!this.clone) {\n      var target = angular.element(event.target);\n      target.removeClass(this._activeClass);\n\n      // remove translate for snapping if\n      // animating back to origin coords!\n      if (!dropped) {\n        this._translate(target,0,0);\n      }\n\n    } else {\n      this._coordinates = {};\n      this._clone.remove();\n      this._clone = null;\n    }\n\n    this._trigger('onDragEnd', {\n      $event: event,\n      $data: this.data\n    });\n\n    if (dropped) {\n      this._trigger('onDrop', {\n        $event: event,\n        $data: this.data\n      });\n    }\n  };\n\n  /**\n   * Creates the clone and triggers manual kick-off for `interact`.\n   * This is necessary because we want:\n   *\n   * 1) being able to show clone object\n   * 2) being able to have disable control\n   *\n   * @private\n   * @method _onMove\n   * @return {Void}\n   */\n  Draggable.prototype._onMove = function(event) {\n    var interactable = event.interactable;\n    var interaction = event.interaction;\n    var element = event.currentTarget;\n\n    // we've to control `enabled` by our own as we are using the\n    // `manualStart` option to create clone - noop if `disabled`\n    if (this.disabled) {\n      return;\n    }\n\n    // create clone if user holds mouse/finger and no interaction\n    // is currently started - position absolutely at end of body!\n    if (interaction.pointerIsDown && !interaction.interacting()) {\n      this._clone = angular.element(element).clone();\n\n      var offsetY = element.clientHeight / 2;\n      var offsetX = element.clientWidth / 2;\n\n      var pageY = !!event.touches ?\n        event.touches[0].pageY :\n        event.pageY;\n      var pageX = !!event.touches ?\n        event.touches[0].pageX :\n        event.pageX;\n\n      this._clone.css({\n        left: (pageX - offsetX) + 'px',\n        top: (pageY - offsetY) + 'px',\n        position: 'absolute'\n      });\n\n      this._body.append(this._clone);\n      element = this._clone.get(0);\n    }\n\n    // invoke 'drag' interaction manually with the target/clone\n    interaction.start({ name: 'drag' }, interactable, element);\n  };\n\n  /**\n   * Retrieves the connected drag object data.\n   *\n   * @private\n   * @method _getData\n   * @return {object}\n   */\n  Draggable.prototype._getData = function() {\n    return this.data;\n  };\n\n  /**\n   * Translates DOM node to given coordinates.\n   *\n   * @private\n   * @method _translate\n   * @param object element\n   * @param number x\n   * @param number y\n   * @return {void}\n   */\n  Draggable.prototype._translate = function(element, x, y) {\n    var translate = 'translate('+x+'px,'+y+'px)';\n\n    element.css({\n      'webkitTransform': translate,\n      'mozTransform': translate,\n      'msTransform': translate,\n      'oTransform': translate,\n      'transform': translate\n    });\n\n    this._coordinates.x = x;\n    this._coordinates.y = y;\n  };\n\n  /**\n   * Primitive method for invoking callbacks.\n   *\n   * @private\n   * @method _trigger\n   * @return {void}\n   */\n  Draggable.prototype._trigger = function(method, args) {\n    this.$scope.$evalAsync(this[method].bind(this,args));\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('draggable', function(){\n    return {\n      scope: {\n        data: '=?draggableData',\n        clone: '=?draggableClone',\n        disabled: '=?draggableDisabled',\n        onDragStart: '&draggableOnDragStart',\n        onDragMove: '&draggableOnDragMove',\n        onDragEnd: '&draggableOnDragEnd',\n        onDrop: '&draggableOnDrop'\n      },\n      restrict: 'A',\n      controller: Draggable,\n      bindToController: true,\n      controllerAs: 'draggableController'\n    };\n  });\n\n  // --------------------------------------------------\n  // Dropable\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Dropable = function($scope, $element, $attrs) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n\n    this._interactable = null;\n    this._enterClass = 'enter';\n    this._activeClass = 'active';\n    this._itemClass = 'dropable';\n    this._acceptClass = 'draggable';\n    this._disabledClass = 'disabled';\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.disabled; },\n      function(disabled) {\n        if (disabled) {\n          me.$element.addClass(me._disabledClass);\n        } else {\n          me.$element.removeClass(me._disabledClass);\n        }\n      }\n    );\n  };\n\n  Dropable.$inject = ['$scope','$element','$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} disabled If draggable is disabled. */\n  Dropable.prototype.disabled = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes `interact` library on element\n   * with all available callbacks for dragging.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Dropable.prototype.$onInit = function() {\n    this._body = angular.element(document.body);\n    this.$element.addClass(this._itemClass);\n    var accept = '.' + this._acceptClass;\n    var element = this.$element.get(0);\n\n    this._interactable = interact(element)\n      .dropzone({\n        accept: accept,\n        enabled: !this.disabled,\n        ondrop: this._onDrop.bind(this),\n        ondragenter: this._onDragEnter.bind(this),\n        ondragleave: this._onDragLeave.bind(this),\n        ondropactivate: this._onDropActivate.bind(this),\n        ondropdeactivate: this._onDropDeactivate.bind(this)\n      });\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  Dropable.prototype.$onDestroy = function() {\n    this._interactable.unset();\n    this._unwatch();\n  };\n\n  /**\n   * Removes the active class from element and\n   * triggers the `onDropDeactivate` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDropDeactivate = function(event) {\n    this.$element.removeClass(this._activeClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDropDeactivate', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Applies the active class from element and\n   * triggers the `onDropActivate` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDropActivate = function(event) {\n    this.$element.addClass(this._activeClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDropActivate', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Applies the enter class from element and\n   * triggers the `onDragEnter` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDragEnter = function(event) {\n    this.$element.addClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDragEnter', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Removes the enter class from element and\n   * triggers the `onDragLeave` callback.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDragLeave = function(event) {\n    this.$element.removeClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDragLeave', {\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Removes the enter class from element and\n   * triggers the `onDrop` callback with data\n   * from the draggable element.\n   *\n   * @private\n   * @method _onDropDeactivate\n   * @return {Void}\n   */\n  Dropable.prototype._onDrop = function(event) {\n    this.$element.removeClass(this._enterClass);\n    var data = event.draggable.getData();\n\n    this._trigger('onDrop',{\n      $event: event,\n      $data: data\n    });\n  };\n\n  /**\n   * Primitive method for invoking callbacks.\n   *\n   * @private\n   * @method _trigger\n   * @return {void}\n   */\n  Dropable.prototype._trigger = function(method, args) {\n    this.$scope.$evalAsync(this[method].bind(this,args));\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('dropable', function(){\n    return {\n      scope: {\n        disabled: '=?dropableDisabled',\n        onDropDeactivate: '&dropableOnDropDeactivate',\n        onDropActivate: '&dropableOnDropActivate',\n        onDragEnter: '&dropableOnDragEnter',\n        onDragLeave: '&dropableOnDragLeave',\n        onDrop: '&dropableOnDrop'\n      },\n      restrict: 'A',\n      controller: Dropable,\n      bindToController: true,\n      controllerAs: 'droppableController'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Accordion\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Accordion = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._accordion = null;\n    this._collapsibles = [];\n    this._init = this._init.bind(this);\n    this._onCollapsibleClicked = this._onCollapsibleClicked.bind(this);\n  };\n\n  Accordion.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} options Options for accordion. */\n  Accordion.prototype.options = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Initializes accordion after rendering.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  Accordion.prototype.$onInit = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    // wait for being rendered\n    $timeout(this._init, 1);\n  };\n\n  /**\n   * Tears down accordion on desctruction.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {Void}\n   */\n  Accordion.prototype.$onDestroy = function() {\n    if (this._accordion) {\n      this._accordion.$destroy();\n    }\n\n    this._unlistenCollapsible();\n  };\n\n  /**\n   * Sets `activeTab` property by name.\n   *\n   * @public\n   * @method addCollapsible\n   * @param {Object} collapsible\n   * @return {Void}\n   */\n  Accordion.prototype.addCollapsible = function(collapsible) {\n    this._collapsibles.push(collapsible)\n  };\n\n  /**\n   * Initializes UIKit accordion and event listeners.\n   *\n   * @private\n   * @method _init\n   * @return {Void}\n   */\n  Accordion.prototype._init = function() {\n    var $rootScope = this.$injector.get('$rootScope');\n    var element = this.$element.get(0);\n\n    var options = angular.extend(\n      {\n        targets: '.collapsible',\n        animation: false\n      },\n      this.options || {}\n    );\n\n    this._unlistenCollapsible = $rootScope.$on(\n      'collapsible_clicked',\n      this._onCollapsibleClicked\n    );\n\n    this._accordion = UIkit.accordion(element, options);\n  };\n\n  /**\n   * Initializes UIKit accordion and event listeners.\n   *\n   * @private\n   * @method _onCollapsibleClicked\n   * @return {Void}\n   */\n  Accordion.prototype._onCollapsibleClicked = function(evt, sender) {\n    var iterate = function(item, index) {\n      var senderId = sender.$scope.$id;\n      var itemId = item.$scope.$id;\n\n      // ignore sender collapsible\n      if (senderId === itemId) {\n        return;\n      }\n\n      // ignore closing sender\n      if (!sender.open) {\n        return;\n      }\n\n      // ignore closed items\n      if (!item.open) {\n        return\n      }\n\n      // toggle open items\n      this._accordion.toggle(index);\n      item.open = false;\n    };\n\n    angular.forEach(\n      this._collapsibles,\n      iterate.bind(this)\n    );\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('accordion', function(){\n    return {\n      scope: {\n        options: '=?accordionOptions'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: Accordion,\n      bindToController: true,\n      controllerAs: 'accordionController',\n      templateUrl: 'views/directives/accordion.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Accordion Item\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Collapsible = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  Collapsible.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Unique dom id for this collapsible. */\n  Collapsible.prototype.id = null;\n\n  /** @var {boolean} open If collapsible is currently open. */\n  Collapsible.prototype.open = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets `activeTab` property by name.\n   *\n   * @public\n   * @method setActive\n   * @param {string} tab\n   * @return {Void}\n   */\n  Collapsible.prototype.$onInit = function() {\n    var defaultId = 'collapsible-' + this.$scope.$id;\n\n    this.accordion.addCollapsible(this);\n    this.domId = this.id || domId;\n  };\n\n  /**\n   * Sets `activeTab` property by name.\n   *\n   * @public\n   * @method setActive\n   * @param {string} tab\n   * @return {Void}\n   */\n  Collapsible.prototype.onClick = function() {\n    this.open = !this.open;\n\n    var $rootScope = this.$injector.get('$rootScope');\n    $rootScope.$broadcast('collapsible_clicked', this);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('collapsible', function(){\n    return {\n      scope: {\n        id: '=?collapsible',\n        open: '=?collapsibleOpen'\n      },\n      restrict: 'A',\n      transclude: {\n        title: '?collapsibleTitle',\n        content: 'collapsibleContent'\n      },\n      require: {\n        accordion: '^accordion'\n      },\n      controller: Collapsible,\n      bindToController: true,\n      controllerAs: 'collapsibleController',\n      templateUrl: 'views/directives/collapsible.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, UIkit, jQuery */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // ScrollTo\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ScrollTo = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.options = {};\n\n    this._source = null;\n    this._target = null;\n    this._scroller = null;\n    this._init = this._init.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onScrolled = this._onScrolled.bind(this);\n  };\n\n  ScrollTo.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} delay Delayed invokation in ms. */\n  ScrollTo.prototype.delay = null;\n\n  /** @var {object} options Options for `scroll` service. */\n  ScrollTo.prototype.options = null;\n\n  /** @var {function} callback Callback for scroll finished. */\n  ScrollTo.prototype.callback = null;\n\n  /** @var {boolean} disabled Flag indicating disabled state. */\n  ScrollTo.prototype.disabled = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Waits for rendering and invokes `_init()`.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ScrollTo.prototype.$onInit = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    // wait for being rendered\n    $timeout(this._init, 1);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ScrollTo.prototype.$onDestroy = function() {\n    this._source.off('scrolled', this._onScrolled);\n    this.$element.off('click', this._onClick);\n\n    this._scroller.$destroy(true);\n  };\n\n  /**\n   * Extracts dom element and sets up scroller.\n   *\n   * @private\n   * @method _init\n   * @return {void}\n   */\n  ScrollTo.prototype._init = function() {\n    // try to grab target from - can be either\n    // a jquery element or a string id / hash\n    if (this.element instanceof jQuery) {\n      this._target = this.element;\n    } else {\n      if (angular.isString(this.element)) {\n        if (this.element.charAt(0) !== '#') {\n          this._target = '#' + this.element;\n        }\n\n        this._target = jQuery(this._target);\n      }\n    }\n\n    if (this._target.length === 0) {\n      console.warn('scroll-to.js: Invalid target element!');\n      return;\n    }\n\n    // need to create a dummy `<a href='#hash'></a>`\n    // element to set it as source object for UIkit\n    var href = '#' + this._target.id;\n    this._source = jQuery('<a href=\"'+href+'\"></a>');\n\n    this.options = this.options || {};\n    this.options.easing = angular.isString(this.options.easing)\n      ? this.options.easing\n      : 'easeOutExpo';\n    this.options.offset = angular.isNumber(this.options.offset)\n      ? this.options.offset\n      : 100;\n    this.options.duration = angular.isNumber(this.options.duration)\n      ? this.options.duration\n      : 500;\n\n    this.$element.on('click', this._onClick);\n    this._source.on('scrolled', this._onScrolled);\n\n    this._scroller = UIkit.scroll(this._source, this.options);\n  };\n\n  /**\n   * Invokes scrolling to target element.\n   *\n   * @private\n   * @method _onClick\n   * @return {void}\n   */\n  ScrollTo.prototype._onClick = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    var onDelay = function() {\n      if (this.disabled) {\n        return;\n      }\n\n      this._scroller.scrollTo(this._target);\n    };\n\n    $timeout(onDelay.bind(this), this.delay);\n  };\n\n  /**\n   * Tries to invoke callback after scrolling.\n   *\n   * @private\n   * @method _onScrolled\n   * @return {void}\n   */\n  ScrollTo.prototype._onScrolled = function() {\n    if (!angular.isFunction(this.callback)) {\n      return;\n    }\n\n    this.$scope.$evalAsync(this.callback);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('scrollTo', function(){\n    return {\n      scope: {\n        element: '=scrollTo',\n        delay: '=?scrollToDelay',\n        options: '=?scrollToOptions',\n        callback: '=?scrollToCallback',\n        disabled: '=?scrollToDisabled'\n      },\n      restrict: 'A',\n      controller: ScrollTo,\n      bindToController: true\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Evaluation\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var Evaluation = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.user = $injector.get('user');\n    this.domId = 'evaluation-' + $scope.$id;\n  };\n\n  Evaluation.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} domId Unique dom id for scrolling. */\n  Evaluation.prototype.domId = null;\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('evaluation', function(){\n    return {\n      scope: {\n        parent: '=evaluation'\n      },\n      restrict: 'A',\n      transclude: {\n        text: 'evaluationText',\n        customButtons: '?evaluationCustomButtons',\n        defaultButtons: '?evaluationDefaultButtons'\n      },\n      controller: Evaluation,\n      bindToController: true,\n      controllerAs: 'evaluationController',\n      templateUrl: 'views/directives/evaluation.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Locked State\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var LockedState = function($scope, $element, $attrs, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n\n    this.user = $injector.get('user');\n  };\n\n  LockedState.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('lockedState', function(){\n    return {\n      scope: {\n        isLocked: '=?lockedState'\n      },\n      restrict: 'A',\n      transclude: {\n        userText: '?userText',\n        adminText: '?adminTExt'\n      },\n      controller: LockedState,\n      bindToController: true,\n      controllerAs: 'lockedStateController',\n      templateUrl: 'views/directives/locked-state.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Form Field\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var FormField = function($scope, $element, $attrs, $transclude, $timeout)\n    {\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n      this.$timeout = $timeout;\n      this.$transclude = $transclude;\n\n      this._transcludeElements = [];\n      this._transcludeScopes = [];\n      this._cloneDefault = null;\n      this._cloneLabel = null;\n      this._unlisten = [];\n      this._unwatch = [];\n    };\n\n  FormField.$inject = ['$scope', '$element', '$attrs', '$transclude', '$timeout'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Dom id form element. */\n  FormField.prototype.id = '';\n\n  /** @var {string} label Label of form element. */\n  FormField.prototype.label = '';\n\n  /** @var {ngModelController} model Added `ngModel` controller. */\n  FormField.prototype.ngModel = null;\n\n  /** @var {boolean} resetEmpty If validation resets on empty model. */\n  FormField.prototype.resetEmpty = true;\n\n  /** @var {boolean} showMessages True if `ngMessages` are visible. */\n  FormField.prototype.showMessages = false;\n\n  /** @var {string} labelClass Class to append to label. */\n  FormField.prototype.labelClass = 'uk-form-label';\n\n  /** @var {string} failureClass Class to append on failure. */\n  FormField.prototype.failureClass = 'uk-form-danger';\n\n  /** @var {string} successClass Class to append on success. */\n  FormField.prototype.successClass = 'uk-form-success';\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Renders custom transclusion (form element) and\n   * sets up watchers as well as clean up methods.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  FormField.prototype.$onInit = function()\n    {\n      // create dom id from `name` and $scope id\n      // controller properties are only available\n      // in $onInit() callback from Angular 1.5.x\n      this.id = 'form-field-' + this.$scope.$id;\n\n      // add watch properties\n      this._addWatches();\n\n      // transclude contents\n      this._transclude();\n    };\n\n  /**\n   * Removes transcluded elements, scope and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  FormField.prototype.$onDestroy = function()\n    {\n      angular.forEach(this._transcludeElements, function(element){\n        element.remove();\n      });\n\n      angular.forEach(this._transcludeScopes, function(scope){\n        scope.$destroy();\n      });\n\n      angular.forEach(this._unlisten, function(unlisten){\n        unlisten();\n      });\n\n      angular.forEach(this._unwatch, function(unwatch){\n        unwatch();\n      });\n    };\n\n  /**\n   * Sets model controller from transcluded form\n   * element using the `ng-model` attribute and\n   * the `form-field-model` helper component.\n   *\n   * @public\n   * @method setModel\n   * @param {NgModelController} ngModel\n   * @return {void}\n   */\n  FormField.prototype.setModel = function(ngModel)\n    {\n      this.ngModel = ngModel;\n    };\n\n  /**\n   * Updates validation depending on `ngModel.$valid`.\n   *\n   * @private\n   * @method _update\n   * @return {void}\n   */\n  FormField.prototype._update = function()\n    {\n      if (this.ngModel.$valid) {\n        this._cloneDefault.removeClass(this.failureClass);\n        this._cloneDefault.addClass(this.successClass);\n      } else {\n        this._cloneDefault.removeClass(this.successClass);\n        this._cloneDefault.addClass(this.failureClass);\n      }\n\n      this.showMessages = this.ngModel.$invalid;\n    };\n\n  /**\n   * Resets corresponding validation properties.\n   *\n   * @private\n   * @method _reset\n   * @return {boolean}\n   */\n  FormField.prototype._reset = function()\n    {\n      this._cloneDefault.removeClass(this.failureClass);\n      this._cloneDefault.removeClass(this.successClass);\n      this.ngModel.$setUntouched();\n      this.showMessages = false;\n    };\n\n  /**\n   * Adds scope watches for `isValid()` and `isInvalid()`.\n   *\n   * @private\n   * @method _addWatches\n   * @return {void}\n   */\n  FormField.prototype._addWatches = function()\n    {\n      var me = this;\n\n      // observes `ngModel` controller for changing any\n      // of its validation properties such as `$valid`\n      var unwatchModel = this.$scope.$watchCollection(\n        'formFieldController.ngModel',\n        function(newModel, oldModel)\n        {\n          // ignore initial invocation\n          if (newModel === oldModel) {\n            return;\n          }\n\n          // as long as model hasn't been\n          // touched no validation's made\n          if (!newModel.$touched) {\n              return;\n          }\n\n          // wait for async validators\n          if (newModel.$pending) {\n            return;\n          }\n\n          // if no view value is present\n          // reset all validation props!\n          if (!newModel.$viewValue) {\n            if (me.resetEmpty) {\n              me._reset();\n              return;\n            }\n          }\n\n          me._update();\n        }\n      );\n\n      this._unwatch.push(unwatchModel);\n    };\n\n  /**\n   * Transcludes `default` and `label` slot programmatically\n   * to append custom attributes and events to dom elements.\n   *\n   * @private\n   * @method _transclude\n   * @return {void}\n   */\n  FormField.prototype._transclude = function()\n    {\n      var me = this;\n\n      // adds `id` attribute to be focues by <label>\n      var transcludeDefault = function(clone, scope)\n      {\n        var domId = '#default-' + me.id;\n        var template = angular.element(domId);\n\n        clone.attr('id', me.id);\n\n        template.replaceWith(clone);\n\n        me._cloneDefault = clone;\n\n        me._transcludeScopes.push(scope);\n        me._transcludeElements.push(clone);\n      };\n\n      // adds `labelClass` and sets `for` attribute\n      // for <label> in order to auto focus element\n      var transcludeLabel = function(clone, scope)\n      {\n        var domId = '#label-' + me.id;\n        var template = angular.element(domId);\n\n        clone.attr('for', me.id);\n        clone.addClass(me.labelClass);\n\n        template.replaceWith(clone);\n\n        me._cloneLabel = clone;\n\n        me._transcludeScopes.push(scope);\n        me._transcludeElements.push(clone);\n      };\n\n      // wait for dom to be ready before transclude\n      var timeout = function()\n      {\n        me.$transclude(transcludeDefault, null, null);\n        me.$transclude(transcludeLabel, null, 'label');\n      };\n\n      this.$timeout(timeout);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('formField',function() {\n    return {\n      scope: {\n          name: '=formField',\n          resetEmpty: '=?formFieldResetEmpty',\n          labelClass: '=?formFieldLabelClass',\n          failureClass: '=?formFieldFailureClass',\n          successClass: '=?formFieldSuccessClass'\n      },\n      transclude: {\n        label: '?label',\n        messageMin: '?messageMin',\n        messageMax: '?messageMax',\n        messageUrl: '?messageUrl',\n        messageEmail: '?messageEmail',\n        messageNumber: '?messageNumber',\n        messagePattern: '?messagePattern',\n        messageRequired: '?messageRequired',\n        messageMinlength: '?messageMinlength',\n        messageMaxlength: '?messageMaxlength',\n        messagesCustom: '?messagesCustom'\n      },\n      restrict: 'A',\n      controller: FormField,\n      bindToController: true,\n      controllerAs: 'formFieldController',\n      templateUrl: 'views/directives/form-field.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // Form Field Model\n  // --------------------------------------------------\n\n  /**\n   * @constructor\n   */\n  var FormFieldModel = function($scope, $attrs, $element, $injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n  };\n\n  FormFieldModel.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} autoFocus If true element receives focus on init. */\n  FormFieldModel.prototype.autoFocus = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registers `ngModel` on `formField` controller.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  FormFieldModel.prototype.$onInit = function()\n    {\n      var $timeout = this.$injector.get('$timeout');\n      var $log = this.$injector.get('$log');\n\n      if (!this.formField) {\n        $log.warn('formFieldModel: No form field controller found!');\n        return;\n      }\n\n      if (this.autoFocus) {\n        var element = this.$element.get(0);\n        var focus = function() {\n          element.focus();\n        };\n\n        $timeout(focus, 1);\n      }\n\n      this.formField.setModel(this.ngModel);\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('formFieldModel', function(){\n    return {\n      scope: {\n        'autoFocus': '=?formFieldModelAutoFocus'\n      },\n      restrict: 'A',\n      require: {\n        'ngModel': 'ngModel',\n        'formField': '^?formField',\n      },\n      bindToController: true,\n      controller: FormFieldModel\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // Asynchronous Validators\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorWorkshopExists = function($scope, $element, $attrs, $q, Workshop)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Workshop = Workshop;\n\n      this.keyLocked = 'validatorWorkshopLocked';\n    };\n\n  ValidatorWorkshopExists.$inject = ['$scope', '$element', '$attrs', '$q', 'Workshop'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorWorkshopExists` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorWorkshopExists.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorWorkshopExists = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the workshop exists. It sets implicitly `validatorWorkshopLocked`\n   * to avoid multiple server queries and sets to invalid if `isActive` is not true (= locked).\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorWorkshopExists.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var me = this;\n      var successCallback = function(workshop)\n      {\n        if (!workshop.isActive) {\n          me.ngModel.$setValidity(me.keyLocked, false);\n          defer.reject();\n          return;\n        }\n\n        me.ngModel.$setValidity(me.keyLocked, true);\n        defer.resolve();\n      };\n\n      var failureCallback = function()\n      {\n        defer.reject();\n      };\n\n      this.Workshop.validateWorkshopFrontend(\n        {\n          code: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorWorkshopExists',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorWorkshopExists\n      };\n  });\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorWorkshopUnique = function($scope, $element, $attrs, $q, Workshop)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Workshop = Workshop;\n    };\n\n  ValidatorWorkshopUnique.$inject = ['$scope', '$element', '$attrs', '$q', 'Workshop'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorWorkshopUnique` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorWorkshopUnique.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorWorkshopUnique = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the workshop exists.\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorWorkshopUnique.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var successCallback = function()\n      {\n        defer.reject();\n      };\n\n      var failureCallback = function()\n      {\n        defer.resolve();\n      };\n\n      this.Workshop.validateWorkshopBackend(\n        {\n          code: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorWorkshopUnique',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorWorkshopUnique\n      };\n  });\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ValidatorAdminUnique = function($scope, $element, $attrs, $q, Admin)\n    {\n      this.$q = $q;\n      this.$scope = $scope;\n      this.$attrs = $attrs;\n      this.$element = $element;\n\n      this.Admin = Admin;\n    };\n\n  ValidatorAdminUnique.$inject = ['$scope', '$element', '$attrs', '$q', 'Admin'];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Applies `validatorAdminUnique` to $asyncValidators.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  ValidatorAdminUnique.prototype.$onInit = function()\n    {\n      this.ngModel.$asyncValidators.validatorAdminUnique = this.validate.bind(this);\n    };\n\n  /**\n   * Queries server to see if the admin exists.\n   *\n   * @public\n   * @method validate\n   * @return {Void}\n   */\n  ValidatorAdminUnique.prototype.validate = function(modelValue/*, newValue*/)\n    {\n      var defer = this.$q.defer();\n\n      var successCallback = function()\n      {\n        defer.reject();\n      };\n\n      var failureCallback = function()\n      {\n        defer.resolve();\n      };\n\n      this.Admin.validateAdmin(\n        {\n          username: modelValue\n        },\n        successCallback,\n        failureCallback\n      );\n\n      return defer.promise;\n    };\n\n  //\n  // REGISTRY\n  //\n  angular.module(ANGULAR_MODULE).directive('validatorAdminUnique',function() {\n      return {\n        restrict: 'A',\n        require: {\n          ngModel: 'ngModel'\n        },\n        bindToController: true,\n        controller: ValidatorAdminUnique\n      };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // InterestTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var InterestTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_INTEREST');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.domId = 'interest-task-' + $scope.$id;\n\n    this.user = this.$injector.get('user');\n    this.task = this.user.getTaskByType(type);\n    this.result = this.user.getPendingByType(type);\n  };\n\n  InterestTask.$inject = ['$scope', '$element', '$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} user Alias to user service. */\n  InterestTask.prototype.user = null;\n\n  /** @var {object} task Task's resource from server. */\n  InterestTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  InterestTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  InterestTask.prototype.resolved = false;\n\n  /** @var {number} currentExercise Count of correct answers. */\n  InterestTask.prototype.currentExercise = 1;\n\n  /** @var {number} correctAnswers Count of correct answers. */\n  InterestTask.prototype.correctAnswers = null;\n\n  /** @var {number} exercise1Answer Answer for first exercise. */\n  InterestTask.prototype.exercise1Answer = null;\n\n  /** @var {number} exercise2Answer Answer for second exercise. */\n  InterestTask.prototype.exercise2Answer = null;\n\n  /** @var {boolean} exercise1Correct Resolution state of first exercise. */\n  InterestTask.prototype.exercise1Correct = false;\n\n  /** @var {boolean} exercise2Correct Resolution state of second exercise. */\n  InterestTask.prototype.exercise2Correct = false;\n\n  /** @var {number} exercise1Result Correct result for first exercise. */\n  InterestTask.prototype.exercise1Result = null;\n\n  /** @var {number} exercise2Result Correct result for second exercise. */\n  InterestTask.prototype.exercise2Result = null;\n\n  // SETTINGS\n\n  /** @var {number} amount Amount of money. */\n  InterestTask.prototype.amount = 1000;\n\n  /** @var {number} rate Interest rate. */\n  InterestTask.prototype.rate = 0.01;\n\n  /** @var {number} years Number of years. */\n  InterestTask.prototype.years = 1;\n\n  // MISC\n\n  /** @var {string} domId Unique dom id for this task for scrolling purposes. */\n  InterestTask.prototype.domId = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  InterestTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  InterestTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        exercise1: {\n          currentResult: this.exercise1Result,\n          actualResult: this.exercise1Answer,\n          isValid: this.exercise1Correct\n        },\n        exercise2: {\n          currentResult: this.exercise2Result,\n          actualResult: this.exercise2Answer,\n          isValid: this.exercise2Correct\n        },\n        currentExercise: this.currentExercise+1\n      },\n      isPending: this._isPending()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  InterestTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  InterestTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.currentExercise === 1) {\n      if (!this.exercise1Answer) {\n        return false;\n      }\n    }\n\n    if (this.currentExercise === 2) {\n      if (!this.exercise2Answer) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  InterestTask.prototype.init = function() {\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // `exercise2Answer` cannot be desisted cause it's the\n      // condition in last step before setting `isPending`\n      this.exercise1Answer = json.exercise1.actualResult;\n      this.currentExercise = json.currentExercise;\n    }\n\n    this.resolved = false;\n    this.exercise1Result = this._calculateResult(1);\n    this.exercise2Result = this._calculateResult(1 + this.years);\n\n    this._setCorrectAnswers();\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  InterestTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Updates answers, state and counters\n   * for given exercise for evaluation.\n   *\n   * @public\n   * @method update\n   * @param {number} value\n   * @param {string} exercise\n   * @return {Void}\n   */\n  InterestTask.prototype.update = function(){\n    var me = this;\n    var successCallback = function(){\n      // updated after resolve cause\n      // we need current exercise in\n      // `canResolve()` for checking\n      me.currentExercise++;\n    };\n    var failureCallback = function(){};\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  InterestTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var payload = this.getPayload();\n    var result = callback({\n      payload: payload\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      if (result.isPending) {\n\n        me.result = result;\n        return;\n      }\n\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Updates answers for given exercise with sum.\n   *\n   * @public\n   * @method setResult\n   * @param {number} value\n   * @param {string} exercise\n   * @return {boolean}\n   */\n  InterestTask.prototype.setResult = function(value, exercise){\n    switch(exercise) {\n      case 'exercise1':\n        this.exercise1Answer = value || null;\n        break;\n      case 'exercise2':\n        this.exercise2Answer = value || null;\n        break;\n      default:\n    }\n\n    this._setCorrectAnswers();\n  };\n\n  /**\n   * Checks if `exercise2Answer` is already set.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  InterestTask.prototype._isPending = function(){\n    return this.exercise2Answer === null;\n  };\n\n  /**\n   * Updates the poroperty belonging to correctness.\n   *\n   * @private\n   * @method _setCorrectAnswers\n   * @return {void}\n   */\n  InterestTask.prototype._setCorrectAnswers = function() {\n    this.exercise1Correct = this.exercise1Answer === this.exercise1Result;\n    this.exercise2Correct = this.exercise2Answer === this.exercise2Result;\n\n    if (this.exercise1Correct && this.exercise2Correct) {\n      this.correctAnswers = 2;\n    } else if (this.exercise1Correct) {\n      this.correctAnswers = 1;\n    } else if (this.exercise2Correct) {\n      this.correctAnswers = 1;\n    } else {\n      this.correctAnswers = 0;\n    }\n  };\n\n  /**\n   * Calculates result for given years.\n   *\n   * @private\n   * @method _calculateResult\n   * @param {number} years\n   * @return {number}\n   */\n  InterestTask.prototype._calculateResult = function(years) {\n    return this.amount * Math.pow(1 + this.rate, years || 1);\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('interestTask', function(){\n    return {\n      scope: {\n        rate: '=?interestTaskRate',\n        years: '=?interestTaskYears',\n        amount: '=?interestTaskAmount',\n        onUpdate: '&interestTaskOnUpdate',\n        onResolve: '&interestTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: InterestTask,\n      bindToController: true,\n      controllerAs: 'interestTaskController',\n      templateUrl: 'views/directives/tasks/interest-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // InterestTask Exercise\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var InterestTaskExercise = function($scope,$element,$attrs) {\n    this.$element = $element;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n\n    this.disabled = false;\n    this.stack = [];\n    this.sum = 0;\n\n    var me = this;\n    this._unwatch = $scope.$watch(\n      function(){ return me.sum; },\n      function(sum) {\n        if (!sum) {\n          me.sum = 0;\n          me.stack = [];\n        }\n      }\n    );\n  };\n\n  InterestTaskExercise.$inject = ['$scope','$element','$attrs'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} disabled If exercise is currently disabled. */\n  InterestTaskExercise.prototype.disabled = false;\n\n  /** @var {array} stack Stack collection all notes and coins. */\n  InterestTaskExercise.prototype.stack = [];\n\n  /** @var {number} sum Total sum of all values from `stack`. */\n  InterestTaskExercise.prototype.sum = 0;\n\n  /** @var {array} notes All selectable notes for exercise. */\n  InterestTaskExercise.prototype.notes = [500,200,100,50,20,10,5];\n\n  /** @var {array} notes All selectable coins for exercise. */\n  InterestTaskExercise.prototype.coins = [2,1,0.5,0.2,0.1,0.05,0.02,0.01];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  InterestTaskExercise.prototype.$onDestroy = function() {\n    this._unwatch();\n  };\n\n  /**\n   * Adds value to `stack`, increases `sum`\n   * and invokes the `onUpdate` callback.\n   *\n   * @public\n   * @method onDrop\n   * @return {Void}\n   */\n  InterestTaskExercise.prototype.onDrop = function(value){\n    this.stack.push(value);\n    this.sum += value;\n\n    this.onUpdate({\n      sum: this.sum\n    });\n  };\n\n  /**\n   * Removes last item from `stack`, decreases\n   * `sum` and invokes the `onUpdate` callback.\n   *\n   * @public\n   * @method revert\n   * @return {Void}\n   */\n  InterestTaskExercise.prototype.revert = function() {\n    this.sum -= this.stack.pop();\n\n    this.onUpdate({\n      sum: this.sum\n    });\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('interestTaskExercise', function(){\n    return {\n      scope: {\n        sum: '=?interestTaskExerciseSum',\n        onUpdate: '&interestTaskExerciseOnUpdate',\n        disabled: '=?interestTaskExerciseDisabled'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: InterestTaskExercise,\n      bindToController: true,\n      controllerAs: 'interestTaskExerciseController',\n      templateUrl: 'views/directives/tasks/interest-task-exercise.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // DiversificationTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var DiversificationTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_DIVERSIFICATION');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  DiversificationTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  DiversificationTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  DiversificationTask.prototype.resolved = false;\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTask.prototype.heads = 'K';\n\n  /** @var {string} tails Current class of tails side. */\n  DiversificationTask.prototype.tails = 'Z';\n\n  /** @var {array} companies Data for companies. */\n  DiversificationTask.prototype.companies = {};\n\n  /** @var {array} tickets Data for tickets. */\n  DiversificationTask.prototype.tickets = {};\n\n  /** @var {array} sides Two values for coin. */\n  DiversificationTask.prototype.sides = [];\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  DiversificationTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  DiversificationTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        tickets: {\n          one: this.tickets.one.company,\n          two: this.tickets.two.company\n        },\n        throws: {\n          one: this.throws.one.toss,\n          two: this.throws.two.toss\n        }\n      },\n      ticketCount: this.getTicketCount()\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  DiversificationTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  DiversificationTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.tickets.one.company) {\n      return false;\n    }\n\n    if (!this.tickets.two.company) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  DiversificationTask.prototype.init = function() {\n    var random = this.$injector.get('random');\n\n    this.sides = [\n      this.heads,\n      this.tails\n    ];\n\n    this.throws = {\n      one: {\n        id: 1,\n        toss: random.pick(this.sides)\n      },\n      two: {\n        id: 2,\n        toss: random.pick(this.sides)\n      }\n    };\n\n    this.tickets = {\n      one: {\n        id: 1,\n        company: null\n      },\n      two: {\n        id: 2,\n        company: null\n      }\n    };\n\n    this.companies = {\n      one: {\n        id: 1,\n        count: 0,\n        tickets: {},\n        name: 'Smart',\n        image: 'company-a.svg'\n      },\n      two: {\n        id: 2,\n        count: 0,\n        tickets: {},\n        name: 'Phone',\n        image: 'company-b.svg'\n      }\n    };\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  DiversificationTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Adds or removes a ticket from given company.\n   *\n   * @public\n   * @method update\n   * @param ticket\n   * @param company\n   * @param action\n   * @return {void}\n   */\n  DiversificationTask.prototype.update = function(ticket, company, action){\n    switch (action) {\n      case 'add':\n        if (!company.tickets[ticket.id]) {\n          company.tickets[ticket.id] = ticket;\n          ticket.company = company.name;\n          company.count++;\n        }\n        break;\n      case 'remove':\n        if (company.tickets[ticket.id]) {\n          delete company.tickets[ticket.id];\n          ticket.company = null;\n          company.count--;\n        }\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  DiversificationTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates total ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTotalTickets\n   * @return {number}\n   */\n  DiversificationTask.prototype.getTicketCount = function(){\n    var factorA = this.throws.one.toss === this.heads ? 2 : 1;\n    var factorB = this.throws.two.toss === this.heads ? 2 : 1;\n\n    var ticketsA = this.companies.one.count * factorA;\n    var ticketsB = this.companies.two.count * factorB;\n\n    return ticketsA + ticketsB;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('diversificationTask', function(){\n    return {\n      scope: {\n        onResolve: '&diversificationTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: DiversificationTask,\n      controllerAs: 'diversificationTaskController',\n      templateUrl: 'views/directives/tasks/diversification-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // DiversificationTask Coin\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var DiversificationTaskCoin = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._element = this.$element.find('.coin');\n  };\n\n  DiversificationTaskCoin.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} toss One of `heads` or `tails`. */\n  DiversificationTaskCoin.prototype.toss = null;\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTaskCoin.prototype.sides = [];\n\n  /** @var {string} heads Current class of heads side. */\n  DiversificationTaskCoin.prototype.heads = 'K';\n\n  /** @var {string} tails Current class of tails side. */\n  DiversificationTaskCoin.prototype.tails = 'Z';\n\n  /** @var {boolean} flip Flag to invoke a new toss. */\n  DiversificationTaskCoin.prototype.flip = false;\n\n  /** @var {boolean} flip Flag to apply CSS classes. */\n  DiversificationTaskCoin.prototype.animate = false;\n\n  /** @var {string} backClass CSS class for back side. */\n  DiversificationTaskCoin.prototype.back = 'back';\n\n  /** @var {string} frontClass CSS class for front side. */\n  DiversificationTaskCoin.prototype.front = 'front';\n\n  /** @var {string} startSide Initially displayed side of coin. */\n  DiversificationTaskCoin.prototype.startSide = 'K';\n\n  /** @var {string} startValue Initially displayed side of coin. */\n  DiversificationTaskCoin.prototype.startValue = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype.$onInit = function() {\n    var animation = this.$injector.get('animation');\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n\n    this.sides = [\n      {\n        value: this.heads,\n        class: this.front,\n        text: this.heads,\n      },\n      {\n        value: this.tails,\n        class: this.back,\n        text: this.tails\n      }\n    ];\n\n    if (this.startSide !== this.heads) {\n      this.sides[0].class = this.back;\n      this.sides[1].class = this.front;\n    }\n\n    if (this.startValue !== null) {\n      this.sides[0].text = this.startValue;\n      this.sides[1].text = this.startValue;\n    }\n\n    me._toss = me._getToss();\n\n    var _timeoutCallback = function() {\n      var _iterateSides = function(side) {\n        if (side.value === me._toss.value) {\n          side.class = me.front;\n          return;\n        }\n\n        side.class = me.back;\n      };\n\n      angular.forEach(me.sides, _iterateSides);\n    };\n\n    var _watchFlipCallback = function(newFlip/*,oldFlip*/) {\n      if (newFlip) {\n        me.onStart({toss: me._toss.value});\n        $timeout(_timeoutCallback, 100);\n        me.sides[0].text = me.heads;\n        me.sides[1].text = me.tails;\n        me.animate = true;\n      }\n    };\n\n    var _watchFlipExpression = function() {\n      return me.flip;\n    };\n\n    var _watchTossCallback = function(newToss, oldToss) {\n      if (newToss !== oldToss) {\n        me._toss = me._getToss();\n      }\n    };\n\n    var _watchTossExpression = function() {\n      return me.toss;\n    };\n\n    var _evalAsyncCallback = function() {\n      me.onFinish({toss: me._toss.value});\n      me.animate = false;\n    };\n\n    var _animationEndCallback = function() {\n      me.$scope.$evalAsync(_evalAsyncCallback);\n    };\n\n    this.onInit({toss: me._toss.value});\n\n    if (animation.animationEndEvent) {\n      this._element.on(\n        animation.animationEndEvent,\n        _animationEndCallback\n      );\n    }\n\n    this._unwatchFlip = this.$scope.$watch(_watchFlipExpression, _watchFlipCallback);\n    this._unwatchToss = this.$scope.$watch(_watchTossExpression, _watchTossCallback);\n  };\n\n  /**\n   * Removes event listener and watches.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype.$onDestroy = function() {\n    var animation = this.$injector.get('animation');\n\n    this._element.off(animation.animationEndEvent);\n    this._unwatchToss();\n    this._unwatchFlip();\n  };\n\n  /**\n   * Transforms `toss` to one side either\n   * by random or by given consumer input.\n   *\n   * @private\n   * @method _getToss\n   * @return {void}\n   */\n  DiversificationTaskCoin.prototype._getToss = function() {\n    var $filter = this.$injector.get('$filter');\n    var random = this.$injector.get('random');\n    var picked = random.pick(this.sides);\n\n    if (this.toss === null) {\n      return picked;\n    }\n\n    var filtered = $filter('filter')(\n      this.sides,\n      {\n        value: this.toss\n      }\n    );\n\n    if (filtered.length === 0) {\n      console.warn('Invalid value for `toss` - using random value!');\n      return picked;\n    }\n\n    return filtered[0];\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('diversificationTaskCoin', function(){\n    return {\n      scope: {\n        toss: '=?diversificationTaskCoinToss',\n        flip: '=?diversificationTaskCoinFlip',\n        onInit: '&diversificationTaskCoinOnInit',\n        onStart: '&diversificationTaskCoinOnStart',\n        onFinish: '&diversificationTaskCoinOnFinish',\n        startSide: '=?diversificationTaskCoinStartSide',\n        startValue: '=?diversificationTaskCoinStartValue'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: DiversificationTaskCoin,\n      controllerAs: 'diversificationTaskCoinController',\n      templateUrl: 'views/directives/tasks/diversification-task-coin.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // BombTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var BombTask = function($scope, $attrs, $element, $injector) {\n    var type = $injector.get('TYPE_RISK');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n  };\n\n  BombTask.$inject = ['$scope', '$attrs', '$element', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  BombTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} started If the task has started. */\n  BombTask.prototype.started = false;\n\n  /** @var {boolean} stopped If the task has stopped. */\n  BombTask.prototype.stopped = false;\n\n  /** @var {boolean} hasBomb If bomb is in current collection. */\n  BombTask.prototype.hasBomb = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  BombTask.prototype.resolved = false;\n\n  /** @var {number} totalBoxes Total boxes of current game. */\n  BombTask.prototype.totalBoxes = 0;\n\n  /** @var {number} remainingBoxes Remaining boxes of current game. */\n  BombTask.prototype.remainingBoxes = 0;\n\n  /** @var {number} collectedBoxes Collected boxes of current game. */\n  BombTask.prototype.collectedBoxes = 0;\n\n  // SETTINGS\n\n  /** @var {number} avg Average of collected boxes from statistics. */\n  BombTask.prototype.avg = 12;\n\n  /** @var {number} rows Amount of rows for bomb task. */\n  BombTask.prototype.rows = 5;\n\n  /** @var {number} cols Amount of cols for bomb task. */\n  BombTask.prototype.cols = 5;\n\n  /** @var {number} interval Timeout for interval in seconds. */\n  BombTask.prototype.interval = 1;\n\n  /** @var {boolean} random\n   * - If `random` = false, boxes are collected row-wise one-by-one, starting in the top-left corner\n   * - If `random` = true, boxes are collected randomly (Fisher-Yates Algorithm)\n   * Note that this affects game play independently of `dynamic` property\n   */\n  BombTask.prototype.random = false;\n\n  /** @var {boolean} dynamic\n   * - If `dynamic` = true, one box per time interval is collected automatically\n   * - In case of `dynamic` = true, game play is affected by the variables `interval` and `random`\n   * - If `dynamic` = false, subjects collect as many boxes as they want by clicking or entering the respective number\n   * - In case of `dynamic` = false, game play is affected by the variables `random`\n   */\n  BombTask.prototype.dynamic = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {Void}\n   */\n  BombTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {Void}\n   */\n  BombTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        hasBomb: this.hasBomb,\n        collectedBoxes: this.collectedBoxes\n      },\n      ticketCount: this.getTicketCount()\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  BombTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  BombTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.dynamic) {\n      return this.stopped;\n    }\n\n    if (!this.collectedBoxes) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {Void}\n   */\n  BombTask.prototype.init = function() {\n    this._initMembers();\n    this._initMatrix();\n    this._initBomb();\n\n    if (!this.dynamic) {\n      this.start();\n    }\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  BombTask.prototype.reset = function() {\n    this.init();\n  };\n\n  /**\n   * Sets `started` flag. If `dynamic` is true,\n   * the interval will start to reveal cards.\n   *\n   * @public\n   * @method start\n   * @return {Void}\n   */\n  BombTask.prototype.start = function(index) {\n    if (this.dynamic) {\n      var $interval = this.$injector.get('$interval');\n\n      this._intIndex = index || 0;\n\n      var me = this;\n      var max = this.iterator.length;\n      this._intervalId = $interval(\n        function(){\n\n          var item = me.iterator[me._intIndex];\n          me.update(item,true);\n\n          me._intIndex++;\n          if (me._intIndex===max) {\n            me.stop();\n          }\n\n        },\n        this.interval*1000, // = from seconds\n        max - this._intIndex // = max iterations\n      );\n    }\n\n    this.started = true;\n  };\n\n  /**\n   * Sets `stopped` flag. If `dynamic` is true,\n   * the interval will be stopped in addition.\n   *\n   * @public\n   * @method start\n   * @return {Void}\n   */\n  BombTask.prototype.stop = function() {\n    if (this.dynamic && this._intervalId) {\n      var $interval = this.$injector.get('$interval');\n      $interval.cancel(this._intervalId);\n    }\n\n    this.stopped = true;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {Void}\n   */\n  BombTask.prototype.resolve = function() {\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var resolveCard = function(card) {\n      card.$$resolved = true;\n    };\n\n    var me = this;\n    var successCallback = function() {\n      angular.forEach(me.collection, resolveCard);\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  BombTask.prototype.getTicketCount = function(){\n    if (this.hasBomb) {\n      return 1;\n    }\n\n    return this.collectedBoxes;\n  };\n\n  /**\n   * Callback for card click. Updates all\n   * related properties for final result.\n   *\n   * @public\n   * @method toggle\n   * @param {object} column\n   * @param {boolean} active\n   * @return {Void}\n   */\n  BombTask.prototype.toggle = function(column, active) {\n    var index = this.collection.indexOf(column);\n\n    if (active) {\n      if (index<0) {\n        this.collection.push(column);\n        this.collectedBoxes++;\n      }\n\n      column.$$active = true;\n    } else {\n      if (index>=0) {\n        this.collection.splice(index,1);\n        column.$$active = false;\n        this.collectedBoxes--;\n      }\n    }\n\n    if (this.isBomb(column)) {\n      this.hasBomb = true;\n    }\n\n    var total = this.totalBoxes;\n    var collected = this.collectedBoxes;\n    this.remainingBoxes = total - collected;\n  };\n\n  /**\n   * Provides indiviual tracking id for column.\n   *\n   * @public\n   * @method trackId\n   * @param {object} column\n   * @return {Void}\n   */\n  BombTask.prototype.trackId = function(column) {\n    return column.row + '_' + column.col;\n  };\n\n  /**\n   * Determines if column is actual bomb.\n   *\n   * @public\n   * @method isBomb\n   * @param {object} column\n   * @return {Void}\n   */\n  BombTask.prototype.isBomb = function(column) {\n    return angular.equals(this.bomb,column);\n  };\n\n  /**\n   * Initialzes internal properties.\n   *\n   * @private\n   * @method _initMembers\n   * @return {Void}\n   */\n  BombTask.prototype._initMembers = function() {\n    this.collection = [];\n\n    this.hasBomb = false;\n    this.started = false;\n    this.stopped = false;\n    this.resolved = false;\n\n    this.collectedBoxes = 0;\n    this.remainingBoxes = 0;\n    this.totalBoxes = this.rows * this.cols;\n  };\n\n  /**\n   * Calculates the actual matrix.\n   *\n   * @private\n   * @method _initMatrix\n   * @return {Void}\n   */\n  BombTask.prototype._initMatrix = function() {\n    this.matrix = [];\n    this.iterator = [];\n\n    for (var i=0; i<this.rows; i++) {\n\n      var columns = [];\n      for( var j=0; j<this.cols; j++ ) {\n        var data = {\n          row: i+1,\n          col: j+1\n        };\n\n        columns.push(data);\n\n        if (this.dynamic) {\n          if (!this.random) {\n            this.iterator.push(data);\n          } else {\n            var random = this.$injector.get('random');\n            random.push(this.iterator,data);\n          }\n        }\n      }\n\n      this.matrix.push(columns);\n    }\n  };\n\n  /**\n   * Initializes bomb's actual location.\n   *\n   * @private\n   * @method _initBomb\n   * @return {Void}\n   */\n  BombTask.prototype._initBomb = function() {\n    var random = this.$injector.get('random');\n\n    var row = random.between(0,this.rows-1);\n    var col = random.between(0,this.cols-1);\n\n    this.bomb = this.matrix[row][col];\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('bombTask',function(){\n    return {\n      scope: {\n        avg: '=?bombTaskAvg',\n        rows: '=?bombTaskRows',\n        cols: '=?bombTaskCols',\n        random: '=?bombTaskRandom',\n        dynamic: '=?bombTaskDynamic',\n        interval: '=?bombTaskInterval',\n        onResolve: '&bombTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: BombTask,\n      bindToController: true,\n      controllerAs: 'bombTaskController',\n      templateUrl: 'views/directives/tasks/bomb-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // BombTask Card\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var BombTaskCard = function(){\n  };\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} id Card's accociated model. */\n  BombTaskCard.prototype.model = null;\n\n  /** @var {string} isActive If card is active. */\n  BombTaskCard.prototype.isActive = false;\n\n  /** @var {string} isDisabled If card is disabled. */\n  BombTaskCard.prototype.isDisabled = false;\n\n  /** @var {string} isClickable If card is clickable. */\n  BombTaskCard.prototype.isClickable = true;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Toggles `isActive` if `isDisabled` and\n   * `isClickable` allow the action. Invokes\n   * `onToggle` callback for consumer.\n   *\n   * @public\n   * @method toggle\n   * @return {Void}\n   */\n  BombTaskCard.prototype.toggle = function() {\n    if (this.isDisabled || !this.isClickable) {\n      return;\n    }\n\n    this.isActive = !this.isActive;\n\n    this.onToggle({\n      model:this.model,\n      state:this.isActive\n    });\n  };\n\n  // registry\n  angular.module(module).directive('bombTaskCard', function(){\n    return {\n      scope: {\n        model:'=bombTaskCard',\n        onToggle:'&bombTaskCardOnToggle',\n        isActive:'=?bombTaskCardIsActive',\n        isDisabled:'=?bombTaskCardIsDisabled',\n        isClickable:'=?bombTaskCardIsClickable'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: BombTaskCard,\n      bindToController: true,\n      controllerAs: 'bombTaskCardController',\n      templateUrl: 'views/directives/tasks/bomb-task-card.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // AnchoringTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var AnchoringTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_ANCHORING');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n    this.group = user.getGroupAsString();\n  };\n\n  AnchoringTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  AnchoringTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  AnchoringTask.prototype.choice = null;\n\n  /** @var {string} group Current user's group assignment. */\n  AnchoringTask.prototype.group = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  AnchoringTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   * Sets up event source for listening to\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  AnchoringTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {object}\n   */\n  AnchoringTask.prototype.getPayload = function() {\n    var user = this.$injector.get('user');\n\n    return {\n      task: this.task,\n      json: {\n        group: user.group,\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  AnchoringTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  AnchoringTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  AnchoringTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  AnchoringTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  AnchoringTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  AnchoringTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('anchoringTask', function(){\n    return {\n      scope: {\n        onResolve: '&anchoringTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: AnchoringTask,\n      bindToController: true,\n      controllerAs: 'anchoringTaskController',\n      templateUrl: 'views/directives/tasks/anchoring-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // MentalBookkeepingTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var MentalBookkeepingTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_MENTAL_BOOKKEEPING');\n    var user = $injector.get('user');\n\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.task = user.getTaskByType(type);\n    this.group = user.getGroupAsString();\n  };\n\n  MentalBookkeepingTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  MentalBookkeepingTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {number} choice Currently selected user answer. */\n  MentalBookkeepingTask.prototype.choice = null;\n\n  /** @var {string} group Current user's group assignment. */\n  MentalBookkeepingTask.prototype.group = false;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  MentalBookkeepingTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   * Sets up event source for listening to\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {object}\n   */\n  MentalBookkeepingTask.prototype.getPayload = function() {\n    var user = this.$injector.get('user');\n\n    return {\n      task: this.task,\n      json: {\n        group: user.group,\n        choice: this.choice\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  MentalBookkeepingTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  MentalBookkeepingTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (!this.choice) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.init = function() {\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @param {number} choice\n   * @param {number} selected\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.update = function(choice, selected){\n    this.choice = selected ? choice : null;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  MentalBookkeepingTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('mentalBookkeepingTask', function(){\n    return {\n      scope: {\n        onResolve: '&mentalBookkeepingTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: MentalBookkeepingTask,\n      controllerAs: 'mentalBookkeepingTaskController',\n      templateUrl: 'views/directives/tasks/mental-bookkeeping-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // FramingTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var FramingTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_FRAMING');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n  };\n\n  FramingTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} task Task's resource from server. */\n  FramingTask.prototype.task = null;\n\n  // GAMEPLAY\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  FramingTask.prototype.resolved = false;\n\n  /** @var {boolean} lotteryA If player opts in for lottery A. */\n  FramingTask.prototype.lotteryA = null;\n\n  /** @var {boolean} lotteryB If player opts in for lottery A. */\n  FramingTask.prototype.lotteryB = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  FramingTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  FramingTask.prototype.getPayload = function() {\n    return {\n      task: this.task,\n      json: {\n        lotteryA: this.lotteryA,\n        lotteryB: this.lotteryB\n      }\n    };\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  FramingTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  FramingTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    if (this.lotteryA === null) {\n      return false;\n    }\n\n    if (this.lotteryB === null) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  FramingTask.prototype.init = function() {\n    this.lotteryA = null;\n    this.lotteryB = null;\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  FramingTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Updates provided lottery with given state.\n   *\n   * @public\n   * @method update\n   * @param {string} lottery\n   * @param {boolean} state\n   * @return {void}\n   */\n  FramingTask.prototype.update = function(lottery, state){\n    this[lottery] = state;\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  FramingTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var result = this.onResolve({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function() {\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('framingTask', function(){\n    return {\n      scope: {\n        onResolve: '&framingTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: FramingTask,\n      bindToController: true,\n      controllerAs: 'framingTaskController',\n      templateUrl: 'views/directives/tasks/framing-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SavingsTargetTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SavingsTargetTask = function($scope, $element, $attrs, $injector) {\n    var type = $injector.get('TYPE_SAVINGS_TARGET');\n\n    this.$attrs = $attrs;\n    this.$scope = $scope;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this._flag = false;\n\n    this.user = this.$injector.get('user');\n    this.task = this.user.getTaskByType(type);\n    this.result = this.user.getPendingByType(type);\n\n    this.storage = this.$injector.get('storage').getProxy();\n    this._storageKey = '__savings__target__task__updated__at__';\n  };\n\n  SavingsTargetTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} user Alias to user service. */\n  SavingsTargetTask.prototype.user = null;\n\n  /** @var {object} task Task's resource from server. */\n  SavingsTargetTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  SavingsTargetTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {number} step Current step . */\n  SavingsTargetTask.prototype.step = 1;\n\n  /** @var {number} total Players wish for saving target. */\n  SavingsTargetTask.prototype.total = 3;\n\n  /** @var {string} wish Players wish for saving target. */\n  SavingsTargetTask.prototype.wish = null;\n\n  /** @var {number} amount Players first amount for saving target. */\n  SavingsTargetTask.prototype.amount = null;\n\n  /** @var {number} amountRepeated Players second amount for saving target. */\n  SavingsTargetTask.prototype.amountRepeated = null;\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SavingsTargetTask.prototype.resolved = false;\n\n  // MISC\n\n  /** @var {object} form Form collecting user input. */\n  SavingsTargetTask.prototype.form = null;\n\n  /** @var {number} minAmount Minimum amount for `amount` input. */\n  SavingsTargetTask.prototype.minAmount = 1;\n\n  /** @var {number} maxAmount Maximum amount for `amount` input. */\n  SavingsTargetTask.prototype.maxAmount = 999;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        step: this.step,\n        wish: this.wish,\n        total: this.total,\n        amount: this.amount,\n        amountRepeated: this.amountRepeated\n      },\n      isPending: this._isPending()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    // if result was created and\n    // we are waiting for paused\n    // state, we skip unlocking\n    // by using internal `_flag`\n    if (this.task.isActive) {\n      return this._flag;\n    }\n\n    // reset `_flag` as soon as\n    // `isActive` changed again\n    this.storage.removeItem(\n      this._storageKey\n    );\n\n    this._flag = false;\n    return true;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.form.$invalid) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.init = function() {\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // set flag only if still waiting for `isActive` change\n      var updatedAt = this.storage.getItem(this._storageKey);\n      if (angular.isNumber(updatedAt)) {\n        this._flag = updatedAt >= this.task.updatedAt;\n      }\n\n      // `amountRepeated` cannot be desisted cause it's the\n      // condition in last step before setting `isPending`\n      this.amount = json.amount;\n      this.total = json.total;\n      this.wish = json.wish;\n      this.step = json.step;\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Increases `step` and invokes `resolve()`.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.update = function(){\n    if (this.step < this.total) {\n      this.step++;\n    }\n\n    var me = this;\n    var successCallback = function(){};\n    var failureCallback = function(){\n      me.step--;\n    };\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.resolve = function(){\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var payload = this.getPayload();\n    var result = callback({\n      payload: payload\n    });\n\n    if (payload.isPending) {\n      this._flag = true;\n    }\n\n    var me = this;\n    var successCallback = function(result) {\n      if (result.isPending) {\n        if (me.step < me.total) {\n          var message = i18n.get('Thank you for your input!');\n          notification.success(message);\n        }\n\n        me.result = result;\n        me.storage.setItem(\n          me._storageKey,\n          me.task.updatedAt\n        );\n        return;\n      }\n\n      me.resolved = true;\n    };\n\n    var failureCallback = function() {\n      me._flag = false;\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Calculates difference between `amount` and `amountRepeated`.\n   *\n   * @public\n   * @method getDifference\n   * @return {void}\n   */\n  SavingsTargetTask.prototype.getDifference = function(){\n    return this.amountRepeated - this.amount;\n  };\n\n  /**\n   * Checks if `amountRepeated` is already set.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  SavingsTargetTask.prototype._isPending = function(){\n    return this.amountRepeated === null;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('savingsTargetTask', function(){\n    return {\n      scope: {\n        onUpdate: '&savingsTargetTaskOnUpdate',\n        onResolve: '&savingsTargetTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: SavingsTargetTask,\n      bindToController: true,\n      controllerAs: 'savingsTargetTaskController',\n      templateUrl: 'views/directives/tasks/savings-target-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // SelfCommitmentTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var SelfCommitmentTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_SELF_COMMITMENT');\n\n    this.$injector = $injector;\n\n    this.user = this.$injector.get('user');\n    this.task = this.user.getTaskByType(type);\n    this.result = this.user.getPendingByType(type);\n  };\n\n  SelfCommitmentTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {object} user Alias to user service. */\n  SelfCommitmentTask.prototype.user = null;\n\n  /** @var {object} task Task's resource from server. */\n  SelfCommitmentTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  SelfCommitmentTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {object} watched Hash storing watched video ids. */\n  SelfCommitmentTask.prototype.videos = {\n    'ImPxD_FDpKM': false,\n    'gUYjYEGbxEY': false\n  };\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  SelfCommitmentTask.prototype.resolved = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        videos: this.videos\n      },\n      isPending: this._isPending()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.isLocked = function() {\n    // admins always can watch\n    // videos for explanation!\n    if (!this.user.isUser()) {\n      return false;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.init = function() {\n    if (this.result !== null) {\n      var json = this.result.json;\n      this.videos = json.videos;\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.update = function(id){\n    if (this.videos[id]) {\n      return;\n    }\n\n    this.videos[id] = true;\n\n    var me = this;\n    var successCallback = function(){};\n    var failureCallback = function(){\n      me.videos[id] = false;\n    };\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  SelfCommitmentTask.prototype.resolve = function(){\n    var $q = this.$injector.get('$q');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var payload = this.getPayload();\n    var result = callback({\n      payload: payload\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      if (result.isPending) {\n        me.result = result;\n        return;\n      }\n\n      me.resolved = true;\n    };\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Checks if user is allowed to watch videos:\n   * - (Super-)Admins are always allowed\n   * - Users only if not in workshop\n   *\n   * @public\n   * @method canWatch\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype.canWatch = function(){\n    if (!this.user.isUser()) {\n      return true;\n    }\n\n    return !this.user.isInWorkshop();\n  };\n\n  /**\n   * Checks if all videos has been watched.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  SelfCommitmentTask.prototype._isPending = function(){\n    for (var id in this.videos) {\n      if (!this.videos[id]) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('selfCommitmentTask', function(){\n    return {\n      scope: {\n        onUpdate: '&selfCommitmentTaskOnUpdate',\n        onResolve: '&selfCommitmentTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: SelfCommitmentTask,\n      controllerAs: 'selfCommitmentTaskController',\n      templateUrl: 'views/directives/tasks/self-commitment-task.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular, moment */\n/* jshint bitwise: false */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // ProcrastinationTask\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTask = function($scope, $elemnt, $attrs, $injector) {\n    var type = $injector.get('TYPE_PROCRASTINATION');\n    var user = $injector.get('user');\n\n    this.$injector = $injector;\n    this.task = user.getTaskByType(type);\n    this.result = user.getPendingByType(type);\n\n    this.domId = 'procrastination-task-' + $scope.$id;\n\n    this._intervalId = null;\n    this._onInterval = this._onInterval.bind(this);\n  };\n\n  ProcrastinationTask.$inject = ['$scope','$element','$attrs', '$injector'];\n\n  // SERVER\n\n  /** @var {string} type Task's `type` property from server. */\n  ProcrastinationTask.prototype.type = null;\n\n  /** @var {object} task Task's resource from server. */\n  ProcrastinationTask.prototype.task = null;\n\n  /** @var {object} result Task's pending result from server. */\n  ProcrastinationTask.prototype.result = null;\n\n  // GAMEPLAY\n\n  /** @var {string} mode One of `ALL` or `SPLIT`. */\n  ProcrastinationTask.prototype.mode = null;\n\n  /** @var {number} rounds Current game round count. */\n  ProcrastinationTask.prototype.count = 0;\n\n  /** @var {number} total Total rounds depends on `mode`. */\n  ProcrastinationTask.prototype.total = 1;\n\n  /** @var {array} rounds Results of single game rounds. */\n  ProcrastinationTask.prototype.rounds = [];\n\n  /** @var {number} openRounds Number of left rounds to play. */\n  ProcrastinationTask.prototype.openRounds = null;\n\n  /** @var {number} minCatched Minimum catched bubbles depends on `mode`. */\n  ProcrastinationTask.prototype.minCatched = null;\n\n  /** @var {number} maxEscaped Maximum escaped bubbles depends on `mode`. */\n  ProcrastinationTask.prototype.maxEscaped = null;\n\n  /** @var {number} updatedAt When last result was written. */\n  ProcrastinationTask.prototype.updatedAt = null;\n\n  /** @var {number} invalidAt When task will be unresolvable. */\n  ProcrastinationTask.prototype.invalidAt = null;\n\n  /** @var {string} state One of `IDLE`, `DECISION`, `PLAYING`. */\n  ProcrastinationTask.prototype.state = 'IDLE';\n\n  /** @var {boolean} resolved If player has resolved the game. */\n  ProcrastinationTask.prototype.resolved = false;\n\n  // MISC\n\n  /** @var {string} domId Unique dom id for this task for scrolling purposes. */\n  ProcrastinationTask.prototype.domId = null;\n\n  /** @var {boolean} warmup If dry-run has been finished. */\n  ProcrastinationTask.prototype.hasWarmup = false;\n\n  /** @var {number} warmupMaxEscaped Maximum escaped bubbles for demo mode. */\n  ProcrastinationTask.prototype.warmupMaxEscaped = 2;\n\n  /** @var {number} warmupMinCatched Minimum catched bubbles for demo mode. */\n  ProcrastinationTask.prototype.warmupMinCatched = 20;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.$onInit = function() {\n    this.init();\n  };\n\n  /**\n   * Proxies to `init()` if controller's ready.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.$onDestroy = function() {\n    var $interval = this.$injector.get('$interval');\n\n    if (this._intervalId !== null) {\n      $interval.cancel(this._intervalId);\n    }\n  };\n\n  /**\n   * Retrieves result payload for server.\n   *\n   * @public\n   * @method getPayload\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.getPayload = function() {\n    var payload = {\n      task: this.task,\n      json: {\n        mode: this.mode,\n        state: this.state,\n        rounds: this.rounds,\n        success: this.hasSuccess()\n      },\n      isPending: this._isPending(),\n      ticketCount: this.getTicketCount()\n    };\n\n    if (this.result !== null) {\n      payload = angular.extend(\n        this.result,\n        payload\n      );\n    }\n\n    return payload;\n  };\n\n  /**\n   * Whether or not task is currently locked.\n   *\n   * @public\n   * @method isLocked\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.isLocked = function() {\n    if (this.task === null) {\n      return true;\n    }\n\n    return !this.task.isActive;\n  };\n\n  /**\n   * Whether or not task can be sent to server.\n   *\n   * @public\n   * @method canResolve\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.canResolve = function() {\n    var user = this.$injector.get('user');\n    if (!user.isUser()) {\n      return false;\n    }\n\n    if (this.isLocked()) {\n      return false;\n    }\n\n    if (!this.hasWarmup) {\n      return false;\n    }\n\n    if (this.resolved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Sets up initial state.\n   *\n   * @public\n   * @method init\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.init = function() {\n    // check for pending result\n    if (this.result !== null) {\n      var json = this.result.json;\n\n      // 1) apply round / count\n      this.rounds = json.rounds;\n      this.count = json.rounds.length;\n\n      // 2) call setters only now\n      this.setWarmup(true);\n      this.setMode(json.mode);\n      this.setState(json.state);\n    }\n\n    this.resolved = false;\n  };\n\n  /**\n   * Resets initial state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.reset = function(){\n    this.init();\n  };\n\n  /**\n   * Description.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.update = function(result){\n    var state = this.state;\n    var count = this.count;\n\n    switch (this.state) {\n      case 'IDLE':\n        this.setState('DECISION');\n        break;\n\n      case 'DECISION':\n        this.setState('PLAYING');\n        break;\n\n      case 'PLAYING':\n        this.count = this.rounds.push(result);\n        break;\n      default:\n    }\n\n    var me = this;\n    var successCallback = function(){};\n    var failureCallback = function(){\n      me.setState(state);\n      me.count = count;\n    };\n\n    this.resolve().then(\n      successCallback,\n      failureCallback\n    );\n  };\n\n  /**\n   * Sets `resolved` flag. Calls `onResolve`\n   * callback with JSON result for consumer.\n   *\n   * @public\n   * @method resolve\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.resolve = function(){\n    var notification = this.$injector.get('notification');\n    var i18n = this.$injector.get('i18n');\n    var $q = this.$injector.get('$q');\n\n    console.log('>>>RESOLVE!');\n\n    if (!this.canResolve()) {\n      var defer = $q.defer();\n      defer.reject();\n\n      return defer.promise;\n    }\n\n    var callback = this.result === null ?\n      this.onResolve :\n      this.onUpdate;\n\n    var result = callback({\n      payload: this.getPayload()\n    });\n\n    var me = this;\n    var successCallback = function(result) {\n      var message;\n\n      if (result.isPending) {\n        me.result = result;\n\n        switch (me.state) {\n          case 'IDLE': break;\n          case 'DECISION': break;\n          case 'PLAYING':\n            switch (me.mode) {\n              case 'ALL': break;\n              case 'SPLIT':\n                if (me.count > 0) {\n                  message = i18n.get(\n                    'Super, you have succeeded exercise %s of %s!',\n                    me.count,\n                    me.total\n                  );\n                  notification.success(message);\n                }\n                break;\n              default:\n                break;\n            }\n            break;\n          default:\n        }\n\n        return;\n      }\n\n      if (!me.hasSuccess()) {\n        message = i18n.get('Sorry, but the time has expired for this exercise and you retrieve only 1 ticket!');\n        notification.error(message);\n      } else {\n        message = i18n.get('Super, you have successfully done this exercise and retrieve 5 tickets!');\n        notification.success(message);\n      }\n\n      me.resolved = true;\n    };\n\n    var failureCallback = function() {\n\n    };\n\n    var promise = $q.when(result);\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Sets game mode to `ALL` or `SPLIT`.\n   *\n   * @public\n   * @method setMode\n   * @param {string} mode\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setMode = function(mode){\n    switch (mode) {\n      case 'ALL':\n        this.total = 1;\n        this.maxEscaped = 15;\n        this.minCatched = 150;\n        break;\n      case 'SPLIT':\n        this.total = 3;\n        this.maxEscaped = 5;\n        this.minCatched = 50;\n        break;\n      default:\n        return;\n    }\n\n    this.mode = mode;\n    this.openRounds = this.total - this.count;\n  };\n\n  /**\n   * Sets game state to `IDLE`, `DECISION` or `PLAYING`.\n   *\n   * @public\n   * @method setState\n   * @param {string} state\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setState = function(state){\n    var $interval = this.$injector.get('$interval');\n\n    switch (state) {\n      case 'IDLE':\n        break;\n      case 'DECISION':\n        break;\n      case 'PLAYING':\n        var updatedAt = this.result.updatedAt;\n        this.updatedAt = moment.unix(updatedAt);\n        this.invalidAt = this.updatedAt.clone();\n\n        switch (this.mode) {\n          case 'ALL':\n            this.invalidAt.add(6, 'weeks');\n            break;\n          case 'SPLIT':\n            this.invalidAt.add(2, 'weeks');\n            break;\n          default:\n        }\n\n        this._intervalId = $interval(this._onInterval, 1000);\n\n        break;\n      default:\n        return;\n    }\n\n    this.state = state;\n  };\n\n  /**\n   * Sets `hasWarmup` flag after dry run.\n   *\n   * @public\n   * @method setWarmup\n   * @param {boolean} warmup\n   * @return {void}\n   */\n  ProcrastinationTask.prototype.setWarmup = function(warmup){\n    this.hasWarmup = warmup;\n  };\n\n  /**\n   * Whether or not task is actually invalid.\n   *\n   * @public\n   * @method isInvalid\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.isInvalid = function() {\n    if (this.invalidAt === null) {\n      return false;\n    }\n\n    return +this._now() > +this.invalidAt;\n  };\n\n  /**\n   * If amount of results corresponds to `total`.\n   *\n   * @public\n   * @method hasSuccess\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype.hasSuccess = function() {\n    return this.rounds.length === this.total;\n  };\n\n  /**\n   * Retrieves the current played round.\n   *\n   * @public\n   * @method getCurrentRound\n   * @return {string}\n   */\n  ProcrastinationTask.prototype.getCurrentRound = function(){\n    return this.count + 1;\n  };\n\n  /**\n   * Calculates remaining time for finishing\n   * this task depending on chosen game mode.\n   *\n   * @public\n   * @method getRemainingTime\n   * @return {string}\n   */\n  ProcrastinationTask.prototype.getRemainingTime = function(){\n    var string = this.$injector.get('string');\n    var i18n = this.$injector.get('i18n');\n\n    if (this.invalidAt === null) {\n      return '';\n    }\n\n    var difference = this.invalidAt.diff(this._now());\n    var duration = moment.duration(difference);\n\n    var seconds = ~~duration.asSeconds();\n    var minutes = ~~duration.asMinutes();\n    var hours = ~~duration.asHours();\n    var days = ~~duration.asDays();\n    var value, keys;\n\n    if (days > 0) {\n      value = days;\n      keys = ['day', 'days'];\n    } else if (hours > 0) {\n      value = hours;\n      keys = ['hour', 'hours'];\n    } else if (minutes > 0) {\n      value = minutes;\n      keys = ['minute', 'minutes'];\n    } else {\n      value = seconds >= 0 ? seconds : 0;\n      keys = ['second', 'seconds'];\n    }\n\n    var key = value === 1 ?\n      keys[0] :\n      keys[1];\n\n    var unit = i18n.get(key);\n\n    return string.sprintf('%s %s', value, unit);\n  };\n\n  /**\n   * Calculates final ticket amount by predefined formula.\n   *\n   * @public\n   * @method getTicketCount\n   * @return {number}\n   */\n  ProcrastinationTask.prototype.getTicketCount = function(){\n    if (this.hasSuccess()) {\n      return 5;\n    }\n\n    return 1;\n  };\n\n  /**\n   * Interval callback for checking invalidation.\n   *\n   * @private\n   * @method _onInterval\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype._onInterval = function() {\n    var $interval = this.$injector.get('$interval');\n    if (!this.isInvalid() || !this.canResolve()) {\n      return;\n    }\n\n    $interval.cancel(this._intervalId);\n    this.count = this.total;\n    this.resolve();\n  };\n\n  /**\n   * Whether or not task is currently pending.\n   *\n   * @private\n   * @method _isPending\n   * @return {boolean}\n   */\n  ProcrastinationTask.prototype._isPending = function() {\n    return this.count < this.total;\n  };\n\n  /**\n   * Gets the current timestamp as moment.\n   *\n   * @private\n   * @method _now\n   * @return {object}\n   */\n  ProcrastinationTask.prototype._now = function() {\n    /*\n    if (!this._testInvalidation) {\n      this._testInvalidation = this.invalidAt.clone().subtract(3, 'seconds')\n    } else {\n      this._testInvalidation.add(1, 'second');\n    }\n    return this._testInvalidation;\n    */\n    return moment();\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTask', function(){\n    return {\n      scope: {\n        onUpdate: '&procrastinationTaskOnUpdate',\n        onResolve: '&procrastinationTaskOnResolve'\n      },\n      restrict: 'A',\n      transclude: true,\n      controller: ProcrastinationTask,\n      bindToController: true,\n      controllerAs: 'procrastinationTaskController',\n      templateUrl: 'views/directives/tasks/procrastination-task.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // ProcrastinationTask Game\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTaskGame = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.bubbles = {};\n    this.viewport = {};\n    this.domId = 'viewport-' + $scope.$id;\n\n    this._nextId = 0;\n    this._tapped = 0;\n    this._rounds = 0;\n    this._retries = 0;\n    this._timeout = 100;\n    this._requestId = null;\n\n    this._loop = this._loop.bind(this);\n    this._update = this._update.bind(this);\n    this._resize = this._resize.bind(this);\n\n    this._window = angular.element(window);\n    this._viewport = this.$element.find('.viewport');\n  };\n\n  ProcrastinationTaskGame.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {number} catched Count of catched bubbles. */\n  ProcrastinationTaskGame.prototype.catched = 0;\n\n  /** @var {number} escaped Count of escaped bubbles. */\n  ProcrastinationTaskGame.prototype.escaped = 0;\n\n  /** @var {number} accuracy Players scoring accuracy. */\n  ProcrastinationTaskGame.prototype.accuracy = 0;\n\n  /** @var {object} bubbles Hash map keeping bubble objects. */\n  ProcrastinationTaskGame.prototype.bubbles = null;\n\n  /** @var {object} viewport Viewport holding dimensions and offsets. */\n  ProcrastinationTaskGame.prototype.viewport = null;\n\n  /** @var {boolean} state One of `IDLE`, `RUNNING`, `TIMEOUT`, `GAME_OVER` or `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.state = 'IDLE';\n\n  /** @var {boolean} expired Flag for expiring current game while its running. */\n  ProcrastinationTaskGame.prototype.expired = false;\n\n  /** @var {number} maxRounds Maximum number of rounds after `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.maxRounds = 1;\n\n  /** @var {number} maxRounds Maximum number of retries after `GAME_OVER`. */\n  ProcrastinationTaskGame.prototype.maxRetries = Number.POSITIVE_INFINITY;\n\n  /** @var {number} maxEscaped Maximum amount of escaped bubbles for `GAME_OVER`. */\n  ProcrastinationTaskGame.prototype.maxEscaped = 15;\n\n  /** @var {number} maxEscaped Maximum amount of escaped bubbles for `GAME_DONE`. */\n  ProcrastinationTaskGame.prototype.minCatched = 150;\n\n  /** @var {string} bubbleDelay Timeout until next bubble will appear on viewport. */\n  ProcrastinationTaskGame.prototype.bubbleDelay = 100;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sets up event listeners and animation frame.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.$onInit = function() {\n    this._window.on('resize', this._resize);\n\n    var me = this;\n    this._unwatch = this.$scope.$watch(\n      function() {\n        return me.expired;\n      },\n      function(isExpired) {\n        if (isExpired) {\n          me.expire();\n        }\n      }\n    );\n  };\n\n  /**\n   * Removes event listener and animation frame.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.$onDestroy = function() {\n    this._window.off('resize', this._resize);\n    this._unwatch();\n    this._unloop();\n  };\n\n  /**\n   * Invokes game loop and sets `RUNNING` state.\n   *\n   * @public\n   * @method start\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.start = function() {\n    // calculate viewport now that we can\n    // be sure that elements are rendered\n    this.viewport = this._getViewport();\n\n    this.state = 'RUNNING';\n    this._loop();\n  };\n\n  /**\n   * Stops and sets `GAME_OVER` state.\n   *\n   * @public\n   * @method gameOver\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.quit = function() {\n    this._unloop();\n\n    this._retries++;\n\n    this.bubbles = {};\n    this.state = 'GAME_OVER';\n\n    var result = this._getResult();\n    this.onGameOver({ result: result });\n  };\n\n  /**\n   * Stops and sets `FINISHED` state.\n   *\n   * @public\n   * @method done\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.done = function() {\n    this._unloop();\n\n    this._rounds++;\n\n    this.bubbles = {};\n    this.state = 'GAME_DONE';\n\n    var result = this._getResult();\n    this.onGameDone({ result: result });\n  };\n\n  /**\n   * Stops and sets `TIMEOUT` state.\n   *\n   * @public\n   * @method expire\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.expire = function() {\n    this._unloop();\n\n    this.bubbles = {};\n    this.state = 'TIMEOUT';\n  };\n\n  /**\n   * Resets game and sets `IDLE` state.\n   *\n   * @public\n   * @method reset\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.reset = function() {\n    this._unloop();\n\n    this._nextId = 0;\n    this._tapped = 0;\n    this._timeout = 100;\n    this._requestId = null;\n\n    this.catched = 0;\n    this.escaped = 0;\n    this.accuracy = 0;\n    this.state = 'IDLE';\n  };\n\n  /**\n   * Initializes\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.onClick = function($event) {\n    switch (this.state) {\n      case 'IDLE':\n        this.start();\n        break;\n      case 'RUNNING':\n        this._tapped++;\n\n        var target = $event.target;\n        var viewport = this._viewport.get(0);\n\n        // only update accuracy immediately if\n        // clicked on viewport, otherwise this\n        // will be done after bubble animation!\n        if (viewport.id === target.id) {\n          this._setAccuracy();\n        }\n\n        break;\n      case 'TIMEOUT':\n        // noop - disabled\n        break;\n      case 'GAME_OVER':\n        if (this.canRetry()) {\n          this.reset();\n          this.start();\n        }\n\n        break;\n      case 'GAME_DONE':\n        if (this.canRestart()) {\n          this.reset();\n          this.start();\n        }\n\n        break;\n      default:\n    }\n  };\n\n  /**\n   * True if player can retry game after `GAME_OVER`.\n   *\n   * @public\n   * @method canRetry\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.canRetry = function() {\n    return this._retries < this.maxRetries;\n  };\n\n  /**\n   * True if player can retry game after `GAME_OVER`.\n   *\n   * @public\n   * @method canRestart\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.canRestart = function() {\n    return this._rounds < this.maxRounds;\n  };\n\n  /**\n   * Adds bubble controller to internal hash.\n   *\n   * @public\n   * @method addBubble\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.addBubble = function(bubble) {\n    this.bubbles[bubble.id] = bubble;\n  };\n\n  /**\n   * Removes bubble, update counters and checks game state.\n   *\n   * @public\n   * @method removeBubble\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype.removeBubble = function(bubble) {\n    // don't remove twice ($onDestroy)\n    if (!this.bubbles[bubble.id]) {\n      return;\n    }\n\n    // catched - check min count\n    if (bubble.catched) {\n      this.catched++;\n\n      // update accuracy\n      this._setAccuracy();\n\n      var min = this.minCatched;\n      if (this.catched >= min) {\n        this.done();\n      }\n    }\n\n    // escaped - check max count\n    if (bubble.escaped) {\n      this.escaped++;\n\n      var max = this.maxEscaped;\n      if (this.escaped >= max) {\n        this.quit();\n      }\n    }\n\n    delete this.bubbles[bubble.id];\n  };\n\n  /**\n   * Actual gaming loop for animation frame.\n   *\n   * @private\n   * @method _loop\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._loop = function() {\n    var animation = this.$injector.get('animation');\n\n    this._requestId = animation.requestAnimationFrame(this._loop);\n    this.$scope.$evalAsync(this._update);\n  };\n\n  /**\n   * Removes current animation frame.\n   *\n   * @public\n   * @method stop\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._unloop = function() {\n    var animation = this.$injector.get('animation');\n    animation.cancelAnimationFrame(this._requestId);\n  };\n\n  /**\n   * Animation frame callback handling creation of new\n   * bubbles being rendered and propagates `update()`.\n   *\n   * @private\n   * @method _update\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._update = function() {\n    var random = this.$injector.get('random');\n\n    this._timeout--;\n    if (this._timeout === 0 ) {\n      this._timeout = random.between(0, this.bubbleDelay) + 25;\n      this.bubbles[this._nextId++] = null;\n    }\n\n    for (var id in this.bubbles) {\n      var bubble = this.bubbles[id];\n      if (!bubble) {\n        continue;\n      }\n\n      bubble.update();\n    }\n  };\n\n  /**\n   * Sets up new `ratio` of viewport and propages `resize()`.\n   *\n   * @private\n   * @method resize\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._resize = function() {\n    this.viewport = this._getViewport();\n\n    var height = this.viewport.height;\n    var width = this.viewport.width;\n\n    this.ratio = width / height;\n\n    for (var id in this.bubbles) {\n      var bubble = this.bubbles[id];\n      if (!bubble) {\n        continue;\n      }\n\n      bubble.resize();\n    }\n  };\n\n  /**\n   * Gets result payload for game callbacks.\n   *\n   * @private\n   * @method _getResult\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._getResult = function() {\n    return {\n      catched: this.catched,\n      escaped: this.escaped,\n      accuracy: this.accuracy\n    };\n  };\n\n  /**\n   * Calculates and sets `accuracy` property.\n   *\n   * @private\n   * @method _setAccuracy\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._setAccuracy = function() {\n    this.accuracy = this.catched / this._tapped;\n  };\n\n  /**\n   * Gets viewport dimensions and offsets.\n   *\n   * @private\n   * @method _getViewport\n   * @return {void}\n   */\n  ProcrastinationTaskGame.prototype._getViewport = function() {\n    var width = this._viewport.width();\n    var height = this._viewport.height();\n    var top = this._viewport.scrollTop();\n    var left = this._viewport.scrollLeft();\n\n    return {\n      top: top,\n      left: left,\n      width: width,\n      height: height,\n      right: left + width,\n      bottom: top + height\n    };\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTaskGame', function(){\n    return {\n      scope: {\n        expired: '=?procrastinationTaskGameExpired',\n        maxRounds: '=?procrastinationTaskGameMaxRounds',\n        maxRetries: '=?procrastinationTaskGameMaxRetries',\n        onGameDone: '&procrastinationTaskGameOnGameDone',\n        onGameOver: '&procrastinationTaskGameOnGameOver',\n        minCatched: '=?procrastinationTaskGameMinCatched',\n        maxEscaped: '=?procrastinationTaskGameMaxEscaped',\n        bubbleDelay: '=?procrastinationTaskGameBubbleDelay'\n      },\n      restrict: 'A',\n      transclude: true,\n      bindToController: true,\n      controller: ProcrastinationTaskGame,\n      controllerAs: 'procrastinationTaskGameController',\n      templateUrl: 'views/directives/tasks/procrastination-task-game.html'\n    };\n  });\n\n  // --------------------------------------------------\n  // ProcrastinationTask Bubble\n  // --------------------------------------------------\n\n  //\n  // CONTROLLER\n  //\n\n  /**\n   * @constructor\n   */\n  var ProcrastinationTaskBubble = function($scope,$element,$attrs,$injector) {\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.$element = $element;\n    this.$injector = $injector;\n\n    this.domId = 'bubble-' + $scope.$id;\n  };\n\n  ProcrastinationTaskBubble.$inject = ['$scope','$element','$attrs','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {array} themes Predefined themes for bubbles. */\n  ProcrastinationTaskBubble.prototype.themes = [\n    'theme-1',\n    'theme-2',\n    'theme-3',\n    'theme-4',\n    'theme-5'\n  ];\n\n  /**\n\n  /** @var {string} class CSS class namem for bubble. */\n  ProcrastinationTaskBubble.prototype.class = 'bubble';\n\n  /** @var {object} style Style definitions for bubble. */\n  ProcrastinationTaskBubble.prototype.style = {};\n\n  /** @var {string} theme A random theme for bubble. */\n  ProcrastinationTaskBubble.prototype.theme = null;\n\n  /** @var {number} radius Radius of bubble. */\n  ProcrastinationTaskBubble.prototype.radius = null;\n\n  /** @var {number} radius Animation speed of bubble. */\n  ProcrastinationTaskBubble.prototype.speed = null;\n\n  /** @var {number} wave Horizontal swinging intensity. */\n  ProcrastinationTaskBubble.prototype.wave = null;\n\n  /** @var {number} x Current x position of bubble. */\n  ProcrastinationTaskBubble.prototype.x = null;\n\n  /** @var {number} y Current y position of bubble. */\n  ProcrastinationTaskBubble.prototype.y = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Registeres bubble with game controller after inital setup.\n   *\n   * @public\n   * @method $onInit\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.$onInit = function() {\n    var random = this.$injector.get('random');\n    var game = this.gameController;\n\n    this.theme = random.pick(this.themes);\n\n    this.radius = random.between(0, 15) + 20;\n    this.speed = random.between(0, 1.25)  + 2.25;\n    this.wave = 1.5 + this.radius;\n\n    var xOffset = this.radius * 2;\n    this.y = game.viewport.height + random.between(0, 50) + 50;\n    this.x = random.between(xOffset, game.viewport.width - xOffset);\n\n    this._originalR = game.ratio;\n    this._originalX = this.x;\n\n    this.style = {\n      top: this.y,\n      left: this.x,\n      width: this.radius * 2,\n      height: this.radius * 2\n    };\n\n    this.gameController.addBubble(this);\n  };\n\n  /**\n   * Unregisteres bubble with game controller.\n   *\n   * @public\n   * @method $onDestroy\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.$onDestroy = function() {\n    this.gameController.removeBubble(this);\n  };\n\n  /**\n   * Updates `x` and `y` coordinates and applies style.\n   *\n   * @public\n   * @method update\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.update = function() {\n    var sin = Math.sin(new Date().getTime() * 0.002);\n    this.x = this.wave * sin + this._originalX;\n    this.y = this.y - this.speed;\n\n    this.style.left = this.x;\n    this.style.top = this.y;\n\n    var offscreenY = -this.radius * 2;\n    if (this.y > offscreenY) {\n      return;\n    }\n\n    this.escaped = true;\n    this.gameController.removeBubble(this);\n  };\n\n  /**\n   * Updates `x` coordinate according to new ratio.\n   *\n   * @public\n   * @method resize\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.resize = function() {\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n    var timeout = function() {\n      var ratio = me.gameController.ratio;\n      var move = ratio / me._originalR;\n\n      me._originalX *= move;\n      me._resizeId = null;\n    };\n\n    if (this._resizeId) {\n      $timeout.cancel(this._resizeId);\n    }\n\n    this._resizeId = $timeout(timeout, 250);\n  };\n\n  /**\n   *\n   *\n   * @public\n   * @method onClick\n   * @return {void}\n   */\n  ProcrastinationTaskBubble.prototype.onClick = function() {\n    var animation = this.$injector.get('animation');\n    var $timeout = this.$injector.get('$timeout');\n\n    var me = this;\n\n    var evalAsync = function() {\n      me.gameController.removeBubble(me);\n    };\n\n    var onAnimationEnd = function() {\n      me.$scope.$evalAsync(evalAsync);\n      me.$element.off(\n        animation.animationEndEvent,\n        onAnimationEnd\n      );\n    };\n\n    if (animation.animationEndEvent) {\n      this.$element.on(\n        animation.animationEndEvent,\n        onAnimationEnd\n      );\n    } else {\n      $timeout(evalAsync, 50);\n    }\n\n    this.catched = true;\n  };\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).directive('procrastinationTaskBubble', function(){\n    return {\n      scope: {\n        id: '=procrastinationTaskBubble'\n      },\n      restrict: 'A',\n      transclude: true,\n      require: {\n        'gameController': '^procrastinationTaskGame'\n      },\n      bindToController: true,\n      controller: ProcrastinationTaskBubble,\n      controllerAs: 'procrastinationTaskBubbleController',\n      templateUrl: 'views/directives/tasks/procrastination-task-bubble.html'\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var LoginFrontend = function($scope, $injector, code) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n\n    // @see: next()\n    this.code = code;\n  };\n\n  LoginFrontend.$inject = ['$scope', '$injector', 'code'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} code Workshop code for authentication. */\n  LoginFrontend.prototype.code = null;\n\n  /** @var {string} username User name for authentication. */\n  LoginFrontend.prototype.username = null;\n\n  /** @var {RegExp} codeMinLength Minimum length of password. */\n  LoginFrontend.prototype.codeMinLength = 8;\n\n  /** @var {RegExp} codePattern Regular expression for `username` property. */\n  LoginFrontend.prototype.codePattern = /^[A-Za-z0-9]+$/;\n\n  /** @var {RegExp} userpattern Regular expression for `username` property. */\n  LoginFrontend.prototype.userpattern = /^[A-Za-z][A-Za-z](?:0[1-9]|[12]\\d|3[01])(?:0[1-9]|1[012])\\d$/;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Signs a user in with personal code to gather JWT token.\n   *\n   * @public\n   * @method signin\n   * @return {Void}\n   */\n  LoginFrontend.prototype.signin = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You have successfully signed in!');\n        notification.success(message);\n        $state.go('frontend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth.signin({\n        username: this.username\n      }, 'frontend').then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Signs a user up with personal and workshop code.\n   *\n   * @public\n   * @method signup\n   * @return {Void}\n   */\n  LoginFrontend.prototype.signup = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You have successfully signed up!');\n        notification.success(message);\n        $state.go('frontend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth\n        .signup({\n          username: this.username,\n          password: this.code\n        }, 'frontend').then(\n          successCallback,\n          failureCallback\n        );\n    };\n\n  /**\n   * Persists code in storage and navigates to `step2` of signup.\n   *\n   * @public\n   * @method continue\n   * @return {Void}\n   */\n  LoginFrontend.prototype.next = function()\n    {\n      var CODE_STORAGE_KEY = this.$injector.get('CODE_STORAGE_KEY');\n      var storage = this.$injector.get('storage').getProxy();\n      var $state = this.$injector.get('$state');\n\n      storage.setItem(CODE_STORAGE_KEY, this.code);\n      $state.go('login.frontend.signup.step2', {}, {\n        // note: this is important to avoid usual\n        // redirection by refetching resolve data\n        // of `login.frontend` parent state\n        reload: true\n      });\n    };\n\n  angular.module(module).controller('LoginFrontendController', LoginFrontend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var LoginBackend = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  LoginBackend.$inject = ['$scope', '$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} username Username for authentication. */\n  LoginBackend.prototype.username = null;\n\n  /** @var {string} workshop Password for authentication. */\n  LoginBackend.prototype.password = null;\n\n  /** @var {RegExp} usernameMinLength Minimum length of username. */\n  LoginBackend.prototype.usernameMinLength = 5;\n\n  /** @var {RegExp} passwordMinLength Minimum length of password. */\n  LoginBackend.prototype.passwordMinLength = 8;\n\n  /** @var {RegExp} passwordMaxLength Maximum length of password. */\n  LoginBackend.prototype.passwordMaxLength = 4096;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Signs an admin in with username and password.\n   *\n   * @public\n   * @method signin\n   * @return {Void}\n   */\n  LoginBackend.prototype.signin = function()\n    {\n      var notification = this.$injector.get('notification');\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n      var i18n = this.$injector.get('i18n');\n\n      var form = this.$scope.loginForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var successCallback = function()\n      {\n        var message = i18n.get('You are logged in now!');\n        notification.success(message);\n        $state.go('backend');\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      auth.signin({\n        username: this.username,\n        password: this.password\n      }, 'backend').then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  angular.module(module).controller('LoginBackendController', LoginBackend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Contact = function($scope, $injector) {\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  Contact.$inject = ['$scope','$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of contact. */\n  Contact.prototype.name = null;\n\n  /** @var {string} email Email of contact. */\n  Contact.prototype.email = null;\n\n  /** @var {string} subject Subject of contact. */\n  Contact.prototype.subject = null;\n\n  /** @var {string} message Message of contact. */\n  Contact.prototype.message = null;\n\n  /** @var {string} messageMinLength Message minmimum length. */\n  Contact.prototype.messageMinLength = 25;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Sends an email from contact form to admins.\n   *\n   * @public\n   * @method submit\n   * @return {Void}\n   */\n  Contact.prototype.submit = function()\n    {\n      var mail = this.$injector.get('mail');\n      var form = this.$scope.contactForm;\n      if (form.$invalid) {\n        return;\n      }\n\n      var me = this;\n\n      var successCallback = function()\n      {\n        me.reset();\n      };\n\n      var failureCallback = function()\n      {\n        // @see: httpInterceptor\n      };\n\n      mail.send({\n        name: this.name,\n        email: this.email,\n        subject: this.subject,\n        message: this.message\n      }).then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Resets all form inputs to initial state.\n   *\n   * @public\n   * @method reset\n   * @return {Void}\n   */\n  Contact.prototype.reset = function()\n    {\n      this.name = null;\n      this.email = null;\n      this.subject = null;\n      this.message = null;\n    };\n\n  angular.module(module).controller('ContactController', Contact);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Frontend = function($injector) {\n    this.$injector = $injector;\n\n    this.user = $injector.get('user');\n  };\n\n  Frontend.$inject = ['$injector'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {object} user User service object. */\n  Frontend.prototype.user = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Creates a new result resource from task payload.\n   *\n   * @public\n   * @method createResult\n   * @param {object} payload\n   * @return {Void}\n   */\n  Frontend.prototype.createResult = function(payload)\n  {\n    var Result = this.$injector.get('Result');\n    var user = this.$injector.get('user');\n\n    var successCallback = function(result)\n      {\n        // update user object from response\n        // handling comparisons for `state`,\n        // `tickets` and showing messages\n        user.update(result);\n      };\n\n    var failureCallback = function()\n      {\n        // noop\n      };\n\n    var result = new Result(payload);\n    var promise = result.$create();\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Updates a new result resource from task `result`.\n   *\n   * @public\n   * @method updateResult\n   * @param {object} result\n   * @return {Void}\n   */\n  Frontend.prototype.updateResult = function(payload)\n  {\n    var Result = this.$injector.get('Result');\n    var user = this.$injector.get('user');\n\n    var successCallback = function(result)\n      {\n        // update user object from response\n        // handling comparisons for `state`,\n        // `tickets` and showing messages\n        user.update(result);\n      };\n\n    var failureCallback = function()\n      {\n        // noop\n      };\n\n    var promise = Result.update({ id: payload.id }, payload).$promise;\n    promise.then(\n      successCallback,\n      failureCallback\n    );\n\n    return promise;\n  };\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @public\n   * @method logout\n   * @return {Void}\n   */\n  Frontend.prototype.logout = function()\n    {\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n\n      var successCallback = function()\n        {\n          $state.go('login.frontend');\n        };\n\n      var failureCallback = function()\n        {\n\n        };\n\n      auth.signout().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Redirects router to state.\n   *\n   * @public\n   * @method goTo\n   * @param {string} state\n   * @return {Void}\n   */\n  Frontend.prototype.goTo = function(state)\n    {\n      var $state = this.$injector.get('$state');\n\n      $state.go(state);\n    };\n\n  angular.module(module).controller('FrontendController', Frontend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Workshop = function($scope, $injector, workshops) {\n    this.workshops = workshops;\n    this.$injector = $injector;\n    this.$scope = $scope;\n\n    this._resultsSource = null;\n    this._userSources = {};\n    this._workshops = {};\n    this._tasks = {};\n\n    this._initWorkshops();\n    this._initListener();\n  };\n\n  Workshop.$inject = ['$scope', '$injector', 'workshops'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of new workshop. */\n  Workshop.prototype.name = null;\n\n  /** @var {string} code Code of new workshop. */\n  Workshop.prototype.code = null;\n\n  /** @var {RegExp} nameMinLength Minimum length of workshop name. */\n  Workshop.prototype.nameMinLength = 8;\n\n  /** @var {RegExp} codeMinLength Minimum length of workshop code. */\n  Workshop.prototype.codeMinLength = 8;\n\n  /** @var {RegExp} userpattern Regular expression for `username` property. */\n  Workshop.prototype.codePattern = /^[A-Za-z0-9]+$/;\n\n  /** @var {object} deleteWorkshop Currently marked workshop for deletion. */\n  Workshop.prototype.deleteWorkshop = null;\n\n  /** @var {object} drawingWorkshop Currently marked workshop for drawing. */\n  Workshop.prototype.drawingWorkshop = null;\n\n  /** @var {array} drawingTickets Randomly picked tickets of drawing. */\n  Workshop.prototype.drawingTickets = null;\n\n  /** @var {array} drawingAmount Amount of chosen tickets for drawing. */\n  Workshop.prototype.drawingAmount = 2;\n\n  /** @var {array} chartResults Currently loaded results for chart. */\n  Workshop.prototype.chartResults = null;\n\n  /** @var {object} chartTask Currently selected task of results. */\n  Workshop.prototype.chartTask = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Toggles `$$expanded` flag on workshop depending on query params.\n   * https://ui-router.github.io/ng1/docs/latest/interfaces/ng1.ng1controller.html#uionparamschanged\n   *\n   * @public\n   * @method uiOnParamsChanged\n   * @param {object} params\n   * @return {void}\n   */\n  Workshop.prototype.uiOnParamsChanged = function(params)\n    {\n      var workshop = this._workshops[params.expand];\n      if (!workshop) {\n        return;\n      }\n\n      // close opened workshop before toggling\n      if (this._expanded) {\n        this._expanded.$$expanded = false;\n        this._expanded = null;\n      }\n\n      // expand the new workshop now\n      workshop.$$expanded = true;\n      this._expanded = workshop;\n    };\n\n  /**\n   * Creates a new workshop.\n   *\n   * @public\n   * @method create\n   * @return {void}\n   */\n  Workshop.prototype.create = function()\n    {\n      var notification = this.$injector.get('notification');\n      var Workshop = this.$injector.get('Workshop');\n      var i18n = this.$injector.get('i18n');\n\n      var workshop = new Workshop({\n        name: this.name,\n        code: this.code\n      });\n\n      var me = this;\n\n      var successCallback = function(workshop)\n        {\n          var message = i18n.get('Workshop has been created successfully!');\n          notification.success(message);\n\n          me.workshops.unshift(workshop);\n          me._initWorkshop(workshop);\n\n          me.name = null;\n          me.code = null;\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      workshop.$create().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Deletes a workshop after confirmation.\n   *\n   * @public\n   * @method delete\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.delete = function(workshop)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Workshop has been deleted successfully!');\n          notification.success(message);\n\n          var index = me.workshops.indexOf(workshop);\n          me.workshops.splice(index, 1);\n\n          me._removeUsersStream(workshop);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      workshop.$delete().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Loads task's results and invokes modal dialog.\n   *\n   * @public\n   * @method markWorkshopForDrawing\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.markWorkshopForDrawing = function(workshop)\n    {\n      var Ticket = this.$injector.get('Ticket');\n      var random = this.$injector.get('random');\n\n      var me = this;\n      var successCallback = function(tickets)\n        {\n          me.drawingTickets = random.shuffle(tickets);\n          me.drawingWorkshop = workshop;\n        };\n\n      var failureCallback = function()\n        {\n        };\n\n      var resource = Ticket.getByWorkshop({ workshopId: workshop.id });\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for deleting a workshop.\n   *\n   * @public\n   * @method markWorkshopForDeletion\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.markWorkshopForDeletion = function(workshop)\n    {\n      this.deleteWorkshop = workshop;\n    };\n\n  /**\n   * Toggles `isActive` of a workshop.\n   *\n   * @public\n   * @method toggleActive\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.toggleWorkshop = function(workshop)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function(workshop)\n        {\n          var message = i18n.get(\n            workshop.isActive ?\n              'Workshop has been unlocked successfully. Students can register now!' :\n              'Workshop has been locked successfully. Students can now only use their access from home!'\n          );\n          notification.success(message);\n\n          me._initWorkshop(workshop);\n        };\n\n      var failureCallback = function()\n        {\n          // revert the change on failed update!\n          workshop.isActive = !workshop.isActive;\n        };\n\n      workshop.isActive = !workshop.isActive;\n\n      workshop.$update().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Loads task's results and invokes modal dialog.\n   *\n   * @public\n   * @method markTaskForChart\n   * @param {object} task\n   * @return {void}\n   */\n  Workshop.prototype.markTaskForChart = function(task)\n    {\n      var Result = this.$injector.get('Result');\n\n      var me = this;\n      var successCallback = function(results)\n        {\n          me.chartResults = results;\n          me.chartTask = task;\n        };\n\n      var failureCallback = function()\n        {\n        };\n\n      var resource = Result.getByTask({ taskId: task.id });\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Toggles `isActive` of a task.\n   *\n   * @public\n   * @method toggleTask\n   * @param {object} task\n   * @return {void}\n   */\n  Workshop.prototype.toggleTask = function(task)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n      var Task = this.$injector.get('Task');\n\n      var successCallback = function(/*workshop*/)\n        {\n          var message = i18n.get(\n            task.isActive ?\n              'Task has been unlocked successfully. Students can send results now!' :\n              'Task has been locked successfully. Students cannot send results currently!'\n          );\n          notification.success(message);\n        };\n\n      var failureCallback = function()\n        {\n          // revert the change on failed update!\n          task.isActive = !task.isActive;\n        };\n\n      task.isActive = !task.isActive;\n\n      var resource = Task.update({ id: task.id}, task);\n      resource.$promise.then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Sets `expand` query parameter dependending on\n   * workshop's current `$$expanded` flag info.\n   *\n   * @public\n   * @method expand\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype.expand = function(workshop)\n    {\n      var $state = this.$injector.get('$state');\n      var expand = !workshop.$$expanded ?\n        workshop.id : \n        null;\n\n      $state.go('backend.workshops', {\n        expand: expand\n      });\n    };\n\n  /**\n   * Sets up an event source for streaming user count.\n   *\n   * @private\n   * @method _addUsersStream\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._addUsersStream = function(workshop)\n    {\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      var _onMessage = function(data) {\n        me.$scope.$evalAsync(function(){\n          workshop.$$users = data;\n        });\n      };\n\n      var url = API_URL + '/sse/workshop/' + workshop.id + '/users';\n      var options = { onMessage: _onMessage, sleep: 10 };\n      var source = sse.addSource(url, options);\n      this._userSources[workshop.id] = source;\n    };\n\n  /**\n   * Removes an event source from internal stack and service.\n   *\n   * @private\n   * @method _removeUsersStream\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._removeUsersStream = function(workshop)\n    {\n      var sse = this.$injector.get('sse');\n\n      var source = this._userSources[workshop.id];\n      if (!source) {\n        return;\n      }\n\n      delete this._userSources[workshop.id];\n      sse.removeSource(source);\n    };\n\n  /**\n   * Sets up event sources for updating result counters.\n   *\n   * @private\n   * @method _streamResults\n   * @return {void}\n   */\n  Workshop.prototype._streamResults = function()\n    {\n      var API_URL = this.$injector.get('API_URL');\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      // --- SSE ---\n      var _onMessage = function(workshop, data) {\n        me.$scope.$evalAsync(function(){\n          // remove event source if workshop is not\n          // active at the moment === one-shot only\n          if (!workshop.isActive) {\n            sse.removeSource(me._resultsSource);\n          }\n\n          angular.forEach(data, function(item){\n            var task = me._tasks[item.id];\n            task.$$results = item.results;\n          });\n        });\n      };\n\n      var _watchExpression = function() {\n        // workshop must be opened, but we also need\n        // to watch `isActive` state to catch toggle\n        // from property to reinitialize event source\n        return me._expanded && me._expanded.isActive;\n      };\n\n      var _watchCallback = function() {\n        if (me._resultsSource) {\n          sse.removeSource(me._resultsSource);\n        }\n\n        if (me._expanded) {\n          var url = API_URL + '/sse/workshop/' + me._expanded.id + '/results';\n          var onMessage = _onMessage.bind(me, me._expanded);\n          var options = { onMessage: onMessage, sleep: 5 };\n          me._resultsSource = sse.addSource(url, options);\n        }\n      };\n\n      this._unwatch = this.$scope.$watch(\n        _watchExpression,\n        _watchCallback\n      );\n    };\n\n  /**\n   * Maps all workshops to hash maps, sets up streaming and query params.\n   *\n   * @private\n   * @method _initWorkshops\n   * @return {void}\n   */\n  Workshop.prototype._initWorkshops = function()\n    {\n      var $uiRouterGlobals = this.$injector.get('$uiRouterGlobals');\n\n      // create hash maps for workshops and tasks for ease lookups\n      angular.forEach(this.workshops, this._initWorkshop.bind(this));\n\n      // now make the initial call to change handler\n      this.uiOnParamsChanged($uiRouterGlobals.params);\n\n      // kick off general streaming of task results\n      this._streamResults();\n    };\n\n  /**\n   * Adds workshop and tasks to hash map and initializes\n   * streaming for workshop depending on `isActive` flag.\n   *\n   * @private\n   * @method _initWorkshop\n   * @param {object} workshop\n   * @return {void}\n   */\n  Workshop.prototype._initWorkshop = function(workshop)\n    {\n      // map all `tasks` to internal hash and set `$$results`\n      var me = this;\n      angular.forEach(workshop.tasks, function(task){\n        var old = me._tasks[task.id] || null;\n        task.$$results = old !== null ?\n          old.$$results\n          : 0;\n\n        me._tasks[task.id] = task;\n      });\n\n      // check `$$expanded` flag for this workshop\n      var id = this._expanded && this._expanded.id;\n      workshop.$$expanded = workshop.id === id;\n\n      // initialize `$$users` and set up streaming\n      workshop.$$users = workshop.users.length;\n\n      if (!workshop.isActive) {\n        this._removeUsersStream(workshop);\n      } else {\n        this._addUsersStream(workshop);\n      }\n\n      this._workshops[workshop.id] = workshop;\n    };\n\n  /**\n   * Removes all watches, listeners and sources\n   * as soon as controller's $scope is destroyed.\n   *\n   * @private\n   * @method _initListener\n   * @return {void}\n   */\n  Workshop.prototype._initListener = function()\n    {\n      var sse = this.$injector.get('sse');\n\n      var me = this;\n\n      var _onDestroy = function() {\n        for (var id in me._userSources) {\n          sse.removeSource(me._userSources[id]);\n        }\n\n        if (me._resultsSource) {\n          sse.removeSource(me._resultsSource);\n        }\n\n        me._resultsSource = null;\n        me._userSources = {};\n\n        me._unlisten();\n        me._unwatch();\n      };\n\n      this._unlisten = this.$scope.$on('$destroy', _onDestroy);\n    };\n\n\n  angular.module(module).controller('WorkshopController', Workshop);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Admin = function($scope, $injector, admins) {\n    this.admins = admins;\n    this.$injector = $injector;\n    this.$scope = $scope;\n  };\n\n  Admin.$inject = ['$scope', '$injector', 'admins'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {string} name Name of new workshop. */\n  Admin.prototype.username = null;\n\n  /** @var {string} code Code of new workshop. */\n  Admin.prototype.password = null;\n\n  /** @var {RegExp} usernameMinLength Minimum length of workshop name. */\n  Admin.prototype.usernameMinLength = 5;\n\n  /** @var {RegExp} passwordMinLength Minimum length of workshop code. */\n  Admin.prototype.passwordMinLength = 8;\n\n  /** @var {object} editAdmin Currently marked workshop for editing. */\n  Admin.prototype.editAdmin = null;\n\n  /** @var {object} deleteAdmin Currently marked workshop for deletion. */\n  Admin.prototype.deleteAdmin = null;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Creates a new admin.\n   *\n   * @public\n   * @method create\n   * @return {void}\n   */\n  Admin.prototype.create = function()\n    {\n      var notification = this.$injector.get('notification');\n      var Admin = this.$injector.get('Admin');\n      var i18n = this.$injector.get('i18n');\n\n      var admin = new Admin({\n        username: this.username,\n        password: this.password\n      });\n\n      var me = this;\n\n      var successCallback = function(admin)\n        {\n          var message = i18n.get('Admin has been created successfully!');\n          notification.success(message);\n\n          me.admins.unshift(admin);\n\n          me.username = null;\n          me.password = null;\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$create().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for deleting a admin.\n   *\n   * @public\n   * @method markAdminForDeletion\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.markAdminForDeletion = function(admin)\n    {\n      this.deleteAdmin = admin;\n    };\n\n  /**\n   * Deletes a admin after confirmation.\n   *\n   * @public\n   * @method delete\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.delete = function(admin)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var me = this;\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Admin has been deleted successfully!');\n          notification.success(message);\n\n          var index = me.admins.indexOf(admin);\n          me.admins.splice(index, 1);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$delete().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Invokes confirmation modal for editing a admin.\n   *\n   * @public\n   * @method markAdminForEdit\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.markAdminForEdit = function(admin)\n    {\n      this.editAdmin = admin;\n    };\n\n  /**\n   * Updates a admin after confirmation.\n   *\n   * @public\n   * @method update\n   * @param {object} admin\n   * @return {void}\n   */\n  Admin.prototype.update = function(admin)\n    {\n      var notification = this.$injector.get('notification');\n      var i18n = this.$injector.get('i18n');\n\n      var successCallback = function()\n        {\n          var message = i18n.get('Password has been successfully updated!');\n          notification.success(message);\n        };\n\n      var failureCallback = function()\n        {\n          // noop\n        };\n\n      admin.$update().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  angular.module(module).controller('AdminController', Admin);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n /**\n  * @constructor\n  */\n  var Backend = function($injector, isSuperAdmin) {\n    this.$injector = $injector;\n\n    this.isSuperAdmin = isSuperAdmin;\n  };\n\n  Backend.$inject = ['$injector', 'isSuperAdmin'];\n\n  //\n  // PROPERTIES\n  //\n\n  /** @var {boolean} isSuperAdmin If user is super admin. */\n  Backend.prototype.isSuperAdmin = false;\n\n  //\n  // METHODS\n  //\n\n  /**\n   * Destroys user session and redirects to login.\n   *\n   * @public\n   * @method logout\n   * @return {Void}\n   */\n  Backend.prototype.logout = function()\n    {\n      var $state = this.$injector.get('$state');\n      var auth = this.$injector.get('auth');\n\n      var successCallback = function()\n        {\n          $state.go('login.backend');\n        };\n\n      var failureCallback = function()\n        {\n\n        };\n\n      auth.signout().then(\n        successCallback,\n        failureCallback\n      );\n    };\n\n  /**\n   * Redirects router to state.\n   *\n   * @public\n   * @method goTo\n   * @param {string} state\n   * @return {Void}\n   */\n  Backend.prototype.goTo = function(state)\n    {\n      var $state = this.$injector.get('$state');\n\n      $state.go(state);\n    };\n\n  angular.module(module).controller('BackendController', Backend);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/workshop/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      validateWorkshopBackend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/workshop/code/:code'\n      },\n      validateUsernameFrontend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/auth/validate/username/:username'\n      },\n      validateWorkshopFrontend: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/auth/validate/workshop/:code'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Workshop', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/ticket/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      getByWorkshop: {\n        method: 'GET',\n        isArray: true,\n        url: API_URL + '/ticket/workshop/:workshopId'\n      }\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Ticket', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, $injector, API_URL) {\n    var url = API_URL + '/result/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      getByTask: {\n        method: 'GET',\n        isArray: true,\n        url: API_URL + '/result/task/:taskId'\n      }\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', '$injector', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Result', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/admin/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      validateAdmin: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/admin/username/:username'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Admin', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/task/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n    };\n    var options = {\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('Task', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  //\n  // FACTORY\n  //\n\n  /**\n   * @constructor\n   */\n  var Factory = function($resource, API_URL) {\n    var url = API_URL + '/user/:id';\n    var paramDefaults = { id: '@id' };\n    var actions = {\n      current: {\n        method: 'GET',\n        skipGlobalErrorMessage: true,\n        url: API_URL + '/user/current'\n      }\n    };\n    var options = {\n\n    };\n\n    return $resource(url, paramDefaults, actions, options);\n  };\n\n  Factory.$inject = ['$resource', 'API_URL'];\n\n  //\n  // REGISTRY\n  //\n  angular.module(module).factory('User', Factory);\n\n})(ANGULAR_MODULE, angular);\n\n/* global ANGULAR_MODULE, angular */\n(function(module, angular) {\n  'use strict';\n\n  // --------------------------------------------------\n  // i18n\n  // --------------------------------------------------\n  angular.module(module).filter('i18n',['i18n',function(i18n){\n    var filter = function()\n      {\n        return i18n.get.apply(i18n, arguments);\n      };\n\n    filter.$stateful = true;\n\n    return filter;\n  }]);\n\n  // --------------------------------------------------\n  // Percentage\n  // --------------------------------------------------\n  angular.module(module).filter('percent', function(){\n    return function(value, fraction) {\n      fraction = isNaN(fraction) ? 0 : fraction;\n      value = isNaN(value) ? 0 : value * 100;\n\n      return value.toFixed(fraction) + '%';\n    };\n  });\n\n  // --------------------------------------------------\n  // Coin\n  // --------------------------------------------------\n  angular.module(module).filter('coin', function(){\n    return function(value) {\n\n      if (value >= 1) {\n        return value + '&#8364;';\n      }\n\n      return (value*100) + '&#162;';\n    };\n  });\n\n  // --------------------------------------------------\n  // Note\n  // --------------------------------------------------\n  angular.module(module).filter('note', function(){\n    return function(value) {\n      return value + '&#8364;';\n    };\n  });\n\n})(ANGULAR_MODULE, angular);\n\n/* globals UIkit */\n(function() {\n  'use strict';\n\n  UIkit.component('off-canvas-scroll', {\n\n    defaults: {\n      offset: 0,\n      target: '',\n      duration: 1000,\n      transition: 'easeOutExpo'\n    },\n\n    props: {\n      target: String,\n      offset: Number,\n      duration: Number,\n      transition: String\n    },\n\n    computed: {\n        offcanvas: function() {\n          return UIkit.offcanvas(this.target);\n        },\n\n        $offcanvas: function() {\n          return this.offcanvas && this.offcanvas.$el;\n        }\n    },\n\n    init: function() {\n      if (!this.target) {\n        console.error('off-canvas-scroll: Required \"target\" option is not set.');\n        return;\n      }\n\n      if (!this.offcanvas) {\n        console.error('off-canvas-scroll: No offcanvas component found with id: ' + this.target);\n        return;\n      }\n    },\n\n    events: {\n      click: function(event, data) {\n        if (data && data.scroll) {\n          return;\n        }\n\n        this.offcanvas.hide();\n        this.$offcanvas.on('hidden', this._onHidden);\n      }\n    },\n\n    methods: {\n\n      _onHidden: function() {\n        this.$offcanvas.off('hidden', this._onHidden);\n\n        this._dummyScroll = UIkit.scroll(this.$el, {\n          transition: this.transition,\n          duration: this.duration,\n          offset: this.offset\n        });\n\n        this.$el.on('scrolled', this._onScrolled);\n        this.$el.trigger('click', { scroll: true });\n      },\n\n      _onScrolled: function() {\n        this.$el.off('scrolled', this._onScrolled);\n        this._dummyScroll.$destroy();\n      }\n    }\n  });\n\n})();\n"]}