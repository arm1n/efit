/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,i){"use strict";var s=function(t,i,s,o,e,r){this.$interval=e,this.$element=s,this.$filter=o,this.$attrs=i,this.$scope=t,this.randomService=r,this.avg=12,this.rows=5,this.cols=5,this.interval=1,this.random=!1,this.dynamic=!1,this.totalBoxes=0,this.stopped=!1,this.started=!1,this.hasBomb=!1,this.resolved=!1,this.remainingBoxes=0,this.collectedBoxes=0};s.$inject=["$scope","$attrs","$element","$filter","$interval","random"],s.prototype.$onInit=function(){this.init()},s.prototype.init=function(){this._initInternals(),this._initMatrix(),this._initBomb(),this._desist(),this.dynamic||this.start()},s.prototype.reset=function(){this._removeState(),this.init()},s.prototype.start=function(t){if(this.dynamic){var i=this,s=this.iterator.length;this._intIndex=t||0,this._intervalId=i.$interval(function(){var t=i.iterator[i._intIndex];i.update(t,!0),i._intIndex++,i._intIndex===s&&i.stop()},1e3*this.interval,s-this._intIndex)}this.started=!0,this._persist()},s.prototype.stop=function(){this.dynamic&&this._intervalId&&this.$interval.cancel(this._intervalId),this.stopped=!0,this._persist()},s.prototype.resolve=function(){for(var t=0;t<this.collection.length;t++)this.collection[t].$$resolved=!0;this.resolved=!0,this.onResolve(),this._persist()},s.prototype.update=function(t,i){var s=this.collection.indexOf(t);i?(s<0&&(this.collection.push(t),this.collectedBoxes++),t.$$active=!0):s>=0&&(this.collection.splice(s,1),t.$$active=!1,this.collectedBoxes--),this.isBomb(t)&&(this.hasBomb=!0);var o=this.totalBoxes,e=this.collectedBoxes;this.remainingBoxes=o-e,this._persist()},s.prototype.trackId=function(t){return t.row+"_"+t.col},s.prototype.isBomb=function(t){return i.equals(this.bomb,t)},s.prototype._getColumn=function(t){var i=t.row-1,s=t.col-1;return this.matrix[i][s]},s.prototype._getState=function(){return null},s.prototype._setState=function(){},s.prototype._removeState=function(){},s.prototype._persist=function(){},s.prototype._desist=function(){},s.prototype._initInternals=function(){this.collection=[],this.hasBomb=!1,this.started=!1,this.stopped=!1,this.resolved=!1,this.collectedBoxes=0,this.remainingBoxes=0,this.totalBoxes=this.rows*this.cols},s.prototype._initMatrix=function(){this.matrix=[],this.iterator=[];for(var t=0;t<this.rows;t++){for(var i=[],s=0;s<this.cols;s++){var o={row:t+1,col:s+1};i.push(o),this.dynamic&&(this.random?this.randomService.push(this.iterator,o):this.iterator.push(o))}this.matrix.push(i)}},s.prototype._initBomb=function(){var t=this.randomService.between(0,this.rows-1),i=this.randomService.between(0,this.cols-1);this.bomb=this.matrix[t][i]},i.module(t).directive("bombTask",function(){return{scope:{avg:"=?bombTaskAvg",rows:"=?bombTaskRows",cols:"=?bombTaskCols",random:"=?bombTaskRandom",dynamic:"=?bombTaskDynamic",interval:"=?bombTaskInterval",onResolve:"&bombTaskOnResolve"},restrict:"A",transclude:!0,controller:s,bindToController:!0,controllerAs:"bombTaskController",templateUrl:"views/directives/bomb-task.html"}});var o=function(){};o.prototype.model=null,o.prototype.isActive=!1,o.prototype.isDisabled=!1,o.prototype.isClickable=!0,o.prototype.toggle=function(){!this.isDisabled&&this.isClickable&&(this.isActive=!this.isActive,this.onToggle({model:this.model,state:this.isActive}))},i.module(t).directive("bombTaskCard",function(){return{scope:{model:"=bombTaskCard",onToggle:"&bombTaskCardOnToggle",isActive:"=?bombTaskCardIsActive",isDisabled:"=?bombTaskCardIsDisabled",isClickable:"=?bombTaskCardIsClickable"},restrict:"A",transclude:!0,controller:o,bindToController:!0,controllerAs:"bombTaskCardController",templateUrl:"views/directives/bomb-task-card.html"}})}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
