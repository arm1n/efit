/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,e){"use strict";var s=function(){this.amount=3,this.cards=[],this.count=0};s.$inject=["$scope","$element","$attrs"],s.prototype.$onInit=function(){this.init()},s.prototype.init=function(){this.cards=[];for(var t=1;t<=this.amount;t++)this.cards.push(t);this.resolved=!1},s.prototype.reset=function(){this.init()},s.prototype.update=function(){this.count++,this.resolve()},s.prototype.resolve=function(){this.count<this.amount||(this.resolved=!0,this.onResolve())},e.module(t).directive("saveCoinTask",function(){return{scope:{amount:"=?saveCoinTaskAmount",onResolve:"&saveCoinTaskOnResolve"},restrict:"A",transclude:!0,controller:s,bindToController:!0,controllerAs:"saveCoinTaskController",templateUrl:"views/directives/save-coin-task.html"}});var o=function(t,e,s){this.$element=e,this.$scope=t,this.$attrs=s,this.thickness=20,this.threshold=.75,this.color="#e5e5e5",this.complete=!1,this._scratchCard=null};o.$inject=["$scope","$element","$attrs"],o.prototype.$onInit=function(){this._scratchCard=new Scratchcard(this.$element.get(0),{painter:new Scratchcard.Painter({thickness:this.thickness,color:this.color})}),this._scratchCard.on("progress",this._onProgress.bind(this))},o.prototype._onProgress=function(t){if(t>this.threshold&&t<1){var e=this.onComplete.bind(this);this.$scope.$evalAsync(e),this._scratchCard.complete(),this.complete=!0}},e.module(t).directive("saveCoinTaskCard",function(){return{scope:{color:"=?saveCoinTaskColor",thickness:"=?saveCoinTaskCardThickness",threshold:"=?saveCoinTaskCardThreshold",onComplete:"&saveCoinTaskCardOnComplete"},restrict:"A",transclude:!0,controller:o,bindToController:!0,controllerAs:"saveCoinTaskCardController",templateUrl:"views/directives/save-coin-task-card.html"}})}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kaXJlY3RpdmVzL3NhdmUtY29pbi10YXNrLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImFuZ3VsYXIiLCJTYXZlQ29pblRhc2siLCJ0aGlzIiwiYW1vdW50IiwiY2FyZHMiLCJjb3VudCIsIiRpbmplY3QiLCJwcm90b3R5cGUiLCIkb25Jbml0IiwiaW5pdCIsImkiLCJwdXNoIiwicmVzb2x2ZWQiLCJyZXNldCIsInVwZGF0ZSIsInJlc29sdmUiLCJvblJlc29sdmUiLCJkaXJlY3RpdmUiLCJzY29wZSIsInJlc3RyaWN0IiwidHJhbnNjbHVkZSIsImNvbnRyb2xsZXIiLCJiaW5kVG9Db250cm9sbGVyIiwiY29udHJvbGxlckFzIiwidGVtcGxhdGVVcmwiLCJTYXZlQ29pblRhc2tDYXJkIiwiJHNjb3BlIiwiJGVsZW1lbnQiLCIkYXR0cnMiLCJ0aGlja25lc3MiLCJ0aHJlc2hvbGQiLCJjb2xvciIsImNvbXBsZXRlIiwiX3NjcmF0Y2hDYXJkIiwiU2NyYXRjaGNhcmQiLCJnZXQiLCJwYWludGVyIiwiUGFpbnRlciIsIm9uIiwiX29uUHJvZ3Jlc3MiLCJiaW5kIiwicHJvZ3Jlc3MiLCJvbkNvbXBsZXRlIiwiJGV2YWxBc3luYyIsIkFOR1VMQVJfTU9EVUxFIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztDQVNBLFNBQVVBLEVBQVFDLEdBQ2hCLFlBT0EsSUFBSUMsR0FBZSxXQUNqQkMsS0FBS0MsT0FBUyxFQUNkRCxLQUFLRSxTQUNMRixLQUFLRyxNQUFRLEVBR2ZKLEdBQWFLLFNBQVcsU0FBUyxXQUFXLFVBRTVDTCxFQUFhTSxVQUFVQyxRQUFVLFdBQy9CTixLQUFLTyxRQUdQUixFQUFhTSxVQUFVRSxLQUFPLFdBQzVCUCxLQUFLRSxRQUNMLEtBQUssR0FBSU0sR0FBRSxFQUFHQSxHQUFHUixLQUFLQyxPQUFRTyxJQUM1QlIsS0FBS0UsTUFBTU8sS0FBS0QsRUFHbEJSLE1BQUtVLFVBQVcsR0FHbEJYLEVBQWFNLFVBQVVNLE1BQVEsV0FDN0JYLEtBQUtPLFFBR1BSLEVBQWFNLFVBQVVPLE9BQVMsV0FDOUJaLEtBQUtHLFFBQ0xILEtBQUthLFdBR1BkLEVBQWFNLFVBQVVRLFFBQVUsV0FDM0JiLEtBQUtHLE1BQU1ILEtBQUtDLFNBSXBCRCxLQUFLVSxVQUFXLEVBQ2hCVixLQUFLYyxjQUlQaEIsRUFBUUQsT0FBT0EsR0FBUWtCLFVBQVUsZUFBZ0IsV0FDL0MsT0FDRUMsT0FDRWYsT0FBUSx1QkFDUmEsVUFBVywwQkFFYkcsU0FBVSxJQUNWQyxZQUFZLEVBQ1pDLFdBQVlwQixFQUNacUIsa0JBQWtCLEVBQ2xCQyxhQUFjLHlCQUNkQyxZQUFhLHlDQVNqQixJQUFJQyxHQUFtQixTQUFTQyxFQUFPQyxFQUFTQyxHQUM5QzFCLEtBQUt5QixTQUFXQSxFQUNoQnpCLEtBQUt3QixPQUFTQSxFQUNkeEIsS0FBSzBCLE9BQVNBLEVBRWQxQixLQUFLMkIsVUFBWSxHQUNqQjNCLEtBQUs0QixVQUFZLElBQ2pCNUIsS0FBSzZCLE1BQVEsVUFFYjdCLEtBQUs4QixVQUFXLEVBQ2hCOUIsS0FBSytCLGFBQWUsS0FHdEJSLEdBQWlCbkIsU0FBVyxTQUFTLFdBQVcsVUFFaERtQixFQUFpQmxCLFVBQVVDLFFBQVUsV0FDbkNOLEtBQUsrQixhQUFlLEdBQUlDLGFBQ3RCaEMsS0FBS3lCLFNBQVNRLElBQUksSUFFaEJDLFFBQVMsR0FBSUYsYUFBWUcsU0FDdkJSLFVBQVczQixLQUFLMkIsVUFDaEJFLE1BQU83QixLQUFLNkIsVUFLbEI3QixLQUFLK0IsYUFBYUssR0FBRyxXQUFZcEMsS0FBS3FDLFlBQVlDLEtBQUt0QyxRQUd6RHVCLEVBQWlCbEIsVUFBVWdDLFlBQWMsU0FBU0UsR0FDaEQsR0FBSUEsRUFBU3ZDLEtBQUs0QixXQUFhVyxFQUFTLEVBQUcsQ0FDekMsR0FBSUMsR0FBYXhDLEtBQUt3QyxXQUFXRixLQUFLdEMsS0FDdENBLE1BQUt3QixPQUFPaUIsV0FBV0QsR0FDdkJ4QyxLQUFLK0IsYUFBYUQsV0FFbEI5QixLQUFLOEIsVUFBVyxJQUtwQmhDLEVBQVFELE9BQU9BLEdBQVFrQixVQUFVLG1CQUFvQixXQUNuRCxPQUNFQyxPQUNFYSxNQUFPLHNCQUNQRixVQUFXLDhCQUNYQyxVQUFXLDhCQUNYWSxXQUFZLCtCQUVkdkIsU0FBVSxJQUNWQyxZQUFZLEVBQ1pDLFdBQVlJLEVBQ1pILGtCQUFrQixFQUNsQkMsYUFBYyw2QkFDZEMsWUFBYSxnREFPaEJvQixlQUFnQjVDIiwiZmlsZSI6ImFwcC9kaXJlY3RpdmVzL3NhdmUtY29pbi10YXNrLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBBTkdVTEFSX01PRFVMRSwgYW5ndWxhciwgU2NyYXRjaGNhcmQgKi9cbihmdW5jdGlvbihtb2R1bGUsIGFuZ3VsYXIpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFNhdmVDb2luVGFza1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vIGNvbnRyb2xsZXJcbiAgdmFyIFNhdmVDb2luVGFzayA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuYW1vdW50ID0gMztcbiAgICB0aGlzLmNhcmRzID0gW107XG4gICAgdGhpcy5jb3VudCA9IDA7XG4gIH07XG5cbiAgU2F2ZUNvaW5UYXNrLiRpbmplY3QgPSBbJyRzY29wZScsJyRlbGVtZW50JywnJGF0dHJzJ107XG5cbiAgU2F2ZUNvaW5UYXNrLnByb3RvdHlwZS4kb25Jbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5pbml0KCk7XG4gIH07XG5cbiAgU2F2ZUNvaW5UYXNrLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5jYXJkcyA9IFtdO1xuICAgIGZvciAodmFyIGk9MTsgaTw9dGhpcy5hbW91bnQ7IGkrKykge1xuICAgICAgdGhpcy5jYXJkcy5wdXNoKGkpO1xuICAgIH1cblxuICAgIHRoaXMucmVzb2x2ZWQgPSBmYWxzZTtcbiAgfTtcblxuICBTYXZlQ29pblRhc2sucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLmluaXQoKTtcbiAgfTtcblxuICBTYXZlQ29pblRhc2sucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5jb3VudCsrO1xuICAgIHRoaXMucmVzb2x2ZSgpO1xuICB9O1xuXG4gIFNhdmVDb2luVGFzay5wcm90b3R5cGUucmVzb2x2ZSA9IGZ1bmN0aW9uKCl7XG4gICAgaWYgKHRoaXMuY291bnQ8dGhpcy5hbW91bnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnJlc29sdmVkID0gdHJ1ZTtcbiAgICB0aGlzLm9uUmVzb2x2ZSgpO1xuICB9O1xuXG4gIC8vIHJlZ2lzdHJ5XG4gIGFuZ3VsYXIubW9kdWxlKG1vZHVsZSkuZGlyZWN0aXZlKCdzYXZlQ29pblRhc2snLCBmdW5jdGlvbigpe1xuICAgIHJldHVybiB7XG4gICAgICBzY29wZToge1xuICAgICAgICBhbW91bnQ6ICc9P3NhdmVDb2luVGFza0Ftb3VudCcsXG4gICAgICAgIG9uUmVzb2x2ZTogJyZzYXZlQ29pblRhc2tPblJlc29sdmUnXG4gICAgICB9LFxuICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgIHRyYW5zY2x1ZGU6IHRydWUsXG4gICAgICBjb250cm9sbGVyOiBTYXZlQ29pblRhc2ssXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlLFxuICAgICAgY29udHJvbGxlckFzOiAnc2F2ZUNvaW5UYXNrQ29udHJvbGxlcicsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2RpcmVjdGl2ZXMvc2F2ZS1jb2luLXRhc2suaHRtbCdcbiAgICB9O1xuICB9KTtcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBTYXZlQ29pblRhc2sgQ2FyZFxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vIGNvbnRyb2xsZXJcbiAgdmFyIFNhdmVDb2luVGFza0NhcmQgPSBmdW5jdGlvbigkc2NvcGUsJGVsZW1lbnQsJGF0dHJzKSB7XG4gICAgdGhpcy4kZWxlbWVudCA9ICRlbGVtZW50O1xuICAgIHRoaXMuJHNjb3BlID0gJHNjb3BlO1xuICAgIHRoaXMuJGF0dHJzID0gJGF0dHJzO1xuXG4gICAgdGhpcy50aGlja25lc3MgPSAyMDtcbiAgICB0aGlzLnRocmVzaG9sZCA9IDAuNzU7XG4gICAgdGhpcy5jb2xvciA9ICcjZTVlNWU1JztcblxuICAgIHRoaXMuY29tcGxldGUgPSBmYWxzZTtcbiAgICB0aGlzLl9zY3JhdGNoQ2FyZCA9IG51bGw7XG4gIH07XG5cbiAgU2F2ZUNvaW5UYXNrQ2FyZC4kaW5qZWN0ID0gWyckc2NvcGUnLCckZWxlbWVudCcsJyRhdHRycyddO1xuXG4gIFNhdmVDb2luVGFza0NhcmQucHJvdG90eXBlLiRvbkluaXQgPSBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9zY3JhdGNoQ2FyZCA9IG5ldyBTY3JhdGNoY2FyZChcbiAgICAgIHRoaXMuJGVsZW1lbnQuZ2V0KDApLFxuICAgICAge1xuICAgICAgICBwYWludGVyOiBuZXcgU2NyYXRjaGNhcmQuUGFpbnRlcih7XG4gICAgICAgICAgdGhpY2tuZXNzOiB0aGlzLnRoaWNrbmVzcyxcbiAgICAgICAgICBjb2xvcjogdGhpcy5jb2xvclxuICAgICAgICB9KVxuICAgICAgfVxuICAgICk7XG5cbiAgICB0aGlzLl9zY3JhdGNoQ2FyZC5vbigncHJvZ3Jlc3MnLCB0aGlzLl9vblByb2dyZXNzLmJpbmQodGhpcykpO1xuICB9O1xuXG4gIFNhdmVDb2luVGFza0NhcmQucHJvdG90eXBlLl9vblByb2dyZXNzID0gZnVuY3Rpb24ocHJvZ3Jlc3MpIHtcbiAgICBpZiAocHJvZ3Jlc3M+dGhpcy50aHJlc2hvbGQgJibCoHByb2dyZXNzPDEpIHtcbiAgICAgIHZhciBvbkNvbXBsZXRlID0gdGhpcy5vbkNvbXBsZXRlLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLiRzY29wZS4kZXZhbEFzeW5jKG9uQ29tcGxldGUpO1xuICAgICAgdGhpcy5fc2NyYXRjaENhcmQuY29tcGxldGUoKTtcblxuICAgICAgdGhpcy5jb21wbGV0ZSA9IHRydWU7XG4gICAgfVxuICB9O1xuXG4gIC8vIHJlZ2lzdHJ5XG4gIGFuZ3VsYXIubW9kdWxlKG1vZHVsZSkuZGlyZWN0aXZlKCdzYXZlQ29pblRhc2tDYXJkJywgZnVuY3Rpb24oKXtcbiAgICByZXR1cm4ge1xuICAgICAgc2NvcGU6IHtcbiAgICAgICAgY29sb3I6ICc9P3NhdmVDb2luVGFza0NvbG9yJyxcbiAgICAgICAgdGhpY2tuZXNzOiAnPT9zYXZlQ29pblRhc2tDYXJkVGhpY2tuZXNzJyxcbiAgICAgICAgdGhyZXNob2xkOiAnPT9zYXZlQ29pblRhc2tDYXJkVGhyZXNob2xkJyxcbiAgICAgICAgb25Db21wbGV0ZTogJyZzYXZlQ29pblRhc2tDYXJkT25Db21wbGV0ZSdcbiAgICAgIH0sXG4gICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICAgIGNvbnRyb2xsZXI6IFNhdmVDb2luVGFza0NhcmQsXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlLFxuICAgICAgY29udHJvbGxlckFzOiAnc2F2ZUNvaW5UYXNrQ2FyZENvbnRyb2xsZXInLFxuICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9kaXJlY3RpdmVzL3NhdmUtY29pbi10YXNrLWNhcmQuaHRtbCdcbiAgICB9O1xuICB9KTtcblxuXG5cblxufSkoQU5HVUxBUl9NT0RVTEUsIGFuZ3VsYXIpO1xuIl19
