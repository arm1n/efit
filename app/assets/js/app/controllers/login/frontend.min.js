/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
/* global ANGULAR_MODULE, angular */
(function(module, angular) {
  'use strict';

 /**
  * @constructor
  */
  var LoginFrontend = function($scope, $injector) {
    this.$injector = $injector;
    this.$scope = $scope;
  };

  LoginFrontend.$inject = ['$scope', '$injector'];

  //
  // PROPERTIES
  //

  /** @var {string} username User name for authentication. */
  LoginFrontend.prototype.username = 'ru17O1';

  /** @var {string} code Workshop code for authentication. */
  LoginFrontend.prototype.code = '12345678';

  /** @var {RegExp} codeMinLength Minimum length of password. */
  LoginFrontend.prototype.codeMinLength = 8;

  /** @var {RegExp} codePattern Regular expression for `username` property. */
  LoginFrontend.prototype.codePattern = /^[A-Za-z0-9]+$/;

  /** @var {RegExp} userpattern Regular expression for `username` property. */
  LoginFrontend.prototype.userpattern = /^[a-z][a-z](?:0[1-9]|[12]\d|3[01])[A-Z]\d$/;

  //
  // METHODS
  //

  /**
   * Signs a user in with personal code to gather JWT token.
   *
   * @public
   * @method signin
   * @return {Void}
   */
  LoginFrontend.prototype.signin = function()
    {
      var notification = this.$injector.get('notification');
      var $state = this.$injector.get('$state');
      var auth = this.$injector.get('auth');
      var i18n = this.$injector.get('i18n');

      var form = this.$scope.loginForm;
      if (form.$invalid) {
        return;
      }

      var successCallback = function()
      {
        var message = i18n.get('You have successfully signed in!');
        notification.success(message);
        $state.go('frontend');
      };

      var failureCallback = function()
      {
        // @see: httpInterceptor
      };

      auth.signin({
        username: this.username
      }, 'frontend').then(
        successCallback,
        failureCallback
      );
    };

  /**
   * Signs a user up with personal and workshop code.
   *
   * @public
   * @method signup
   * @return {Void}
   */
  LoginFrontend.prototype.signup = function()
    {
      var notification = this.$injector.get('notification');
      var $state = this.$injector.get('$state');
      var auth = this.$injector.get('auth');
      var i18n = this.$injector.get('i18n');

      var form = this.$scope.loginForm;
      if (form.$invalid) {
        return;
      }

      var successCallback = function()
      {
        var message = i18n.get('You have successfully signed up!');
        notification.success(message);
        $state.go('frontend');
      };

      var failureCallback = function()
      {
        // @see: httpInterceptor
      };

      auth
        .signup({
          username: this.username,
          password: this.code
        }, 'frontend').then(
          successCallback,
          failureCallback
        );
    };

  angular.module(module).controller('LoginFrontendController', LoginFrontend);

})(ANGULAR_MODULE, angular);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb250cm9sbGVycy9sb2dpbi9mcm9udGVuZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFwcC9jb250cm9sbGVycy9sb2dpbi9mcm9udGVuZC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgQU5HVUxBUl9NT0RVTEUsIGFuZ3VsYXIgKi9cbihmdW5jdGlvbihtb2R1bGUsIGFuZ3VsYXIpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gLyoqXG4gICogQGNvbnN0cnVjdG9yXG4gICovXG4gIHZhciBMb2dpbkZyb250ZW5kID0gZnVuY3Rpb24oJHNjb3BlLCAkaW5qZWN0b3IpIHtcbiAgICB0aGlzLiRpbmplY3RvciA9ICRpbmplY3RvcjtcbiAgICB0aGlzLiRzY29wZSA9ICRzY29wZTtcbiAgfTtcblxuICBMb2dpbkZyb250ZW5kLiRpbmplY3QgPSBbJyRzY29wZScsICckaW5qZWN0b3InXTtcblxuICAvL1xuICAvLyBQUk9QRVJUSUVTXG4gIC8vXG5cbiAgLyoqIEB2YXIge3N0cmluZ30gdXNlcm5hbWUgVXNlciBuYW1lIGZvciBhdXRoZW50aWNhdGlvbi4gKi9cbiAgTG9naW5Gcm9udGVuZC5wcm90b3R5cGUudXNlcm5hbWUgPSAncnUxN08xJztcblxuICAvKiogQHZhciB7c3RyaW5nfSBjb2RlIFdvcmtzaG9wIGNvZGUgZm9yIGF1dGhlbnRpY2F0aW9uLiAqL1xuICBMb2dpbkZyb250ZW5kLnByb3RvdHlwZS5jb2RlID0gJzEyMzQ1Njc4JztcblxuICAvKiogQHZhciB7UmVnRXhwfSBjb2RlTWluTGVuZ3RoIE1pbmltdW0gbGVuZ3RoIG9mIHBhc3N3b3JkLiAqL1xuICBMb2dpbkZyb250ZW5kLnByb3RvdHlwZS5jb2RlTWluTGVuZ3RoID0gODtcblxuICAvKiogQHZhciB7UmVnRXhwfSBjb2RlUGF0dGVybiBSZWd1bGFyIGV4cHJlc3Npb24gZm9yIGB1c2VybmFtZWAgcHJvcGVydHkuICovXG4gIExvZ2luRnJvbnRlbmQucHJvdG90eXBlLmNvZGVQYXR0ZXJuID0gL15bQS1aYS16MC05XSskLztcblxuICAvKiogQHZhciB7UmVnRXhwfSB1c2VycGF0dGVybiBSZWd1bGFyIGV4cHJlc3Npb24gZm9yIGB1c2VybmFtZWAgcHJvcGVydHkuICovXG4gIExvZ2luRnJvbnRlbmQucHJvdG90eXBlLnVzZXJwYXR0ZXJuID0gL15bYS16XVthLXpdKD86MFsxLTldfFsxMl1cXGR8M1swMV0pW0EtWl1cXGQkLztcblxuICAvL1xuICAvLyBNRVRIT0RTXG4gIC8vXG5cbiAgLyoqXG4gICAqIFNpZ25zIGEgdXNlciBpbiB3aXRoIHBlcnNvbmFsIGNvZGUgdG8gZ2F0aGVyIEpXVCB0b2tlbi5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIHNpZ25pblxuICAgKiBAcmV0dXJuIHtWb2lkfVxuICAgKi9cbiAgTG9naW5Gcm9udGVuZC5wcm90b3R5cGUuc2lnbmluID0gZnVuY3Rpb24oKVxuICAgIHtcbiAgICAgIHZhciBub3RpZmljYXRpb24gPSB0aGlzLiRpbmplY3Rvci5nZXQoJ25vdGlmaWNhdGlvbicpO1xuICAgICAgdmFyICRzdGF0ZSA9IHRoaXMuJGluamVjdG9yLmdldCgnJHN0YXRlJyk7XG4gICAgICB2YXIgYXV0aCA9IHRoaXMuJGluamVjdG9yLmdldCgnYXV0aCcpO1xuICAgICAgdmFyIGkxOG4gPSB0aGlzLiRpbmplY3Rvci5nZXQoJ2kxOG4nKTtcblxuICAgICAgdmFyIGZvcm0gPSB0aGlzLiRzY29wZS5sb2dpbkZvcm07XG4gICAgICBpZiAoZm9ybS4kaW52YWxpZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBzdWNjZXNzQ2FsbGJhY2sgPSBmdW5jdGlvbigpXG4gICAgICB7XG4gICAgICAgIHZhciBtZXNzYWdlID0gaTE4bi5nZXQoJ1lvdSBoYXZlIHN1Y2Nlc3NmdWxseSBzaWduZWQgaW4hJyk7XG4gICAgICAgIG5vdGlmaWNhdGlvbi5zdWNjZXNzKG1lc3NhZ2UpO1xuICAgICAgICAkc3RhdGUuZ28oJ2Zyb250ZW5kJyk7XG4gICAgICB9O1xuXG4gICAgICB2YXIgZmFpbHVyZUNhbGxiYWNrID0gZnVuY3Rpb24oKVxuICAgICAge1xuICAgICAgICAvLyBAc2VlOiBodHRwSW50ZXJjZXB0b3JcbiAgICAgIH07XG5cbiAgICAgIGF1dGguc2lnbmluKHtcbiAgICAgICAgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWVcbiAgICAgIH0sICdmcm9udGVuZCcpLnRoZW4oXG4gICAgICAgIHN1Y2Nlc3NDYWxsYmFjayxcbiAgICAgICAgZmFpbHVyZUNhbGxiYWNrXG4gICAgICApO1xuICAgIH07XG5cbiAgLyoqXG4gICAqIFNpZ25zIGEgdXNlciB1cCB3aXRoIHBlcnNvbmFsIGFuZCB3b3Jrc2hvcCBjb2RlLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2Qgc2lnbnVwXG4gICAqIEByZXR1cm4ge1ZvaWR9XG4gICAqL1xuICBMb2dpbkZyb250ZW5kLnByb3RvdHlwZS5zaWdudXAgPSBmdW5jdGlvbigpXG4gICAge1xuICAgICAgdmFyIG5vdGlmaWNhdGlvbiA9IHRoaXMuJGluamVjdG9yLmdldCgnbm90aWZpY2F0aW9uJyk7XG4gICAgICB2YXIgJHN0YXRlID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCckc3RhdGUnKTtcbiAgICAgIHZhciBhdXRoID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCdhdXRoJyk7XG4gICAgICB2YXIgaTE4biA9IHRoaXMuJGluamVjdG9yLmdldCgnaTE4bicpO1xuXG4gICAgICB2YXIgZm9ybSA9IHRoaXMuJHNjb3BlLmxvZ2luRm9ybTtcbiAgICAgIGlmIChmb3JtLiRpbnZhbGlkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHN1Y2Nlc3NDYWxsYmFjayA9IGZ1bmN0aW9uKClcbiAgICAgIHtcbiAgICAgICAgdmFyIG1lc3NhZ2UgPSBpMThuLmdldCgnWW91IGhhdmUgc3VjY2Vzc2Z1bGx5IHNpZ25lZCB1cCEnKTtcbiAgICAgICAgbm90aWZpY2F0aW9uLnN1Y2Nlc3MobWVzc2FnZSk7XG4gICAgICAgICRzdGF0ZS5nbygnZnJvbnRlbmQnKTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBmYWlsdXJlQ2FsbGJhY2sgPSBmdW5jdGlvbigpXG4gICAgICB7XG4gICAgICAgIC8vIEBzZWU6IGh0dHBJbnRlcmNlcHRvclxuICAgICAgfTtcblxuICAgICAgYXV0aFxuICAgICAgICAuc2lnbnVwKHtcbiAgICAgICAgICB1c2VybmFtZTogdGhpcy51c2VybmFtZSxcbiAgICAgICAgICBwYXNzd29yZDogdGhpcy5jb2RlXG4gICAgICAgIH0sICdmcm9udGVuZCcpLnRoZW4oXG4gICAgICAgICAgc3VjY2Vzc0NhbGxiYWNrLFxuICAgICAgICAgIGZhaWx1cmVDYWxsYmFja1xuICAgICAgICApO1xuICAgIH07XG5cbiAgYW5ndWxhci5tb2R1bGUobW9kdWxlKS5jb250cm9sbGVyKCdMb2dpbkZyb250ZW5kQ29udHJvbGxlcicsIExvZ2luRnJvbnRlbmQpO1xuXG59KShBTkdVTEFSX01PRFVMRSwgYW5ndWxhcik7XG4iXX0=
