/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
/* global ANGULAR_MODULE, angular */
(function(module, angular) {
  'use strict';

 /**
  * @constructor
  */
  var Frontend = function($injector) {
    this.$injector = $injector;
  };

  Frontend.$inject = ['$injector'];

  //
  // METHODS
  //

  /**
   * Creates a new result resource from task payload.
   *
   * @public
   * @method createResult
   * @param {object} payload
   * @return {Void}
   */
  Frontend.prototype.createResult = function(payload)
  {
    var Result = this.$injector.get('Result');
    var user = this.$injector.get('user');

    var successCallback = function(result)
      {
        // update user object from response
        // handling comparisons for `state`,
        // `tickets` and showing messages
        user.update(result.user);
      };

    var failureCallback = function()
      {
        // noop
      };

    var result = new Result(payload);
    var promise = result.$create();
    promise.then(
      successCallback,
      failureCallback
    );

    return promise;
  };

  /**
   * Updates a new result resource from task `result`.
   *
   * @public
   * @method updateResult
   * @param {object} result
   * @return {Void}
   */
  Frontend.prototype.updateResult = function(payload)
  {
    var Result = this.$injector.get('Result');
    var user = this.$injector.get('user');

    var successCallback = function(result)
      {
        // update user object from response
        // handling comparisons for `state`,
        // `tickets` and showing messages
        user.update(result.user);
      };

    var failureCallback = function()
      {
        // noop
      };

    var promise = Result.update({Â id: payload.id }, payload).$promise;
    promise.then(
      successCallback,
      failureCallback
    );

    return promise;
  };

  /**
   * Destroys user session and redirects to login.
   *
   * @public
   * @method logout
   * @return {Void}
   */
  Frontend.prototype.logout = function()
    {
      var $state = this.$injector.get('$state');
      var auth = this.$injector.get('auth');

      var successCallback = function()
        {
          $state.go('login.frontend');
        };

      var failureCallback = function()
        {

        };

      auth.signout().then(
        successCallback,
        failureCallback
      );
    };

  angular.module(module).controller('FrontendController', Frontend);

})(ANGULAR_MODULE, angular);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb250cm9sbGVycy9mcm9udGVuZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJhcHAvY29udHJvbGxlcnMvZnJvbnRlbmQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIEFOR1VMQVJfTU9EVUxFLCBhbmd1bGFyICovXG4oZnVuY3Rpb24obW9kdWxlLCBhbmd1bGFyKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuIC8qKlxuICAqIEBjb25zdHJ1Y3RvclxuICAqL1xuICB2YXIgRnJvbnRlbmQgPSBmdW5jdGlvbigkaW5qZWN0b3IpIHtcbiAgICB0aGlzLiRpbmplY3RvciA9ICRpbmplY3RvcjtcbiAgfTtcblxuICBGcm9udGVuZC4kaW5qZWN0ID0gWyckaW5qZWN0b3InXTtcblxuICAvL1xuICAvLyBNRVRIT0RTXG4gIC8vXG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcgcmVzdWx0IHJlc291cmNlIGZyb20gdGFzayBwYXlsb2FkLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgY3JlYXRlUmVzdWx0XG4gICAqIEBwYXJhbSB7b2JqZWN0fSBwYXlsb2FkXG4gICAqIEByZXR1cm4ge1ZvaWR9XG4gICAqL1xuICBGcm9udGVuZC5wcm90b3R5cGUuY3JlYXRlUmVzdWx0ID0gZnVuY3Rpb24ocGF5bG9hZClcbiAge1xuICAgIHZhciBSZXN1bHQgPSB0aGlzLiRpbmplY3Rvci5nZXQoJ1Jlc3VsdCcpO1xuICAgIHZhciB1c2VyID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCd1c2VyJyk7XG5cbiAgICB2YXIgc3VjY2Vzc0NhbGxiYWNrID0gZnVuY3Rpb24ocmVzdWx0KVxuICAgICAge1xuICAgICAgICAvLyB1cGRhdGUgdXNlciBvYmplY3QgZnJvbSByZXNwb25zZVxuICAgICAgICAvLyBoYW5kbGluZyBjb21wYXJpc29ucyBmb3IgYHN0YXRlYCxcbiAgICAgICAgLy8gYHRpY2tldHNgIGFuZCBzaG93aW5nIG1lc3NhZ2VzXG4gICAgICAgIHVzZXIudXBkYXRlKHJlc3VsdC51c2VyKTtcbiAgICAgIH07XG5cbiAgICB2YXIgZmFpbHVyZUNhbGxiYWNrID0gZnVuY3Rpb24oKVxuICAgICAge1xuICAgICAgICAvLyBub29wXG4gICAgICB9O1xuXG4gICAgdmFyIHJlc3VsdCA9IG5ldyBSZXN1bHQocGF5bG9hZCk7XG4gICAgdmFyIHByb21pc2UgPSByZXN1bHQuJGNyZWF0ZSgpO1xuICAgIHByb21pc2UudGhlbihcbiAgICAgIHN1Y2Nlc3NDYWxsYmFjayxcbiAgICAgIGZhaWx1cmVDYWxsYmFja1xuICAgICk7XG5cbiAgICByZXR1cm4gcHJvbWlzZTtcbiAgfTtcblxuICAvKipcbiAgICogVXBkYXRlcyBhIG5ldyByZXN1bHQgcmVzb3VyY2UgZnJvbSB0YXNrIGByZXN1bHRgLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqIEBtZXRob2QgdXBkYXRlUmVzdWx0XG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXN1bHRcbiAgICogQHJldHVybiB7Vm9pZH1cbiAgICovXG4gIEZyb250ZW5kLnByb3RvdHlwZS51cGRhdGVSZXN1bHQgPSBmdW5jdGlvbihwYXlsb2FkKVxuICB7XG4gICAgdmFyIFJlc3VsdCA9IHRoaXMuJGluamVjdG9yLmdldCgnUmVzdWx0Jyk7XG4gICAgdmFyIHVzZXIgPSB0aGlzLiRpbmplY3Rvci5nZXQoJ3VzZXInKTtcblxuICAgIHZhciBzdWNjZXNzQ2FsbGJhY2sgPSBmdW5jdGlvbihyZXN1bHQpXG4gICAgICB7XG4gICAgICAgIC8vIHVwZGF0ZSB1c2VyIG9iamVjdCBmcm9tIHJlc3BvbnNlXG4gICAgICAgIC8vIGhhbmRsaW5nIGNvbXBhcmlzb25zIGZvciBgc3RhdGVgLFxuICAgICAgICAvLyBgdGlja2V0c2AgYW5kIHNob3dpbmcgbWVzc2FnZXNcbiAgICAgICAgdXNlci51cGRhdGUocmVzdWx0LnVzZXIpO1xuICAgICAgfTtcblxuICAgIHZhciBmYWlsdXJlQ2FsbGJhY2sgPSBmdW5jdGlvbigpXG4gICAgICB7XG4gICAgICAgIC8vIG5vb3BcbiAgICAgIH07XG5cbiAgICB2YXIgcHJvbWlzZSA9IFJlc3VsdC51cGRhdGUoe8KgaWQ6IHBheWxvYWQuaWQgfSwgcGF5bG9hZCkuJHByb21pc2U7XG4gICAgcHJvbWlzZS50aGVuKFxuICAgICAgc3VjY2Vzc0NhbGxiYWNrLFxuICAgICAgZmFpbHVyZUNhbGxiYWNrXG4gICAgKTtcblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9O1xuXG4gIC8qKlxuICAgKiBEZXN0cm95cyB1c2VyIHNlc3Npb24gYW5kIHJlZGlyZWN0cyB0byBsb2dpbi5cbiAgICpcbiAgICogQHB1YmxpY1xuICAgKiBAbWV0aG9kIGxvZ291dFxuICAgKiBAcmV0dXJuIHtWb2lkfVxuICAgKi9cbiAgRnJvbnRlbmQucHJvdG90eXBlLmxvZ291dCA9IGZ1bmN0aW9uKClcbiAgICB7XG4gICAgICB2YXIgJHN0YXRlID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCckc3RhdGUnKTtcbiAgICAgIHZhciBhdXRoID0gdGhpcy4kaW5qZWN0b3IuZ2V0KCdhdXRoJyk7XG5cbiAgICAgIHZhciBzdWNjZXNzQ2FsbGJhY2sgPSBmdW5jdGlvbigpXG4gICAgICAgIHtcbiAgICAgICAgICAkc3RhdGUuZ28oJ2xvZ2luLmZyb250ZW5kJyk7XG4gICAgICAgIH07XG5cbiAgICAgIHZhciBmYWlsdXJlQ2FsbGJhY2sgPSBmdW5jdGlvbigpXG4gICAgICAgIHtcblxuICAgICAgICB9O1xuXG4gICAgICBhdXRoLnNpZ25vdXQoKS50aGVuKFxuICAgICAgICBzdWNjZXNzQ2FsbGJhY2ssXG4gICAgICAgIGZhaWx1cmVDYWxsYmFja1xuICAgICAgKTtcbiAgICB9O1xuXG4gIGFuZ3VsYXIubW9kdWxlKG1vZHVsZSkuY29udHJvbGxlcignRnJvbnRlbmRDb250cm9sbGVyJywgRnJvbnRlbmQpO1xuXG59KShBTkdVTEFSX01PRFVMRSwgYW5ndWxhcik7XG4iXX0=
