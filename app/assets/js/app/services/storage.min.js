/*!
 * eFit Website
 * An app for financial training in educational environments
 * http://www.e-fit.com
 * @author Armin Pfurtscheller
 * @version 1.0.0
 * Copyright 2017. MIT licensed.
 */
!function(t,o){"use strict";var e=function(t,o,e){this.log=e,this.window=t,this.document=o,this._init()};e.$inject=["$window","$document","$log"],e.prototype.set=function(t,o,e,r,n,i){this._store.set(t,o,e,r,n,i)},e.prototype.get=function(t){return this._store.get(t)},e.prototype.getAll=function(){return this._store.getAll()},e.prototype.remove=function(t){this._store.remove(t)},e.prototype.removeAll=function(){this._store.removeAll()},e.prototype.hasLocalStorage=function(){try{return"localStorage"in this.window&&null!==this.$window.localStorage}catch(t){return!1}},e.prototype._init=function(){var t=this.useCookies||!this.hasLocalStorage();this._store=t?this._getCookieProxy():this._getLocalStorageProxy()},e.prototype._getLocalStorageProxy=function(){var t=this,e=function(e,r){r=encodeURIComponent(o.toJson(r)),t.$window.localStorage.setItem(e,r)},r=function(e){var r=t.$window.localStorage.getItem(e);if("string"==typeof r&&(r=decodeURIComponent(r),"undefined"!==r))try{return o.fromJson(r)}catch(n){return r}},n=function(){for(var o={},e=0;e<t.$window.localStorage.length;e++){var n=t.$window.localStorage.key(e);o[n]=r(n)}return o},i=function(o){t.$window.localStorage.removeItem(o)},c=function(){t.$window.localStorage.clear()};return{get:r,getAll:n,set:e,remove:i,removeAll:c}},e.prototype._getCookieProxy=function(){var t=this,e=function(t){if("string"==typeof t&&(t=decodeURIComponent(t),"undefined"!==t))try{return o.fromJson(t)}catch(e){return t}},r=function(o){var r=t.document[0].cookie.split("; "),n={};if(1===r.length&&""===r[0])return n;for(var i=0;i<r.length;i++){var c=r[i].split("=");o?n[c[0]]=e(c[1]):n[c[0]]=c[1]}return n},n=function(e,r,n,i,c,a){if(r=void 0!==r&&"object"==typeof r?o.toJson(r):r,r=encodeURIComponent(r),"undefined"!=typeof n)try{var s=new Date(n);if(isNaN(s)){var u=n;throw n=void 0,new Error('Storage.set(): "'+u+'" cannot be converted to date string!')}n=s.toUTCString()}catch(l){this.$log.error(l.message)}n=!!n&&n;var f=e+"="+r;n&&(f+=";expires="+n),i&&(f+=";domain="+i),c&&(f+=";path="+c),a&&(f+=";secure"),t.document[0].cookie=f},i=function(t){var o=r(!1);if(o.hasOwnProperty(t))return e(o[t])},c=function(){return r(!0)},a=function(t){n(t,"",-1)},s=function(){var t=c();for(var o in t)a(o)};return{get:i,getAll:c,set:n,remove:a,removeAll:s}},o.module(t).service("storage",e)}(ANGULAR_MODULE,angular);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
