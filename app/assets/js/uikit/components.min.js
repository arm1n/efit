/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
!function(){"use strict";UIkit.component("off-canvas-scroll",{defaults:{offset:0,target:"",duration:1e3,transition:"easeOutExpo"},props:{target:String,offset:Number,duration:Number,transition:String},computed:{offcanvas:function(){return UIkit.offcanvas(this.target)},$offcanvas:function(){return this.offcanvas&&this.offcanvas.$el}},init:function(){return this.target?this.offcanvas?void 0:void console.error("off-canvas-scroll: No offcanvas component found with id: "+this.target):void console.error('off-canvas-scroll: Required "target" option is not set.')},events:{click:function(t,o){o&&o.scroll||(this.offcanvas.hide(),this.$offcanvas.on("hidden",this._onHidden))}},methods:{_onHidden:function(){this.$offcanvas.off("hidden",this._onHidden),this._dummyScroll=UIkit.scroll(this.$el,{transition:this.transition,duration:this.duration,offset:this.offset}),this.$el.on("scrolled",this._onScrolled),this.$el.trigger("click",{scroll:!0})},_onScrolled:function(){this.$el.off("scrolled",this._onScrolled),this._dummyScroll.$destroy()}}})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpa2l0L2NvbXBvbmVudHMuanMiXSwibmFtZXMiOlsiVUlraXQiLCJjb21wb25lbnQiLCJkZWZhdWx0cyIsIm9mZnNldCIsInRhcmdldCIsImR1cmF0aW9uIiwidHJhbnNpdGlvbiIsInByb3BzIiwiU3RyaW5nIiwiTnVtYmVyIiwiY29tcHV0ZWQiLCJvZmZjYW52YXMiLCJ0aGlzIiwiJG9mZmNhbnZhcyIsIiRlbCIsImluaXQiLCJjb25zb2xlIiwiZXJyb3IiLCJldmVudHMiLCJjbGljayIsImV2ZW50IiwiZGF0YSIsInNjcm9sbCIsImhpZGUiLCJvbiIsIl9vbkhpZGRlbiIsIm1ldGhvZHMiLCJvZmYiLCJfZHVtbXlTY3JvbGwiLCJfb25TY3JvbGxlZCIsInRyaWdnZXIiLCIkZGVzdHJveSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Q0FTQSxXQUNFLFlBRUFBLE9BQU1DLFVBQVUscUJBRWRDLFVBQ0VDLE9BQVEsRUFDUkMsT0FBUSxHQUNSQyxTQUFVLElBQ1ZDLFdBQVksZUFHZEMsT0FDRUgsT0FBUUksT0FDUkwsT0FBUU0sT0FDUkosU0FBVUksT0FDVkgsV0FBWUUsUUFHZEUsVUFDSUMsVUFBVyxXQUNULE1BQU9YLE9BQU1XLFVBQVVDLEtBQUtSLFNBRzlCUyxXQUFZLFdBQ1YsTUFBT0QsTUFBS0QsV0FBYUMsS0FBS0QsVUFBVUcsTUFJOUNDLEtBQU0sV0FDSixNQUFLSCxNQUFLUixPQUtMUSxLQUFLRCxVQUFWLFdBQ0VLLFNBQVFDLE1BQU0sNERBQThETCxLQUFLUixZQUxqRlksU0FBUUMsTUFBTSw0REFVbEJDLFFBQ0VDLE1BQU8sU0FBU0MsRUFBT0MsR0FDakJBLEdBQVFBLEVBQUtDLFNBSWpCVixLQUFLRCxVQUFVWSxPQUNmWCxLQUFLQyxXQUFXVyxHQUFHLFNBQVVaLEtBQUthLGNBSXRDQyxTQUVFRCxVQUFXLFdBQ1RiLEtBQUtDLFdBQVdjLElBQUksU0FBVWYsS0FBS2EsV0FFbkNiLEtBQUtnQixhQUFlNUIsTUFBTXNCLE9BQU9WLEtBQUtFLEtBQ3BDUixXQUFZTSxLQUFLTixXQUNqQkQsU0FBVU8sS0FBS1AsU0FDZkYsT0FBUVMsS0FBS1QsU0FHZlMsS0FBS0UsSUFBSVUsR0FBRyxXQUFZWixLQUFLaUIsYUFDN0JqQixLQUFLRSxJQUFJZ0IsUUFBUSxTQUFXUixRQUFRLEtBR3RDTyxZQUFhLFdBQ1hqQixLQUFLRSxJQUFJYSxJQUFJLFdBQVlmLEtBQUtpQixhQUM5QmpCLEtBQUtnQixhQUFhRyIsImZpbGUiOiJ1aWtpdC9jb21wb25lbnRzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgalF1ZXJ5LCBVSWtpdCAqL1xuKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgVUlraXQuY29tcG9uZW50KCdvZmYtY2FudmFzLXNjcm9sbCcsIHtcblxuICAgIGRlZmF1bHRzOiB7XG4gICAgICBvZmZzZXQ6IDAsXG4gICAgICB0YXJnZXQ6ICcnLFxuICAgICAgZHVyYXRpb246IDEwMDAsXG4gICAgICB0cmFuc2l0aW9uOiAnZWFzZU91dEV4cG8nXG4gICAgfSxcblxuICAgIHByb3BzOiB7XG4gICAgICB0YXJnZXQ6IFN0cmluZyxcbiAgICAgIG9mZnNldDogTnVtYmVyLFxuICAgICAgZHVyYXRpb246IE51bWJlcixcbiAgICAgIHRyYW5zaXRpb246IFN0cmluZ1xuICAgIH0sXG5cbiAgICBjb21wdXRlZDoge1xuICAgICAgICBvZmZjYW52YXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBVSWtpdC5vZmZjYW52YXModGhpcy50YXJnZXQpO1xuICAgICAgICB9LFxuXG4gICAgICAgICRvZmZjYW52YXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiB0aGlzLm9mZmNhbnZhcyAmJiB0aGlzLm9mZmNhbnZhcy4kZWw7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIXRoaXMudGFyZ2V0KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ29mZi1jYW52YXMtc2Nyb2xsOiBSZXF1aXJlZCBcInRhcmdldFwiIG9wdGlvbiBpcyBub3Qgc2V0LicpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICghdGhpcy5vZmZjYW52YXMpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignb2ZmLWNhbnZhcy1zY3JvbGw6IE5vIG9mZmNhbnZhcyBjb21wb25lbnQgZm91bmQgd2l0aCBpZDogJyArIHRoaXMudGFyZ2V0KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBldmVudHM6IHtcbiAgICAgIGNsaWNrOiBmdW5jdGlvbihldmVudCwgZGF0YSkge1xuICAgICAgICBpZiAoZGF0YSAmJiBkYXRhLnNjcm9sbCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMub2ZmY2FudmFzLmhpZGUoKTtcbiAgICAgICAgdGhpcy4kb2ZmY2FudmFzLm9uKCdoaWRkZW4nLCB0aGlzLl9vbkhpZGRlbik7XG4gICAgICB9XG4gICAgfSxcblxuICAgIG1ldGhvZHM6IHtcblxuICAgICAgX29uSGlkZGVuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy4kb2ZmY2FudmFzLm9mZignaGlkZGVuJywgdGhpcy5fb25IaWRkZW4pO1xuXG4gICAgICAgIHRoaXMuX2R1bW15U2Nyb2xsID0gVUlraXQuc2Nyb2xsKHRoaXMuJGVsLCB7XG4gICAgICAgICAgdHJhbnNpdGlvbjogdGhpcy50cmFuc2l0aW9uLFxuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIG9mZnNldDogdGhpcy5vZmZzZXRcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy4kZWwub24oJ3Njcm9sbGVkJywgdGhpcy5fb25TY3JvbGxlZCk7XG4gICAgICAgIHRoaXMuJGVsLnRyaWdnZXIoJ2NsaWNrJywgeyBzY3JvbGw6IHRydWUgfSk7XG4gICAgICB9LFxuXG4gICAgICBfb25TY3JvbGxlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuJGVsLm9mZignc2Nyb2xsZWQnLCB0aGlzLl9vblNjcm9sbGVkKTtcbiAgICAgICAgdGhpcy5fZHVtbXlTY3JvbGwuJGRlc3Ryb3koKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG59KSgpO1xuIl19
